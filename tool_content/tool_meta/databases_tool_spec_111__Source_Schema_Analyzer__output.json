{
  "Tool Call": {
    "host": "db-prod-01.company.com",
    "port": 5432,
    "database_name": "ecommerce_db",
    "username": "migration_user",
    "password": "SecurePass123!",
    "include_system_tables": false,
    "table_filter": [
      "users",
      "products",
      "orders",
      "order_items"
    ]
  },
  "Return Data": {
    "table_count": 4,
    "table_names": [
      "users",
      "products",
      "orders",
      "order_items"
    ],
    "column_metadata": [
      "users.user_id: INTEGER PRIMARY KEY AUTO_INCREMENT",
      "users.email: VARCHAR(255) NOT NULL UNIQUE",
      "users.username: VARCHAR(100) NOT NULL",
      "users.created_at: TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
      "products.product_id: INTEGER PRIMARY KEY AUTO_INCREMENT",
      "products.name: VARCHAR(200) NOT NULL",
      "products.price: DECIMAL(10,2) NOT NULL",
      "products.stock_quantity: INTEGER DEFAULT 0",
      "orders.order_id: INTEGER PRIMARY KEY AUTO_INCREMENT",
      "orders.user_id: INTEGER NOT NULL",
      "orders.order_date: TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
      "orders.total_amount: DECIMAL(12,2) NOT NULL",
      "order_items.item_id: INTEGER PRIMARY KEY AUTO_INCREMENT",
      "order_items.order_id: INTEGER NOT NULL",
      "order_items.product_id: INTEGER NOT NULL",
      "order_items.quantity: INTEGER NOT NULL",
      "order_items.unit_price: DECIMAL(10,2) NOT NULL"
    ],
    "foreign_keys": [
      "orders.user_id REFERENCES users(user_id)",
      "order_items.order_id REFERENCES orders(order_id)",
      "order_items.product_id REFERENCES products(product_id)"
    ],
    "indexes": [
      "idx_users_email ON users(email)",
      "idx_products_name ON products(name)",
      "idx_orders_user_id ON orders(user_id)",
      "idx_orders_date ON orders(order_date)",
      "idx_order_items_order_id ON order_items(order_id)",
      "idx_order_items_product_id ON order_items(product_id)"
    ],
    "constraints": [
      "users.email CHECK (email LIKE '%@%')",
      "products.price CHECK (price >= 0)",
      "products.stock_quantity CHECK (stock_quantity >= 0)",
      "orders.total_amount CHECK (total_amount >= 0)",
      "order_items.quantity CHECK (quantity > 0)",
      "order_items.unit_price CHECK (unit_price >= 0)"
    ]
  }
}