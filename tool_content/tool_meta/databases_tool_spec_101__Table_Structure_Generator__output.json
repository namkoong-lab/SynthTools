{
  "Tool Call": {
    "entities": [
      "User",
      "Product",
      "Order",
      "OrderItem"
    ],
    "entity_attributes": [
      "User.id:INT",
      "User.username:VARCHAR(50)",
      "User.email:VARCHAR(100)",
      "User.password:VARCHAR(255)",
      "Product.id:INT",
      "Product.name:VARCHAR(100)",
      "Product.price:DECIMAL(10,2)",
      "Product.description:TEXT",
      "Order.id:INT",
      "Order.user_id:INT",
      "Order.total_amount:DECIMAL(10,2)",
      "Order.status:VARCHAR(20)",
      "OrderItem.id:INT",
      "OrderItem.order_id:INT",
      "OrderItem.product_id:INT",
      "OrderItem.quantity:INT",
      "OrderItem.unit_price:DECIMAL(10,2)"
    ],
    "primary_keys": [
      "User:id",
      "Product:id",
      "Order:id",
      "OrderItem:id"
    ],
    "foreign_keys": [
      "Order.user_id REFERENCES User(id)",
      "OrderItem.order_id REFERENCES Order(id)",
      "OrderItem.product_id REFERENCES Product(id)"
    ],
    "database_engine": "postgresql",
    "include_timestamps": true
  },
  "Return Data": {
    "table_definitions": [
      "CREATE TABLE user (id INT PRIMARY KEY, username VARCHAR(50) NOT NULL, email VARCHAR(100) NOT NULL UNIQUE, password VARCHAR(255) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);",
      "CREATE TABLE product (id INT PRIMARY KEY, name VARCHAR(100) NOT NULL, price DECIMAL(10,2) NOT NULL, description TEXT, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);",
      "CREATE TABLE order (id INT PRIMARY KEY, user_id INT NOT NULL, total_amount DECIMAL(10,2) NOT NULL, status VARCHAR(20) DEFAULT 'pending', created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, FOREIGN KEY (user_id) REFERENCES user(id));",
      "CREATE TABLE order_item (id INT PRIMARY KEY, order_id INT NOT NULL, product_id INT NOT NULL, quantity INT NOT NULL, unit_price DECIMAL(10,2) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, FOREIGN KEY (order_id) REFERENCES order(id), FOREIGN KEY (product_id) REFERENCES product(id));"
    ],
    "table_names": [
      "user",
      "product",
      "order",
      "order_item"
    ],
    "column_specifications": [
      "user.id: INT PRIMARY KEY",
      "user.username: VARCHAR(50) NOT NULL",
      "user.email: VARCHAR(100) NOT NULL UNIQUE",
      "user.password: VARCHAR(255) NOT NULL",
      "product.id: INT PRIMARY KEY",
      "product.name: VARCHAR(100) NOT NULL",
      "product.price: DECIMAL(10,2) NOT NULL",
      "product.description: TEXT",
      "order.id: INT PRIMARY KEY",
      "order.user_id: INT NOT NULL",
      "order.total_amount: DECIMAL(10,2) NOT NULL",
      "order.status: VARCHAR(20) DEFAULT 'pending'",
      "order_item.id: INT PRIMARY KEY",
      "order_item.order_id: INT NOT NULL",
      "order_item.product_id: INT NOT NULL",
      "order_item.quantity: INT NOT NULL",
      "order_item.unit_price: DECIMAL(10,2) NOT NULL"
    ],
    "constraint_definitions": [
      "PRIMARY KEY (id) ON user",
      "PRIMARY KEY (id) ON product",
      "PRIMARY KEY (id) ON order",
      "PRIMARY KEY (id) ON order_item",
      "FOREIGN KEY (user_id) REFERENCES user(id) ON order",
      "FOREIGN KEY (order_id) REFERENCES order(id) ON order_item",
      "FOREIGN KEY (product_id) REFERENCES product(id) ON order_item",
      "UNIQUE (email) ON user"
    ]
  }
}