{
  "Tool Call": {
    "table_definitions": [
      "CREATE TABLE customers (customer_id INT PRIMARY KEY, email VARCHAR(255), age INT, registration_date DATE)",
      "CREATE TABLE orders (order_id INT PRIMARY KEY, customer_id INT, order_date DATE, total_amount DECIMAL(10,2))",
      "CREATE TABLE products (product_id INT PRIMARY KEY, product_name VARCHAR(100), price DECIMAL(8,2), category VARCHAR(50))"
    ],
    "business_rules": [
      "Customer age must be between 13 and 120 years",
      "Order total amount must be greater than 0",
      "Product price must be non-negative",
      "Customer email must be unique across all customers",
      "Order date cannot be in the future"
    ],
    "validate_referential_integrity": true,
    "enforce_business_rules": true,
    "constraint_naming_style": "descriptive"
  },
  "Return Data": {
    "check_constraints": [
      "ALTER TABLE customers ADD CONSTRAINT chk_customer_age_range CHECK (age BETWEEN 13 AND 120)",
      "ALTER TABLE orders ADD CONSTRAINT chk_order_total_positive CHECK (total_amount > 0)",
      "ALTER TABLE products ADD CONSTRAINT chk_product_price_non_negative CHECK (price >= 0)",
      "ALTER TABLE orders ADD CONSTRAINT chk_order_date_not_future CHECK (order_date <= CURRENT_DATE)"
    ],
    "unique_constraints": [
      "ALTER TABLE customers ADD CONSTRAINT uk_customer_email_unique UNIQUE (email)"
    ],
    "validation_errors": [],
    "constraint_recommendations": [
      "Consider adding NOT NULL constraint on customer email field",
      "Recommend adding foreign key constraint: orders.customer_id REFERENCES customers.customer_id",
      "Consider adding check constraint for product_name to prevent empty strings",
      "Recommend adding index on orders.order_date for performance"
    ]
  }
}