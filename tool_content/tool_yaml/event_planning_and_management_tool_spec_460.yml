field_name: event_planning_and_management
subfield: catering_and_food_service_coordination
task: Vendor sourcing and catering service provider selection
tool_description: |-
  **STEP 1 — Rate task difficulty**
  This task is **medium** difficulty. It involves coordinating multiple vendors across different service categories, managing budget constraints, evaluating qualitative factors like reputation and dietary accommodations, and coordinating logistics with dependencies between vendors. The scope requires systematic comparison and negotiation processes with moderate risk if vendors underperform.

  **STEP 2 — Set a tool budget**
  Given the medium complexity, I'll target **12 tools** to cover vendor discovery, evaluation, comparison, negotiation, and coordination workflows comprehensively.

  **STEP 3 — List all tool names and dependencies**
  1. **Vendor Database Search** - Consumes: location, service types, budget range | Produces: vendor lists
  2. **Vendor Profile Retrieval** - Consumes: vendor IDs | Produces: detailed vendor information
  3. **Menu Portfolio Analyzer** - Consumes: vendor ID, dietary requirements | Produces: menu compatibility scores
  4. **Quote Request Generator** - Consumes: event details, vendor IDs, requirements | Produces: formatted RFQ documents
  5. **Pricing Comparison Tool** - Consumes: multiple quotes, budget | Produces: cost analysis
  6. **Vendor Rating Evaluator** - Consumes: vendor IDs, evaluation criteria | Produces: scored assessments
  7. **Contract Terms Analyzer** - Consumes: contract documents, requirements | Produces: terms compliance review
  8. **Availability Checker** - Consumes: vendor IDs, event dates | Produces: availability status
  9. **Logistics Coordinator** - Consumes: venue details, vendor requirements | Produces: coordination plan
  10. **Reference Verification Tool** - Consumes: vendor references, contact info | Produces: verification results
  11. **Negotiation Tracker** - Consumes: negotiation history, terms | Produces: status updates
  12. **Final Selection Optimizer** - Consumes: all vendor data, constraints | Produces: optimal vendor combination

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic vendor search: Vendor Database Search → Vendor Profile Retrieval → Quote Request Generator
  - Quick comparison: Pricing Comparison Tool → Vendor Rating Evaluator → Final Selection Optimizer

  **Medium Plans:**
  - Menu-focused selection: Vendor Database Search → Menu Portfolio Analyzer → Quote Request Generator → Pricing Comparison Tool → Final Selection Optimizer
  - Availability-first approach: Vendor Database Search → Availability Checker → Vendor Rating Evaluator → Reference Verification Tool → Contract Terms Analyzer

  **Complex Plans:**
  - Comprehensive evaluation: All tools in sequence for thorough vendor selection
  - Multi-category coordination: Vendor Database Search → Vendor Profile Retrieval → Menu Portfolio Analyzer → Quote Request Generator → Pricing Comparison Tool → Vendor Rating Evaluator → Reference Verification Tool → Availability Checker → Contract Terms Analyzer → Logistics Coordinator → Negotiation Tracker → Final Selection Optimizer

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Vendor Database Search",
    "tool_description": "Searches for catering and food service vendors based on location, service types, cuisine preferences, and budget constraints to generate initial vendor lists.",
    "parameters": {
      "location": {
        "type": "string",
        "required": true,
        "description": "Geographic area or address for vendor search"
      },
      "service_types": {
        "type": "array",
        "required": true,
        "description": "Types of services needed (e.g., full-service catering, drop-off catering, bartending)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "budget_min": {
        "type": "number",
        "required": true,
        "description": "Minimum budget per person or total budget"
      },
      "budget_max": {
        "type": "number",
        "required": true,
        "description": "Maximum budget per person or total budget"
      },
      "cuisine_preferences": {
        "type": "array",
        "required": false,
        "description": "Preferred cuisine types",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Invalid budget range: budget_max must be greater than budget_min and both must be positive numbers.",
      "Location not found: The specified location could not be geocoded or is outside service area.",
      "No vendors found: No vendors match the specified criteria. Try expanding search radius or adjusting filters.",
      "Invalid service type: One or more service_types are not recognized. Use standard catering service categories."
    ],
    "usage": "Specify location, required service_types, and budget range. Optionally add cuisine_preferences to filter results. Returns a list of matching vendors with basic information.",
    "output_details": {
      "total_results": {
        "type": "integer",
        "description": "Number of vendors found matching criteria"
      },
      "vendor_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of unique vendor identifiers"
      },
      "vendor_names": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of vendor business names"
      },
      "search_summary": {
        "type": "string",
        "description": "Summary of search parameters and results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vendor Profile Retrieval",
    "tool_description": "Retrieves comprehensive vendor profiles including business details, specialties, capacity, certifications, and contact information.",
    "parameters": {
      "vendor_id": {
        "type": "string",
        "required": true,
        "description": "Unique vendor identifier from database search"
      }
    },
    "error_messages": [
      "Vendor not found: The specified vendor_id does not exist in the database.",
      "Profile incomplete: Vendor profile is missing critical information and may be under review.",
      "Access denied: Vendor profile is private or requires elevated permissions to view."
    ],
    "usage": "Provide a valid vendor_id obtained from vendor search. Returns detailed vendor information for evaluation purposes.",
    "output_details": {
      "vendor_name": {
        "type": "string",
        "description": "Official business name"
      },
      "contact_email": {
        "type": "string",
        "description": "Primary contact email address"
      },
      "contact_phone": {
        "type": "string",
        "description": "Primary contact phone number"
      },
      "specialties": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of cuisine specialties and service types"
      },
      "max_capacity": {
        "type": "integer",
        "description": "Maximum number of guests the vendor can serve"
      },
      "years_in_business": {
        "type": "integer",
        "description": "Number of years the vendor has been operating"
      },
      "certifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Food safety and business certifications"
      },
      "rating": {
        "type": "number",
        "description": "Average customer rating out of 5"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Menu Portfolio Analyzer",
    "tool_description": "Analyzes vendor menu offerings against specific dietary requirements, event style, and guest preferences to determine compatibility and scoring.",
    "parameters": {
      "vendor_id": {
        "type": "string",
        "required": true,
        "description": "Vendor identifier to analyze menus for"
      },
      "dietary_requirements": {
        "type": "array",
        "required": true,
        "description": "Required dietary accommodations (vegetarian, vegan, gluten-free, kosher, halal, etc.)",
        "items": {"type": "string"},
        "minItems": 0,
        "maxItems": 15
      },
      "event_style": {
        "type": "string",
        "required": true,
        "description": "Type of event (wedding, corporate, cocktail party, formal dinner, buffet, etc.)"
      },
      "guest_count": {
        "type": "integer",
        "required": true,
        "description": "Expected number of guests"
      },
      "meal_type": {
        "type": "string",
        "required": true,
        "description": "Meal service type (breakfast, lunch, dinner, cocktail hour, full day)"
      },
      "budget_per_person": {
        "type": "number",
        "required": true,
        "description": "Budget allocated per person for food and beverage"
      },
      "cuisine_preferences": {
        "type": "array",
        "required": false,
        "description": "Preferred cuisine styles",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Vendor menu not available: The specified vendor has not uploaded current menu information.",
      "Invalid dietary requirement: One or more dietary requirements are not recognized or supported.",
      "Event style mismatch: The vendor does not offer services suitable for the specified event_style.",
      "Capacity exceeded: The guest_count exceeds the vendor's maximum serving capacity.",
      "Budget incompatible: The budget_per_person is below the vendor's minimum pricing."
    ],
    "usage": "Provide vendor_id, dietary_requirements, event_style, guest_count, meal_type, and budget_per_person. Optionally specify cuisine_preferences. Returns compatibility scoring and menu recommendations.",
    "output_details": {
      "compatibility_score": {
        "type": "number",
        "description": "Overall compatibility score from 0-100"
      },
      "dietary_coverage": {
        "type": "number",
        "description": "Percentage of dietary requirements that can be accommodated"
      },
      "menu_options_count": {
        "type": "integer",
        "description": "Number of suitable menu packages available"
      },
      "recommended_packages": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of recommended menu package names"
      },
      "estimated_cost_per_person": {
        "type": "number",
        "description": "Estimated cost per person based on recommended packages"
      },
      "analysis_summary": {
        "type": "string",
        "description": "Detailed analysis of menu compatibility and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Quote Request Generator",
    "tool_description": "Generates standardized Request for Quotation (RFQ) documents with event details, requirements, and specifications to send to multiple vendors for pricing comparison.",
    "parameters": {
      "event_name": {
        "type": "string",
        "required": true,
        "description": "Name or title of the event"
      },
      "event_date": {
        "type": "string",
        "required": true,
        "description": "Event date in ISO 8601 format",
        "format": "date-time"
      },
      "venue_address": {
        "type": "string",
        "required": true,
        "description": "Complete venue address where catering will be provided"
      },
      "guest_count": {
        "type": "integer",
        "required": true,
        "description": "Expected number of guests"
      },
      "service_requirements": {
        "type": "array",
        "required": true,
        "description": "Detailed service requirements and specifications",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "dietary_restrictions": {
        "type": "array",
        "required": true,
        "description": "Dietary restrictions and special accommodations needed",
        "items": {"type": "string"},
        "minItems": 0,
        "maxItems": 15
      },
      "budget_range": {
        "type": "string",
        "required": true,
        "description": "Budget range or total budget available"
      },
      "response_deadline": {
        "type": "string",
        "required": true,
        "description": "Deadline for vendor responses in ISO 8601 format",
        "format": "date-time"
      },
      "contact_info": {
        "type": "string",
        "required": true,
        "description": "Primary contact information for questions and responses"
      },
      "vendor_ids": {
        "type": "array",
        "required": true,
        "description": "List of vendor IDs to send RFQ to",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 25
      },
      "additional_notes": {
        "type": "string",
        "required": false,
        "description": "Additional requirements or special instructions",
        "default": null
      }
    },
    "error_messages": [
      "Invalid event date: event_date must be in the future and properly formatted.",
      "Invalid response deadline: response_deadline must be before event_date and after current date.",
      "Invalid guest count: guest_count must be a positive integer.",
      "Vendor list empty: At least one vendor_id must be provided.",
      "Invalid venue address: venue_address must be a complete, valid address."
    ],
    "usage": "Provide comprehensive event details including event_name, event_date, venue_address, guest_count, service_requirements, dietary_restrictions, budget_range, response_deadline, contact_info, and vendor_ids. Optionally add additional_notes. Generates professional RFQ documents.",
    "output_details": {
      "rfq_document": {
        "type": "string",
        "description": "Complete formatted RFQ document ready for distribution"
      },
      "vendor_count": {
        "type": "integer",
        "description": "Number of vendors the RFQ will be sent to"
      },
      "rfq_reference_number": {
        "type": "string",
        "description": "Unique reference number for tracking responses"
      },
      "distribution_summary": {
        "type": "string",
        "description": "Summary of RFQ distribution details and timeline"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Pricing Comparison Tool",
    "tool_description": "Compares multiple vendor quotes side-by-side, analyzing pricing structures, value propositions, and budget compliance to identify best value options.",
    "parameters": {
      "quotes": {
        "type": "array",
        "required": true,
        "description": "List of quote identifiers or reference numbers to compare",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 15
      },
      "total_budget": {
        "type": "number",
        "required": true,
        "description": "Total available budget for comparison"
      },
      "comparison_criteria": {
        "type": "array",
        "required": true,
        "description": "Criteria for comparison (price, value, service level, etc.)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      }
    },
    "error_messages": [
      "Insufficient quotes: At least 2 quotes are required for meaningful comparison.",
      "Quote not found: One or more quote identifiers could not be located in the system.",
      "Budget mismatch: total_budget must be a positive number greater than zero.",
      "Invalid comparison criteria: One or more comparison_criteria are not supported."
    ],
    "usage": "Provide an array of quote identifiers, total_budget, and comparison_criteria. The tool analyzes all quotes against the criteria and budget to provide comparative rankings.",
    "output_details": {
      "lowest_price_vendor": {
        "type": "string",
        "description": "Vendor offering the lowest total price"
      },
      "best_value_vendor": {
        "type": "string",
        "description": "Vendor offering the best value based on price and services"
      },
      "budget_compliant_count": {
        "type": "integer",
        "description": "Number of quotes within the specified budget"
      },
      "price_range_min": {
        "type": "number",
        "description": "Lowest quote amount received"
      },
      "price_range_max": {
        "type": "number",
        "description": "Highest quote amount received"
      },
      "comparison_summary": {
        "type": "string",
        "description": "Detailed comparison analysis and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vendor Rating Evaluator",
    "tool_description": "Evaluates and scores vendors based on multiple criteria including reputation, experience, reviews, certifications, and service quality metrics.",
    "parameters": {
      "vendor_ids": {
        "type": "array",
        "required": true,
        "description": "List of vendor identifiers to evaluate",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "evaluation_criteria": {
        "type": "array",
        "required": true,
        "description": "Criteria for evaluation (reputation, experience, reviews, certifications, etc.)",
        "items": {"type": "string"},
        "minItems": 3,
        "maxItems": 12
      },
      "criteria_weights": {
        "type": "array",
        "required": true,
        "description": "Weight values for each criterion (must correspond to evaluation_criteria order)",
        "items": {"type": "number"},
        "minItems": 3,
        "maxItems": 12
      },
      "minimum_score_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum acceptable score for vendor consideration (0-100)",
        "default": 70
      }
    },
    "error_messages": [
      "Criteria-weights mismatch: The number of evaluation_criteria must match the number of criteria_weights.",
      "Invalid weight values: All criteria_weights must be positive numbers and should sum to approximately 100.",
      "Vendor evaluation failed: Unable to retrieve sufficient data for one or more vendors.",
      "Threshold out of range: minimum_score_threshold must be between 0 and 100."
    ],
    "usage": "Provide vendor_ids, evaluation_criteria, and corresponding criteria_weights. Optionally set minimum_score_threshold. The tool scores each vendor and ranks them based on weighted criteria.",
    "output_details": {
      "top_rated_vendor": {
        "type": "string",
        "description": "Highest scoring vendor identifier"
      },
      "vendor_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Overall scores for each vendor in the same order as input"
      },
      "qualified_vendors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Vendors meeting the minimum score threshold"
      },
      "evaluation_summary": {
        "type": "string",
        "description": "Summary of evaluation results and vendor rankings"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Contract Terms Analyzer",
    "tool_description": "Analyzes vendor contracts and service agreements to identify key terms, potential issues, compliance with requirements, and negotiation opportunities.",
    "parameters": {
      "contract_document": {
        "type": "string",
        "required": true,
        "description": "Contract text or document identifier to analyze"
      },
      "required_terms": {
        "type": "array",
        "required": true,
        "description": "List of terms that must be included in the contract",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "prohibited_terms": {
        "type": "array",
        "required": false,
        "description": "Terms that should not be present in the contract",
        "items": {"type": "string"},
        "default": null
      },
      "risk_tolerance": {
        "type": "string",
        "required": false,
        "description": "Risk tolerance level: low, medium, high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Contract not readable: The provided contract_document cannot be parsed or accessed.",
      "Invalid risk tolerance: risk_tolerance must be one of: low, medium, high.",
      "Terms analysis failed: Unable to analyze contract terms due to document format issues.",
      "Missing critical clauses: Contract is missing essential legal or business clauses."
    ],
    "usage": "Provide contract_document text or identifier, required_terms that must be present, and optionally prohibited_terms and risk_tolerance level. Analyzes contract compliance and highlights issues.",
    "output_details": {
      "compliance_score": {
        "type": "number",
        "description": "Overall compliance score from 0-100"
      },
      "missing_required_terms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Required terms not found in the contract"
      },
      "found_prohibited_terms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Prohibited terms found in the contract"
      },
      "risk_flags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Potential risk factors identified"
      },
      "recommendations": {
        "type": "string",
        "description": "Recommended actions and negotiation points"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Availability Checker",
    "tool_description": "Checks vendor availability for specific event dates and times, including setup and breakdown requirements, and identifies scheduling conflicts.",
    "parameters": {
      "vendor_ids": {
        "type": "array",
        "required": true,
        "description": "List of vendor identifiers to check availability for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 15
      },
      "event_start_date": {
        "type": "string",
        "required": true,
        "description": "Event start date and time in ISO 8601 format",
        "format": "date-time"
      },
      "event_end_date": {
        "type": "string",
        "required": true,
        "description": "Event end date and time in ISO 8601 format",
        "format": "date-time"
      },
      "setup_hours": {
        "type": "number",
        "required": true,
        "description": "Hours needed before event for setup"
      },
      "breakdown_hours": {
        "type": "number",
        "required": true,
        "description": "Hours needed after event for breakdown and cleanup"
      }
    },
    "error_messages": [
      "Invalid date range: event_end_date must be after event_start_date.",
      "Past event date: event_start_date cannot be in the past.",
      "Invalid setup/breakdown time: setup_hours and breakdown_hours must be positive numbers.",
      "Vendor availability data unavailable: Unable to retrieve availability information for one or more vendors."
    ],
    "usage": "Provide vendor_ids, event_start_date, event_end_date, setup_hours, and breakdown_hours. The tool checks each vendor's calendar and returns availability status for the complete time period needed.",
    "output_details": {
      "available_vendors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Vendor IDs that are available for the requested time period"
      },
      "unavailable_vendors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Vendor IDs that are not available for the requested time period"
      },
      "partial_availability": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Vendors with partial availability or scheduling conflicts"
      },
      "availability_summary": {
        "type": "string",
        "description": "Summary of availability status for all checked vendors"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Logistics Coordinator",
    "tool_description": "Coordinates logistical requirements between venue, vendors, and event timeline including delivery schedules, setup spaces, equipment needs, and service coordination.",
    "parameters": {
      "venue_details": {
        "type": "string",
        "required": true,
        "description": "Venue information including address, layout, restrictions, and facilities"
      },
      "selected_vendors": {
        "type": "array",
        "required": true,
        "description": "List of confirmed vendor identifiers",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "event_timeline": {
        "type": "string",
        "required": true,
        "description": "Detailed event timeline with key milestones"
      },
      "delivery_restrictions": {
        "type": "array",
        "required": false,
        "description": "Venue delivery and setup restrictions",
        "items": {"type": "string"},
        "default": null
      },
      "special_requirements": {
        "type": "array",
        "required": false,
        "description": "Special logistical requirements or considerations",
        "items": {"type": "string"},
        "default": null
      },
      "backup_plans_needed": {
        "type": "boolean",
        "required": false,
        "description": "Whether backup contingency plans should be included",
        "default": true
      },
      "coordination_meeting_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether a pre-event coordination meeting is needed",
        "default": false
      }
    },
    "error_messages": [
      "Venue information insufficient: venue_details must include address, layout, and basic facility information.",
      "Vendor logistics data missing: Unable to retrieve logistical requirements for one or more selected vendors.",
      "Timeline conflict detected: Event timeline conflicts with vendor setup/breakdown requirements.",
      "Venue capacity exceeded: The combined vendor requirements exceed venue capacity or capabilities."
    ],
    "usage": "Provide venue_details, selected_vendors, and event_timeline. Optionally specify delivery_restrictions, special_requirements, backup_plans_needed, and coordination_meeting_required. Creates comprehensive logistics coordination plan.",
    "output_details": {
      "coordination_plan": {
        "type": "string",
        "description": "Comprehensive logistics coordination plan document"
      },
      "delivery_schedule": {
        "type": "string",
        "description": "Detailed delivery and setup timeline for all vendors"
      },
      "potential_conflicts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified potential logistical conflicts or issues"
      },
      "contingency_plans": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Backup plans for identified risk scenarios"
      },
      "coordination_summary": {
        "type": "string",
        "description": "Executive summary of logistics coordination requirements"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Reference Verification Tool",
    "tool_description": "Contacts and verifies vendor references, validates past performance claims, and gathers feedback from previous clients to assess vendor reliability.",
    "parameters": {
      "vendor_id": {
        "type": "string",
        "required": true,
        "description": "Vendor identifier to verify references for"
      },
      "reference_contacts": {
        "type": "array",
        "required": true,
        "description": "List of reference contact information provided by vendor",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 8
      },
      "verification_questions": {
        "type": "array",
        "required": true,
        "description": "Specific questions to ask references",
        "items": {"type": "string"},
        "minItems": 5,
        "maxItems": 15
      }
    },
    "error_messages": [
      "Insufficient references: At least 2 reference contacts are required for verification.",
      "Invalid contact information: One or more reference contacts have invalid or incomplete information.",
      "Reference unavailable: Unable to reach references within reasonable timeframe.",
      "Vendor not found: The specified vendor_id does not exist in the system."
    ],
    "usage": "Provide vendor_id, reference_contacts from the vendor, and verification_questions to ask. The tool attempts to contact references and gather feedback on vendor performance.",
    "output_details": {
      "references_contacted": {
        "type": "integer",
        "description": "Number of references successfully contacted"
      },
      "positive_references": {
        "type": "integer",
        "description": "Number of positive reference responses received"
      },
      "reference_feedback": {
        "type": "string",
        "description": "Summary of feedback received from references"
      },
      "red_flags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Any concerning issues raised by references"
      },
      "verification_summary": {
        "type": "string",
        "description": "Overall assessment based on reference verification"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Final Selection Optimizer",
    "tool_description": "Analyzes all vendor evaluation data, constraints, and requirements to recommend the optimal vendor selection that maximizes value while meeting all criteria and budget constraints.",
    "parameters": {
      "vendor_evaluation_data": {
        "type": "array",
        "required": true,
        "description": "Compiled evaluation data for each vendor including scores, pricing, and capabilities",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 20
      },
      "budget_constraint": {
        "type": "number",
        "required": true,
        "description": "Maximum total budget available for vendor selection"
      },
      "must_have_requirements": {
        "type": "array",
        "required": true,
        "description": "Non-negotiable requirements that vendors must meet",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 15
      },
      "optimization_priority": {
        "type": "string",
        "required": true,
        "description": "Primary optimization goal: cost, quality, reliability, or balanced"
      },
      "risk_tolerance": {
        "type": "string",
        "required": false,
        "description": "Acceptable risk level: low, medium, high",
        "default": "medium"
      },
      "backup_vendor_needed": {
        "type": "boolean",
        "required": false,
        "description": "Whether to identify backup vendor options",
        "default": true
      }
    },
    "error_messages": [
      "Insufficient vendor data: At least 2 vendors with complete evaluation data are required.",
      "No vendors meet requirements: No evaluated vendors satisfy all must_have_requirements.",
      "Budget constraint violated: No vendor combinations fit within the specified budget_constraint.",
      "Invalid optimization priority: optimization_priority must be one of: cost, quality, reliability, balanced.",
      "Invalid risk tolerance: risk_tolerance must be one of: low, medium, high."
    ],
    "usage": "Provide vendor_evaluation_data, budget_constraint, must_have_requirements, and optimization_priority. Optionally set risk_tolerance and backup_vendor_needed. Returns optimized vendor selection recommendations.",
    "output_details": {
      "recommended_vendor
