field_name: ecommerce_and_retail
subfield: Return and Refund Processing
task: Inspect returned items and assess condition for refund approval
tool_description: "STEP 1 — Rate task difficulty\n\nThis task is **medium** difficulty. It involves multiple complex subproblems including physical item inspection, condition assessment, policy validation, and financial processing. There's moderate ambiguity in determining item condition and refund eligibility, requiring coordination between inspection, inventory, and financial systems. Errors could result in financial losses or customer dissatisfaction, and it requires integration with multiple data sources including return policies, inventory systems, and customer records.\n\nSTEP 2 — Set a tool budget\n\nGiven the medium difficulty, I'll target **12 tools** to cover the comprehensive workflow from item receipt through refund processing, including inspection, condition assessment, policy validation, and financial operations.\n\nSTEP 3 — List all tool names and dependencies\n\n**Tools and their data flow:**\n1. **Return Request Validator** - Consumes: return request data → Produces: validation status\n2. **Item Inspector** - Consumes: physical item details → Produces: condition assessment\n3. **Damage Assessor** - Consumes: item condition data → Produces: damage evaluation\n4. **Return Policy Checker** - Consumes: return request + item data → Produces: policy compliance\n5. **Refund Calculator** - Consumes: item value + condition + policy → Produces: refund amount\n6. **Inventory Updater** - Consumes: item condition + location → Produces: inventory status\n7. **Customer History Analyzer** - Consumes: customer ID + return patterns → Produces: risk assessment\n8. **Restocking Evaluator** - Consumes: item condition + category → Produces: restocking decision\n9. **Photo Documentation Tool** - Consumes: item images + metadata → Produces: documentation record\n10. **Quality Standards Checker** - Consumes: item specs + condition → Produces: quality compliance\n11. **Refund Processor** - Consumes: approved refund data → Produces: payment processing\n12. **Return Analytics Tracker** - Consumes: return outcome data → Produces: analytics metrics\n\nSTEP 4 — Multi-tool plans\n\n**Simple plans:**\n- Basic inspection: Item Inspector → Damage Assessor → Refund Calculator → Refund Processor\n- Policy validation: Return Request Validator → Return Policy Checker → Refund Calculator\n\n**Medium plans:**\n- Standard return processing: Return Request Validator → Item Inspector → Damage Assessor → Return Policy Checker → Refund Calculator → Inventory Updater → Refund Processor\n- Risk assessment workflow: Customer History Analyzer → Return Request Validator → Item Inspector → Quality Standards Checker → Refund Calculator\n\n**Complex plans:**\n- Complete return workflow: Return Request Validator → Customer History Analyzer → Item Inspector → Photo Documentation Tool → Damage Assessor → Quality Standards Checker → Return Policy Checker → Refund Calculator → Restocking Evaluator → Inventory Updater → Refund Processor → Return Analytics Tracker\n- Fraud prevention workflow: Customer History Analyzer → Return Request Validator → Item Inspector → Photo Documentation Tool → Damage Assessor → Return Policy Checker → Quality Standards Checker → Refund Calculator → Return Analytics Tracker\n\nSTEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"Return Request Validator\",\n  \"tool_description\": \"Validates return request details against basic requirements including return window, purchase verification, and request completeness.\",\n  \"parameters\": {\n    \"return_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the return request\"\n    },\n    \"customer_id\": {\n      \"type\": \"string\", \n      \"required\": true,\n      \"description\": \"Customer identifier who initiated the return\"\n    },\n    \"order_id\": {\n      \"type\": \"string\",\n      \"required\": true, \n      \"description\": \"Original order identifier for the returned item\"\n    },\n    \"return_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Date when return request\
  \ was initiated\",\n      \"format\": \"date-time\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid return_id: Return ID must be a non-empty string and exist in the system.\",\n    \"Invalid customer_id: Customer ID must be a valid registered customer identifier.\", \n    \"Invalid order_id: Order ID must exist and belong to the specified customer.\",\n    \"Invalid return_date: Date must be in valid ISO 8601 format and within acceptable return window.\"\n  ],\n  \"usage\": \"Provide return_id, customer_id, order_id, and return_date to validate basic return request requirements. Use this as the first step in return processing workflow.\",\n  \"output_details\": {\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Overall validation result: approved, rejected, or requires_review\"\n    },\n    \"validation_details\": {\n      \"type\": \"string\", \n      \"description\": \"Detailed explanation of validation outcome\"\n    },\n    \"days_since_purchase\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of days between purchase and return request\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Item Inspector\",\n  \"tool_description\": \"Performs comprehensive physical inspection of returned items to assess overall condition, completeness, and any visible issues.\",\n  \"parameters\": {\n    \"item_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the returned item\"\n    },\n    \"inspector_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"ID of the staff member conducting inspection\"\n    },\n    \"inspection_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Date and time of inspection\",\n      \"format\": \"date-time\"\n    },\n    \"item_category\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Product category: electronics, clothing, home_goods, books, toys, jewelry\"\n    },\n    \"original_packaging\": {\n      \"type\": \"boolean\",\n      \"required\": true,\n      \"description\": \"Whether item is returned in original packaging\"\n    },\n    \"accessories_included\": {\n      \"type\": \"boolean\",\n      \"required\": true,\n      \"description\": \"Whether all original accessories are included\"\n    },\n    \"tags_attached\": {\n      \"type\": \"boolean\",\n      \"required\": true,\n      \"description\": \"Whether original tags are still attached\"\n    },\n    \"visible_wear\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Level of visible wear: none, minimal, moderate, significant, excessive\"\n    },\n    \"functionality_test\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Functionality test result: passed, failed, not_applicable\",\n      \"default\": \"not_applicable\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid item_id: Item ID must be a non-empty string and exist in the return system.\",\n    \"Invalid inspector_id: Inspector ID must be a valid staff member identifier.\",\n    \"Invalid inspection_date: Date must be in ISO 8601 format and not in the future.\",\n    \"Invalid item_category: Category must be one of [electronics, clothing, home_goods, books, toys, jewelry].\",\n    \"Invalid visible_wear level: Must be one of [none, minimal, moderate, significant, excessive].\",\n    \"Invalid functionality_test result: Must be one of [passed, failed, not_applicable].\"\n  ],\n  \"usage\": \"Provide all required parameters after physically examining the returned item. Use for systematic inspection before condition assessment and refund processing.\",\n  \"output_details\": {\n    \"inspection_score\": {\n      \"type\": \"integer\",\n      \"description\": \"Overall inspection score from 0-100\"\n    },\n    \"condition_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Brief summary of item condition\"\n    },\n    \"completeness_status\": {\n      \"type\"\
  : \"string\",\n      \"description\": \"Assessment of item completeness: complete, missing_accessories, missing_packaging\"\n    },\n    \"recommended_action\": {\n      \"type\": \"string\", \n      \"description\": \"Recommended next action: approve_refund, partial_refund, reject_return, further_assessment\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Damage Assessor\",\n  \"tool_description\": \"Evaluates specific damage types and severity on returned items to determine impact on resale value and refund eligibility.\",\n  \"parameters\": {\n    \"item_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the item being assessed\"\n    },\n    \"damage_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Types of damage observed\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 0,\n      \"maxItems\": 10\n    },\n    \"damage_severity\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Overall damage severity: none, minor, moderate, major, severe\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid item_id: Item ID must be a non-empty string.\",\n    \"Invalid damage_types: Each damage type must be a valid string descriptor.\",\n    \"Invalid damage_severity: Severity must be one of [none, minor, moderate, major, severe].\",\n    \"Inconsistent assessment: Damage severity must align with reported damage types.\"\n  ],\n  \"usage\": \"Use after item inspection to assess specific damage. Provide detailed damage types and overall severity assessment.\",\n  \"output_details\": {\n    \"damage_score\": {\n      \"type\": \"integer\",\n      \"description\": \"Numerical damage score from 0-100 (0 = no damage)\"\n    },\n    \"resale_eligibility\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether item can be resold as is\"\n    },\n    \"repair_cost_estimate\": {\n      \"type\": \"number\",\n      \"description\": \"Estimated cost to repair damage\"\n    },\n    \"value_reduction_percent\": {\n      \"type\": \"number\", \n      \"description\": \"Percentage reduction in item value due to damage\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Return Policy Checker\",\n  \"tool_description\": \"Verifies return eligibility against company policies including return windows, item conditions, and special restrictions.\",\n  \"parameters\": {\n    \"item_category\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Product category for policy lookup\"\n    },\n    \"purchase_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Original purchase date\",\n      \"format\": \"date-time\"\n    },\n    \"return_reason\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Customer's stated reason for return\"\n    },\n    \"item_condition\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Current item condition assessment\"\n    },\n    \"original_price\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Original purchase price\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid item_category: Category must exist in policy database.\",\n    \"Invalid purchase_date: Date must be in ISO 8601 format and in the past.\",\n    \"Missing return_reason: Return reason cannot be empty.\",\n    \"Invalid item_condition: Condition must be a recognized condition state.\",\n    \"Invalid original_price: Price must be a positive number.\"\n  ],\n  \"usage\": \"Check policy compliance after item inspection and damage assessment. Provides definitive policy-based decision on return eligibility.\",\n  \"output_details\": {\n    \"policy_compliant\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether return meets all policy requirements\"\n    },\n    \"policy_violations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of any policy\
  \ violations found\"\n    },\n    \"eligible_refund_type\": {\n      \"type\": \"string\",\n      \"description\": \"Type of refund eligible: full, partial, store_credit, exchange_only, none\"\n    },\n    \"policy_notes\": {\n      \"type\": \"string\",\n      \"description\": \"Additional policy-related notes\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Refund Calculator\",\n  \"tool_description\": \"Calculates the appropriate refund amount based on item condition, policy compliance, damage assessment, and applicable fees or deductions.\",\n  \"parameters\": {\n    \"original_price\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Original purchase price of the item\"\n    },\n    \"condition_score\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Item condition score from inspection (0-100)\"\n    },\n    \"damage_reduction_percent\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Percentage reduction due to damage (0-100)\"\n    },\n    \"policy_refund_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Policy-determined refund type: full, partial, store_credit, none\"\n    },\n    \"restocking_fee_applicable\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether restocking fee should be applied\",\n      \"default\": false\n    },\n    \"shipping_cost_deduction\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Shipping cost to deduct from refund\",\n      \"default\": 0\n    }\n  },\n  \"error_messages\": [\n    \"Invalid original_price: Price must be a positive number.\",\n    \"Invalid condition_score: Score must be an integer between 0-100.\",\n    \"Invalid damage_reduction_percent: Percentage must be between 0-100.\",\n    \"Invalid policy_refund_type: Type must be one of [full, partial, store_credit, none].\",\n    \"Invalid shipping_cost_deduction: Must be a non-negative number not exceeding original price.\"\n  ],\n  \"usage\": \"Use after inspection, damage assessment, and policy check to calculate final refund amount. Considers all factors affecting refund value.\",\n  \"output_details\": {\n    \"refund_amount\": {\n      \"type\": \"number\",\n      \"description\": \"Final calculated refund amount\"\n    },\n    \"refund_type\": {\n      \"type\": \"string\",\n      \"description\": \"Type of refund: cash, credit_card, store_credit\"\n    },\n    \"deductions_applied\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of deductions applied to calculate final amount\"\n    },\n    \"calculation_breakdown\": {\n      \"type\": \"string\",\n      \"description\": \"Detailed explanation of refund calculation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Inventory Updater\",\n  \"tool_description\": \"Updates inventory system based on returned item condition and determines appropriate inventory disposition.\",\n  \"parameters\": {\n    \"item_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the returned item\"\n    },\n    \"sku\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Stock keeping unit identifier\"\n    },\n    \"condition_status\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Item condition: new, like_new, good, fair, poor, damaged\"\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Physical location of the item\"\n    },\n    \"resale_eligible\": {\n      \"type\": \"boolean\",\n      \"required\": true,\n      \"description\": \"Whether item is eligible for resale\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid item_id: Item ID must be a non-empty string.\",\n    \"Invalid sku: SKU must exist in the product catalog.\",\n    \"Invalid condition_status: Status must be one of [new, like_new, good,\
  \ fair, poor, damaged].\",\n    \"Invalid location: Location must be a valid warehouse or store identifier.\",\n    \"Inventory update failed: Unable to update inventory system.\"\n  ],\n  \"usage\": \"Use after item inspection and refund processing to update inventory records. Ensures accurate tracking of returned items.\",\n  \"output_details\": {\n    \"inventory_updated\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether inventory was successfully updated\"\n    },\n    \"disposition\": {\n      \"type\": \"string\",\n      \"description\": \"Item disposition: restock, clearance, repair, dispose, donate\"\n    },\n    \"updated_quantity\": {\n      \"type\": \"integer\",\n      \"description\": \"New inventory quantity for this SKU\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Customer History Analyzer\",\n  \"tool_description\": \"Analyzes customer's return history and patterns to assess risk factors and inform return processing decisions.\",\n  \"parameters\": {\n    \"customer_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique customer identifier\"\n    },\n    \"analysis_period_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of days to look back for analysis\",\n      \"default\": 365\n    }\n  },\n  \"error_messages\": [\n    \"Invalid customer_id: Customer ID must be a valid registered customer.\",\n    \"Invalid analysis_period_days: Period must be a positive integer not exceeding 3650 days.\",\n    \"Customer data unavailable: Unable to retrieve customer history data.\"\n  ],\n  \"usage\": \"Use early in return process to identify high-risk customers or patterns that may require additional scrutiny.\",\n  \"output_details\": {\n    \"total_returns\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of returns in analysis period\"\n    },\n    \"return_rate_percent\": {\n      \"type\": \"number\",\n      \"description\": \"Percentage of purchases that were returned\"\n    },\n    \"risk_score\": {\n      \"type\": \"integer\",\n      \"description\": \"Customer risk score from 0-100 (higher = more risk)\"\n    },\n    \"risk_factors\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of identified risk factors\"\n    },\n    \"recommended_action\": {\n      \"type\": \"string\",\n      \"description\": \"Recommended processing approach: standard, enhanced_review, manager_approval\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Restocking Evaluator\",\n  \"tool_description\": \"Determines whether returned items can be restocked for resale based on condition, demand, and business rules.\",\n  \"parameters\": {\n    \"sku\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Stock keeping unit identifier\"\n    },\n    \"item_category\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Product category\"\n    },\n    \"condition_score\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Item condition score (0-100)\"\n    },\n    \"original_price\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Original retail price\"\n    },\n    \"days_since_purchase\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Number of days since original purchase\"\n    },\n    \"seasonal_factor\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether item is seasonal/time-sensitive\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Invalid sku: SKU must exist in product catalog.\",\n    \"Invalid item_category: Category must be recognized product category.\",\n    \"Invalid condition_score: Score must be integer between 0-100.\",\n    \"Invalid original_price: Price must be positive number.\",\n    \"Invalid days_since_purchase: Must be non-negative integer.\"\n  ],\n  \"usage\": \"Use after\
  \ condition assessment to determine best disposition for returned items. Helps optimize inventory management and profitability.\",\n  \"output_details\": {\n    \"restock_decision\": {\n      \"type\": \"string\",\n      \"description\": \"Restocking decision: full_price, discounted, clearance, no_restock\"\n    },\n    \"suggested_price\": {\n      \"type\": \"number\",\n      \"description\": \"Suggested resale price based on condition\"\n    },\n    \"reasoning\": {\n      \"type\": \"string\",\n      \"description\": \"Explanation for restocking decision\"\n    },\n    \"estimated_demand\": {\n      \"type\": \"string\",\n      \"description\": \"Estimated demand level: high, medium, low\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Photo Documentation Tool\",\n  \"tool_description\": \"Creates comprehensive photographic documentation of returned items for record-keeping, quality assurance, and dispute resolution.\",\n  \"parameters\": {\n    \"item_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the item being documented\"\n    },\n    \"photographer_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"ID of staff member taking photos\"\n    },\n    \"photo_count\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Number of photos taken (1-20)\"\n    },\n    \"documentation_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of documentation: standard, damage_focused, completeness_check, dispute_evidence\"\n    },\n    \"special_focus_areas\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Specific areas requiring focused documentation\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": null\n    },\n    \"timestamp\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"When photos were taken\",\n      \"format\": \"date-time\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid item_id: Item ID must be non-empty string.\",\n    \"Invalid photographer_id: Must be valid staff member ID.\",\n    \"Invalid photo_count: Must be integer between 1-20.\",\n    \"Invalid documentation_type: Must be one of [standard, damage_focused, completeness_check, dispute_evidence].\",\n    \"Invalid timestamp: Must be valid ISO 8601 format.\",\n    \"Photo upload failed: Unable to save documentation photos.\"\n  ],\n  \"usage\": \"Use during or immediately after item inspection to create visual record. Essential for high-value items or disputed returns.\",\n  \"output_details\": {\n    \"documentation_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the photo documentation set\"\n    },\n    \"photo_urls\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"URLs/paths to stored documentation photos\"\n    },\n    \"documentation_complete\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether all required photos were successfully captured\"\n    },\n    \"quality_score\": {\n      \"type\": \"integer\",\n      \"description\": \"Photo quality assessment score (0-100)\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Quality Standards Checker\",\n  \"tool_description\": \"Verifies returned items against established quality standards and specifications for the product category.\",\n  \"parameters\": {\n    \"item_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the item\"\n    },\n    \"sku\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Stock keeping unit for standards lookup\"\n    },\n    \"item_category\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Product category for applicable standards\"\n    },\n    \"condition_assessment\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Current condition\
  \ assessment from inspection\"\n    },\n    \"functionality_status\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Functionality test result: working, partially_working, not_working, not_tested\"\n    },\n    \"cosmetic_issues\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"List of cosmetic issues identified\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": null\n    },\n    \"performance_issues\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"List of performance issues identified\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid item_id: Item ID must be non-empty string.\",\n    \"Invalid sku: SKU must exist in product database.\",\n    \"Invalid item_category: Category must be recognized product category.\",\n    \"Invalid condition_assessment: Must be valid condition descriptor.\",\n    \"Invalid functionality_status: Must be one of [working, partially_working, not_working, not_tested].\",\n    \"Standards lookup failed: Unable to retrieve quality standards for this item.\"\n  ],\n  \"usage\": \"Use after inspection and damage assessment to verify items meet minimum quality standards for refund or restocking decisions.\",\n  \"output_details\": {\n    \"meets_standards\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether item meets minimum quality standards\"\n    },\n    \"standards_violations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of quality standards not met\"\n    },\n    \"quality_grade\": {\n      \"type\": \"string\",\n      \"description\": \"Overall quality grade: A, B, C, D, F\"\n    },\n    \"recommended_disposition\": {\n      \"type\": \"string\",\n      \"description\": \"Recommended action: approve_return, partial_refund, reject, repair_first\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Refund Processor\",\n  \"tool_description\": \"Executes the approved refund transaction and handles payment processing back to customer's original payment method.\",\n  \"parameters\": {\n    \"return_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique return request identifier\"\n    },\n    \"customer_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Customer receiving the refund\"\n    },\n    \"refund_amount\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Approved refund amount\"\n    },\n    \"refund_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of refund: credit_card, store_credit, check, bank_transfer\"\n    },\n    \"original_payment_method\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Original payment method used for purchase\"\n    },\n    \"processing_notes\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Additional notes for refund processing\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid return_id: Return ID must exist and be approved for refund.\",\n    \"Invalid customer_id: Customer ID must match the return request.\",\n    \"Invalid refund_amount: Amount must be positive and not exceed original purchase price.\",\n    \"Invalid refund_type: Type must be one of [credit_card, store_credit, check, bank_transfer].\",\n    \"Payment processing failed: Unable to process refund to original payment method.\",\n    \"Refund limit exceeded: Refund amount exceeds daily processing limits.\"\n  ],\n  \"usage\": \"Use as final step after all approvals to execute the refund payment. Ensure all prior validations and calculations are complete.\",\n  \"output_details\": {\n    \"transaction_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique transaction ID for the refund\"\n    },\n    \"processing_status\": {\n      \"type\": \"\
  string\",\n      \"description\": \"Current processing status: completed, pending, failed\"\n    },\n    \"expected_completion\": {\n      \"type\": \"string\",\n      \"description\": \"Expected completion date for refund\",\n      \"format\": \"date-time\"\n    },\n    \"confirmation_number\": {\n      \"type\": \"string\",\n      \"description\": \"Customer confirmation number for the refund\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Return Analytics Tracker\",\n  \"tool_description\": \"Tracks and records return processing metrics and outcomes for business analytics and continuous improvement.\",\n  \"parameters\": {\n    \"return_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique return request identifier\"\n    },\n    \"process_start_time\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"When return processing began\",\n      \"format\": \"date-time\"\n    },\n    \"process_end_time\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"When return processing completed\",\n      \"format\": \"date-time\"\n    },\n    \"final_outcome\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Final processing outcome: full_refund, partial_refund, exchange, rejected\"\n    },\n    \"refund_amount\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Final refund amount if applicable\",\n      \"default\": 0\n    },\n    \"staff_involved\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Staff members involved in processing\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"tools_used\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Processing tools/steps used\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 15\n    },\n    \"exception_flags\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Any exceptional circumstances or flags\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid return_id: Return ID must be valid and exist in system.\",\n    \"Invalid time range: Process end time must be after start time.\",\n    \"Invalid final_outcome: Outcome must be one of [full_refund, partial_refund, exchange, rejected].\",\n    \"Invalid refund_amount: Amount must be non-negative number.\",\n    \"Analytics recording failed: Unable to save analytics data.\"\n  ],\n  \"usage\": \"Use at completion of return processing to record metrics and outcomes. Essential for process improvement and business intelligence.\",\n  \"output_details\": {\n    \"analytics_recorded\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether analytics data was successfully recorded\"\n    },\n    \"processing_time_minutes\": {\n      \"type\": \"integer\",\n      \"description\": \"Total processing time in minutes\"\n    },\n    \"efficiency_score\": {\n      \"type\": \"integer\",\n      \"description\": \"Process efficiency score (0-100)\"\n    },\n    \"record_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for this analytics record\"\n    }\n  }\n}\n```"
