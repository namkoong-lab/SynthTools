field_name: website_control
subfield: Web Hosting and Server Administration
task: Server provisioning and configuration including setting up virtual machines, containers, and cloud instances
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task involves complex infrastructure management requiring expertise across multiple domains (virtualization, containerization, cloud platforms, networking, security). The scope includes diverse provisioning methods, significant coordination between components, and high risk of service disruption from configuration errors. This is a **hard** difficulty task.\n\n**STEP 2 — Set a tool budget**\n\nGiven the hard difficulty rating, I'll target **17 tools** within the 15-20 range to cover the comprehensive workflow from resource planning through deployment monitoring.\n\n**STEP 3 — List all tool names and dependencies**\n\nTools and their data flow:\n1. **Resource Requirement Calculator** → produces capacity specs\n2. **Cloud Provider Authenticator** → produces authentication tokens\n3. **Virtual Machine Provisioner** → consumes auth tokens, produces VM instances\n4. **Container Image Builder** → produces container images\n5. **Container Orchestrator Setup** → consumes images, produces orchestration config\n6. **Load Balancer Configurator** → consumes instance info, produces traffic distribution\n7. **Network Security Manager** → produces security policies\n8. **SSL Certificate Generator** → produces certificates\n9. **Database Instance Creator** → consumes auth tokens, produces database endpoints\n10. **Storage Volume Allocator** → produces storage attachments\n11. **Environment Variable Manager** → produces configuration data\n12. **Service Health Monitor** → consumes endpoints, produces health status\n13. **Auto Scaling Configurator** → consumes metrics, produces scaling rules\n14. **Backup Strategy Implementer** → produces backup schedules\n15. **Log Aggregation Setup** → produces logging infrastructure\n16. **Performance Metrics Collector** → produces performance data\n17. **Deployment Pipeline Creator** → consumes all configs, produces deployment workflow\n\n**STEP 4 — Multi-tool plans**\n\n**Simple Plans:**\n1. **Basic VM Setup**: Resource Requirement Calculator → Cloud Provider Authenticator → Virtual Machine Provisioner → Service Health Monitor\n2. **SSL Setup**: Cloud Provider Authenticator → SSL Certificate Generator → Network Security Manager\n\n**Medium Plans:**\n1. **Container Deployment**: Container Image Builder → Container Orchestrator Setup → Load Balancer Configurator → Environment Variable Manager → Service Health Monitor\n2. **Database with Storage**: Cloud Provider Authenticator → Database Instance Creator → Storage Volume Allocator → Backup Strategy Implementer\n\n**Complex Plans:**\n1. **Full Production Stack**: Resource Requirement Calculator → Cloud Provider Authenticator → Virtual Machine Provisioner → Container Image Builder → Container Orchestrator Setup → Load Balancer Configurator → Network Security Manager → SSL Certificate Generator → Database Instance Creator → Storage Volume Allocator → Environment Variable Manager → Auto Scaling Configurator → Service Health Monitor → Log Aggregation Setup → Performance Metrics Collector → Deployment Pipeline Creator\n2. **Multi-Region Setup**: Cloud Provider Authenticator → Virtual Machine Provisioner (multiple regions) → Load Balancer Configurator → Database Instance Creator → Storage Volume Allocator → Backup Strategy Implementer → Performance Metrics Collector\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Resource Requirement Calculator\",\n  \"tool_description\": \"Calculates optimal server resources (CPU, RAM, storage) based on expected workload characteristics and performance requirements.\",\n  \"parameters\": {\n    \"expected_concurrent_users\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Number of simultaneous users expected\"\n    },\n    \"application_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of application: web, api, database, analytics, gaming\"\n    },\n    \"performance_tier\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"standard\",\n\
  \      \"description\": \"Performance level: basic, standard, high, enterprise\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid concurrent users: Must be a positive integer between 1 and 1000000.\",\n    \"Unsupported application type: Use one of [web, api, database, analytics, gaming].\",\n    \"Invalid performance tier: Use one of [basic, standard, high, enterprise].\"\n  ],\n  \"usage\": \"Provide expected concurrent users and application type. Optionally specify performance tier for customized resource recommendations.\",\n  \"output_details\": {\n    \"cpu_cores\": {\n      \"type\": \"integer\",\n      \"description\": \"Recommended number of CPU cores\"\n    },\n    \"ram_gb\": {\n      \"type\": \"integer\", \n      \"description\": \"Recommended RAM in gigabytes\"\n    },\n    \"storage_gb\": {\n      \"type\": \"integer\",\n      \"description\": \"Recommended storage in gigabytes\"\n    },\n    \"bandwidth_mbps\": {\n      \"type\": \"integer\",\n      \"description\": \"Recommended network bandwidth in Mbps\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Cloud Provider Authenticator\",\n  \"tool_description\": \"Authenticates with cloud providers and generates access tokens for resource provisioning across AWS, Azure, GCP, and DigitalOcean.\",\n  \"parameters\": {\n    \"provider\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Cloud provider name: aws, azure, gcp, digitalocean\"\n    },\n    \"access_key\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Provider access key or client ID\"\n    },\n    \"secret_key\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Provider secret key or client secret\"\n    },\n    \"region\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target region for resource deployment\"\n    },\n    \"session_duration\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 3600,\n      \"description\": \"Token validity duration in seconds\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid provider: Use one of [aws, azure, gcp, digitalocean].\",\n    \"Authentication failed: Check access_key and secret_key validity.\",\n    \"Invalid region: Verify region is supported by the selected provider.\",\n    \"Session duration out of range: Must be between 900 and 43200 seconds.\"\n  ],\n  \"usage\": \"Provide cloud provider credentials and target region. The tool returns authentication tokens for subsequent API calls.\",\n  \"output_details\": {\n    \"access_token\": {\n      \"type\": \"string\",\n      \"description\": \"Generated access token for API authentication\"\n    },\n    \"token_expiry\": {\n      \"type\": \"string\",\n      \"description\": \"Token expiration timestamp\"\n    },\n    \"provider_endpoint\": {\n      \"type\": \"string\",\n      \"description\": \"API endpoint URL for the provider\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Virtual Machine Provisioner\",\n  \"tool_description\": \"Creates and configures virtual machine instances with specified operating system, resources, and network settings.\",\n  \"parameters\": {\n    \"provider\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Cloud provider: aws, azure, gcp, digitalocean\"\n    },\n    \"access_token\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Authentication token from provider\"\n    },\n    \"instance_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique name for the VM instance\"\n    },\n    \"os_image\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Operating system image: ubuntu-20.04, ubuntu-22.04, centos-7, centos-8, debian-11, windows-server-2019\"\n    },\n    \"instance_size\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Instance size specification (provider-specific format)\"\n    },\n    \"ssh_key_name\"\
  : {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"SSH key pair name for secure access\"\n    },\n    \"security_groups\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Security group names to assign\"\n    },\n    \"subnet_id\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Subnet ID for network placement\"\n    },\n    \"user_data_script\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Initialization script to run on boot\"\n    },\n    \"tags\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Resource tags for organization\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid provider: Use one of [aws, azure, gcp, digitalocean].\",\n    \"Authentication failed: Verify access_token is valid and not expired.\",\n    \"Unsupported OS image: Use one of [ubuntu-20.04, ubuntu-22.04, centos-7, centos-8, debian-11, windows-server-2019].\",\n    \"Invalid instance size: Check provider documentation for valid instance types.\",\n    \"Resource limit exceeded: Account has reached maximum instance limit.\",\n    \"Network configuration error: Verify subnet_id and security_groups exist.\",\n    \"SSH key not found: Specified ssh_key_name does not exist in the account.\"\n  ],\n  \"usage\": \"Provide provider credentials, instance specifications, and optional network/security settings. The tool creates a VM and returns connection details.\",\n  \"output_details\": {\n    \"instance_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the created instance\"\n    },\n    \"public_ip\": {\n      \"type\": \"string\",\n      \"description\": \"Public IP address of the instance\"\n    },\n    \"private_ip\": {\n      \"type\": \"string\", \n      \"description\": \"Private IP address of the instance\"\n    },\n    \"instance_state\": {\n      \"type\": \"string\",\n      \"description\": \"Current state of the instance\"\n    },\n    \"ssh_connection_string\": {\n      \"type\": \"string\",\n      \"description\": \"SSH command to connect to the instance\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Container Image Builder\",\n  \"tool_description\": \"Builds Docker container images from source code or Dockerfile, with support for multi-stage builds and custom base images.\",\n  \"parameters\": {\n    \"image_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the container image\"\n    },\n    \"source_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to source code or Dockerfile directory\"\n    },\n    \"base_image\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"ubuntu:20.04\",\n      \"description\": \"Base image for the container\"\n    },\n    \"build_args\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Build-time variables in KEY=VALUE format\"\n    },\n    \"target_architecture\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"amd64\",\n      \"description\": \"Target CPU architecture: amd64, arm64\"\n    }\n  },\n  \"error_messages\": [\n    \"Source path not found: Verify source_path exists and contains valid Dockerfile or source code.\",\n    \"Base image pull failed: Check base_image name and registry availability.\",\n    \"Build argument format error: Use KEY=VALUE format for build_args entries.\",\n    \"Unsupported architecture: Use one of [amd64, arm64].\",\n    \"Build process failed: Check Dockerfile syntax and source code compilation errors.\"\n  ],\n  \"usage\": \"Provide image name and source\
  \ path. Optionally specify base image, build arguments, and target architecture for custom builds.\",\n  \"output_details\": {\n    \"image_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier of the built image\"\n    },\n    \"image_size_mb\": {\n      \"type\": \"number\",\n      \"description\": \"Size of the built image in megabytes\"\n    },\n    \"build_duration\": {\n      \"type\": \"integer\",\n      \"description\": \"Build time in seconds\"\n    },\n    \"image_tags\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Tags applied to the image\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Container Orchestrator Setup\",\n  \"tool_description\": \"Configures Kubernetes clusters or Docker Swarm orchestration with deployment manifests, services, and scaling policies.\",\n  \"parameters\": {\n    \"orchestrator_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Orchestration platform: kubernetes, docker-swarm\"\n    },\n    \"cluster_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the orchestration cluster\"\n    },\n    \"node_count\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Number of worker nodes in the cluster\"\n    },\n    \"master_instance_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Instance type for master/control plane nodes\"\n    },\n    \"worker_instance_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Instance type for worker nodes\"\n    },\n    \"container_images\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of container images to deploy\"\n    },\n    \"namespace\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"default\",\n      \"description\": \"Kubernetes namespace for resource isolation\"\n    },\n    \"ingress_enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable ingress controller for external access\"\n    },\n    \"persistent_storage\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable persistent volume storage\"\n    },\n    \"monitoring_enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Enable cluster monitoring and metrics collection\"\n    },\n    \"auto_scaling\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable horizontal pod autoscaling\"\n    },\n    \"service_mesh\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Service mesh to install: istio, linkerd, consul-connect\"\n    },\n    \"network_policy\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"calico\",\n      \"description\": \"Network policy provider: calico, cilium, weave\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid orchestrator type: Use one of [kubernetes, docker-swarm].\",\n    \"Node count out of range: Must be between 1 and 100 nodes.\",\n    \"Invalid instance type: Check cloud provider documentation for valid instance types.\",\n    \"Container image not found: Verify all images in container_images list exist and are accessible.\",\n    \"Cluster creation failed: Check resource limits and network configuration.\",\n    \"Invalid service mesh: Use one of [istio, linkerd, consul-connect] or None.\",\n    \"Invalid network policy provider: Use one of [calico, cilium, weave].\"\n  ],\n  \"usage\": \"Specify orchestrator type, cluster configuration, and deployment images. The tool creates the cluster and deploys specified containers with optional features.\",\n  \"output_details\": {\n    \"cluster_id\"\
  : {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the created cluster\"\n    },\n    \"cluster_endpoint\": {\n      \"type\": \"string\",\n      \"description\": \"API endpoint URL for cluster management\"\n    },\n    \"node_ips\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"IP addresses of cluster nodes\"\n    },\n    \"kubeconfig\": {\n      \"type\": \"string\",\n      \"description\": \"Configuration file content for cluster access\"\n    },\n    \"deployed_services\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Names of successfully deployed services\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Load Balancer Configurator\",\n  \"tool_description\": \"Sets up and configures load balancers for distributing traffic across multiple server instances with health checks and SSL termination.\",\n  \"parameters\": {\n    \"lb_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the load balancer\"\n    },\n    \"lb_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Load balancer type: application, network, classic\"\n    },\n    \"target_instances\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of instance IDs or IP addresses to balance\"\n    },\n    \"listener_port\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Port for incoming traffic\"\n    },\n    \"target_port\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Port on target instances\"\n    },\n    \"protocol\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"HTTP\",\n      \"description\": \"Traffic protocol: HTTP, HTTPS, TCP, UDP\"\n    },\n    \"algorithm\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"round-robin\",\n      \"description\": \"Load balancing algorithm: round-robin, least-connections, ip-hash\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid load balancer type: Use one of [application, network, classic].\",\n    \"Empty target instances: Provide at least one target instance ID or IP address.\",\n    \"Port out of range: Ports must be between 1 and 65535.\",\n    \"Invalid protocol: Use one of [HTTP, HTTPS, TCP, UDP].\",\n    \"Invalid algorithm: Use one of [round-robin, least-connections, ip-hash].\",\n    \"Target instance unreachable: One or more target instances are not responding to health checks.\"\n  ],\n  \"usage\": \"Specify load balancer configuration, target instances, and traffic routing rules. The tool creates and configures the load balancer with health monitoring.\",\n  \"output_details\": {\n    \"lb_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the load balancer\"\n    },\n    \"lb_dns_name\": {\n      \"type\": \"string\",\n      \"description\": \"DNS name for accessing the load balancer\"\n    },\n    \"lb_ip_address\": {\n      \"type\": \"string\",\n      \"description\": \"IP address of the load balancer\"\n    },\n    \"health_check_status\": {\n      \"type\": \"string\",\n      \"description\": \"Overall health status of target instances\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Network Security Manager\",\n  \"tool_description\": \"Creates and manages network security groups, firewall rules, and access control policies for server infrastructure protection.\",\n  \"parameters\": {\n    \"security_group_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the security group\"\n    },\n    \"inbound_rules\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Inbound traffic rules in format: protocol:port:source_cidr\"\n    },\n    \"outbound_rules\": {\n      \"type\": \"array\",\n     \
  \ \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Outbound traffic rules in format: protocol:port:destination_cidr\"\n    },\n    \"default_action\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"deny\",\n      \"description\": \"Default action for unmatched traffic: allow, deny\"\n    },\n    \"enable_ddos_protection\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable DDoS protection services\"\n    },\n    \"enable_waf\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable Web Application Firewall\"\n    },\n    \"log_traffic\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Enable traffic logging for security monitoring\"\n    },\n    \"allowed_countries\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"ISO country codes for geo-blocking (e.g., US, CA, GB)\"\n    },\n    \"rate_limit_per_ip\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Maximum requests per minute per IP address\"\n    },\n    \"intrusion_detection\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable intrusion detection system\"\n    },\n    \"ssl_inspection\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable SSL/TLS traffic inspection\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid rule format: Use protocol:port:cidr format (e.g., tcp:80:0.0.0.0/0).\",\n    \"Invalid protocol: Use one of [tcp, udp, icmp, all].\",\n    \"Port out of range: Ports must be between 1 and 65535 or 'all'.\",\n    \"Invalid CIDR notation: Use valid CIDR format (e.g., 192.168.1.0/24).\",\n    \"Invalid default action: Use one of [allow, deny].\",\n    \"Invalid country code: Use ISO 3166-1 alpha-2 country codes.\",\n    \"Rate limit out of range: Must be between 1 and 10000 requests per minute.\"\n  ],\n  \"usage\": \"Define security group name and traffic rules. Optionally enable advanced security features like DDoS protection, WAF, and geo-blocking.\",\n  \"output_details\": {\n    \"security_group_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the security group\"\n    },\n    \"active_rules_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of active security rules\"\n    },\n    \"protection_level\": {\n      \"type\": \"string\",\n      \"description\": \"Overall security protection level\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"SSL Certificate Generator\",\n  \"tool_description\": \"Generates and manages SSL/TLS certificates for secure HTTPS connections, supporting both self-signed and CA-issued certificates.\",\n  \"parameters\": {\n    \"domain_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Primary domain name for the certificate\"\n    },\n    \"certificate_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Certificate type: self-signed, letsencrypt, commercial\"\n    },\n    \"key_size\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 2048,\n      \"description\": \"RSA key size in bits: 2048, 3072, 4096\"\n    },\n    \"validity_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 365,\n      \"description\": \"Certificate validity period in days\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid domain name: Provide a valid fully qualified domain name.\",\n    \"Invalid certificate type: Use one of [self-signed, letsencrypt, commercial].\",\n    \"Invalid key size: Use one of [2048, 3072, 4096].\",\n    \"\
  Validity period out of range: Must be between 1 and 3650 days.\",\n    \"Domain validation failed: Unable to verify domain ownership for CA-issued certificates.\"\n  ],\n  \"usage\": \"Specify domain name and certificate type. The tool generates appropriate SSL certificates and provides installation instructions.\",\n  \"output_details\": {\n    \"certificate_path\": {\n      \"type\": \"string\",\n      \"description\": \"File path to the generated certificate\"\n    },\n    \"private_key_path\": {\n      \"type\": \"string\",\n      \"description\": \"File path to the private key\"\n    },\n    \"certificate_fingerprint\": {\n      \"type\": \"string\",\n      \"description\": \"SHA256 fingerprint of the certificate\"\n    },\n    \"expiry_date\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate expiration date\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Database Instance Creator\",\n  \"tool_description\": \"Provisions and configures database instances with specified engine, version, and performance characteristics for application backends.\",\n  \"parameters\": {\n    \"db_engine\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database engine: mysql, postgresql, mongodb, redis, elasticsearch\"\n    },\n    \"db_version\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database version (engine-specific)\"\n    },\n    \"instance_class\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database instance size/performance class\"\n    },\n    \"storage_gb\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Allocated storage in gigabytes\"\n    },\n    \"db_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Initial database name\"\n    },\n    \"master_username\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Master username for database access\"\n    },\n    \"master_password\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Master password for database access\"\n    },\n    \"backup_retention_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 7,\n      \"description\": \"Number of days to retain backups\"\n    },\n    \"multi_az\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Enable multi-availability zone deployment\"\n    },\n    \"encryption_enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Enable encryption at rest\"\n    },\n    \"publicly_accessible\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Allow public internet access\"\n    },\n    \"vpc_security_groups\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"VPC security group IDs for network access control\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid database engine: Use one of [mysql, postgresql, mongodb, redis, elasticsearch].\",\n    \"Unsupported version: Check supported versions for the selected database engine.\",\n    \"Invalid instance class: Verify instance class is supported by the cloud provider.\",\n    \"Storage size out of range: Must be between 20 and 65536 GB.\",\n    \"Invalid credentials: Username and password must meet complexity requirements.\",\n    \"Backup retention out of range: Must be between 0 and 35 days.\",\n    \"Network configuration error: Verify VPC security group IDs exist and are accessible.\"\n  ],\n  \"usage\": \"Specify database engine, configuration parameters, and security settings. The tool creates a managed database instance with automated backups and monitoring.\",\n  \"output_details\": {\n    \"db_instance_id\": {\n      \"type\": \"string\",\n      \"description\": \"\
  Unique identifier for the database instance\"\n    },\n    \"endpoint_address\": {\n      \"type\": \"string\",\n      \"description\": \"Database connection endpoint\"\n    },\n    \"endpoint_port\": {\n      \"type\": \"integer\",\n      \"description\": \"Database connection port\"\n    },\n    \"connection_string\": {\n      \"type\": \"string\",\n      \"description\": \"Complete connection string for applications\"\n    },\n    \"instance_status\": {\n      \"type\": \"string\",\n      \"description\": \"Current status of the database instance\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Storage Volume Allocator\",\n  \"tool_description\": \"Creates and attaches persistent storage volumes to instances with specified performance characteristics and backup policies.\",\n  \"parameters\": {\n    \"volume_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the storage volume\"\n    },\n    \"volume_size_gb\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Volume size in gigabytes\"\n    },\n    \"volume_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Storage type: ssd, hdd, nvme, network-ssd\"\n    },\n    \"target_instance_id\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Instance ID to attach the volume\"\n    },\n    \"encryption_enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Enable volume encryption\"\n    }\n  },\n  \"error_messages\": [\n    \"Volume size out of range: Must be between 1 and 16384 GB.\",\n    \"Invalid volume type: Use one of [ssd, hdd, nvme, network-ssd].\",\n    \"Target instance not found: Verify target_instance_id exists and is accessible.\",\n    \"Volume creation failed: Check storage quota limits and regional availability.\",\n    \"Attachment failed: Target instance may not support additional volume attachments.\"\n  ],\n  \"usage\": \"Specify volume characteristics and optionally attach to an instance. The tool creates persistent storage with specified performance and security settings.\",\n  \"output_details\": {\n    \"volume_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the created volume\"\n    },\n    \"volume_status\": {\n      \"type\": \"string\",\n      \"description\": \"Current status of the volume\"\n    },\n    \"device_path\": {\n      \"type\": \"string\",\n      \"description\": \"Device path for mounting the volume\"\n    },\n    \"iops_rating\": {\n      \"type\": \"integer\",\n      \"description\": \"Input/output operations per second rating\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Environment Variable Manager\",\n  \"tool_description\": \"Manages application configuration through environment variables with support for secrets management and environment-specific settings.\",\n  \"parameters\": {\n    \"application_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the application or service\"\n    },\n    \"environment\": {\n      \"type\": \"string\",\n      \"required\": true"
