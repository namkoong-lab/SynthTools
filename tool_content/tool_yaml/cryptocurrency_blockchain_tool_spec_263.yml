field_name: cryptocurrency_blockchain
subfield: Cryptocurrency Trading and Exchange Operations
task: Real-time market data analysis and price monitoring
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves medium complexity due to the need for real-time data processing, multiple data sources integration, technical analysis calculations, and risk management considerations. The coordination between market feeds, analysis engines, and alerting systems adds complexity, while the financial impact of errors makes precision crucial.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target 12 tools to cover data ingestion, technical analysis, monitoring, alerting, and risk assessment workflows.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Market Data Fetcher** - Consumes: API credentials, symbols - Produces: Raw price/volume data
  2. **Technical Indicator Calculator** - Consumes: Price data, indicator params - Produces: Technical signals
  3. **Price Alert Manager** - Consumes: Current prices, alert rules - Produces: Alert notifications
  4. **Volume Analysis Tool** - Consumes: Volume data, timeframes - Produces: Volume metrics
  5. **Order Book Analyzer** - Consumes: Order book data - Produces: Liquidity metrics
  6. **Volatility Calculator** - Consumes: Price history - Produces: Volatility measures
  7. **Arbitrage Detector** - Consumes: Multi-exchange prices - Produces: Arbitrage opportunities
  8. **Support Resistance Finder** - Consumes: Price history - Produces: Key price levels
  9. **Correlation Analyzer** - Consumes: Multiple asset prices - Produces: Correlation matrices
  10. **Risk Metrics Calculator** - Consumes: Portfolio data, prices - Produces: Risk measures
  11. **Market Sentiment Tracker** - Consumes: Social/news data - Produces: Sentiment scores
  12. **Data Quality Validator** - Consumes: Raw market data - Produces: Quality reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic monitoring: Market Data Fetcher → Price Alert Manager
  - Quick analysis: Market Data Fetcher → Technical Indicator Calculator

  **Medium Plans:**
  - Complete technical analysis: Market Data Fetcher → Data Quality Validator → Technical Indicator Calculator → Support Resistance Finder
  - Risk assessment: Market Data Fetcher → Volatility Calculator → Risk Metrics Calculator

  **Complex Plans:**
  - Full market surveillance: Market Data Fetcher → Data Quality Validator → Technical Indicator Calculator → Volume Analysis Tool → Order Book Analyzer → Arbitrage Detector → Price Alert Manager
  - Multi-asset strategy: Market Data Fetcher → Correlation Analyzer → Market Sentiment Tracker → Risk Metrics Calculator → Price Alert Manager

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Market Data Fetcher",
    "tool_description": "Retrieves real-time and historical cryptocurrency market data including prices, volumes, and timestamps from multiple exchanges.",
    "parameters": {
      "symbols": {
        "type": "array",
        "required": true,
        "description": "List of cryptocurrency trading pairs (e.g., BTC/USD, ETH/BTC)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "exchange": {
        "type": "string",
        "required": true,
        "description": "Exchange name (binance, coinbase, kraken, bitstamp)"
      },
      "timeframe": {
        "type": "string",
        "required": false,
        "description": "Data timeframe (1m, 5m, 15m, 1h, 4h, 1d)",
        "default": "1m"
      },
      "limit": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of data points to retrieve (1-1000)",
        "default": 100
      }
    },
    "error_messages": [
      "Invalid exchange: Use one of [binance, coinbase, kraken, bitstamp].",
      "Invalid symbol format: Use format like BTC/USD, ETH/BTC with valid cryptocurrency pairs.",
      "Invalid timeframe: Use one of [1m, 5m, 15m, 1h, 4h, 1d].",
      "Limit out of range: Limit must be between 1 and 1000.",
      "API connection failed: Check network connectivity and exchange API status."
    ],
    "usage": "Specify the cryptocurrency symbols, exchange, and optional timeframe and limit parameters to fetch market data.",
    "output_details": {
      "symbols": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of requested symbols"
      },
      "prices": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Current or historical prices for each symbol"
      },
      "volumes": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Trading volumes for each symbol"
      },
      "timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "ISO 8601 timestamps for each data point"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Technical Indicator Calculator",
    "tool_description": "Calculates various technical analysis indicators including moving averages, RSI, MACD, Bollinger Bands, and other momentum/trend indicators.",
    "parameters": {
      "prices": {
        "type": "array",
        "required": true,
        "description": "Array of price values for calculation",
        "items": {"type": "number"},
        "minItems": 10,
        "maxItems": 10000
      },
      "indicator_type": {
        "type": "string",
        "required": true,
        "description": "Type of indicator (SMA, EMA, RSI, MACD, BB, STOCH, ATR)"
      },
      "period_1": {
        "type": "integer",
        "required": false,
        "description": "Primary period parameter (2-200)",
        "default": 14
      },
      "period_2": {
        "type": "integer",
        "required": false,
        "description": "Secondary period parameter for indicators like MACD (2-200)",
        "default": None
      },
      "period_3": {
        "type": "integer",
        "required": false,
        "description": "Signal line period for indicators like MACD (2-50)",
        "default": None
      },
      "smoothing_factor": {
        "type": "number",
        "required": false,
        "description": "Smoothing factor for EMA calculations (0.1-0.9)",
        "default": 0.2
      },
      "deviation_multiplier": {
        "type": "number",
        "required": false,
        "description": "Standard deviation multiplier for Bollinger Bands (1.0-3.0)",
        "default": 2.0
      }
    },
    "error_messages": [
      "Insufficient data: Minimum 10 price points required for calculation.",
      "Invalid indicator type: Use one of [SMA, EMA, RSI, MACD, BB, STOCH, ATR].",
      "Invalid period values: Periods must be between 2-200, with period_1 < period_2 for MACD.",
      "Invalid smoothing factor: Must be between 0.1 and 0.9.",
      "Invalid deviation multiplier: Must be between 1.0 and 3.0.",
      "Calculation error: Unable to compute indicator with given parameters."
    ],
    "usage": "Provide price array and indicator type, optionally adjust period and other parameters based on indicator requirements.",
    "output_details": {
      "indicator_values": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Calculated indicator values"
      },
      "signal_line": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Signal line values for applicable indicators"
      },
      "buy_signals": {
        "type": "array",
        "items": {"type": "boolean"},
        "description": "Boolean array indicating buy signal points"
      },
      "sell_signals": {
        "type": "array",
        "items": {"type": "boolean"},
        "description": "Boolean array indicating sell signal points"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Price Alert Manager",
    "tool_description": "Manages price-based alerts and notifications for cryptocurrency trading pairs with customizable thresholds and conditions.",
    "parameters": {
      "symbol": {
        "type": "string",
        "required": true,
        "description": "Cryptocurrency trading pair symbol"
      },
      "current_price": {
        "type": "number",
        "required": true,
        "description": "Current market price of the symbol"
      },
      "alert_type": {
        "type": "string",
        "required": true,
        "description": "Alert condition type (above, below, change_percent, volume_spike)"
      },
      "threshold_value": {
        "type": "number",
        "required": true,
        "description": "Threshold value for triggering alert"
      },
      "reference_price": {
        "type": "number",
        "required": false,
        "description": "Reference price for percentage change calculations",
        "default": None
      }
    },
    "error_messages": [
      "Invalid alert type: Use one of [above, below, change_percent, volume_spike].",
      "Invalid threshold value: Threshold must be a positive number.",
      "Missing reference price: Reference price required for change_percent alert type.",
      "Invalid current price: Current price must be greater than 0.",
      "Symbol format error: Use valid trading pair format like BTC/USD."
    ],
    "usage": "Set symbol, current price, alert type, and threshold value. For percentage change alerts, also provide reference price.",
    "output_details": {
      "alert_triggered": {
        "type": "boolean",
        "description": "Whether the alert condition was met"
      },
      "alert_message": {
        "type": "string",
        "description": "Descriptive message about the alert status"
      },
      "trigger_time": {
        "type": "string",
        "description": "ISO 8601 timestamp when alert was triggered"
      },
      "current_value": {
        "type": "number",
        "description": "Current value that triggered or didn't trigger the alert"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Volume Analysis Tool",
    "tool_description": "Analyzes trading volume patterns including volume trends, spikes, and volume-price relationships for cryptocurrency markets.",
    "parameters": {
      "volumes": {
        "type": "array",
        "required": true,
        "description": "Array of trading volume values",
        "items": {"type": "number"},
        "minItems": 5,
        "maxItems": 5000
      },
      "prices": {
        "type": "array",
        "required": true,
        "description": "Corresponding price values for volume analysis",
        "items": {"type": "number"},
        "minItems": 5,
        "maxItems": 5000
      },
      "analysis_type": {
        "type": "string",
        "required": false,
        "description": "Type of volume analysis (trend, spike, vwap, obv)",
        "default": "trend"
      },
      "spike_threshold": {
        "type": "number",
        "required": false,
        "description": "Multiplier for volume spike detection (1.5-10.0)",
        "default": 2.0
      },
      "lookback_period": {
        "type": "integer",
        "required": false,
        "description": "Number of periods for moving calculations (5-100)",
        "default": 20
      }
    },
    "error_messages": [
      "Mismatched array lengths: Volumes and prices arrays must have the same length.",
      "Insufficient data: Minimum 5 data points required for analysis.",
      "Invalid analysis type: Use one of [trend, spike, vwap, obv].",
      "Invalid spike threshold: Must be between 1.5 and 10.0.",
      "Invalid lookback period: Must be between 5 and 100.",
      "Invalid volume data: All volume values must be non-negative."
    ],
    "usage": "Provide volume and price arrays with matching lengths, select analysis type and adjust parameters as needed.",
    "output_details": {
      "average_volume": {
        "type": "number",
        "description": "Average trading volume for the period"
      },
      "volume_trend": {
        "type": "string",
        "description": "Overall volume trend (increasing, decreasing, stable)"
      },
      "volume_spikes": {
        "type": "array",
        "items": {"type": "boolean"},
        "description": "Boolean array indicating volume spike occurrences"
      },
      "vwap": {
        "type": "number",
        "description": "Volume Weighted Average Price"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Order Book Analyzer",
    "tool_description": "Analyzes cryptocurrency order book data to assess market liquidity, bid-ask spreads, and market depth characteristics.",
    "parameters": {
      "bid_prices": {
        "type": "array",
        "required": true,
        "description": "Array of bid prices from highest to lowest",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 1000
      },
      "bid_quantities": {
        "type": "array",
        "required": true,
        "description": "Corresponding bid quantities",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 1000
      },
      "ask_prices": {
        "type": "array",
        "required": true,
        "description": "Array of ask prices from lowest to highest",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 1000
      },
      "ask_quantities": {
        "type": "array",
        "required": true,
        "description": "Corresponding ask quantities",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 1000
      },
      "depth_levels": {
        "type": "integer",
        "required": false,
        "description": "Number of order book levels to analyze (1-100)",
        "default": 10
      }
    },
    "error_messages": [
      "Mismatched array lengths: Bid prices and quantities arrays must have the same length.",
      "Mismatched array lengths: Ask prices and quantities arrays must have the same length.",
      "Invalid price ordering: Bid prices must be in descending order, ask prices in ascending order.",
      "Invalid depth levels: Must be between 1 and 100.",
      "Empty order book: At least one bid and one ask required.",
      "Invalid quantities: All quantities must be positive numbers."
    ],
    "usage": "Provide bid/ask prices and quantities in correct order, optionally specify depth levels for analysis.",
    "output_details": {
      "bid_ask_spread": {
        "type": "number",
        "description": "Difference between best ask and best bid prices"
      },
      "spread_percentage": {
        "type": "number",
        "description": "Bid-ask spread as percentage of mid price"
      },
      "total_bid_volume": {
        "type": "number",
        "description": "Total volume on bid side"
      },
      "total_ask_volume": {
        "type": "number",
        "description": "Total volume on ask side"
      },
      "liquidity_score": {
        "type": "number",
        "description": "Overall liquidity assessment score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Volatility Calculator",
    "tool_description": "Calculates various volatility measures for cryptocurrency prices including historical volatility, realized volatility, and volatility forecasts.",
    "parameters": {
      "prices": {
        "type": "array",
        "required": true,
        "description": "Array of historical price values",
        "items": {"type": "number"},
        "minItems": 20,
        "maxItems": 10000
      },
      "calculation_method": {
        "type": "string",
        "required": false,
        "description": "Volatility calculation method (historical, realized, ewma, garch)",
        "default": "historical"
      },
      "window_size": {
        "type": "integer",
        "required": false,
        "description": "Rolling window size for calculations (10-500)",
        "default": 30
      },
      "annualization_factor": {
        "type": "integer",
        "required": false,
        "description": "Factor to annualize volatility (252 for daily, 365*24 for hourly)",
        "default": 252
      }
    },
    "error_messages": [
      "Insufficient data: Minimum 20 price points required for volatility calculation.",
      "Invalid calculation method: Use one of [historical, realized, ewma, garch].",
      "Invalid window size: Must be between 10 and 500.",
      "Window size too large: Window size cannot exceed the number of price points.",
      "Invalid annualization factor: Must be a positive integer.",
      "Invalid price data: All prices must be positive numbers."
    ],
    "usage": "Provide historical price data, select calculation method, and adjust window size and annualization factor as needed.",
    "output_details": {
      "current_volatility": {
        "type": "number",
        "description": "Most recent volatility value (annualized)"
      },
      "average_volatility": {
        "type": "number",
        "description": "Average volatility over the analysis period"
      },
      "volatility_trend": {
        "type": "string",
        "description": "Volatility trend direction (increasing, decreasing, stable)"
      },
      "volatility_percentile": {
        "type": "number",
        "description": "Current volatility percentile rank (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Arbitrage Detector",
    "tool_description": "Identifies arbitrage opportunities across multiple cryptocurrency exchanges by comparing prices and calculating potential profits.",
    "parameters": {
      "exchange_prices": {
        "type": "array",
        "required": true,
        "description": "Array of prices from different exchanges",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 20
      },
      "exchange_names": {
        "type": "array",
        "required": true,
        "description": "Corresponding exchange names",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 20
      },
      "trading_fees": {
        "type": "array",
        "required": true,
        "description": "Trading fees for each exchange (as percentages)",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 20
      },
      "symbol": {
        "type": "string",
        "required": true,
        "description": "Cryptocurrency trading pair symbol"
      },
      "minimum_profit_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum profit percentage required (0.1-10.0)",
        "default": 0.5
      },
      "transfer_costs": {
        "type": "array",
        "required": false,
        "description": "Transfer costs between exchanges (as percentages)",
        "items": {"type": "number"},
        "default": None
      },
      "liquidity_requirements": {
        "type": "array",
        "required": false,
        "description": "Minimum liquidity requirements for each exchange",
        "items": {"type": "number"},
        "default": None
      }
    },
    "error_messages": [
      "Mismatched array lengths: exchange_prices, exchange_names, and trading_fees must have the same length.",
      "Insufficient exchanges: Minimum 2 exchanges required for arbitrage detection.",
      "Invalid trading fees: All fees must be non-negative percentages (0-10).",
      "Invalid minimum profit threshold: Must be between 0.1 and 10.0.",
      "Invalid transfer costs: All transfer costs must be non-negative percentages.",
      "Duplicate exchanges: Exchange names must be unique.",
      "Invalid prices: All prices must be positive numbers."
    ],
    "usage": "Provide prices, exchange names, and trading fees for multiple exchanges. Optionally include transfer costs and liquidity requirements for more accurate calculations.",
    "output_details": {
      "arbitrage_found": {
        "type": "boolean",
        "description": "Whether profitable arbitrage opportunity exists"
      },
      "buy_exchange": {
        "type": "string",
        "description": "Exchange to buy from (lowest price)"
      },
      "sell_exchange": {
        "type": "string",
        "description": "Exchange to sell to (highest price)"
      },
      "profit_percentage": {
        "type": "number",
        "description": "Estimated profit percentage after fees"
      },
      "price_difference": {
        "type": "number",
        "description": "Raw price difference between exchanges"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Support Resistance Finder",
    "tool_description": "Identifies key support and resistance levels in cryptocurrency price data using multiple detection methods and significance scoring.",
    "parameters": {
      "prices": {
        "type": "array",
        "required": true,
        "description": "Array of historical price values (high, low, or close)",
        "items": {"type": "number"},
        "minItems": 50,
        "maxItems": 10000
      },
      "detection_method": {
        "type": "string",
        "required": false,
        "description": "Method for level detection (pivot, fractals, volume, psychological)",
        "default": "pivot"
      },
      "sensitivity": {
        "type": "number",
        "required": false,
        "description": "Sensitivity level for detection (0.1-1.0, higher = more levels)",
        "default": 0.5
      },
      "minimum_touches": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of price touches to confirm level (2-10)",
        "default": 3
      },
      "lookback_window": {
        "type": "integer",
        "required": false,
        "description": "Window size for level detection (10-500)",
        "default": 50
      }
    },
    "error_messages": [
      "Insufficient data: Minimum 50 price points required for reliable level detection.",
      "Invalid detection method: Use one of [pivot, fractals, volume, psychological].",
      "Invalid sensitivity: Must be between 0.1 and 1.0.",
      "Invalid minimum touches: Must be between 2 and 10.",
      "Invalid lookback window: Must be between 10 and 500.",
      "Lookback window too large: Cannot exceed the number of available price points."
    ],
    "usage": "Provide price history, select detection method, and adjust sensitivity and confirmation parameters based on your requirements.",
    "output_details": {
      "support_levels": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Identified support price levels"
      },
      "resistance_levels": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Identified resistance price levels"
      },
      "level_strengths": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Strength scores for each level (0-100)"
      },
      "nearest_support": {
        "type": "number",
        "description": "Closest support level to current price"
      },
      "nearest_resistance": {
        "type": "number",
        "description": "Closest resistance level to current price"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Correlation Analyzer",
    "tool_description": "Calculates correlation coefficients and relationships between multiple cryptocurrency assets or between crypto and traditional markets.",
    "parameters": {
      "asset_prices_1": {
        "type": "array",
        "required": true,
        "description": "Price history for first asset",
        "items": {"type": "number"},
        "minItems": 30,
        "maxItems": 10000
      },
      "asset_prices_2": {
        "type": "array",
        "required": true,
        "description": "Price history for second asset",
        "items": {"type": "number"},
        "minItems": 30,
        "maxItems": 10000
      },
      "additional_assets": {
        "type": "array",
        "required": false,
        "description": "Additional asset price arrays for multi-asset analysis",
        "items": {"type": "number"},
        "default": None
      },
      "correlation_method": {
        "type": "string",
        "required": false,
        "description": "Correlation calculation method (pearson, spearman, kendall)",
        "default": "pearson"
      },
      "rolling_window": {
        "type": "integer",
        "required": false,
        "description": "Window size for rolling correlation (10-500)",
        "default": None
      }
    },
    "error_messages": [
      "Mismatched array lengths: All asset price arrays must have the same length.",
      "Insufficient data: Minimum 30 price points required for correlation analysis.",
      "Invalid correlation method: Use one of [pearson, spearman, kendall].",
      "Invalid rolling window: Must be between 10 and 500 if specified.",
      "Rolling window too large: Cannot exceed the number of available price points.",
      "Invalid price data: All prices must be finite numbers."
    ],
    "usage": "Provide price histories for at least two assets, optionally specify correlation method and rolling window for dynamic analysis.",
    "output_details": {
      "correlation_coefficient": {
        "type": "number",
        "description": "Primary correlation coefficient between first two assets"
      },
      "p_value": {
        "type": "number",
        "description": "Statistical significance p-value"
      },
      "correlation_strength": {
        "type": "string",
        "description": "Qualitative correlation strength (weak, moderate, strong)"
      },
      "rolling_correlations": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Rolling correlation values if window specified"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Metrics Calculator",
    "tool_description": "Calculates comprehensive risk metrics for cryptocurrency portfolios including VaR, drawdowns, Sharpe ratios, and other risk-adjusted measures.",
    "parameters": {
      "portfolio_values": {
        "type": "array",
        "required": true,
        "description": "Historical portfolio values or returns",
        "items": {"type": "number"},
        "minItems": 30,
        "maxItems": 10000
      },
      "benchmark_values": {
        "type": "array",
        "required": false,
        "description": "Benchmark values for relative risk calculations",
        "items": {"type": "number"},
        "default": None
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Confidence level for VaR calculation (0.90-0.99)",
        "default": 0.95
      },
      "risk_free_rate": {
        "type": "number",
        "required": false,
        "description": "Risk-free rate for Sharpe ratio calculation (annual %)",
        "default": 0.02
      },
      "calculation_period": {
        "type": "string",
        "required": false,
        "description": "Time period for calculations (daily, weekly, monthly)",
        "default": "daily"
      },
      "return_type": {
        "type": "string",
        "required": false,
        "description": "Input data type (prices, returns)",
        "default": "prices"
      }
    },
    "error_messages": [
      "Insufficient data: Minimum 30 data points required for reliable risk calculations.",
      "Mismatched lengths: Portfolio and benchmark arrays must have the same length if both provided.",
      "Invalid confidence level: Must be between 0.90 and 0.99.",
      "Invalid risk-free rate: Must be a non-negative percentage.",
      "Invalid calculation period: Use one of [daily, weekly, monthly].",
      "Invalid return type: Use one of [prices, returns].",
      "Invalid portfolio data: All values must be positive numbers for price data."
    ],
    "usage": "Provide portfolio value history, optionally include benchmark data and adjust risk parameters for comprehensive risk assessment.",
    "output_details": {
      "value_at_risk": {
        "type": "number",
        "description": "Value at Risk at specified confidence level"
      },
      "max_drawdown": {
        "type": "number",
        "description": "Maximum peak-to-trough drawdown percentage"
      },
      "sharpe_ratio": {
        "type": "number",
        "description": "Risk-adjusted return measure"
      },
      "volatility": {
        "type": "number",
        "description": "Annualized volatility percentage"
      },
      "beta": {
        "type": "number",
        "description": "Beta coefficient relative to benchmark (if provided)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Market Sentiment Tracker",
    "tool_description": "Analyzes market sentiment from multiple data sources including social media mentions, news sentiment, and fear & greed indicators for cryptocurrency markets.",
    "parameters": {
      "sentiment_scores": {
        "type": "array",
        "required": true,
        "description": "Array of sentiment scores (-1.0 to 1.0, negative=bearish, positive=bullish)",
        "items": {"type": "number"},
        "minItems": 10,
        "maxItems": 10000
      },
      "data_sources": {
        "type": "array",
        "required": true,
        "description": "Source types for sentiment data",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "timestamps": {
        "type": "array",
        "required": true,
        "description": "Timestamps for sentiment data points",
        "items": {"type": "string"},
        "minItems": 10,
        "maxItems": 10000
      },
      "weight_factors": {
        "type": "array",
        "required": false,
        "description": "Importance weights for different sources (0.1-1.0)",
        "items": {"type": "number"},
        "default": None
      }
    },
    "error_messages": [
      "Mismatched array lengths: sentiment_scores, data_sources, and timestamps must have the same length.",
      "Invalid sentiment scores: All scores must be between -1.0 and 1.0.",
      "Invalid timestamps: All timestamps must be in valid ISO 8601 format.",
      "Invalid weight factors: All weights must be between
