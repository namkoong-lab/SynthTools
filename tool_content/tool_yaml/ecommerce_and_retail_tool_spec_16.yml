field_name: ecommerce_and_retail
subfield: Product Catalog Management
task: Product Information Creation and Updates
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves medium complexity due to the need to coordinate data validation, content generation, inventory synchronization, and multi-channel publishing workflows. While individual operations are straightforward, the interdependencies between product attributes, pricing rules, and catalog consistency requirements create moderate coordination challenges.

  **STEP 2 — Set a tool budget**

  Given the medium complexity, I'll target 12 tools to cover the core workflows: data validation, content creation, image processing, pricing management, inventory integration, and catalog publication.

  **STEP 3 — List all tool names and dependencies**

  1. **Product Data Validator** - Consumes: raw product data → Produces: validated product records
  2. **Product Content Generator** - Consumes: product specs → Produces: descriptions, titles, keywords
  3. **Image Processor** - Consumes: raw images → Produces: optimized product images
  4. **Pricing Calculator** - Consumes: cost data, rules → Produces: calculated prices
  5. **Inventory Sync Checker** - Consumes: product IDs → Produces: stock status validation
  6. **Category Classifier** - Consumes: product attributes → Produces: category assignments
  7. **SKU Generator** - Consumes: product details → Produces: unique SKU codes
  8. **Bulk Import Processor** - Consumes: CSV/Excel files → Produces: processed product batches
  9. **Product Comparison Tool** - Consumes: multiple product records → Produces: difference reports
  10. **Catalog Publisher** - Consumes: finalized products → Produces: multi-channel catalog updates
  11. **Product Search Optimizer** - Consumes: product data → Produces: SEO-optimized metadata
  12. **Quality Assurance Scanner** - Consumes: product records → Produces: quality issue reports

  **STEP 4 — Multi-tool plans**

  **Simple workflows:**
  - Single product creation: SKU Generator → Product Data Validator → Product Content Generator → Catalog Publisher
  - Image optimization: Image Processor → Product Data Validator → Catalog Publisher

  **Medium workflows:**
  - New product launch: SKU Generator → Product Data Validator → Category Classifier → Product Content Generator → Image Processor → Pricing Calculator → Product Search Optimizer → Catalog Publisher
  - Inventory synchronization: Inventory Sync Checker → Product Data Validator → Product Comparison Tool → Catalog Publisher

  **Complex workflows:**
  - Bulk catalog update: Bulk Import Processor → Product Data Validator → Category Classifier → Product Content Generator → Image Processor → Pricing Calculator → Inventory Sync Checker → Product Search Optimizer → Quality Assurance Scanner → Product Comparison Tool → Catalog Publisher
  - Complete catalog audit: Quality Assurance Scanner → Product Comparison Tool → Product Data Validator → Category Classifier → Pricing Calculator → Inventory Sync Checker → Product Search Optimizer → Catalog Publisher

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Product Data Validator",
    "tool_description": "Validates product information against predefined schemas and business rules to ensure data quality and completeness before catalog updates.",
    "parameters": {
      "product_name": {
        "type": "string",
        "required": true,
        "description": "The name of the product to validate"
      },
      "product_attributes": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of product attributes in key:value format"
      },
      "validation_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Validation strictness: basic, standard, or strict"
      }
    },
    "error_messages": [
      "Missing required fields: Ensure product_name and product_attributes are provided.",
      "Invalid validation level: Use one of [basic, standard, strict].",
      "Malformed attributes: Attributes must be in key:value string format.",
      "Empty product data: Product name cannot be empty or null."
    ],
    "usage": "Provide product_name and product_attributes array, optionally set validation_level. Returns validation status and any detected issues.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: passed, failed, or warning"
      },
      "issues_found": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of validation issues or errors detected"
      },
      "completeness_score": {
        "type": "number",
        "description": "Data completeness percentage (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Product Content Generator",
    "tool_description": "Generates marketing copy, product descriptions, and SEO-friendly content based on product specifications and target audience.",
    "parameters": {
      "product_name": {
        "type": "string",
        "required": true,
        "description": "Name of the product"
      },
      "product_specifications": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Technical specifications and features"
      },
      "target_audience": {
        "type": "string",
        "required": true,
        "description": "Target customer segment: consumer, business, premium, budget"
      },
      "content_type": {
        "type": "string",
        "required": true,
        "description": "Type of content: description, title, bullet_points, or all"
      },
      "tone": {
        "type": "string",
        "required": false,
        "default": "professional",
        "description": "Content tone: casual, professional, technical, or marketing"
      },
      "max_word_count": {
        "type": "integer",
        "required": false,
        "default": 200,
        "description": "Maximum word count for generated content"
      },
      "include_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": "None",
        "description": "SEO keywords to incorporate"
      }
    },
    "error_messages": [
      "Missing required parameters: product_name, product_specifications, target_audience, and content_type are required.",
      "Invalid target audience: Use one of [consumer, business, premium, budget].",
      "Invalid content type: Use one of [description, title, bullet_points, all].",
      "Invalid tone: Use one of [casual, professional, technical, marketing].",
      "Invalid word count: max_word_count must be between 50 and 1000.",
      "Empty specifications: product_specifications array cannot be empty."
    ],
    "usage": "Specify product details, target audience, and desired content type. Optionally customize tone, word count, and SEO keywords for tailored content generation.",
    "output_details": {
      "generated_title": {
        "type": "string",
        "description": "SEO-optimized product title"
      },
      "generated_description": {
        "type": "string",
        "description": "Marketing description of the product"
      },
      "bullet_points": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Key feature bullet points"
      },
      "word_count": {
        "type": "integer",
        "description": "Total word count of generated content"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Image Processor",
    "tool_description": "Processes and optimizes product images for various catalog channels, including resizing, format conversion, and quality enhancement.",
    "parameters": {
      "image_urls": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "URLs or paths to source images"
      },
      "output_formats": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Desired output formats: jpg, png, webp"
      },
      "resize_dimensions": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": "None",
        "description": "Target dimensions in WxH format, e.g., 800x600"
      },
      "quality_level": {
        "type": "integer",
        "required": false,
        "default": 85,
        "description": "Image quality percentage (1-100)"
      }
    },
    "error_messages": [
      "Invalid image URLs: Ensure all URLs are accessible and point to valid image files.",
      "Unsupported format: Use supported formats [jpg, png, webp].",
      "Invalid dimensions: Use format WxH (e.g., 800x600) with positive integers.",
      "Invalid quality level: Quality must be between 1 and 100.",
      "Empty image array: At least one image URL must be provided."
    ],
    "usage": "Provide image_urls and desired output_formats. Optionally specify resize_dimensions and quality_level for customized processing.",
    "output_details": {
      "processed_images": {
        "type": "array",
        "items": {"type": "string"},
        "description": "URLs or paths to processed images"
      },
      "processing_summary": {
        "type": "string",
        "description": "Summary of processing operations performed"
      },
      "file_sizes": {
        "type": "array",
        "items": {"type": "number"},
        "description": "File sizes in KB of processed images"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Pricing Calculator",
    "tool_description": "Calculates product prices based on cost data, markup rules, competitive analysis, and promotional strategies.",
    "parameters": {
      "base_cost": {
        "type": "number",
        "required": true,
        "description": "Base cost of the product"
      },
      "markup_percentage": {
        "type": "number",
        "required": true,
        "description": "Markup percentage to apply"
      },
      "currency": {
        "type": "string",
        "required": true,
        "description": "Currency code (USD, EUR, GBP, etc.)"
      },
      "pricing_strategy": {
        "type": "string",
        "required": true,
        "description": "Pricing approach: competitive, premium, value, penetration"
      },
      "competitor_prices": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "default": "None",
        "description": "Array of competitor prices for comparison"
      },
      "discount_percentage": {
        "type": "number",
        "required": false,
        "default": 0,
        "description": "Promotional discount to apply (0-50)"
      },
      "minimum_margin": {
        "type": "number",
        "required": false,
        "default": 10,
        "description": "Minimum profit margin percentage to maintain"
      }
    },
    "error_messages": [
      "Invalid base cost: Base cost must be a positive number.",
      "Invalid markup: Markup percentage must be between 0 and 500.",
      "Unsupported currency: Use standard currency codes (USD, EUR, GBP, etc.).",
      "Invalid pricing strategy: Use one of [competitive, premium, value, penetration].",
      "Invalid discount: Discount percentage must be between 0 and 50.",
      "Margin violation: Calculated price falls below minimum margin requirement."
    ],
    "usage": "Input base_cost, markup_percentage, currency, and pricing_strategy. Optionally add competitor_prices, discount_percentage, and minimum_margin for advanced pricing.",
    "output_details": {
      "calculated_price": {
        "type": "number",
        "description": "Final calculated selling price"
      },
      "profit_margin": {
        "type": "number",
        "description": "Profit margin percentage"
      },
      "price_positioning": {
        "type": "string",
        "description": "Price position relative to competitors"
      },
      "pricing_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Strategic pricing recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Sync Checker",
    "tool_description": "Validates product availability and stock levels across multiple inventory systems and warehouses.",
    "parameters": {
      "product_skus": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of product SKUs to check"
      },
      "warehouse_locations": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": "None",
        "description": "Specific warehouse locations to check"
      }
    },
    "error_messages": [
      "Invalid SKU format: Ensure SKUs follow the correct format pattern.",
      "SKU not found: One or more SKUs do not exist in the inventory system.",
      "Warehouse not found: Specified warehouse location does not exist.",
      "Empty SKU array: At least one SKU must be provided for checking."
    ],
    "usage": "Provide product_skus array to check inventory status. Optionally specify warehouse_locations for location-specific checks.",
    "output_details": {
      "inventory_status": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Stock status for each SKU: in_stock, low_stock, out_of_stock"
      },
      "stock_quantities": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Current stock quantities for each SKU"
      },
      "sync_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Any synchronization issues detected"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Category Classifier",
    "tool_description": "Automatically assigns products to appropriate catalog categories based on attributes, specifications, and machine learning classification.",
    "parameters": {
      "product_name": {
        "type": "string",
        "required": true,
        "description": "Name of the product to classify"
      },
      "product_attributes": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Product attributes and specifications"
      },
      "existing_categories": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Available catalog categories for classification"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "default": 0.8,
        "description": "Minimum confidence score for automatic classification (0-1)"
      }
    },
    "error_messages": [
      "Missing product information: product_name and product_attributes are required.",
      "Empty categories list: At least one category must be provided in existing_categories.",
      "Invalid confidence threshold: Value must be between 0 and 1.",
      "Insufficient product data: More product attributes needed for accurate classification."
    ],
    "usage": "Input product_name, product_attributes, and existing_categories. Optionally adjust confidence_threshold for classification sensitivity.",
    "output_details": {
      "primary_category": {
        "type": "string",
        "description": "Best matching primary category"
      },
      "secondary_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Additional relevant categories"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for each category suggestion"
      },
      "classification_rationale": {
        "type": "string",
        "description": "Explanation of classification decision"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "SKU Generator",
    "tool_description": "Generates unique SKU codes based on product attributes, category information, and organizational naming conventions.",
    "parameters": {
      "product_name": {
        "type": "string",
        "required": true,
        "description": "Product name for SKU generation"
      },
      "category": {
        "type": "string",
        "required": true,
        "description": "Product category"
      },
      "brand": {
        "type": "string",
        "required": true,
        "description": "Brand name"
      },
      "color": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Product color variant"
      },
      "size": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Product size variant"
      },
      "sku_format": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "SKU format pattern: standard, compact, or custom"
      }
    },
    "error_messages": [
      "Missing required fields: product_name, category, and brand are required.",
      "Invalid SKU format: Use one of [standard, compact, custom].",
      "Empty field values: Required fields cannot be empty or null.",
      "SKU already exists: Generated SKU conflicts with existing product code."
    ],
    "usage": "Provide product_name, category, and brand. Optionally include color, size, and sku_format for variant-specific SKUs.",
    "output_details": {
      "generated_sku": {
        "type": "string",
        "description": "Unique SKU code for the product"
      },
      "sku_components": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Breakdown of SKU components used"
      },
      "uniqueness_verified": {
        "type": "boolean",
        "description": "Whether SKU uniqueness was confirmed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Bulk Import Processor",
    "tool_description": "Processes large batches of product data from CSV, Excel, or JSON files with validation, error handling, and progress tracking.",
    "parameters": {
      "file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the import file"
      },
      "file_format": {
        "type": "string",
        "required": true,
        "description": "File format: csv, excel, or json"
      },
      "column_mapping": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Mapping of file columns to product fields"
      },
      "batch_size": {
        "type": "integer",
        "required": false,
        "default": 100,
        "description": "Number of records to process per batch"
      },
      "skip_duplicates": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to skip duplicate product entries"
      },
      "validation_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Validation strictness: basic, standard, or strict"
      },
      "error_threshold": {
        "type": "number",
        "required": false,
        "default": 0.1,
        "description": "Maximum error rate before stopping import (0-1)"
      },
      "auto_fix_errors": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Attempt automatic correction of common errors"
      },
      "update_existing": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Update existing products or create new only"
      },
      "required_fields": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": "None",
        "description": "Fields that must be present for successful import"
      }
    },
    "error_messages": [
      "File not found: Ensure the file_path points to an accessible file.",
      "Unsupported file format: Use one of [csv, excel, json].",
      "Invalid column mapping: Ensure all required fields are mapped correctly.",
      "Batch size out of range: batch_size must be between 1 and 1000.",
      "Invalid error threshold: error_threshold must be between 0 and 1.",
      "Missing required columns: File must contain all specified required_fields.",
      "File format mismatch: File content does not match specified file_format."
    ],
    "usage": "Specify file_path, file_format, and column_mapping for basic import. Configure batch_size, validation settings, and error handling for optimized processing of large datasets.",
    "output_details": {
      "processed_count": {
        "type": "integer",
        "description": "Number of records successfully processed"
      },
      "error_count": {
        "type": "integer",
        "description": "Number of records with errors"
      },
      "skipped_count": {
        "type": "integer",
        "description": "Number of records skipped (duplicates, etc.)"
      },
      "processing_summary": {
        "type": "string",
        "description": "Overall processing results summary"
      },
      "error_details": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed error messages for failed records"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Product Comparison Tool",
    "tool_description": "Compares product records to identify differences, duplicates, and inconsistencies across catalog versions or data sources.",
    "parameters": {
      "source_products": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Source product identifiers or data to compare"
      },
      "target_products": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Target product identifiers or data for comparison"
      },
      "comparison_fields": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Specific fields to compare between products"
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "default": 0.9,
        "description": "Similarity threshold for duplicate detection (0-1)"
      },
      "include_missing": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Include products missing from either source"
      }
    },
    "error_messages": [
      "Empty product arrays: Both source_products and target_products must contain at least one item.",
      "Invalid similarity threshold: Value must be between 0 and 1.",
      "Missing comparison fields: At least one field must be specified for comparison.",
      "Product data format error: Product identifiers must be valid strings."
    ],
    "usage": "Provide source_products and target_products arrays along with comparison_fields. Adjust similarity_threshold for duplicate detection sensitivity.",
    "output_details": {
      "identical_products": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Products that are identical across sources"
      },
      "different_products": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Products with differences in compared fields"
      },
      "missing_products": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Products present in one source but not the other"
      },
      "duplicate_candidates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Products that may be duplicates based on similarity"
      },
      "comparison_summary": {
        "type": "string",
        "description": "Summary of comparison results and statistics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Catalog Publisher",
    "tool_description": "Publishes finalized product information to multiple sales channels and platforms including websites, marketplaces, and mobile apps.",
    "parameters": {
      "product_data": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Product records ready for publishing"
      },
      "target_channels": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Channels to publish to: website, amazon, ebay, mobile_app"
      },
      "publish_mode": {
        "type": "string",
        "required": true,
        "description": "Publishing mode: immediate, scheduled, or draft"
      },
      "schedule_time": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Scheduled publish time in ISO 8601 format",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Empty product data: At least one product record must be provided.",
      "Invalid target channels: Use supported channels [website, amazon, ebay, mobile_app].",
      "Invalid publish mode: Use one of [immediate, scheduled, draft].",
      "Missing schedule time: schedule_time is required when publish_mode is 'scheduled'.",
      "Invalid schedule format: Use ISO 8601 date-time format for schedule_time."
    ],
    "usage": "Provide product_data and target_channels, specify publish_mode. For scheduled publishing, include schedule_time in ISO 8601 format.",
    "output_details": {
      "publish_status": {
        "type": "string",
        "description": "Overall publishing status: success, partial, or failed"
      },
      "published_channels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Channels where publishing succeeded"
      },
      "failed_channels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Channels where publishing failed"
      },
      "publish_summary": {
        "type": "string",
        "description": "Detailed summary of publishing results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Product Search Optimizer",
    "tool_description": "Optimizes product metadata for search engines and internal site search, including keyword optimization and SEO recommendations.",
    "parameters": {
      "product_name": {
        "type": "string",
        "required": true,
        "description": "Product name to optimize"
      },
      "product_description": {
        "type": "string",
        "required": true,
        "description": "Product description text"
      },
      "target_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Keywords to optimize for"
      },
      "optimization_focus": {
        "type": "string",
        "required": false,
        "default": "balanced",
        "description": "Optimization focus: seo, conversion, or balanced"
      }
    },
    "error_messages": [
      "Missing required content: product_name and product_description cannot be empty.",
      "Empty keywords: At least one target keyword must be provided.",
      "Invalid optimization focus: Use one of [seo, conversion, balanced].",
      "Content too short: Product description must be at least 50 characters."
    ],
    "usage": "Input product_name, product_description, and target_keywords. Set optimization_focus to prioritize SEO, conversion, or balanced approach.",
    "output_details": {
      "optimized_title": {
        "type": "string",
        "description": "SEO-optimized product title"
      },
      "optimized_description": {
        "type": "string",
        "description": "Search-optimized product description"
      },
      "meta_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended meta keywords"
      },
      "seo_score": {
        "type": "number",
        "description": "SEO optimization score (0-100)"
      },
      "optimization_suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Additional optimization recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Quality Assurance Scanner",
    "tool_description": "Scans product records for quality issues, inconsistencies, missing information, and compliance violations before publication.",
    "parameters": {
      "product_records": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Product records to scan for quality issues"
      },
      "scan_categories": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Quality categories to check: completeness, accuracy, compliance, formatting"
      },
      "severity_level": {
        "type": "string",
        "required": false,
        "default": "medium",
        "description": "Issue detection sensitivity: low, medium, or high"
      },
      "compliance_rules": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": "None",
        "description": "Specific compliance rules to validate against"
      },
      "auto_fix_minor": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Automatically fix minor formatting issues"
      }
    },
    "error_messages": [
      "Empty product records: At least one product record must be provided for scanning.",
      "Invalid scan categories: Use supported categories [completeness, accuracy, compliance, formatting].",
      "Invalid severity level: Use one of [low, medium, high].",
      "Malformed product data: Product records must be in valid format for analysis."
    ],
    "usage": "Provide product_records and specify scan_categories for quality checking. Adjust severity_level and enable auto_fix_minor for automated corrections.",
    "output_details": {
      "quality_score": {
        "type": "number",
        "description": "Overall quality score (0-100)"
      },
      "issues_found": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of quality issues detected"
      },
      "critical_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Critical issues requiring immediate attention"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommendations for quality improvement"
      },
      "scan_summary": {
        "type": "string",
        "description": "Summary of quality scan results"
      }
    }
  }
  ```
