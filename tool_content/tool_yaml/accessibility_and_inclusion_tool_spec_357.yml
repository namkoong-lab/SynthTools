field_name: accessibility_and_inclusion
subfield: Physical Space and Architecture Accessibility
task: Design and plan accessible building modifications and renovations
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to its broad scope involving multiple building systems, strict regulatory compliance requirements, complex interdependencies between structural and accessibility modifications, high risk of costly errors or safety issues, and extensive data requirements including architectural drawings, building codes, and user needs assessments.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'll target **17 tools** to cover the comprehensive workflow from initial assessment through final compliance verification.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Building Assessment Scanner** - Consumes: building details → Produces: accessibility audit data
  2. **Code Compliance Checker** - Consumes: building specs, jurisdiction → Produces: compliance requirements
  3. **Space Layout Analyzer** - Consumes: floor plans, dimensions → Produces: spatial analysis data
  4. **Accessibility Gap Identifier** - Consumes: audit data, requirements → Produces: gap analysis
  5. **Modification Cost Estimator** - Consumes: modification specs → Produces: cost estimates
  6. **Priority Ranking Tool** - Consumes: gaps, costs, impact scores → Produces: prioritized recommendations
  7. **Design Solution Generator** - Consumes: gaps, constraints → Produces: design alternatives
  8. **Technical Specification Builder** - Consumes: design solutions → Produces: detailed specifications
  9. **Compliance Validator** - Consumes: specifications, codes → Produces: compliance verification
  10. **Timeline Scheduler** - Consumes: modifications, dependencies → Produces: project schedule
  11. **Budget Planner** - Consumes: costs, timeline → Produces: budget allocation
  12. **Vendor Matcher** - Consumes: specifications, location → Produces: vendor recommendations
  13. **Impact Assessment Tool** - Consumes: modifications, occupancy → Produces: disruption analysis
  14. **Documentation Generator** - Consumes: specifications, compliance data → Produces: project documentation
  15. **Progress Tracker** - Consumes: schedule, milestones → Produces: progress reports
  16. **Quality Assurance Checker** - Consumes: completed work specs → Produces: QA verification
  17. **Final Certification Tool** - Consumes: all project data → Produces: compliance certification

  **STEP 4 — Multi-tool plans**

  **Simple plans (2-4 tools):**
  - Quick compliance check: Code Compliance Checker → Compliance Validator
  - Basic cost analysis: Building Assessment Scanner → Modification Cost Estimator

  **Medium plans (5-8 tools):**
  - Standard renovation planning: Building Assessment Scanner → Code Compliance Checker → Accessibility Gap Identifier → Design Solution Generator → Technical Specification Builder → Compliance Validator
  - Budget and timeline planning: Modification Cost Estimator → Priority Ranking Tool → Timeline Scheduler → Budget Planner

  **Complex plans (9+ tools):**
  - Full project lifecycle: Building Assessment Scanner → Code Compliance Checker → Space Layout Analyzer → Accessibility Gap Identifier → Priority Ranking Tool → Design Solution Generator → Technical Specification Builder → Compliance Validator → Timeline Scheduler → Budget Planner → Vendor Matcher → Impact Assessment Tool → Documentation Generator → Progress Tracker → Quality Assurance Checker → Final Certification Tool

  **STEP 5 — Tools**

  ```json
  {
    "tool_name": "Building Assessment Scanner",
    "tool_description": "Conducts comprehensive accessibility audits of existing buildings, evaluating entrances, pathways, restrooms, elevators, and other key areas against accessibility standards.",
    "parameters": {
      "building_type": {
        "type": "string",
        "required": true,
        "description": "Type of building (office, retail, residential, educational, healthcare, hospitality, industrial, mixed-use)"
      },
      "floor_count": {
        "type": "integer",
        "required": true,
        "description": "Total number of floors in the building"
      },
      "total_square_footage": {
        "type": "number",
        "required": true,
        "description": "Total building square footage"
      },
      "construction_year": {
        "type": "integer",
        "required": true,
        "description": "Year the building was constructed"
      },
      "areas_to_assess": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Areas to evaluate (entrance, parking, restrooms, elevators, stairs, hallways, workspaces, emergency_exits)",
        "minItems": 1,
        "maxItems": 15
      }
    },
    "error_messages": [
      "Invalid building type: Must be one of office, retail, residential, educational, healthcare, hospitality, industrial, mixed-use",
      "Invalid floor count: Must be a positive integer between 1 and 200",
      "Invalid square footage: Must be a positive number greater than 100",
      "Invalid construction year: Must be between 1800 and current year",
      "Invalid assessment areas: Must include valid area types from the specified list"
    ],
    "usage": "Specify building characteristics and areas to assess. The tool will evaluate each area against accessibility standards and provide detailed findings.",
    "output_details": {
      "assessment_id": {
        "type": "string",
        "description": "Unique identifier for this assessment"
      },
      "overall_accessibility_score": {
        "type": "number",
        "description": "Overall accessibility rating from 0-100"
      },
      "area_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Accessibility scores for each assessed area"
      },
      "critical_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of critical accessibility violations found"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Prioritized list of improvement recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Code Compliance Checker",
    "tool_description": "Validates building designs and modifications against relevant accessibility codes including ADA, local building codes, and international standards.",
    "parameters": {
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction (city, state/province, country) where building is located"
      },
      "building_use": {
        "type": "string",
        "required": true,
        "description": "Primary building use classification (assembly, business, educational, factory, hazardous, institutional, mercantile, residential, storage, utility)"
      },
      "occupancy_load": {
        "type": "integer",
        "required": true,
        "description": "Maximum expected occupancy count"
      },
      "applicable_standards": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Standards to check against (ADA, IBC, local_code, AODA, DDA, EN301549)",
        "minItems": 1,
        "maxItems": 10
      },
      "modification_type": {
        "type": "string",
        "required": true,
        "description": "Type of work being performed (new_construction, major_renovation, minor_modification, tenant_improvement)"
      },
      "budget_threshold": {
        "type": "number",
        "required": false,
        "description": "Project budget amount for determining alteration requirements",
        "default": null
      }
    },
    "error_messages": [
      "Invalid jurisdiction: Provide a valid city, state/province, or country name",
      "Invalid building use: Must be one of the specified building use classifications",
      "Invalid occupancy load: Must be a positive integer between 1 and 50000",
      "Invalid standards: Must include recognized accessibility standards",
      "Invalid modification type: Must be one of new_construction, major_renovation, minor_modification, tenant_improvement",
      "Invalid budget threshold: Must be a positive number if provided"
    ],
    "usage": "Specify the building location, use type, occupancy, relevant standards, and modification scope. The tool will return applicable code requirements and compliance thresholds.",
    "output_details": {
      "compliance_report_id": {
        "type": "string",
        "description": "Unique identifier for this compliance check"
      },
      "required_standards": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of applicable accessibility standards"
      },
      "mandatory_requirements": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of mandatory accessibility requirements"
      },
      "alteration_thresholds": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Budget or scope thresholds that trigger additional requirements"
      },
      "permit_requirements": {
        "type": "boolean",
        "description": "Whether building permits are required for this work"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Space Layout Analyzer",
    "tool_description": "Analyzes spatial dimensions and layout configurations to identify accessibility barriers and opportunities for improvement.",
    "parameters": {
      "room_dimensions": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Array of room dimensions in feet [length, width, height]",
        "minItems": 3,
        "maxItems": 3
      },
      "door_widths": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Array of door widths in inches",
        "minItems": 1,
        "maxItems": 20
      },
      "hallway_widths": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Array of hallway widths in inches",
        "minItems": 1,
        "maxItems": 20
      },
      "threshold_heights": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Array of threshold heights in inches",
        "default": null
      },
      "turning_space_available": {
        "type": "boolean",
        "required": true,
        "description": "Whether adequate turning space exists for wheelchairs"
      }
    },
    "error_messages": [
      "Invalid room dimensions: Must provide exactly 3 dimensions (length, width, height) as positive numbers",
      "Invalid door widths: All door widths must be positive numbers between 12 and 120 inches",
      "Invalid hallway widths: All hallway widths must be positive numbers between 24 and 240 inches",
      "Invalid threshold heights: All threshold heights must be non-negative numbers less than 6 inches",
      "Missing required parameter: turning_space_available must be specified as true or false"
    ],
    "usage": "Input spatial measurements for rooms, doors, hallways and other elements. The tool will analyze compliance with accessibility clearance and maneuvering space requirements.",
    "output_details": {
      "analysis_id": {
        "type": "string",
        "description": "Unique identifier for this spatial analysis"
      },
      "compliant_doors": {
        "type": "integer",
        "description": "Number of doors meeting width requirements"
      },
      "non_compliant_doors": {
        "type": "integer",
        "description": "Number of doors not meeting width requirements"
      },
      "adequate_hallways": {
        "type": "integer",
        "description": "Number of hallways with sufficient width"
      },
      "spatial_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified spatial accessibility violations"
      },
      "improvement_opportunities": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggested spatial improvements for better accessibility"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Accessibility Gap Identifier",
    "tool_description": "Compares current building conditions against accessibility requirements to identify specific gaps and non-compliance issues.",
    "parameters": {
      "assessment_data": {
        "type": "string",
        "required": true,
        "description": "Assessment ID from Building Assessment Scanner results"
      },
      "compliance_requirements": {
        "type": "string",
        "required": true,
        "description": "Compliance report ID from Code Compliance Checker results"
      },
      "priority_areas": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Areas to prioritize in gap analysis (entrance, restrooms, parking, elevators, emergency_egress)",
        "default": null
      },
      "severity_filter": {
        "type": "string",
        "required": false,
        "description": "Minimum severity level to include (low, medium, high, critical)",
        "default": "low"
      }
    },
    "error_messages": [
      "Invalid assessment data: Provide a valid assessment ID from Building Assessment Scanner",
      "Invalid compliance requirements: Provide a valid compliance report ID from Code Compliance Checker",
      "Invalid priority areas: Must specify recognized building areas if provided",
      "Invalid severity filter: Must be one of low, medium, high, critical"
    ],
    "usage": "Provide assessment and compliance data IDs from previous tool outputs. Optionally specify priority areas and severity filtering to focus the gap analysis.",
    "output_details": {
      "gap_analysis_id": {
        "type": "string",
        "description": "Unique identifier for this gap analysis"
      },
      "total_gaps_found": {
        "type": "integer",
        "description": "Total number of accessibility gaps identified"
      },
      "critical_gaps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of critical accessibility gaps requiring immediate attention"
      },
      "high_priority_gaps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of high priority gaps that should be addressed soon"
      },
      "medium_priority_gaps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of medium priority gaps for future consideration"
      },
      "estimated_users_affected": {
        "type": "integer",
        "description": "Estimated number of users impacted by identified gaps"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Modification Cost Estimator",
    "tool_description": "Calculates estimated costs for various accessibility modifications including materials, labor, permits, and associated expenses.",
    "parameters": {
      "modification_types": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Types of modifications needed (ramp, elevator, door_widening, restroom_renovation, parking_modification, signage, flooring, lighting)",
        "minItems": 1,
        "maxItems": 15
      },
      "building_location": {
        "type": "string",
        "required": true,
        "description": "Geographic location for regional cost adjustments (city, state format)"
      },
      "square_footage_affected": {
        "type": "number",
        "required": true,
        "description": "Total square footage impacted by modifications"
      },
      "labor_rate_region": {
        "type": "string",
        "required": true,
        "description": "Labor market region (urban, suburban, rural)"
      },
      "project_timeline": {
        "type": "string",
        "required": true,
        "description": "Desired project completion timeline (rush, standard, extended)"
      },
      "quality_level": {
        "type": "string",
        "required": false,
        "description": "Quality level for materials and finishes (basic, standard, premium)",
        "default": "standard"
      }
    },
    "error_messages": [
      "Invalid modification types: Must specify recognized modification categories",
      "Invalid building location: Provide location in 'city, state' format",
      "Invalid square footage: Must be a positive number greater than 0",
      "Invalid labor rate region: Must be one of urban, suburban, rural",
      "Invalid project timeline: Must be one of rush, standard, extended",
      "Invalid quality level: Must be one of basic, standard, premium"
    ],
    "usage": "Specify the types of accessibility modifications needed, location, affected area, and project parameters. The tool will provide detailed cost estimates with breakdowns.",
    "output_details": {
      "estimate_id": {
        "type": "string",
        "description": "Unique identifier for this cost estimate"
      },
      "total_estimated_cost": {
        "type": "number",
        "description": "Total estimated project cost in USD"
      },
      "materials_cost": {
        "type": "number",
        "description": "Estimated cost for materials"
      },
      "labor_cost": {
        "type": "number",
        "description": "Estimated cost for labor"
      },
      "permit_fees": {
        "type": "number",
        "description": "Estimated permit and inspection fees"
      },
      "contingency_amount": {
        "type": "number",
        "description": "Recommended contingency amount (typically 10-20% of total)"
      },
      "cost_per_modification": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Individual cost estimates for each modification type"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Priority Ranking Tool",
    "tool_description": "Ranks accessibility modifications by priority based on impact, cost, regulatory requirements, and user benefit to optimize implementation sequence.",
    "parameters": {
      "gap_analysis_id": {
        "type": "string",
        "required": true,
        "description": "Gap analysis ID from Accessibility Gap Identifier results"
      },
      "cost_estimate_id": {
        "type": "string",
        "required": true,
        "description": "Cost estimate ID from Modification Cost Estimator results"
      },
      "available_budget": {
        "type": "number",
        "required": true,
        "description": "Total available budget for accessibility improvements"
      },
      "implementation_phases": {
        "type": "integer",
        "required": true,
        "description": "Number of phases to divide the work into (1-5)"
      },
      "user_volume": {
        "type": "integer",
        "required": true,
        "description": "Average daily users of the facility"
      },
      "regulatory_deadline": {
        "type": "string",
        "required": false,
        "description": "Deadline for regulatory compliance if applicable",
        "format": "date-time",
        "default": null
      },
      "weighting_factors": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Custom weighting [legal_compliance, user_impact, cost_efficiency, implementation_ease] (0-1 each)",
        "minItems": 4,
        "maxItems": 4,
        "default": [0.4, 0.3, 0.2, 0.1]
      }
    },
    "error_messages": [
      "Invalid gap analysis ID: Provide a valid ID from Accessibility Gap Identifier",
      "Invalid cost estimate ID: Provide a valid ID from Modification Cost Estimator",
      "Invalid available budget: Must be a positive number greater than 0",
      "Invalid implementation phases: Must be an integer between 1 and 5",
      "Invalid user volume: Must be a positive integer",
      "Invalid regulatory deadline: Must be a valid future date-time if provided",
      "Invalid weighting factors: Must provide exactly 4 factors between 0 and 1 that sum to 1.0"
    ],
    "usage": "Input gap analysis and cost estimate IDs along with budget and timeline constraints. Optionally customize priority weighting factors to match organizational priorities.",
    "output_details": {
      "priority_ranking_id": {
        "type": "string",
        "description": "Unique identifier for this priority ranking"
      },
      "phase_1_modifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Highest priority modifications for immediate implementation"
      },
      "phase_2_modifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Second priority modifications"
      },
      "phase_3_modifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Third priority modifications if applicable"
      },
      "budget_allocation": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Recommended budget allocation per phase"
      },
      "roi_analysis": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Return on investment scores for each modification"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Design Solution Generator",
    "tool_description": "Generates specific design alternatives and technical solutions for addressing identified accessibility gaps within budget and space constraints.",
    "parameters": {
      "gap_type": {
        "type": "string",
        "required": true,
        "description": "Type of accessibility gap to solve (entrance, doorway, restroom, elevator, parking, pathway, signage, emergency_egress)"
      },
      "available_space": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Available space dimensions in feet [length, width, height]",
        "minItems": 3,
        "maxItems": 3
      },
      "budget_constraint": {
        "type": "number",
        "required": true,
        "description": "Maximum budget available for this specific solution"
      },
      "building_constraints": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Structural or regulatory constraints (historic_building, load_bearing_walls, zoning_restrictions, utility_conflicts)",
        "default": null
      },
      "user_requirements": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Specific user needs to address (wheelchair_access, visual_impairment, hearing_impairment, mobility_assistance, cognitive_support)",
        "minItems": 1,
        "maxItems": 10
      }
    },
    "error_messages": [
      "Invalid gap type: Must be one of entrance, doorway, restroom, elevator, parking, pathway, signage, emergency_egress",
      "Invalid available space: Must provide exactly 3 positive dimensions in feet",
      "Invalid budget constraint: Must be a positive number greater than 0",
      "Invalid building constraints: Must specify recognized constraint types if provided",
      "Invalid user requirements: Must specify recognized accessibility user needs"
    ],
    "usage": "Specify the accessibility gap type, available space, budget, and user requirements. Optionally include building constraints. The tool will generate feasible design alternatives.",
    "output_details": {
      "solution_id": {
        "type": "string",
        "description": "Unique identifier for this design solution set"
      },
      "recommended_solution": {
        "type": "string",
        "description": "Primary recommended design solution"
      },
      "alternative_solutions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Alternative design options if primary solution is not feasible"
      },
      "estimated_cost": {
        "type": "number",
        "description": "Estimated cost for the recommended solution"
      },
      "implementation_complexity": {
        "type": "string",
        "description": "Implementation difficulty level (simple, moderate, complex)"
      },
      "compliance_standards_met": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of accessibility standards the solution will satisfy"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Technical Specification Builder",
    "tool_description": "Creates detailed technical specifications, drawings references, and material lists for approved accessibility design solutions.",
    "parameters": {
      "solution_id": {
        "type": "string",
        "required": true,
        "description": "Design solution ID from Design Solution Generator results"
      },
      "specification_detail_level": {
        "type": "string",
        "required": true,
        "description": "Level of detail required (conceptual, design_development, construction_documents)"
      },
      "include_materials_list": {
        "type": "boolean",
        "required": true,
        "description": "Whether to include detailed materials and quantities list"
      },
      "include_installation_notes": {
        "type": "boolean",
        "required": true,
        "description": "Whether to include installation guidelines and notes"
      },
      "local_code_references": {
        "type": "boolean",
        "required": true,
        "description": "Whether to include local building code references"
      },
      "vendor_specifications": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include specific vendor product specifications",
        "default": false
      },
      "drawing_format": {
        "type": "string",
        "required": false,
        "description": "Preferred technical drawing format (CAD, PDF, hand_sketch)",
        "default": "PDF"
      },
      "measurement_units": {
        "type": "string",
        "required": false,
        "description": "Measurement system to use (imperial, metric)",
        "default": "imperial"
      }
    },
    "error_messages": [
      "Invalid solution ID: Provide a valid solution ID from Design Solution Generator",
      "Invalid specification detail level: Must be one of conceptual, design_development, construction_documents",
      "Invalid drawing format: Must be one of CAD, PDF, hand_sketch",
      "Invalid measurement units: Must be either imperial or metric",
      "Missing required boolean parameters: All boolean parameters must be explicitly set to true or false"
    ],
    "usage": "Input a design solution ID and specify the required level of detail and included elements. The tool will generate comprehensive technical specifications for the accessibility solution.",
    "output_details": {
      "specification_id": {
        "type": "string",
        "description": "Unique identifier for this technical specification"
      },
      "specification_document": {
        "type": "string",
        "description": "Main technical specification document content"
      },
      "materials_list": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed list of required materials and quantities"
      },
      "installation_steps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Step-by-step installation instructions"
      },
      "code_compliance_notes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Relevant building code requirements and compliance notes"
      },
      "quality_control_points": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Key quality control checkpoints during implementation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Validator",
    "tool_description": "Validates technical specifications against applicable accessibility codes and standards to ensure full compliance before implementation.",
    "parameters": {
      "specification_id": {
        "type": "string",
        "required": true,
        "description": "Technical specification ID from Technical Specification Builder results"
      },
      "validation_standards": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Standards to validate against (ADA, IBC, local_building_code, AODA, DDA, EN301549, ISO21542)",
        "minItems": 1,
        "maxItems": 10
      },
      "jurisdiction_code": {
        "type": "string",
        "required": true,
        "description": "Local jurisdiction code or identifier for regional requirements"
      },
      "validation_scope": {
        "type": "string",
        "required": true,
        "description": "Scope of validation (design_only, materials_only, installation_only, comprehensive)"
      }
    },
    "error_messages": [
      "Invalid specification ID: Provide a valid specification ID from Technical Specification Builder",
      "Invalid validation standards: Must include recognized accessibility standards",
      "Invalid jurisdiction code: Provide a valid local jurisdiction identifier",
      "Invalid validation scope: Must be one of design_only, materials_only, installation_only, comprehensive"
    ],
    "usage": "Input a technical specification ID and select the standards and scope for validation. The tool will verify compliance and identify any remaining issues.",
    "output_details": {
      "validation_id": {
        "type": "string",
        "description": "Unique identifier for this compliance validation"
      },
      "overall_compliance_status": {
        "type": "boolean",
        "description": "Whether the specification meets all compliance requirements"
      },
      "compliant_standards": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of standards that are fully met"
      },
      "non_compliant_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of specification items that do not meet compliance requirements"
      },
      "recommended_corrections": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific recommendations to achieve full compliance"
      },
      "approval_ready": {
        "type": "boolean",
        "description": "Whether the specification is ready for permit submission"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Timeline Scheduler",
    "tool_description": "Creates detailed project schedules for accessibility modifications including task dependencies, resource allocation, and milestone tracking.",
    "parameters": {
      "modification_list": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of accessibility modifications to schedule",
        "minItems": 1,
        "maxItems": 50
      },
      "project_start_date": {
        "type": "string",
        "required": true,
        "description": "Planned project start date",
        "format": "date-time"
      },
      "required_completion_date": {
        "type": "string",
        "required": false,
        "description": "Required project completion deadline if applicable",
        "format": "date-time",
        "default": null
      },
      "working_days_per_week": {
        "type": "integer",
        "required": false,
        "description": "Number of working days per week (1-7)",
        "default": 5
      },
      "crew_availability": {
        "type": "string",
        "required": true,
        "description": "Crew availability level (limited, standard, extended)"
      },
      "building_occupancy_constraints": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Occupancy restrictions (business_hours_only, weekends_only, evenings_only, summer_break, no_restrictions)",
        "default": null
      },
      "permit_lead_time_days": {
        "type": "integer",
        "required": false,
