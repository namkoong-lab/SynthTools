field_name: academic_publishing_and_citations
subfield: peer_review_management
task: Manuscript submission and initial screening
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves medium complexity due to multiple coordinated subprocesses (submission handling, reviewer assignment, conflict detection, automated screening), moderate data requirements (manuscript files, reviewer databases, journal policies), and significant dependencies between screening steps that affect downstream peer review quality.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty assessment, I'll target 12 tools within the 10-15 range to cover submission processing, reviewer management, screening automation, and coordination workflows.

  ## STEP 3 — List all tool names and dependencies

  **Tools and Dependencies:**
  1. **Manuscript Parser** - Consumes: manuscript files → Produces: structured metadata
  2. **Submission Validator** - Consumes: manuscript data, journal requirements → Produces: validation results
  3. **Author Conflict Scanner** - Consumes: author info, reviewer database → Produces: conflict mappings
  4. **Reviewer Database Query** - Consumes: expertise keywords, availability filters → Produces: candidate reviewers
  5. **Plagiarism Checker** - Consumes: manuscript text, reference databases → Produces: similarity reports
  6. **Format Compliance Checker** - Consumes: manuscript files, style guidelines → Produces: compliance status
  7. **Initial Quality Screener** - Consumes: manuscript content, screening criteria → Produces: quality scores
  8. **Reviewer Assignment Engine** - Consumes: reviewers, conflicts, workloads → Produces: assignments
  9. **Submission Tracker** - Consumes: submission events, status updates → Produces: tracking records
  10. **Editorial Notification System** - Consumes: submission status, recipient lists → Produces: notifications
  11. **Screening Report Generator** - Consumes: all screening results → Produces: comprehensive reports
  12. **Workflow Orchestrator** - Consumes: submission trigger, all tool outputs → Produces: process coordination

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  - Basic submission: Manuscript Parser → Submission Validator → Submission Tracker (3 tools)
  - Format check: Manuscript Parser → Format Compliance Checker → Editorial Notification System (3 tools)

  **Medium Plans:**
  - Standard screening: Manuscript Parser → Submission Validator → Plagiarism Checker → Initial Quality Screener → Screening Report Generator → Editorial Notification System (6 tools)
  - Reviewer preparation: Author Conflict Scanner → Reviewer Database Query → Reviewer Assignment Engine → Editorial Notification System (4 tools)

  **Complex Plans:**
  - Full submission workflow: All 12 tools coordinated by Workflow Orchestrator for complete manuscript intake, screening, and reviewer assignment
  - Multi-stage screening: Manuscript Parser → Submission Validator → Format Compliance Checker → Plagiarism Checker → Initial Quality Screener → Author Conflict Scanner → Reviewer Database Query → Reviewer Assignment Engine → Screening Report Generator → Submission Tracker → Editorial Notification System (11 tools)

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Manuscript Parser",
    "tool_description": "Extracts structured metadata and content from manuscript files including title, abstract, authors, keywords, references, and text sections.",
    "parameters": {
      "manuscript_file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the manuscript file (PDF, DOCX, or LaTeX)"
      },
      "file_format": {
        "type": "string",
        "required": true,
        "description": "Format of the manuscript file: pdf, docx, or latex"
      }
    },
    "error_messages": [
      "File not found: Verify the manuscript_file_path exists and is accessible.",
      "Unsupported format: Use pdf, docx, or latex format only.",
      "File corrupted: The manuscript file appears to be damaged or unreadable.",
      "Parsing failed: Unable to extract content - check file structure and encoding."
    ],
    "usage": "Provide the path to a manuscript file and specify its format. The tool will extract all relevant metadata and content for further processing.",
    "output_details": {
      "title": {
        "type": "string",
        "description": "Extracted manuscript title"
      },
      "abstract": {
        "type": "string",
        "description": "Manuscript abstract text"
      },
      "authors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of author names and affiliations"
      },
      "keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Extracted keywords and subject terms"
      },
      "word_count": {
        "type": "integer",
        "description": "Total word count of the manuscript"
      },
      "reference_count": {
        "type": "integer",
        "description": "Number of references cited"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Submission Validator",
    "tool_description": "Validates manuscript submissions against journal requirements including completeness, author information, and basic eligibility criteria.",
    "parameters": {
      "manuscript_metadata": {
        "type": "string",
        "required": true,
        "description": "JSON string containing parsed manuscript metadata"
      },
      "journal_id": {
        "type": "string",
        "required": true,
        "description": "Identifier for the target journal"
      },
      "submission_type": {
        "type": "string",
        "required": true,
        "description": "Type of submission: research_article, review, case_study, or editorial"
      },
      "required_fields": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Additional required metadata fields for this journal",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid metadata format: Provide manuscript_metadata as valid JSON string.",
      "Unknown journal: The journal_id is not recognized in the system.",
      "Unsupported submission type: Use research_article, review, case_study, or editorial.",
      "Missing required fields: Submission lacks required metadata fields for this journal.",
      "Author information incomplete: All authors must have names and valid affiliations."
    ],
    "usage": "Input parsed manuscript metadata, specify the target journal and submission type. The tool checks against journal-specific requirements and returns validation results.",
    "output_details": {
      "validation_status": {
        "type": "boolean",
        "description": "Whether the submission passes validation"
      },
      "missing_fields": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of missing required fields"
      },
      "warnings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Non-critical issues that should be addressed"
      },
      "eligibility_score": {
        "type": "number",
        "description": "Numeric score (0-100) indicating submission completeness"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Author Conflict Scanner",
    "tool_description": "Identifies potential conflicts of interest between manuscript authors and available reviewers based on institutional affiliations, collaboration history, and declared conflicts.",
    "parameters": {
      "author_names": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of manuscript author names"
      },
      "author_affiliations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Corresponding institutional affiliations for each author"
      },
      "reviewer_pool_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of potential reviewer identifiers to check against"
      },
      "conflict_threshold_years": {
        "type": "integer",
        "required": false,
        "description": "Years to look back for collaboration conflicts (1-10)",
        "default": 5
      }
    },
    "error_messages": [
      "Author list mismatch: Number of author names must match number of affiliations.",
      "Empty reviewer pool: At least one reviewer ID must be provided for conflict checking.",
      "Invalid threshold: conflict_threshold_years must be between 1 and 10.",
      "Database connection failed: Unable to access reviewer or collaboration databases.",
      "Author name format error: Author names must be non-empty strings."
    ],
    "usage": "Provide author names and affiliations along with a pool of potential reviewers. The tool identifies conflicts based on institutional overlap, recent collaborations, and known relationships.",
    "output_details": {
      "conflict_matrix": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Author-reviewer conflict pairs identified"
      },
      "safe_reviewers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Reviewer IDs with no detected conflicts"
      },
      "conflict_reasons": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Explanations for each identified conflict"
      },
      "institutional_overlaps": {
        "type": "integer",
        "description": "Number of same-institution conflicts found"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Reviewer Database Query",
    "tool_description": "Searches the reviewer database to find suitable candidates based on expertise keywords, availability status, current workload, and qualification criteria.",
    "parameters": {
      "expertise_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Keywords describing required expertise areas",
        "minItems": 1,
        "maxItems": 20
      },
      "field_of_study": {
        "type": "string",
        "required": true,
        "description": "Primary academic field or discipline"
      },
      "minimum_review_experience": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of previous reviews completed (0-50)",
        "default": 0
      },
      "maximum_current_load": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of active reviews per reviewer (1-10)",
        "default": 3
      },
      "geographic_preference": {
        "type": "string",
        "required": false,
        "description": "Preferred geographic region: any, north_america, europe, asia, oceania, africa, south_america",
        "default": "any"
      },
      "exclude_recent_authors": {
        "type": "boolean",
        "required": false,
        "description": "Exclude reviewers who published in same area recently",
        "default": false
      },
      "language_requirements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Required languages for review",
        "default": "None"
      }
    },
    "error_messages": [
      "Empty keywords: At least one expertise keyword must be provided.",
      "Invalid field: field_of_study must be a recognized academic discipline.",
      "Parameter out of range: minimum_review_experience (0-50), maximum_current_load (1-10).",
      "Invalid geographic preference: Use any, north_america, europe, asia, oceania, africa, or south_america.",
      "Database query failed: Unable to execute search - check connection and parameters.",
      "No matching reviewers: No reviewers found matching the specified criteria."
    ],
    "usage": "Specify expertise keywords and field of study, optionally filter by experience, workload, geography, and other criteria. The tool returns ranked candidate reviewers with their qualifications.",
    "output_details": {
      "candidate_reviewers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of reviewer IDs matching criteria"
      },
      "match_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Expertise match scores (0-100) for each candidate"
      },
      "availability_status": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Current availability status for each candidate"
      },
      "total_candidates": {
        "type": "integer",
        "description": "Total number of matching reviewers found"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Plagiarism Checker",
    "tool_description": "Analyzes manuscript text for potential plagiarism by comparing against academic databases, published literature, and web sources to identify similarity matches.",
    "parameters": {
      "manuscript_text": {
        "type": "string",
        "required": true,
        "description": "Full text content of the manuscript to check"
      },
      "reference_databases": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Databases to search against: pubmed, arxiv, ieee, scopus, web",
        "default": ["pubmed", "arxiv"]
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum similarity percentage to report (5-50)",
        "default": 15
      },
      "exclude_references": {
        "type": "boolean",
        "required": false,
        "description": "Exclude reference section from plagiarism check",
        "default": true
      },
      "check_self_plagiarism": {
        "type": "boolean",
        "required": false,
        "description": "Check for self-plagiarism from same authors",
        "default": true
      }
    },
    "error_messages": [
      "Empty manuscript text: Provide non-empty text content for analysis.",
      "Invalid database selection: Use valid database names from [pubmed, arxiv, ieee, scopus, web].",
      "Threshold out of range: similarity_threshold must be between 5 and 50.",
      "Text too long: Manuscript text exceeds maximum length limit for processing.",
      "Database access error: Unable to connect to one or more reference databases.",
      "Analysis timeout: Plagiarism check exceeded maximum processing time."
    ],
    "usage": "Input the manuscript text and optionally specify reference databases and similarity threshold. The tool performs comprehensive plagiarism detection and returns detailed similarity reports.",
    "output_details": {
      "overall_similarity_score": {
        "type": "number",
        "description": "Overall similarity percentage (0-100)"
      },
      "flagged_sections": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Text sections with high similarity matches"
      },
      "source_matches": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified source documents with similarities"
      },
      "risk_level": {
        "type": "string",
        "description": "Risk assessment: low, moderate, high, or critical"
      },
      "detailed_matches": {
        "type": "integer",
        "description": "Number of detailed similarity matches found"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Format Compliance Checker",
    "tool_description": "Verifies manuscript formatting against journal style guidelines including citation format, figure placement, reference style, and document structure requirements.",
    "parameters": {
      "manuscript_file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the manuscript file to check"
      },
      "journal_style_guide": {
        "type": "string",
        "required": true,
        "description": "Style guide identifier: apa, mla, chicago, ieee, nature, science, plos, or custom"
      },
      "custom_guidelines": {
        "type": "string",
        "required": false,
        "description": "JSON string of custom formatting rules if journal_style_guide is custom",
        "default": "None"
      }
    },
    "error_messages": [
      "File not accessible: Cannot read manuscript file at specified path.",
      "Unknown style guide: Use apa, mla, chicago, ieee, nature, science, plos, or custom.",
      "Invalid custom guidelines: When using custom style, provide valid JSON guidelines.",
      "Format analysis failed: Unable to parse document structure for compliance checking.",
      "Style guide not loaded: Failed to load specified style guide configuration."
    ],
    "usage": "Provide manuscript file path and specify the target journal's style guide. For custom journals, include specific formatting guidelines. The tool checks all formatting aspects and reports compliance issues.",
    "output_details": {
      "compliance_score": {
        "type": "number",
        "description": "Overall compliance score (0-100)"
      },
      "formatting_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of identified formatting problems"
      },
      "citation_errors": {
        "type": "integer",
        "description": "Number of citation format errors found"
      },
      "reference_errors": {
        "type": "integer",
        "description": "Number of reference list format errors"
      },
      "structure_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Document structure problems identified"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Initial Quality Screener",
    "tool_description": "Performs automated quality assessment of manuscript submissions evaluating novelty, methodology, clarity, significance, and adherence to scientific standards.",
    "parameters": {
      "manuscript_content": {
        "type": "string",
        "required": true,
        "description": "Full manuscript text for quality analysis"
      },
      "research_type": {
        "type": "string",
        "required": true,
        "description": "Type of research: experimental, theoretical, review, case_study, or survey"
      },
      "field_standards": {
        "type": "string",
        "required": true,
        "description": "Academic field for applying appropriate quality criteria"
      },
      "screening_criteria": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific quality aspects to evaluate",
        "default": ["novelty", "methodology", "clarity", "significance"]
      },
      "minimum_quality_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum quality score for acceptance (50-95)",
        "default": 70
      }
    },
    "error_messages": [
      "Empty content: Manuscript content cannot be empty for quality screening.",
      "Invalid research type: Use experimental, theoretical, review, case_study, or survey.",
      "Unknown field: Field standards not recognized for quality assessment.",
      "Invalid criteria: Screening criteria must include valid assessment dimensions.",
      "Threshold out of range: minimum_quality_threshold must be between 50 and 95.",
      "Content too short: Manuscript too brief for meaningful quality assessment."
    ],
    "usage": "Input manuscript content, research type, and field standards. Optionally specify screening criteria and quality threshold. The tool provides comprehensive quality scores and recommendations.",
    "output_details": {
      "overall_quality_score": {
        "type": "number",
        "description": "Overall quality score (0-100)"
      },
      "novelty_score": {
        "type": "number",
        "description": "Novelty and originality score (0-100)"
      },
      "methodology_score": {
        "type": "number",
        "description": "Methodological rigor score (0-100)"
      },
      "clarity_score": {
        "type": "number",
        "description": "Writing clarity and organization score (0-100)"
      },
      "significance_score": {
        "type": "number",
        "description": "Research significance and impact score (0-100)"
      },
      "recommendation": {
        "type": "string",
        "description": "Initial screening recommendation: accept, reject, or needs_review"
      },
      "improvement_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific suggestions for quality improvement"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Reviewer Assignment Engine",
    "tool_description": "Optimally assigns reviewers to manuscripts considering expertise matching, workload balancing, conflict avoidance, and reviewer preferences using assignment algorithms.",
    "parameters": {
      "manuscript_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the manuscript being assigned"
      },
      "candidate_reviewers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of potential reviewer IDs",
        "minItems": 2,
        "maxItems": 50
      },
      "expertise_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": true,
        "description": "Expertise match scores (0-100) corresponding to each candidate"
      },
      "conflict_list": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Reviewer IDs with conflicts of interest",
        "default": "None"
      },
      "current_workloads": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "required": false,
        "description": "Current number of active reviews for each candidate",
        "default": "None"
      },
      "number_of_reviewers": {
        "type": "integer",
        "required": false,
        "description": "Number of reviewers to assign (2-5)",
        "default": 3
      },
      "priority_weight_expertise": {
        "type": "number",
        "required": false,
        "description": "Weight for expertise matching (0.1-1.0)",
        "default": 0.6
      },
      "priority_weight_workload": {
        "type": "number",
        "required": false,
        "description": "Weight for workload balancing (0.1-1.0)",
        "default": 0.4
      },
      "assignment_algorithm": {
        "type": "string",
        "required": false,
        "description": "Assignment method: greedy, hungarian, or genetic",
        "default": "hungarian"
      }
    },
    "error_messages": [
      "Insufficient candidates: Need at least as many candidates as requested reviewers.",
      "Mismatched arrays: candidate_reviewers, expertise_scores, and workloads must have same length.",
      "Invalid reviewer count: number_of_reviewers must be between 2 and 5.",
      "Invalid weights: priority weights must be between 0.1 and 1.0.",
      "Unknown algorithm: Use greedy, hungarian, or genetic assignment method.",
      "Too many conflicts: Not enough conflict-free reviewers available for assignment.",
      "Assignment failed: Unable to find optimal reviewer assignment with given constraints."
    ],
    "usage": "Provide manuscript ID, candidate reviewers with their expertise scores, and optionally conflict lists and workloads. Configure assignment parameters and algorithm. The tool returns optimal reviewer assignments.",
    "output_details": {
      "assigned_reviewers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Selected reviewer IDs for this manuscript"
      },
      "assignment_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Overall assignment score for each selected reviewer"
      },
      "expertise_match_quality": {
        "type": "number",
        "description": "Average expertise match score for assignment (0-100)"
      },
      "workload_balance_score": {
        "type": "number",
        "description": "Workload distribution balance score (0-100)"
      },
      "assignment_confidence": {
        "type": "number",
        "description": "Confidence in assignment quality (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Submission Tracker",
    "tool_description": "Tracks and logs submission events, status changes, and workflow progress throughout the manuscript review process with timestamp recording.",
    "parameters": {
      "submission_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the manuscript submission"
      },
      "event_type": {
        "type": "string",
        "required": true,
        "description": "Type of event: submitted, validated, screened, assigned, reviewed, decided"
      },
      "event_details": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the event or status change"
      },
      "responsible_party": {
        "type": "string",
        "required": false,
        "description": "Person or system responsible for this event",
        "default": "system"
      },
      "additional_metadata": {
        "type": "string",
        "required": false,
        "description": "JSON string with additional event-specific data",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid submission ID: Submission identifier must be a non-empty string.",
      "Unknown event type: Use submitted, validated, screened, assigned, reviewed, or decided.",
      "Empty event details: Event description cannot be empty.",
      "Invalid metadata format: additional_metadata must be valid JSON string or None.",
      "Database update failed: Unable to record tracking event in submission database."
    ],
    "usage": "Provide submission ID, event type, and detailed description. Optionally specify responsible party and additional metadata. The tool logs the event with timestamp for audit trail.",
    "output_details": {
      "tracking_id": {
        "type": "string",
        "description": "Unique identifier for this tracking entry"
      },
      "timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when event was recorded"
      },
      "status_updated": {
        "type": "boolean",
        "description": "Whether submission status was changed by this event"
      },
      "current_status": {
        "type": "string",
        "description": "Current status of the submission after this event"
      },
      "workflow_stage": {
        "type": "string",
        "description": "Current stage in the review workflow"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Editorial Notification System",
    "tool_description": "Sends automated notifications to authors, reviewers, and editors about submission status updates, assignments, and workflow milestones.",
    "parameters": {
      "notification_type": {
        "type": "string",
        "required": true,
        "description": "Type of notification: submission_received, reviewer_assigned, status_update, deadline_reminder"
      },
      "recipient_emails": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Email addresses of notification recipients",
        "minItems": 1,
        "maxItems": 20
      },
      "submission_details": {
        "type": "string",
        "required": true,
        "description": "JSON string containing relevant submission information"
      },
      "message_template": {
        "type": "string",
        "required": false,
        "description": "Custom message template identifier",
        "default": "standard"
      },
      "urgency_level": {
        "type": "string",
        "required": false,
        "description": "Priority level: low, normal, high, urgent",
        "default": "normal"
      },
      "include_attachments": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include relevant documents as attachments",
        "default": false
      }
    },
    "error_messages": [
      "Invalid notification type: Use submission_received, reviewer_assigned, status_update, or deadline_reminder.",
      "No recipients: At least one valid email address must be provided.",
      "Invalid email format: One or more recipient email addresses are malformed.",
      "Invalid submission details: submission_details must be valid JSON string.",
      "Unknown urgency level: Use low, normal, high, or urgent.",
      "Email delivery failed: Unable to send notification to one or more recipients.",
      "Template not found: Specified message template does not exist."
    ],
    "usage": "Specify notification type and recipient emails along with submission details. Optionally customize template, urgency, and attachments. The tool sends appropriate notifications to all recipients.",
    "output_details": {
      "notification_id": {
        "type": "string",
        "description": "Unique identifier for this notification batch"
      },
      "delivery_status": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Delivery status for each recipient email"
      },
      "sent_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when notifications were sent"
      },
      "successful_deliveries": {
        "type": "integer",
        "description": "Number of successfully delivered notifications"
      },
      "failed_deliveries": {
        "type": "integer",
        "description": "Number of failed notification deliveries"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Screening Report Generator",
    "tool_description": "Compiles comprehensive screening reports by aggregating results from validation, plagiarism checking, quality assessment, and format compliance into formatted summaries.",
    "parameters": {
      "submission_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the manuscript submission"
      },
      "validation_results": {
        "type": "string",
        "required": true,
        "description": "JSON string containing submission validation results"
      },
      "plagiarism_results": {
        "type": "string",
        "required": true,
        "description": "JSON string containing plagiarism check results"
      },
      "quality_results": {
        "type": "string",
        "required": true,
        "description": "JSON string containing quality screening results"
      },
      "format_results": {
        "type": "string",
        "required": true,
        "description": "JSON string containing format compliance results"
      },
      "reviewer_assignment": {
        "type": "string",
        "required": false,
        "description": "JSON string containing reviewer assignment information",
        "default": "None"
      },
      "report_format": {
        "type": "string",
        "required": false,
        "description": "Output format: summary, detailed, or executive",
        "default": "detailed"
      },
      "include_recommendations": {
        "type": "boolean",
        "required": false,
        "description
