field_name: customer_support
subfield: ticket_management
task: Assign tickets to appropriate agents based on skills and workload
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task has medium difficulty. It requires coordinating multiple factors (agent skills, current workloads, ticket priorities, SLA requirements) with moderate complexity in matching logic and workload balancing, but the core assignment process is well-defined with clear success metrics.

  **STEP 2 — Set a tool budget**

  Given the medium complexity, I'll target 12 tools to cover ticket analysis, agent management, workload tracking, assignment logic, and monitoring components.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Ticket Analyzer** - Consumes: ticket data → Produces: categorized ticket attributes
  2. **Agent Skill Matcher** - Consumes: ticket categories, agent profiles → Produces: skill compatibility scores
  3. **Workload Calculator** - Consumes: agent assignments → Produces: current workload metrics
  4. **Priority Assessor** - Consumes: ticket data, SLA rules → Produces: priority scores
  5. **Assignment Engine** - Consumes: compatibility scores, workload data, priorities → Produces: optimal assignments
  6. **Agent Availability Checker** - Consumes: agent schedules → Produces: availability status
  7. **SLA Monitor** - Consumes: ticket data, time tracking → Produces: SLA compliance metrics
  8. **Workload Balancer** - Consumes: current assignments → Produces: rebalancing recommendations
  9. **Escalation Router** - Consumes: ticket attributes, escalation rules → Produces: escalation paths
  10. **Assignment Validator** - Consumes: proposed assignments → Produces: validation results
  11. **Performance Tracker** - Consumes: assignment history → Produces: agent performance metrics
  12. **Queue Optimizer** - Consumes: queue states, priorities → Produces: optimized queue arrangements

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic Assignment: Ticket Analyzer → Agent Skill Matcher → Assignment Engine
  - Availability Check: Agent Availability Checker → Workload Calculator → Assignment Engine

  **Medium Plans:**
  - Priority-Based Assignment: Ticket Analyzer → Priority Assessor → Agent Skill Matcher → Workload Calculator → Assignment Engine → Assignment Validator
  - Workload Management: Workload Calculator → Workload Balancer → Assignment Engine → Performance Tracker

  **Complex Plans:**
  - Full Assignment Workflow: Ticket Analyzer → Priority Assessor → Agent Availability Checker → Agent Skill Matcher → Workload Calculator → Assignment Engine → Assignment Validator → SLA Monitor → Performance Tracker
  - Escalation Management: Ticket Analyzer → Priority Assessor → Escalation Router → Agent Skill Matcher → Assignment Engine → SLA Monitor → Queue Optimizer

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Ticket Analyzer",
    "tool_description": "Analyzes incoming support tickets to extract key attributes like category, complexity, urgency, and required skills for proper routing and assignment.",
    "parameters": {
      "ticket_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the support ticket"
      },
      "ticket_subject": {
        "type": "string",
        "required": true,
        "description": "Subject line of the support ticket"
      },
      "ticket_description": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the customer issue"
      },
      "customer_tier": {
        "type": "string",
        "required": false,
        "description": "Customer service tier (basic, premium, enterprise)",
        "default": "basic"
      }
    },
    "error_messages": [
      "Empty ticket content: Provide non-empty ticket_subject and ticket_description for analysis.",
      "Invalid customer tier: Use one of [basic, premium, enterprise].",
      "Ticket ID format error: Provide a valid alphanumeric ticket identifier."
    ],
    "usage": "Provide ticket_id, ticket_subject, and ticket_description; optionally specify customer_tier. The tool returns categorized ticket attributes for routing decisions.",
    "output_details": {
      "category": {
        "type": "string",
        "description": "Primary category of the ticket (technical, billing, general)"
      },
      "subcategory": {
        "type": "string",
        "description": "Specific subcategory within the main category"
      },
      "complexity_score": {
        "type": "integer",
        "description": "Complexity rating from 1-10"
      },
      "required_skills": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of skills required to handle this ticket"
      },
      "estimated_resolution_time": {
        "type": "integer",
        "description": "Estimated time to resolve in minutes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Agent Skill Matcher",
    "tool_description": "Matches tickets with agents based on skill compatibility, experience levels, and specialization areas to ensure optimal assignment quality.",
    "parameters": {
      "required_skills": {
        "type": "array",
        "required": true,
        "description": "List of skills required for the ticket",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "agent_ids": {
        "type": "array",
        "required": true,
        "description": "List of available agent identifiers to consider",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "complexity_level": {
        "type": "integer",
        "required": true,
        "description": "Ticket complexity level from 1-10"
      }
    },
    "error_messages": [
      "Empty skill requirements: Provide at least one required skill for matching.",
      "Invalid agent list: Provide valid agent IDs in the agent_ids array.",
      "Complexity out of range: complexity_level must be between 1 and 10.",
      "No matching agents: No agents found with required skill combinations."
    ],
    "usage": "Provide required_skills array, agent_ids to consider, and complexity_level. The tool returns compatibility scores for each agent.",
    "output_details": {
      "agent_scores": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Agent IDs with their compatibility scores in format 'agent_id:score'"
      },
      "best_match": {
        "type": "string",
        "description": "Agent ID with highest compatibility score"
      },
      "skill_coverage": {
        "type": "integer",
        "description": "Percentage of required skills covered by best match"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Workload Calculator",
    "tool_description": "Calculates current workload metrics for agents including active tickets, queue depth, and capacity utilization to support balanced assignment decisions.",
    "parameters": {
      "agent_ids": {
        "type": "array",
        "required": true,
        "description": "List of agent identifiers to analyze",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "time_window_hours": {
        "type": "integer",
        "required": false,
        "description": "Time window in hours for workload calculation",
        "default": 24
      },
      "include_pending": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include pending tickets in workload calculation",
        "default": true
      }
    },
    "error_messages": [
      "Invalid agent list: Provide valid agent IDs in the agent_ids array.",
      "Invalid time window: time_window_hours must be between 1 and 168 (7 days).",
      "Agent data unavailable: Unable to retrieve workload data for one or more agents."
    ],
    "usage": "Provide agent_ids array; optionally set time_window_hours and include_pending flag. Returns current workload metrics for capacity planning.",
    "output_details": {
      "agent_workloads": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Agent workload data in format 'agent_id:active_tickets:utilization_percent'"
      },
      "average_utilization": {
        "type": "number",
        "description": "Average utilization percentage across all agents"
      },
      "lightest_loaded": {
        "type": "string",
        "description": "Agent ID with lowest current workload"
      },
      "heaviest_loaded": {
        "type": "string",
        "description": "Agent ID with highest current workload"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Priority Assessor",
    "tool_description": "Evaluates ticket priority based on customer tier, issue severity, SLA requirements, and business impact to ensure critical issues receive appropriate attention.",
    "parameters": {
      "ticket_category": {
        "type": "string",
        "required": true,
        "description": "Primary category of the ticket"
      },
      "customer_tier": {
        "type": "string",
        "required": true,
        "description": "Customer service tier (basic, premium, enterprise)"
      },
      "severity_level": {
        "type": "string",
        "required": true,
        "description": "Issue severity (low, medium, high, critical)"
      },
      "business_hours": {
        "type": "boolean",
        "required": true,
        "description": "Whether ticket was submitted during business hours"
      },
      "customer_history": {
        "type": "string",
        "required": false,
        "description": "Customer escalation history (none, low, medium, high)",
        "default": "none"
      },
      "sla_deadline": {
        "type": "string",
        "required": false,
        "description": "SLA deadline timestamp",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid customer tier: Use one of [basic, premium, enterprise].",
      "Invalid severity level: Use one of [low, medium, high, critical].",
      "Invalid customer history: Use one of [none, low, medium, high].",
      "Invalid SLA deadline: Provide valid ISO 8601 date-time format or None.",
      "Missing required parameters: ticket_category, customer_tier, severity_level, and business_hours are required."
    ],
    "usage": "Provide ticket_category, customer_tier, severity_level, and business_hours; optionally include customer_history and sla_deadline. Returns calculated priority score and recommended handling.",
    "output_details": {
      "priority_score": {
        "type": "integer",
        "description": "Calculated priority score from 1-100"
      },
      "priority_level": {
        "type": "string",
        "description": "Priority classification (low, normal, high, urgent)"
      },
      "sla_hours_remaining": {
        "type": "integer",
        "description": "Hours remaining until SLA deadline"
      },
      "escalation_risk": {
        "type": "string",
        "description": "Risk level for customer escalation (low, medium, high)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Assignment Engine",
    "tool_description": "Core assignment engine that combines skill matching, workload data, and priority scores to determine optimal ticket-to-agent assignments using weighted scoring algorithms.",
    "parameters": {
      "ticket_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the ticket to assign"
      },
      "agent_skill_scores": {
        "type": "array",
        "required": true,
        "description": "Agent compatibility scores in format 'agent_id:score'",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "agent_workloads": {
        "type": "array",
        "required": true,
        "description": "Current agent workloads in format 'agent_id:active_count:utilization'",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "priority_score": {
        "type": "integer",
        "required": true,
        "description": "Ticket priority score from 1-100"
      },
      "assignment_strategy": {
        "type": "string",
        "required": false,
        "description": "Assignment strategy (balanced, skill_first, workload_first)",
        "default": "balanced"
      },
      "max_utilization": {
        "type": "integer",
        "required": false,
        "description": "Maximum agent utilization percentage to allow",
        "default": 90
      },
      "skill_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for skill matching in assignment decision (0-1)",
        "default": 0.6
      },
      "workload_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for workload balancing in assignment decision (0-1)",
        "default": 0.4
      }
    },
    "error_messages": [
      "Invalid assignment strategy: Use one of [balanced, skill_first, workload_first].",
      "Mismatched data arrays: agent_skill_scores and agent_workloads must contain the same agent IDs.",
      "Invalid weight values: skill_weight and workload_weight must be between 0 and 1, and should sum to 1.0.",
      "Priority score out of range: priority_score must be between 1 and 100.",
      "No available agents: All agents exceed maximum utilization threshold.",
      "Invalid utilization limit: max_utilization must be between 50 and 100."
    ],
    "usage": "Provide ticket_id, agent_skill_scores, agent_workloads, and priority_score; optionally configure assignment_strategy and weighting parameters. Returns the optimal agent assignment with reasoning.",
    "output_details": {
      "assigned_agent": {
        "type": "string",
        "description": "Agent ID selected for ticket assignment"
      },
      "assignment_score": {
        "type": "number",
        "description": "Computed assignment score for the selected agent"
      },
      "assignment_reason": {
        "type": "string",
        "description": "Explanation of why this agent was selected"
      },
      "alternative_agents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Top 3 alternative agent options with their scores"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Agent Availability Checker",
    "tool_description": "Checks real-time availability status of support agents including work schedules, break times, meeting conflicts, and current online status.",
    "parameters": {
      "agent_ids": {
        "type": "array",
        "required": true,
        "description": "List of agent identifiers to check availability",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "check_time": {
        "type": "string",
        "required": false,
        "description": "Specific time to check availability (default: current time)",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid agent list: Provide valid agent IDs in the agent_ids array.",
      "Invalid check time: Provide valid ISO 8601 date-time format or None for current time.",
      "Agent data unavailable: Unable to retrieve availability data for one or more agents."
    ],
    "usage": "Provide agent_ids array to check; optionally specify check_time for future availability. Returns current availability status for each agent.",
    "output_details": {
      "available_agents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of agent IDs currently available for assignment"
      },
      "unavailable_agents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of agent IDs currently unavailable with reasons"
      },
      "next_available_times": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Next availability times for unavailable agents in format 'agent_id:time'"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "SLA Monitor",
    "tool_description": "Monitors service level agreement compliance by tracking ticket response times, resolution times, and deadline adherence to ensure SLA targets are met.",
    "parameters": {
      "ticket_ids": {
        "type": "array",
        "required": true,
        "description": "List of ticket identifiers to monitor",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "sla_type": {
        "type": "string",
        "required": true,
        "description": "Type of SLA to monitor (response, resolution, escalation)"
      },
      "alert_threshold_hours": {
        "type": "integer",
        "required": false,
        "description": "Hours before SLA breach to trigger alerts",
        "default": 2
      }
    },
    "error_messages": [
      "Invalid SLA type: Use one of [response, resolution, escalation].",
      "Invalid ticket list: Provide valid ticket IDs in the ticket_ids array.",
      "Alert threshold out of range: alert_threshold_hours must be between 1 and 48.",
      "Ticket data unavailable: Unable to retrieve SLA data for one or more tickets."
    ],
    "usage": "Provide ticket_ids array and sla_type to monitor; optionally set alert_threshold_hours. Returns SLA compliance status and any approaching breaches.",
    "output_details": {
      "compliant_tickets": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Ticket IDs currently meeting SLA requirements"
      },
      "at_risk_tickets": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Ticket IDs approaching SLA breach within alert threshold"
      },
      "breached_tickets": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Ticket IDs that have already breached SLA"
      },
      "overall_compliance_rate": {
        "type": "number",
        "description": "Percentage of tickets meeting SLA requirements"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Workload Balancer",
    "tool_description": "Analyzes current ticket distribution across agents and provides recommendations for rebalancing workloads to optimize team efficiency and prevent burnout.",
    "parameters": {
      "agent_workloads": {
        "type": "array",
        "required": true,
        "description": "Current agent workload data in format 'agent_id:active_count:utilization'",
        "items": {
          "type": "string"
        },
        "minItems": 2,
        "maxItems": 100
      },
      "target_utilization": {
        "type": "integer",
        "required": false,
        "description": "Target utilization percentage for balanced load",
        "default": 75
      },
      "max_reassignments": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of tickets to suggest for reassignment",
        "default": 10
      }
    },
    "error_messages": [
      "Insufficient agents: Provide workload data for at least 2 agents for balancing.",
      "Invalid workload format: Use format 'agent_id:active_count:utilization_percent' for each entry.",
      "Target utilization out of range: target_utilization must be between 40 and 95.",
      "Invalid reassignment limit: max_reassignments must be between 1 and 50."
    ],
    "usage": "Provide agent_workloads array with current utilization data; optionally set target_utilization and max_reassignments. Returns rebalancing recommendations.",
    "output_details": {
      "balance_score": {
        "type": "integer",
        "description": "Current workload balance score from 1-100 (higher is better)"
      },
      "overloaded_agents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Agent IDs with utilization above target threshold"
      },
      "underloaded_agents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Agent IDs with utilization below target threshold"
      },
      "reassignment_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Suggested reassignments in format 'from_agent:to_agent:ticket_count'"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Escalation Router",
    "tool_description": "Determines appropriate escalation paths for tickets based on complexity, customer status, issue type, and failed resolution attempts to ensure proper handling.",
    "parameters": {
      "ticket_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the ticket requiring escalation"
      },
      "current_agent_tier": {
        "type": "string",
        "required": true,
        "description": "Current agent tier level (tier1, tier2, tier3, specialist)"
      },
      "escalation_reason": {
        "type": "string",
        "required": true,
        "description": "Reason for escalation (complexity, time_limit, customer_request, technical)"
      },
      "customer_tier": {
        "type": "string",
        "required": true,
        "description": "Customer service tier (basic, premium, enterprise)"
      },
      "ticket_category": {
        "type": "string",
        "required": true,
        "description": "Primary category of the ticket"
      },
      "attempts_count": {
        "type": "integer",
        "required": true,
        "description": "Number of previous resolution attempts"
      },
      "time_spent_hours": {
        "type": "integer",
        "required": true,
        "description": "Total hours spent on ticket so far"
      }
    },
    "error_messages": [
      "Invalid agent tier: Use one of [tier1, tier2, tier3, specialist].",
      "Invalid escalation reason: Use one of [complexity, time_limit, customer_request, technical].",
      "Invalid customer tier: Use one of [basic, premium, enterprise].",
      "Negative values: attempts_count and time_spent_hours must be non-negative.",
      "Maximum escalation reached: Ticket is already at highest available support tier."
    ],
    "usage": "Provide ticket_id, current_agent_tier, escalation_reason, customer_tier, ticket_category, attempts_count, and time_spent_hours. Returns recommended escalation path and target agents.",
    "output_details": {
      "escalation_tier": {
        "type": "string",
        "description": "Recommended escalation tier level"
      },
      "target_agents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of qualified agents at escalation tier"
      },
      "escalation_priority": {
        "type": "string",
        "description": "Priority level for escalated ticket (normal, high, urgent)"
      },
      "escalation_notes": {
        "type": "string",
        "description": "Additional context and recommendations for escalation handling"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Assignment Validator",
    "tool_description": "Validates proposed ticket assignments by checking agent availability, skill requirements, workload limits, and business rules to prevent assignment conflicts.",
    "parameters": {
      "ticket_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the ticket being assigned"
      },
      "assigned_agent": {
        "type": "string",
        "required": true,
        "description": "Agent ID proposed for assignment"
      },
      "required_skills": {
        "type": "array",
        "required": true,
        "description": "Skills required for the ticket",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "ticket_priority": {
        "type": "string",
        "required": true,
        "description": "Ticket priority level (low, normal, high, urgent)"
      }
    },
    "error_messages": [
      "Agent not available: The assigned agent is currently unavailable for new tickets.",
      "Skill mismatch: The assigned agent lacks required skills for this ticket type.",
      "Workload exceeded: Assignment would exceed agent's maximum workload capacity.",
      "Priority conflict: Agent cannot handle tickets of this priority level.",
      "Invalid priority level: Use one of [low, normal, high, urgent]."
    ],
    "usage": "Provide ticket_id, assigned_agent, required_skills array, and ticket_priority. The tool validates the assignment and reports any conflicts or issues.",
    "output_details": {
      "validation_result": {
        "type": "boolean",
        "description": "Whether the assignment passes validation"
      },
      "validation_errors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of validation errors if assignment fails"
      },
      "confidence_score": {
        "type": "integer",
        "description": "Confidence score for assignment success (1-100)"
      },
      "estimated_completion": {
        "type": "string",
        "description": "Estimated completion time for the assignment",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Tracker",
    "tool_description": "Tracks and analyzes agent performance metrics including resolution times, customer satisfaction, ticket volume, and assignment success rates for optimization insights.",
    "parameters": {
      "agent_ids": {
        "type": "array",
        "required": true,
        "description": "List of agent identifiers to analyze",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "time_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to analyze performance data",
        "default": 30
      },
      "include_metrics": {
        "type": "array",
        "required": false,
        "description": "Specific metrics to include in analysis",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid agent list: Provide valid agent IDs in the agent_ids array.",
      "Time period out of range: time_period_days must be between 1 and 365.",
      "Invalid metrics: Use valid metric names from [resolution_time, satisfaction, volume, success_rate].",
      "Insufficient data: Not enough performance data available for the specified time period."
    ],
    "usage": "Provide agent_ids array to analyze; optionally set time_period_days and include_metrics. Returns comprehensive performance analysis for each agent.",
    "output_details": {
      "agent_performance": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Performance data for each agent in format 'agent_id:metric:value'"
      },
      "top_performers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Top performing agent IDs based on overall score"
      },
      "improvement_opportunities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Agents with potential for performance improvement"
      },
      "team_average": {
        "type": "string",
        "description": "Team average performance summary"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Queue Optimizer",
    "tool_description": "Optimizes ticket queue arrangements by analyzing priorities, wait times, agent specializations, and SLA requirements to improve overall processing efficiency.",
    "parameters": {
      "queue_name": {
        "type": "string",
        "required": true,
        "description": "Name of the queue to optimize"
      },
      "ticket_priorities": {
        "type": "array",
        "required": true,
        "description": "Ticket priorities in format 'ticket_id:priority_score'",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "available_agents": {
        "type": "array",
        "required": true,
        "description": "Available agent IDs for queue processing",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "optimization_strategy": {
        "type": "string",
        "required": false,
        "description": "Queue optimization strategy (fifo, priority, balanced, sla_focused)",
        "default": "priority"
      },
      "max_wait_time_hours": {
        "type": "integer",
        "required": false,
        "description": "Maximum acceptable wait time in hours",
        "default": 24
      }
    },
    "error_messages": [
      "Empty queue: Provide at least one ticket in ticket_priorities array.",
      "No available agents: Provide at least one available agent for queue processing.",
      "Invalid optimization strategy: Use one of [fifo, priority, balanced, sla_focused].",
      "Invalid wait time: max_wait_time_hours must be between 1 and 168 (7 days).",
      "Priority format error: Use format 'ticket_id:priority_score' for ticket_priorities entries."
    ],
    "usage": "Provide queue_name, ticket_priorities array, and available_agents; optionally set optimization_strategy and max_wait_time_hours. Returns optimized queue arrangement.",
    "output_details": {
      "optimized_order": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Ticket IDs in optimized processing order"
      },
      "estimated_wait_times": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Estimated wait times for each ticket in format 'ticket_id:hours'"
