field_name: anti_fraud_and_risk_scoring
subfield: Transaction Monitoring and Analysis
task: Customer behavioral pattern analysis and profiling
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is of **medium** difficulty. Customer behavioral pattern analysis involves processing complex transaction data across multiple dimensions (temporal, geographical, financial), requires sophisticated statistical analysis to identify meaningful patterns, and must balance false positives with genuine risk detection. The coordination between data preprocessing, pattern recognition, and risk scoring adds complexity, while errors can have significant business impact.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target **12 tools** to cover data ingestion, preprocessing, pattern analysis, profiling, scoring, and reporting workflows.

  **STEP 3 — List all tool names and dependencies**

  1. **Transaction Data Loader** - Consumes: file paths, filters → Produces: structured transaction datasets
  2. **Customer Profile Builder** - Consumes: transaction data → Produces: customer demographic profiles
  3. **Temporal Pattern Analyzer** - Consumes: transaction data, time windows → Produces: time-based behavioral patterns
  4. **Spending Category Classifier** - Consumes: transaction descriptions → Produces: categorized transactions
  5. **Geographic Pattern Detector** - Consumes: transaction locations → Produces: location-based behavioral patterns
  6. **Velocity Risk Calculator** - Consumes: transaction data, time windows → Produces: velocity-based risk scores
  7. **Anomaly Score Generator** - Consumes: behavioral patterns, thresholds → Produces: anomaly scores
  8. **Peer Group Comparator** - Consumes: customer profiles, comparison metrics → Produces: peer-relative behavior analysis
  9. **Risk Profile Aggregator** - Consumes: multiple risk scores → Produces: consolidated risk profiles
  10. **Behavioral Trend Tracker** - Consumes: historical patterns, current data → Produces: trend analysis
  11. **Alert Rule Engine** - Consumes: risk profiles, rules → Produces: alerts and flags
  12. **Risk Report Generator** - Consumes: profiles, scores, alerts → Produces: comprehensive risk reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic profiling: Transaction Data Loader → Customer Profile Builder → Risk Report Generator
  - Category analysis: Transaction Data Loader → Spending Category Classifier → Risk Report Generator

  **Medium Plans:**
  - Velocity monitoring: Transaction Data Loader → Velocity Risk Calculator → Alert Rule Engine → Risk Report Generator
  - Geographic risk assessment: Transaction Data Loader → Geographic Pattern Detector → Anomaly Score Generator → Risk Report Generator

  **Complex Plans:**
  - Comprehensive behavioral analysis: Transaction Data Loader → Customer Profile Builder → Temporal Pattern Analyzer → Spending Category Classifier → Geographic Pattern Detector → Velocity Risk Calculator → Peer Group Comparator → Risk Profile Aggregator → Alert Rule Engine → Risk Report Generator
  - Advanced trend monitoring: Transaction Data Loader → Customer Profile Builder → Behavioral Trend Tracker → Anomaly Score Generator → Risk Profile Aggregator → Alert Rule Engine → Risk Report Generator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Transaction Data Loader",
    "tool_description": "Loads and filters customer transaction data from various sources with date range and customer filtering capabilities.",
    "parameters": {
      "data_source_path": {
        "type": "string",
        "required": true,
        "description": "Path to the transaction data file or database connection string"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for transaction filtering",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for transaction filtering",
        "format": "date-time"
      },
      "customer_ids": {
        "type": "array",
        "required": false,
        "description": "Specific customer IDs to filter, if empty loads all customers",
        "items": {"type": "string"},
        "default": "None"
      },
      "min_amount": {
        "type": "number",
        "required": false,
        "description": "Minimum transaction amount to include",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid date range: start_date must be before end_date and both must be valid ISO 8601 format",
      "Data source not found: The specified data_source_path does not exist or is inaccessible",
      "Invalid amount filter: min_amount must be a non-negative number",
      "Empty dataset: No transactions found matching the specified criteria"
    ],
    "usage": "Specify data_source_path, start_date, and end_date. Optionally filter by customer_ids and min_amount to load relevant transaction subsets.",
    "output_details": {
      "transaction_count": {
        "type": "integer",
        "description": "Total number of transactions loaded"
      },
      "unique_customers": {
        "type": "integer",
        "description": "Number of unique customers in the dataset"
      },
      "date_range": {
        "type": "string",
        "description": "Actual date range of loaded transactions"
      },
      "data_quality_score": {
        "type": "number",
        "description": "Quality score based on completeness of required fields"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Customer Profile Builder",
    "tool_description": "Creates comprehensive customer profiles including demographic information, account details, and basic transaction statistics.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the customer"
      },
      "profile_depth": {
        "type": "string",
        "required": false,
        "description": "Level of profile detail: basic, standard, or comprehensive",
        "default": "standard"
      },
      "include_demographics": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include demographic information in the profile",
        "default": true
      }
    },
    "error_messages": [
      "Customer not found: The specified customer_id does not exist in the dataset",
      "Invalid profile depth: Must be one of [basic, standard, comprehensive]",
      "Insufficient data: Customer has too few transactions to build a reliable profile"
    ],
    "usage": "Provide customer_id and optionally set profile_depth and include_demographics flag to control the detail level of the generated profile.",
    "output_details": {
      "customer_id": {
        "type": "string",
        "description": "The customer identifier"
      },
      "account_age_days": {
        "type": "integer",
        "description": "Number of days since account creation"
      },
      "total_transactions": {
        "type": "integer",
        "description": "Total number of transactions by this customer"
      },
      "average_transaction_amount": {
        "type": "number",
        "description": "Average transaction amount for this customer"
      },
      "preferred_channels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Most frequently used transaction channels"
      },
      "risk_category": {
        "type": "string",
        "description": "Initial risk categorization based on basic metrics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Temporal Pattern Analyzer",
    "tool_description": "Analyzes customer transaction patterns across different time dimensions to identify behavioral regularities and anomalies.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier for pattern analysis"
      },
      "analysis_window_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to analyze for patterns"
      },
      "time_granularity": {
        "type": "string",
        "required": true,
        "description": "Time bucket size: hourly, daily, weekly, or monthly"
      },
      "pattern_types": {
        "type": "array",
        "required": true,
        "description": "Types of patterns to detect",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "seasonality_detection": {
        "type": "boolean",
        "required": false,
        "description": "Whether to detect seasonal patterns",
        "default": true
      },
      "anomaly_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold for anomaly detection (0.1-0.5)",
        "default": 0.2
      },
      "min_pattern_frequency": {
        "type": "integer",
        "required": false,
        "description": "Minimum frequency for a pattern to be considered significant",
        "default": 3
      },
      "exclude_weekends": {
        "type": "boolean",
        "required": false,
        "description": "Whether to exclude weekend transactions from analysis",
        "default": false
      },
      "normalize_amounts": {
        "type": "boolean",
        "required": false,
        "description": "Whether to normalize transaction amounts in pattern detection",
        "default": true
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Statistical confidence level for pattern validation (0.8-0.99)",
        "default": 0.95
      }
    },
    "error_messages": [
      "Invalid analysis window: analysis_window_days must be between 7 and 730 days",
      "Unsupported granularity: time_granularity must be one of [hourly, daily, weekly, monthly]",
      "Invalid pattern types: pattern_types must contain valid pattern identifiers",
      "Threshold out of range: anomaly_threshold must be between 0.1 and 0.5",
      "Insufficient data: Customer has too few transactions in the specified window for reliable analysis",
      "Invalid confidence level: confidence_level must be between 0.8 and 0.99"
    ],
    "usage": "Specify customer_id, analysis_window_days, time_granularity, and pattern_types. Configure detection sensitivity with optional parameters for comprehensive temporal analysis.",
    "output_details": {
      "detected_patterns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified behavioral patterns"
      },
      "pattern_confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for each detected pattern"
      },
      "anomalous_periods": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Time periods with anomalous behavior"
      },
      "regularity_score": {
        "type": "number",
        "description": "Overall behavioral regularity score (0-1)"
      },
      "peak_activity_hours": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Hours of day with highest transaction activity"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Spending Category Classifier",
    "tool_description": "Classifies transactions into spending categories and analyzes spending patterns across different categories for behavioral profiling.",
    "parameters": {
      "transaction_descriptions": {
        "type": "array",
        "required": true,
        "description": "Array of transaction descriptions to classify",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "classification_model": {
        "type": "string",
        "required": false,
        "description": "Classification model to use: rule_based, machine_learning, or hybrid",
        "default": "hybrid"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence score for category assignment (0.5-0.95)",
        "default": 0.7
      }
    },
    "error_messages": [
      "Empty descriptions: transaction_descriptions cannot be empty or contain only whitespace",
      "Invalid model: classification_model must be one of [rule_based, machine_learning, hybrid]",
      "Confidence threshold out of range: confidence_threshold must be between 0.5 and 0.95",
      "Processing limit exceeded: Cannot process more than 1000 transactions in a single call"
    ],
    "usage": "Provide transaction_descriptions array and optionally specify classification_model and confidence_threshold for accurate category classification.",
    "output_details": {
      "categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Assigned category for each transaction"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence score for each category assignment"
      },
      "category_distribution": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Summary of spending distribution across categories"
      },
      "unclassified_count": {
        "type": "integer",
        "description": "Number of transactions that could not be classified"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Geographic Pattern Detector",
    "tool_description": "Detects geographic patterns in customer transactions and identifies unusual location-based behaviors for risk assessment.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier for geographic analysis"
      },
      "analysis_period_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to analyze for geographic patterns"
      },
      "location_clustering": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform location clustering analysis",
        "default": true
      },
      "travel_detection": {
        "type": "boolean",
        "required": false,
        "description": "Whether to detect travel patterns and anomalies",
        "default": true
      },
      "distance_threshold_km": {
        "type": "number",
        "required": false,
        "description": "Distance threshold for unusual location detection in kilometers",
        "default": 100
      }
    },
    "error_messages": [
      "Invalid analysis period: analysis_period_days must be between 1 and 365 days",
      "Customer not found: The specified customer_id does not exist in the dataset",
      "Insufficient location data: Customer transactions lack sufficient geographic information",
      "Invalid distance threshold: distance_threshold_km must be a positive number"
    ],
    "usage": "Specify customer_id and analysis_period_days, then configure location_clustering, travel_detection, and distance_threshold_km for geographic pattern analysis.",
    "output_details": {
      "home_location": {
        "type": "string",
        "description": "Identified home location coordinates"
      },
      "frequent_locations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of frequently visited locations"
      },
      "unusual_locations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Locations that deviate from normal patterns"
      },
      "travel_frequency": {
        "type": "number",
        "description": "Frequency of transactions outside normal geographic range"
      },
      "geographic_risk_score": {
        "type": "number",
        "description": "Risk score based on geographic behavior patterns"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Velocity Risk Calculator",
    "tool_description": "Calculates velocity-based risk scores by analyzing transaction frequency, amounts, and timing patterns to detect potentially fraudulent behavior.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier for velocity analysis"
      },
      "velocity_window_hours": {
        "type": "integer",
        "required": true,
        "description": "Time window in hours for velocity calculations"
      },
      "amount_velocity_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for amount-based velocity (0.0-1.0)",
        "default": 0.6
      },
      "frequency_velocity_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for frequency-based velocity (0.0-1.0)",
        "default": 0.4
      }
    },
    "error_messages": [
      "Invalid velocity window: velocity_window_hours must be between 1 and 168 hours",
      "Weight values invalid: amount_velocity_weight and frequency_velocity_weight must sum to 1.0",
      "Customer not found: The specified customer_id does not exist in the dataset",
      "Insufficient transaction data: Customer has too few recent transactions for velocity calculation"
    ],
    "usage": "Provide customer_id and velocity_window_hours, optionally adjust velocity weights to calculate comprehensive velocity risk scores.",
    "output_details": {
      "velocity_score": {
        "type": "number",
        "description": "Overall velocity risk score (0-100)"
      },
      "amount_velocity": {
        "type": "number",
        "description": "Velocity score based on transaction amounts"
      },
      "frequency_velocity": {
        "type": "number",
        "description": "Velocity score based on transaction frequency"
      },
      "peak_velocity_period": {
        "type": "string",
        "description": "Time period with highest velocity"
      },
      "velocity_trend": {
        "type": "string",
        "description": "Trend direction of velocity over time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Anomaly Score Generator",
    "tool_description": "Generates anomaly scores based on behavioral patterns using statistical and machine learning approaches to identify deviations from normal customer behavior.",
    "parameters": {
      "customer_behavioral_data": {
        "type": "array",
        "required": true,
        "description": "Array of behavioral metrics and pattern data",
        "items": {"type": "number"},
        "minItems": 5,
        "maxItems": 50
      },
      "detection_method": {
        "type": "string",
        "required": true,
        "description": "Anomaly detection method: statistical, isolation_forest, or ensemble"
      },
      "sensitivity_level": {
        "type": "string",
        "required": false,
        "description": "Detection sensitivity: low, medium, or high",
        "default": "medium"
      },
      "baseline_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days of historical data to use as baseline",
        "default": 30
      },
      "seasonal_adjustment": {
        "type": "boolean",
        "required": false,
        "description": "Whether to adjust for seasonal patterns",
        "default": true
      }
    },
    "error_messages": [
      "Insufficient behavioral data: customer_behavioral_data must contain at least 5 metrics",
      "Invalid detection method: detection_method must be one of [statistical, isolation_forest, ensemble]",
      "Invalid sensitivity level: sensitivity_level must be one of [low, medium, high]",
      "Invalid baseline period: baseline_period_days must be between 7 and 365 days",
      "Data quality issues: Behavioral data contains invalid or missing values"
    ],
    "usage": "Provide customer_behavioral_data array and detection_method, then configure sensitivity_level, baseline_period_days, and seasonal_adjustment for accurate anomaly detection.",
    "output_details": {
      "anomaly_score": {
        "type": "number",
        "description": "Overall anomaly score (0-100)"
      },
      "anomaly_indicators": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific behavioral indicators contributing to anomaly score"
      },
      "confidence_level": {
        "type": "number",
        "description": "Confidence in the anomaly detection"
      },
      "severity_classification": {
        "type": "string",
        "description": "Severity level of detected anomalies"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Peer Group Comparator",
    "tool_description": "Compares customer behavior against peer groups based on demographics and transaction characteristics to identify relative risk patterns.",
    "parameters": {
      "target_customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer ID for peer comparison analysis"
      },
      "comparison_metrics": {
        "type": "array",
        "required": true,
        "description": "Metrics to use for peer comparison",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 15
      },
      "peer_group_size": {
        "type": "integer",
        "required": false,
        "description": "Number of peers to include in comparison group",
        "default": 50
      },
      "demographic_matching": {
        "type": "boolean",
        "required": false,
        "description": "Whether to match peers based on demographics",
        "default": true
      },
      "behavior_matching": {
        "type": "boolean",
        "required": false,
        "description": "Whether to match peers based on historical behavior patterns",
        "default": true
      },
      "exclusion_criteria": {
        "type": "array",
        "required": false,
        "description": "Criteria to exclude certain customers from peer group",
        "items": {"type": "string"},
        "default": "None"
      },
      "statistical_method": {
        "type": "string",
        "required": false,
        "description": "Statistical method for comparison: percentile, zscore, or iqr",
        "default": "percentile"
      },
      "confidence_interval": {
        "type": "number",
        "required": false,
        "description": "Confidence interval for statistical comparison (0.90-0.99)",
        "default": 0.95
      },
      "minimum_peer_transactions": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of transactions required for peers",
        "default": 10
      },
      "comparison_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to look back for comparison data",
        "default": 90
      },
      "weight_recent_activity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to give more weight to recent activity in comparisons",
        "default": true
      },
      "outlier_detection": {
        "type": "boolean",
        "required": false,
        "description": "Whether to identify outlier behavior relative to peers",
        "default": true
      }
    },
    "error_messages": [
      "Invalid peer group size: peer_group_size must be between 10 and 500",
      "Insufficient comparison metrics: comparison_metrics must contain at least 2 valid metrics",
      "Invalid statistical method: statistical_method must be one of [percentile, zscore, iqr]",
      "Invalid confidence interval: confidence_interval must be between 0.90 and 0.99",
      "Insufficient peer data: Unable to find enough qualifying peers for comparison",
      "Invalid comparison period: comparison_period_days must be between 7 and 365 days"
    ],
    "usage": "Specify target_customer_id and comparison_metrics, then configure peer group parameters and statistical methods for comprehensive peer-relative analysis.",
    "output_details": {
      "peer_percentile_rankings": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Percentile rankings for each comparison metric"
      },
      "peer_risk_relative_score": {
        "type": "number",
        "description": "Risk score relative to peer group (0-100)"
      },
      "outlier_metrics": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Metrics where customer significantly deviates from peers"
      },
      "peer_group_summary": {
        "type": "string",
        "description": "Summary characteristics of the identified peer group"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Profile Aggregator",
    "tool_description": "Aggregates multiple risk scores and behavioral indicators into a comprehensive customer risk profile with weighted scoring and risk categorization.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier for risk profile aggregation"
      },
      "risk_scores": {
        "type": "array",
        "required": true,
        "description": "Array of individual risk scores to aggregate",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 20
      },
      "score_weights": {
        "type": "array",
        "required": true,
        "description": "Weights for each risk score in aggregation",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 20
      },
      "aggregation_method": {
        "type": "string",
        "required": false,
        "description": "Method for score aggregation: weighted_average, maximum, or hybrid",
        "default": "weighted_average"
      },
      "risk_categories": {
        "type": "array",
        "required": false,
        "description": "Custom risk category thresholds",
        "items": {"type": "number"},
        "default": "None"
      }
    },
    "error_messages": [
      "Score-weight mismatch: risk_scores and score_weights arrays must have the same length",
      "Invalid aggregation method: aggregation_method must be one of [weighted_average, maximum, hybrid]",
      "Invalid risk scores: All risk scores must be between 0 and 100",
      "Invalid weights: All score weights must be positive numbers and should sum to 1.0",
      "Empty input data: risk_scores cannot be empty"
    ],
    "usage": "Provide customer_id, risk_scores array, and corresponding score_weights. Optionally specify aggregation_method and custom risk_categories for tailored risk profiling.",
    "output_details": {
      "aggregated_risk_score": {
        "type": "number",
        "description": "Final aggregated risk score (0-100)"
      },
      "risk_category": {
        "type": "string",
        "description": "Risk category classification based on aggregated score"
      },
      "contributing_factors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Primary risk factors contributing to the final score"
      },
      "confidence_level": {
        "type": "number",
        "description": "Confidence level in the aggregated risk assessment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Behavioral Trend Tracker",
    "tool_description": "Tracks and analyzes behavioral trends over time to identify evolving risk patterns and predict future customer behavior changes.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier for trend analysis"
      },
      "tracking_period_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to analyze for trend detection"
      },
      "trend_indicators": {
        "type": "array",
        "required": true,
        "description": "Behavioral indicators to track for trends",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "trend_sensitivity": {
        "type": "string",
        "required": false,
        "description": "Sensitivity for trend detection: low, medium, or high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Invalid tracking period: tracking_period_days must be between 30 and 730 days",
      "Invalid trend indicators: trend_indicators must contain valid behavioral metrics",
      "Invalid sensitivity: trend_sensitivity must be one of [low, medium, high]",
      "Insufficient historical data: Customer lacks sufficient data for trend analysis"
    ],
    "usage": "Specify customer_id, tracking_period_days, and trend_indicators array, then set trend_sensitivity for appropriate trend detection granularity.",
    "output_details": {
      "detected_trends": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified behavioral trends and their directions"
      },
      "trend_strength": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Strength scores for each detected trend"
      },
      "risk_trajectory": {
        "type": "string",
        "description": "Predicted risk trajectory based on current trends"
      },
      "trend_stability": {
        "type": "number",
        "description": "Stability score of observed behavioral patterns"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Alert Rule Engine",
    "tool_description": "Applies configurable business rules to risk profiles and behavioral data to generate alerts and trigger appropriate risk management actions.",
    "parameters": {
      "customer_risk_profile": {
        "type": "string",
        "required": true,
        "description": "JSON string containing customer risk profile data"
      },
      "rule_set": {
        "type": "string",
        "required": true,
        "description": "Rule set to apply: standard, high_risk, or custom"
      },
      "alert_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold score for triggering alerts (0-100)",
        "default": 75
      },
      "alert_types": {
        "type": "array",
        "required": false,
        "description": "Types of alerts to generate",
        "items": {"type": "string"},
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid risk profile: customer_risk_profile must be valid JSON string",
      "Invalid rule set: rule_set must be one of [standard, high_risk, custom]",
      "Invalid alert threshold: alert_threshold must be between 0 and 100",
      "Rule evaluation error: Unable to evaluate rules against provided risk profile"
    ],
    "usage": "Provide customer_risk_profile as JSON string and specify rule_set. Optionally configure alert_threshold and alert_types for customized alerting.",
    "output_details": {
      "triggered_alerts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of triggered alert messages"
      },
      "alert_severity_levels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Severity levels for each triggered alert"
      },
      "recommended_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended actions based on triggered alerts"
      },
      "alert_count": {
        "type": "integer",
        "description": "Total number of alerts generated"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Report Generator",
    "tool_description": "
