field_name: databases
subfield: Database Schema Design and Modeling
task: Create and validate entity-relationship diagrams and data models
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task is medium difficulty. It involves multiple interconnected subproblems (entity identification, relationship mapping, constraint validation, normalization), requires coordination between schema components, and has moderate risk since poor design affects entire applications. However, the domain is well-established with clear best practices.\n\n**STEP 2 — Set a tool budget**\n\nFor medium difficulty, targeting 12 tools to cover entity management, relationship modeling, constraint validation, normalization analysis, and diagram generation workflows.\n\n**STEP 3 — List all tool names and dependencies**\n\nTools and their data flows:\n- Entity_Creator → entities → Relationship_Mapper, Attribute_Manager\n- Attribute_Manager → attributes → Constraint_Validator, Data_Type_Analyzer  \n- Relationship_Mapper → relationships → Cardinality_Analyzer, Foreign_Key_Generator\n- Cardinality_Analyzer → cardinality rules → ER_Diagram_Generator\n- Constraint_Validator → validation results → Schema_Validator\n- Normalization_Analyzer → normal form analysis → Schema_Optimizer\n- Data_Type_Analyzer → type recommendations → Schema_Validator\n- Foreign_Key_Generator → foreign keys → Schema_Validator\n- Schema_Validator → validation report → ER_Diagram_Generator\n- Schema_Optimizer → optimization suggestions → Schema_Exporter\n- ER_Diagram_Generator → diagram specifications → Schema_Exporter\n- Schema_Exporter → final schema artifacts\n\n**STEP 4 — Multi-tool plans**\n\nSimple plans:\n1. Entity_Creator → Attribute_Manager → ER_Diagram_Generator (basic entity modeling)\n2. Relationship_Mapper → Cardinality_Analyzer → Foreign_Key_Generator (relationship design)\n\nMedium plans:\n1. Entity_Creator → Attribute_Manager → Constraint_Validator → Schema_Validator → ER_Diagram_Generator (validated entity design)\n2. Relationship_Mapper → Cardinality_Analyzer → Foreign_Key_Generator → Schema_Validator → Schema_Optimizer (optimized relationship modeling)\n\nComplex plans:\n1. Full workflow: Entity_Creator → Attribute_Manager → Relationship_Mapper → Cardinality_Analyzer → Constraint_Validator → Data_Type_Analyzer → Foreign_Key_Generator → Schema_Validator → Normalization_Analyzer → Schema_Optimizer → ER_Diagram_Generator → Schema_Exporter (complete schema design and validation)\n2. Iterative refinement: Entity_Creator → Relationship_Mapper → Schema_Validator → Schema_Optimizer → Normalization_Analyzer → Schema_Validator → ER_Diagram_Generator (design with validation loops)\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Entity_Creator\",\n  \"tool_description\": \"Creates database entities with basic properties and metadata for ER diagram development.\",\n  \"parameters\": {\n    \"entity_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the database entity to create\"\n    },\n    \"entity_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of entity: strong, weak, or associative\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Brief description of the entity's purpose\",\n      \"default\": \"\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid entity name: Entity name must be non-empty and contain only alphanumeric characters and underscores.\",\n    \"Invalid entity type: Entity type must be one of [strong, weak, associative].\",\n    \"Duplicate entity: An entity with this name already exists in the current schema.\"\n  ],\n  \"usage\": \"Provide entity_name and entity_type to create a new database entity. Optionally include a description for documentation purposes.\",\n  \"output_details\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the created entity\"\n    },\n    \"entity_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the created entity\"\n    },\n    \"entity_type\": {\n      \"type\": \"string\",\n      \"description\": \"Type\
  \ of the entity (strong, weak, or associative)\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"description\": \"Creation status message\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Attribute_Manager\",\n  \"tool_description\": \"Manages attributes for database entities including primary keys, data types, and constraints.\",\n  \"parameters\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier of the entity to modify\"\n    },\n    \"attribute_names\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of attribute names to add to the entity\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"data_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Data types for each attribute (VARCHAR, INTEGER, DATE, etc.)\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"primary_key_attributes\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Attribute names that form the primary key\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    },\n    \"nullable_attributes\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Attribute names that can contain null values\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    },\n    \"unique_attributes\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Attribute names that must have unique values\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    }\n  },\n  \"error_messages\": [\n    \"Entity not found: The specified entity_id does not exist in the current schema.\",\n    \"Mismatched arrays: attribute_names and data_types arrays must have the same length.\",\n    \"Invalid data type: One or more data types are not recognized database types.\",\n    \"Invalid primary key: Primary key attributes must be subset of attribute_names.\",\n    \"Duplicate attribute: One or more attribute names already exist for this entity.\"\n  ],\n  \"usage\": \"Provide entity_id, attribute_names, and data_types arrays of equal length. Optionally specify primary_key_attributes, nullable_attributes, and unique_attributes.\",\n  \"output_details\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"description\": \"Entity identifier that was modified\"\n    },\n    \"attributes_added\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of attributes successfully added\"\n    },\n    \"primary_key_set\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether primary key was successfully defined\"\n    },\n    \"attribute_summary\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of all attributes with their properties\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Relationship_Mapper\",\n  \"tool_description\": \"Creates relationships between entities and defines relationship types and participation constraints.\",\n  \"parameters\": {\n    \"relationship_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the relationship to create\"\n    },\n    \"entity_ids\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of entity IDs participating in the relationship\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 2,\n      \"maxItems\": 10\n    },\n    \"relationship_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of relationship: identifying, non-identifying, or aggregation\"\n    },\n    \"participation_constraints\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Participation for each entity: total or partial\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    }\n\
  \  },\n  \"error_messages\": [\n    \"Invalid relationship name: Relationship name must be non-empty and unique.\",\n    \"Invalid entity IDs: One or more entity IDs do not exist in the current schema.\",\n    \"Invalid relationship type: Type must be one of [identifying, non-identifying, aggregation].\",\n    \"Invalid participation constraints: Each constraint must be 'total' or 'partial'.\",\n    \"Constraint mismatch: participation_constraints array length must match entity_ids length if provided.\"\n  ],\n  \"usage\": \"Provide relationship_name, entity_ids array, and relationship_type. Optionally specify participation_constraints for each participating entity.\",\n  \"output_details\": {\n    \"relationship_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the created relationship\"\n    },\n    \"relationship_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the created relationship\"\n    },\n    \"participating_entities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of entity names participating in the relationship\"\n    },\n    \"relationship_type\": {\n      \"type\": \"string\",\n      \"description\": \"Type of the created relationship\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Cardinality_Analyzer\",\n  \"tool_description\": \"Analyzes and sets cardinality constraints for relationships between entities.\",\n  \"parameters\": {\n    \"relationship_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier of the relationship to analyze\"\n    },\n    \"cardinality_ratios\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Cardinality for each entity in format 'min:max' (e.g., '1:1', '1:N', '0:M')\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 2,\n      \"maxItems\": 10\n    },\n    \"business_rules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Business rules that govern the relationship cardinality\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    }\n  },\n  \"error_messages\": [\n    \"Relationship not found: The specified relationship_id does not exist.\",\n    \"Invalid cardinality format: Each ratio must be in format 'min:max' where min and max are numbers or N/M.\",\n    \"Cardinality mismatch: Number of cardinality ratios must match number of entities in relationship.\",\n    \"Conflicting cardinalities: The specified cardinalities create logical conflicts.\"\n  ],\n  \"usage\": \"Provide relationship_id and cardinality_ratios array matching the number of participating entities. Optionally include business_rules for documentation.\",\n  \"output_details\": {\n    \"relationship_id\": {\n      \"type\": \"string\",\n      \"description\": \"Relationship identifier that was analyzed\"\n    },\n    \"cardinality_type\": {\n      \"type\": \"string\",\n      \"description\": \"Overall relationship type (one-to-one, one-to-many, many-to-many)\"\n    },\n    \"entity_cardinalities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Cardinality constraints for each participating entity\"\n    },\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of cardinality validation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Constraint_Validator\",\n  \"tool_description\": \"Validates integrity constraints including primary keys, foreign keys, check constraints, and business rules.\",\n  \"parameters\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Entity identifier to validate constraints for\"\n    },\n    \"constraint_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Types of constraints to validate\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"check_constraints\"\
  : {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Custom check constraints to validate\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    },\n    \"business_rules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Business rules to validate against the entity\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    },\n    \"strict_mode\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to use strict validation rules\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Entity not found: The specified entity_id does not exist in the schema.\",\n    \"Invalid constraint type: Constraint types must be from [primary_key, foreign_key, unique, not_null, check, business_rule].\",\n    \"Malformed check constraint: One or more check constraints have invalid syntax.\",\n    \"Constraint conflict: Multiple constraints conflict with each other.\",\n    \"Missing required constraint: Entity is missing required primary key constraint.\"\n  ],\n  \"usage\": \"Provide entity_id and constraint_types to validate. Optionally include check_constraints, business_rules, and set strict_mode for comprehensive validation.\",\n  \"output_details\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"description\": \"Entity identifier that was validated\"\n    },\n    \"validation_passed\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether all constraint validations passed\"\n    },\n    \"constraint_results\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Detailed results for each constraint type validated\"\n    },\n    \"violations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of constraint violations found\"\n    },\n    \"recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Recommendations to fix constraint violations\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data_Type_Analyzer\",\n  \"tool_description\": \"Analyzes and recommends optimal data types for entity attributes based on constraints and usage patterns.\",\n  \"parameters\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Entity identifier to analyze data types for\"\n    },\n    \"database_system\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target database system (MySQL, PostgreSQL, Oracle, SQL_Server)\"\n    },\n    \"performance_priority\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Optimization priority: storage, performance, or compatibility\",\n      \"default\": \"performance\"\n    }\n  },\n  \"error_messages\": [\n    \"Entity not found: The specified entity_id does not exist in the schema.\",\n    \"Unsupported database system: Database system must be one of [MySQL, PostgreSQL, Oracle, SQL_Server].\",\n    \"Invalid performance priority: Priority must be one of [storage, performance, compatibility].\",\n    \"No attributes found: Entity has no attributes to analyze data types for.\"\n  ],\n  \"usage\": \"Provide entity_id and target database_system. Optionally specify performance_priority to optimize recommendations for storage efficiency, query performance, or cross-platform compatibility.\",\n  \"output_details\": {\n    \"entity_id\": {\n      \"type\": \"string\",\n      \"description\": \"Entity identifier that was analyzed\"\n    },\n    \"database_system\": {\n      \"type\": \"string\",\n      \"description\": \"Target database system for recommendations\"\n    },\n    \"type_recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Recommended data types for each attribute\"\n    },\n    \"optimization_notes\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n\
  \      \"description\": \"Notes on data type optimizations and trade-offs\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Foreign_Key_Generator\",\n  \"tool_description\": \"Generates foreign key constraints based on relationships between entities and validates referential integrity.\",\n  \"parameters\": {\n    \"relationship_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Relationship identifier to generate foreign keys for\"\n    },\n    \"referential_actions\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Actions for UPDATE and DELETE (CASCADE, SET_NULL, RESTRICT, NO_ACTION)\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 2,\n      \"maxItems\": 2,\n      \"default\": [\"RESTRICT\", \"RESTRICT\"]\n    }\n  },\n  \"error_messages\": [\n    \"Relationship not found: The specified relationship_id does not exist.\",\n    \"Invalid referential action: Actions must be from [CASCADE, SET_NULL, RESTRICT, NO_ACTION].\",\n    \"Incorrect action count: Exactly two actions required: [UPDATE_action, DELETE_action].\",\n    \"Primary key missing: Referenced entity must have a primary key defined.\",\n    \"Data type mismatch: Foreign key attributes must match referenced primary key data types.\"\n  ],\n  \"usage\": \"Provide relationship_id to generate foreign key constraints. Optionally specify referential_actions array with UPDATE and DELETE actions.\",\n  \"output_details\": {\n    \"relationship_id\": {\n      \"type\": \"string\",\n      \"description\": \"Relationship identifier processed\"\n    },\n    \"foreign_keys_created\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of foreign key constraints created\"\n    },\n    \"foreign_key_details\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Details of each foreign key constraint created\"\n    },\n    \"referential_integrity\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether referential integrity is maintained\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Schema_Validator\",\n  \"tool_description\": \"Performs comprehensive validation of the entire database schema including consistency checks, constraint validation, and best practice compliance.\",\n  \"parameters\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the schema to validate\"\n    },\n    \"validation_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Validation strictness: basic, standard, or comprehensive\",\n      \"default\": \"standard\"\n    },\n    \"check_naming_conventions\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to validate naming conventions\",\n      \"default\": true\n    },\n    \"check_normalization\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check normalization compliance\",\n      \"default\": true\n    },\n    \"target_normal_form\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Target normalization level: 1NF, 2NF, 3NF, or BCNF\",\n      \"default\": \"3NF\"\n    },\n    \"custom_rules\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Custom validation rules to apply\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    }\n  },\n  \"error_messages\": [\n    \"Schema not found: The specified schema_name does not exist.\",\n    \"Invalid validation level: Level must be one of [basic, standard, comprehensive].\",\n    \"Invalid normal form: Target normal form must be one of [1NF, 2NF, 3NF, BCNF].\",\n    \"Malformed custom rule: One or more custom rules have invalid syntax.\",\n    \"Empty schema: Schema contains no entities to validate.\"\n  ],\n  \"usage\": \"Provide schema_name for validation. Configure validation_level, naming and normalization checks, target_normal_form, and\
  \ custom_rules as needed.\",\n  \"output_details\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the validated schema\"\n    },\n    \"validation_passed\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether overall schema validation passed\"\n    },\n    \"entity_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of entities validated\"\n    },\n    \"relationship_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of relationships validated\"\n    },\n    \"errors\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Critical errors found during validation\"\n    },\n    \"warnings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Warnings and best practice violations\"\n    },\n    \"validation_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of validation results and overall schema health\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Normalization_Analyzer\",\n  \"tool_description\": \"Analyzes database schema for normalization compliance and identifies denormalization opportunities.\",\n  \"parameters\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the schema to analyze for normalization\"\n    },\n    \"analysis_depth\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Depth of analysis: surface, detailed, or exhaustive\",\n      \"default\": \"detailed\"\n    }\n  },\n  \"error_messages\": [\n    \"Schema not found: The specified schema_name does not exist.\",\n    \"Invalid analysis depth: Depth must be one of [surface, detailed, exhaustive].\",\n    \"Insufficient schema data: Schema must have entities with attributes for normalization analysis.\"\n  ],\n  \"usage\": \"Provide schema_name to analyze normalization. Optionally set analysis_depth for different levels of detail in the normalization assessment.\",\n  \"output_details\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the analyzed schema\"\n    },\n    \"current_normal_form\": {\n      \"type\": \"string\",\n      \"description\": \"Highest normal form currently achieved by the schema\"\n    },\n    \"normalization_violations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of normalization violations found\"\n    },\n    \"normalization_recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Recommendations for achieving higher normal forms\"\n    },\n    \"denormalization_opportunities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Potential denormalization opportunities for performance\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Schema_Optimizer\",\n  \"tool_description\": \"Provides optimization recommendations for database schema including indexing strategies, performance improvements, and structural modifications.\",\n  \"parameters\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the schema to optimize\"\n    },\n    \"optimization_goals\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Optimization objectives\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 5\n    },\n    \"performance_constraints\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Performance constraints and requirements\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    }\n  },\n  \"error_messages\": [\n    \"Schema not found: The specified schema_name does not exist.\",\n    \"Invalid optimization goal: Goals must be from [performance, storage, maintainability, scalability, security].\",\n    \"Conflicting goals: Some\
  \ optimization goals conflict with each other.\",\n    \"Empty schema: Schema must contain entities and relationships for optimization.\"\n  ],\n  \"usage\": \"Provide schema_name and optimization_goals array. Optionally specify performance_constraints for targeted optimization recommendations.\",\n  \"output_details\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the optimized schema\"\n    },\n    \"optimization_score\": {\n      \"type\": \"number\",\n      \"description\": \"Current optimization score from 0-100\"\n    },\n    \"indexing_recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Recommended indexes for performance improvement\"\n    },\n    \"structural_recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Structural modifications for optimization\"\n    },\n    \"performance_impact\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Expected performance impact of recommendations\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"ER_Diagram_Generator\",\n  \"tool_description\": \"Generates visual entity-relationship diagrams from validated schema definitions with customizable layout and styling options.\",\n  \"parameters\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the schema to generate diagram for\"\n    },\n    \"diagram_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Output format: SVG, PNG, PDF, or PlantUML\",\n      \"default\": \"SVG\"\n    },\n    \"layout_style\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Diagram layout: hierarchical, circular, or force_directed\",\n      \"default\": \"hierarchical\"\n    },\n    \"include_attributes\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to show attributes in the diagram\",\n      \"default\": true\n    },\n    \"show_cardinalities\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to display relationship cardinalities\",\n      \"default\": true\n    },\n    \"show_constraints\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to show constraint information\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Schema not found: The specified schema_name does not exist.\",\n    \"Invalid diagram format: Format must be one of [SVG, PNG, PDF, PlantUML].\",\n    \"Invalid layout style: Style must be one of [hierarchical, circular, force_directed].\",\n    \"Empty schema: Schema must contain entities for diagram generation.\",\n    \"Diagram generation failed: Unable to generate diagram due to schema complexity or formatting issues.\"\n  ],\n  \"usage\": \"Provide schema_name to generate ER diagram. Configure diagram_format, layout_style, and visibility options for attributes, cardinalities, and constraints.\",\n  \"output_details\": {\n    \"schema_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the schema used for diagram generation\"\n    },\n    \"diagram_format\": {\n      \"type\": \"string\",\n      \"description\": \"Format of the generated diagram\"\n    },\n    \"diagram_url\": {\n      \"type\": \"string\",\n      \"description\": \"URL or path to the generated diagram file\"\n    },\n    \"entity_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of entities included in the diagram\"\n    },\n    \"relationship_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of relationships shown in the diagram\"\n    },\n    \"generation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of diagram generation process\"\n    }\n  }\n}\n```"
