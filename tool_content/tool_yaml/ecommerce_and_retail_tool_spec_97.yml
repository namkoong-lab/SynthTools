field_name: ecommerce_and_retail
subfield: Customer Reviews and Ratings
task: Analyze review sentiment and extract key themes from customer feedback
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task has medium difficulty. It requires processing unstructured text data, applying NLP techniques for sentiment analysis, extracting themes through topic modeling or clustering, handling diverse review formats and languages, and managing potential bias in customer feedback. The coordination between sentiment analysis and theme extraction adds complexity, but the problem scope is well-defined with established methodologies.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target 12 tools within the 10-15 range to provide comprehensive coverage of sentiment analysis, theme extraction, data preprocessing, and result synthesis workflows.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Review Data Loader** - Consumes: file paths, formats → Produces: structured review data
  2. **Text Preprocessor** - Consumes: raw text → Produces: cleaned, normalized text
  3. **Language Detector** - Consumes: text → Produces: language identification
  4. **Sentiment Analyzer** - Consumes: preprocessed text → Produces: sentiment scores and labels
  5. **Keyword Extractor** - Consumes: text → Produces: relevant keywords and phrases
  6. **Theme Clusterer** - Consumes: text, keywords → Produces: thematic clusters
  7. **Topic Modeler** - Consumes: preprocessed text → Produces: topics and distributions
  8. **Review Aggregator** - Consumes: individual results → Produces: aggregated statistics
  9. **Sentiment Trend Analyzer** - Consumes: sentiment data, timestamps → Produces: trend analysis
  10. **Theme Comparator** - Consumes: multiple theme sets → Produces: comparative analysis
  11. **Insight Generator** - Consumes: all analysis results → Produces: key insights and recommendations
  12. **Report Builder** - Consumes: all outputs → Produces: formatted analytical report

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Sentiment Analysis**: Review Data Loader → Text Preprocessor → Sentiment Analyzer → Review Aggregator
  2. **Quick Theme Extraction**: Review Data Loader → Text Preprocessor → Keyword Extractor → Theme Clusterer

  **Medium Plans:**
  1. **Comprehensive Review Analysis**: Review Data Loader → Text Preprocessor → Language Detector → Sentiment Analyzer → Topic Modeler → Review Aggregator → Insight Generator
  2. **Temporal Sentiment Tracking**: Review Data Loader → Text Preprocessor → Sentiment Analyzer → Sentiment Trend Analyzer → Report Builder

  **Complex Plans:**
  1. **Full Analytics Pipeline**: Review Data Loader → Text Preprocessor → Language Detector → Sentiment Analyzer → Keyword Extractor → Topic Modeler → Theme Clusterer → Review Aggregator → Sentiment Trend Analyzer → Insight Generator → Report Builder
  2. **Comparative Theme Analysis**: Review Data Loader → Text Preprocessor → Topic Modeler → Theme Clusterer → Theme Comparator → Keyword Extractor → Insight Generator → Report Builder

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Review Data Loader",
    "tool_description": "Loads customer review data from various file formats and sources, extracting review text, ratings, timestamps, and metadata into a structured format for analysis.",
    "parameters": {
      "file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the review data file"
      },
      "file_format": {
        "type": "string",
        "required": true,
        "description": "Format of the input file: csv, json, xlsx, or txt"
      },
      "text_column": {
        "type": "string",
        "required": true,
        "description": "Name of the column containing review text"
      },
      "rating_column": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Name of the column containing ratings"
      },
      "timestamp_column": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Name of the column containing review timestamps"
      }
    },
    "error_messages": [
      "File not found: Check that the specified file_path exists and is accessible.",
      "Unsupported format: Use one of the supported formats: csv, json, xlsx, or txt.",
      "Column not found: Verify that the specified column names exist in the data file.",
      "Empty dataset: The file contains no data or all rows are empty.",
      "Invalid file structure: Ensure the file follows the expected format structure."
    ],
    "usage": "Specify the file_path, file_format, and text_column. Optionally provide rating_column and timestamp_column if available in your data.",
    "output_details": {
      "review_count": {
        "type": "integer",
        "description": "Total number of reviews loaded"
      },
      "review_texts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of review text content"
      },
      "ratings": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of review ratings if available"
      },
      "timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of review timestamps in ISO format if available"
      },
      "status": {
        "type": "string",
        "description": "Loading status message"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Text Preprocessor",
    "tool_description": "Cleans and preprocesses review text by removing noise, normalizing text, handling special characters, and preparing text for downstream analysis tasks.",
    "parameters": {
      "texts": {
        "type": "array",
        "required": true,
        "description": "Array of raw review texts to preprocess",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10000
      },
      "remove_html": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to remove HTML tags from text"
      },
      "remove_urls": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to remove URLs from text"
      },
      "normalize_whitespace": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to normalize whitespace characters"
      },
      "min_length": {
        "type": "integer",
        "required": false,
        "default": 10,
        "description": "Minimum character length for processed text"
      }
    },
    "error_messages": [
      "Empty text array: Provide at least one text string to preprocess.",
      "Invalid text content: Some texts contain only special characters or are corrupted.",
      "Parameter out of range: min_length must be between 1 and 1000 characters.",
      "Processing failed: Text preprocessing encountered an unexpected error."
    ],
    "usage": "Provide an array of raw review texts and configure preprocessing options. The tool will clean and normalize the texts for further analysis.",
    "output_details": {
      "preprocessed_texts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of cleaned and preprocessed text strings"
      },
      "filtered_count": {
        "type": "integer",
        "description": "Number of texts filtered out due to length constraints"
      },
      "processing_summary": {
        "type": "string",
        "description": "Summary of preprocessing operations performed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Language Detector",
    "tool_description": "Detects the language of review texts and provides confidence scores, enabling language-specific processing and filtering of multilingual review datasets.",
    "parameters": {
      "texts": {
        "type": "array",
        "required": true,
        "description": "Array of texts to analyze for language detection",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5000
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "default": 0.8,
        "description": "Minimum confidence score for language detection (0.1-1.0)"
      }
    },
    "error_messages": [
      "Empty input: Provide at least one text string for language detection.",
      "Invalid confidence threshold: Value must be between 0.1 and 1.0.",
      "Text too short: Some texts are too short for reliable language detection.",
      "Detection failed: Language detection service encountered an error."
    ],
    "usage": "Submit an array of review texts and optionally set a confidence threshold. The tool returns detected languages with confidence scores.",
    "output_details": {
      "detected_languages": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of detected language codes (ISO 639-1)"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of confidence scores for each detection"
      },
      "uncertain_count": {
        "type": "integer",
        "description": "Number of texts with confidence below threshold"
      },
      "language_distribution": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Summary of language distribution in format 'language:count'"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sentiment Analyzer",
    "tool_description": "Analyzes sentiment of review texts using advanced NLP models, providing sentiment labels, confidence scores, and emotional intensity metrics for customer feedback analysis.",
    "parameters": {
      "texts": {
        "type": "array",
        "required": true,
        "description": "Array of preprocessed review texts to analyze",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10000
      },
      "model_type": {
        "type": "string",
        "required": false,
        "default": "transformer",
        "description": "Sentiment analysis model: transformer, lstm, or lexicon"
      },
      "language": {
        "type": "string",
        "required": false,
        "default": "en",
        "description": "Language code for text analysis (ISO 639-1)"
      },
      "include_emotions": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to include detailed emotion analysis"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "default": 0.6,
        "description": "Minimum confidence score for sentiment classification"
      },
      "batch_size": {
        "type": "integer",
        "required": false,
        "default": 32,
        "description": "Processing batch size for efficiency (1-100)"
      }
    },
    "error_messages": [
      "Empty text array: Provide at least one text string for sentiment analysis.",
      "Unsupported model: Use transformer, lstm, or lexicon for model_type.",
      "Invalid language code: Provide a valid ISO 639-1 language code.",
      "Confidence threshold out of range: Value must be between 0.1 and 1.0.",
      "Batch size invalid: Must be between 1 and 100.",
      "Text processing error: Some texts could not be processed for sentiment analysis."
    ],
    "usage": "Provide preprocessed review texts and configure analysis parameters. The tool returns sentiment labels, scores, and optional emotion analysis.",
    "output_details": {
      "sentiment_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of sentiment labels: positive, negative, or neutral"
      },
      "sentiment_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of sentiment confidence scores (0-1)"
      },
      "polarity_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of polarity scores (-1 to 1, negative to positive)"
      },
      "emotion_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of dominant emotion labels if emotion analysis enabled"
      },
      "processing_summary": {
        "type": "string",
        "description": "Summary of sentiment analysis results and statistics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Keyword Extractor",
    "tool_description": "Extracts important keywords and phrases from review texts using TF-IDF, named entity recognition, and phrase extraction techniques to identify key topics and concepts.",
    "parameters": {
      "texts": {
        "type": "array",
        "required": true,
        "description": "Array of review texts for keyword extraction",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5000
      },
      "max_keywords": {
        "type": "integer",
        "required": false,
        "default": 20,
        "description": "Maximum number of keywords to extract per text"
      },
      "min_frequency": {
        "type": "integer",
        "required": false,
        "default": 2,
        "description": "Minimum frequency for keyword inclusion"
      },
      "include_phrases": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to extract multi-word phrases"
      },
      "extract_entities": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to extract named entities"
      }
    },
    "error_messages": [
      "Empty text input: Provide at least one text for keyword extraction.",
      "Invalid max_keywords: Value must be between 1 and 100.",
      "Invalid min_frequency: Value must be between 1 and 50.",
      "Insufficient text content: Texts are too short or lack meaningful content for keyword extraction.",
      "Extraction failed: Keyword extraction process encountered an error."
    ],
    "usage": "Submit review texts and configure extraction parameters. The tool identifies and returns relevant keywords and phrases with importance scores.",
    "output_details": {
      "keywords": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of extracted keywords across all texts"
      },
      "keyword_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of importance scores for each keyword"
      },
      "phrases": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of extracted phrases if phrase extraction enabled"
      },
      "entities": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of named entities if entity extraction enabled"
      },
      "extraction_summary": {
        "type": "string",
        "description": "Summary of keyword extraction results and statistics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Theme Clusterer",
    "tool_description": "Groups review texts into thematic clusters based on content similarity, using machine learning clustering algorithms to identify common themes and topics in customer feedback.",
    "parameters": {
      "texts": {
        "type": "array",
        "required": true,
        "description": "Array of review texts to cluster into themes",
        "items": {"type": "string"},
        "minItems": 10,
        "maxItems": 10000
      },
      "keywords": {
        "type": "array",
        "required": false,
        "default": "None",
        "description": "Array of extracted keywords to enhance clustering",
        "items": {"type": "string"}
      },
      "num_clusters": {
        "type": "integer",
        "required": false,
        "default": 5,
        "description": "Number of theme clusters to generate (2-20)"
      },
      "clustering_method": {
        "type": "string",
        "required": false,
        "default": "kmeans",
        "description": "Clustering algorithm: kmeans, hierarchical, or dbscan"
      },
      "min_cluster_size": {
        "type": "integer",
        "required": false,
        "default": 3,
        "description": "Minimum number of reviews per cluster"
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "default": 0.3,
        "description": "Similarity threshold for clustering (0.1-0.9)"
      }
    },
    "error_messages": [
      "Insufficient data: Provide at least 10 texts for meaningful clustering.",
      "Invalid cluster count: num_clusters must be between 2 and 20.",
      "Unsupported method: Use kmeans, hierarchical, or dbscan for clustering_method.",
      "Invalid parameters: min_cluster_size must be >= 1, similarity_threshold must be between 0.1 and 0.9.",
      "Clustering failed: Unable to generate meaningful clusters with current parameters.",
      "Convergence error: Clustering algorithm failed to converge with given settings."
    ],
    "usage": "Provide review texts and optionally keywords to enhance clustering. Configure the number of clusters and algorithm parameters for optimal theme identification.",
    "output_details": {
      "cluster_labels": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Array of cluster assignments for each input text"
      },
      "cluster_themes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of descriptive theme names for each cluster"
      },
      "cluster_sizes": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Array of review counts for each cluster"
      },
      "theme_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of top keywords for each theme cluster"
      },
      "clustering_quality": {
        "type": "number",
        "description": "Clustering quality score (0-1)"
      },
      "clustering_summary": {
        "type": "string",
        "description": "Summary of clustering results and theme distribution"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Topic Modeler",
    "tool_description": "Applies topic modeling algorithms like LDA to discover latent topics in review collections, identifying topic distributions and representative terms for each discovered topic.",
    "parameters": {
      "texts": {
        "type": "array",
        "required": true,
        "description": "Array of preprocessed review texts for topic modeling",
        "items": {"type": "string"},
        "minItems": 20,
        "maxItems": 50000
      },
      "num_topics": {
        "type": "integer",
        "required": false,
        "default": 8,
        "description": "Number of topics to discover (2-50)"
      },
      "algorithm": {
        "type": "string",
        "required": false,
        "default": "lda",
        "description": "Topic modeling algorithm: lda, nmf, or bertopic"
      },
      "max_iterations": {
        "type": "integer",
        "required": false,
        "default": 100,
        "description": "Maximum iterations for model training"
      },
      "alpha": {
        "type": "number",
        "required": false,
        "default": 0.1,
        "description": "Document-topic density parameter (0.01-2.0)"
      },
      "beta": {
        "type": "number",
        "required": false,
        "default": 0.01,
        "description": "Topic-word density parameter (0.001-0.1)"
      },
      "random_seed": {
        "type": "integer",
        "required": false,
        "default": 42,
        "description": "Random seed for reproducible results"
      },
      "min_word_freq": {
        "type": "integer",
        "required": false,
        "default": 5,
        "description": "Minimum word frequency for inclusion in model"
      },
      "max_vocab_size": {
        "type": "integer",
        "required": false,
        "default": 5000,
        "description": "Maximum vocabulary size for model"
      },
      "remove_stopwords": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to remove stopwords from texts"
      },
      "coherence_metric": {
        "type": "string",
        "required": false,
        "default": "c_v",
        "description": "Topic coherence metric: c_v, u_mass, or c_npmi"
      }
    },
    "error_messages": [
      "Insufficient documents: Provide at least 20 texts for reliable topic modeling.",
      "Invalid topic count: num_topics must be between 2 and 50.",
      "Unsupported algorithm: Use lda, nmf, or bertopic for the algorithm parameter.",
      "Parameter out of range: alpha must be between 0.01-2.0, beta between 0.001-0.1.",
      "Invalid iteration count: max_iterations must be between 10 and 1000.",
      "Vocabulary too small: Texts contain insufficient unique words for modeling.",
      "Model convergence failed: Topic model failed to converge with current parameters.",
      "Unsupported coherence metric: Use c_v, u_mass, or c_npmi for coherence_metric."
    ],
    "usage": "Provide a collection of review texts and configure topic modeling parameters. The tool discovers latent topics and returns topic distributions and representative terms.",
    "output_details": {
      "topic_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of descriptive labels for discovered topics"
      },
      "topic_terms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of top terms for each topic (comma-separated)"
      },
      "document_topics": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of dominant topic assignments for each document"
      },
      "topic_weights": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of topic prevalence weights in the corpus"
      },
      "coherence_score": {
        "type": "number",
        "description": "Overall topic coherence score"
      },
      "perplexity": {
        "type": "number",
        "description": "Model perplexity score (lower is better)"
      },
      "modeling_summary": {
        "type": "string",
        "description": "Summary of topic modeling results and quality metrics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Aggregator",
    "tool_description": "Aggregates analysis results across multiple review analysis components, computing summary statistics, distributions, and consolidated metrics for comprehensive reporting.",
    "parameters": {
      "sentiment_labels": {
        "type": "array",
        "required": true,
        "description": "Array of sentiment classifications for reviews",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100000
      },
      "sentiment_scores": {
        "type": "array",
        "required": true,
        "description": "Array of sentiment confidence scores",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 100000
      },
      "ratings": {
        "type": "array",
        "required": false,
        "default": "None",
        "description": "Array of numerical ratings if available",
        "items": {"type": "number"}
      },
      "themes": {
        "type": "array",
        "required": false,
        "default": "None",
        "description": "Array of theme assignments for reviews",
        "items": {"type": "string"}
      },
      "timestamps": {
        "type": "array",
        "required": false,
        "default": "None",
        "description": "Array of review timestamps for temporal analysis",
        "items": {"type": "string"}
      },
      "group_by_time": {
        "type": "string",
        "required": false,
        "default": "month",
        "description": "Time grouping for temporal analysis: day, week, month, or year"
      }
    },
    "error_messages": [
      "Mismatched array lengths: sentiment_labels and sentiment_scores must have the same length.",
      "Empty required arrays: Provide at least one sentiment label and score.",
      "Invalid time grouping: Use day, week, month, or year for group_by_time.",
      "Invalid timestamp format: Timestamps must be in ISO 8601 format.",
      "Aggregation failed: Unable to compute aggregated statistics with provided data."
    ],
    "usage": "Provide sentiment analysis results and optionally include ratings, themes, and timestamps for comprehensive aggregation and statistical analysis.",
    "output_details": {
      "total_reviews": {
        "type": "integer",
        "description": "Total number of reviews analyzed"
      },
      "sentiment_distribution": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of sentiment counts in format 'sentiment:count'"
      },
      "average_sentiment_score": {
        "type": "number",
        "description": "Mean sentiment confidence score"
      },
      "rating_statistics": {
        "type": "string",
        "description": "Rating statistics summary if ratings provided"
      },
      "theme_distribution": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of theme counts in format 'theme:count'"
      },
      "temporal_trends": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of temporal sentiment trends if timestamps provided"
      },
      "key_insights": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of key statistical insights from aggregation"
      },
      "aggregation_summary": {
        "type": "string",
        "description": "Comprehensive summary of aggregated review analysis results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sentiment Trend Analyzer",
    "tool_description": "Analyzes temporal patterns in sentiment data to identify trends, seasonal variations, and significant changes in customer sentiment over time.",
    "parameters": {
      "sentiment_scores": {
        "type": "array",
        "required": true,
        "description": "Array of sentiment scores for trend analysis",
        "items": {"type": "number"},
        "minItems": 10,
        "maxItems": 100000
      },
      "timestamps": {
        "type": "array",
        "required": true,
        "description": "Array of timestamps corresponding to sentiment scores",
        "items": {"type": "string"},
        "minItems": 10,
        "maxItems": 100000
      },
      "time_granularity": {
        "type": "string",
        "required": false,
        "default": "week",
        "description": "Time aggregation level: day, week, month, or quarter"
      },
      "trend_method": {
        "type": "string",
        "required": false,
        "default": "linear",
        "description": "Trend analysis method: linear, polynomial, or moving_average"
      },
      "window_size": {
        "type": "integer",
        "required": false,
        "default": 7,
        "description": "Moving average window size for smoothing (3-30)"
      }
    },
    "error_messages": [
      "Array length mismatch: sentiment_scores and timestamps must have equal length.",
      "Insufficient data points: Provide at least 10 data points for trend analysis.",
      "Invalid time granularity: Use day, week, month, or quarter for time_granularity.",
      "Unsupported trend method: Use linear, polynomial, or moving_average for trend_method.",
      "Invalid window size: window_size must be between 3 and 30.",
      "Invalid timestamp format: All timestamps must be in valid ISO 8601 format.",
      "Trend calculation failed: Unable to compute trends with provided data."
    ],
    "usage": "Provide sentiment scores with corresponding timestamps and configure temporal analysis parameters. The tool identifies sentiment trends and patterns over time.",
    "output_details": {
      "trend_direction": {
        "type": "string",
        "description": "Overall trend direction: increasing, decreasing, or stable"
      },
      "trend_strength": {
        "type": "number",
        "description": "Trend strength coefficient (0-1)"
      },
      "trend_points": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of trend line values for visualization"
      },
      "change_points": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of significant sentiment change timestamps"
      },
      "seasonal_pattern": {
        "type": "string",
        "description": "Detected seasonal pattern description"
      },
      "volatility_score": {
        "type": "number",
        "description": "Sentiment volatility measure (0-1)"
      },
      "trend_summary": {
        "type": "string",
        "description": "Summary of sentiment trends and temporal patterns"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Theme Comparator",
    "tool_description": "Compares themes across different time periods, product categories, or customer segments to identify differences, similarities, and emerging patterns in customer feedback themes.",
    "parameters": {
      "theme_set_a": {
        "type": "array",
        "required": true,
        "description": "First set of themes for comparison",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "theme_set_b": {
        "type": "array",
        "required": true,
        "description": "Second set of themes for comparison",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "comparison_type": {
        "type": "string",
        "required": false,
        "default": "frequency",
        "description": "Comparison method: frequency, sentiment, or evolution"
      }
    },
    "error_messages": [
      "Empty theme sets: Both theme_set_a and theme_set_b must contain at least one theme.",
      "Invalid comparison type: Use frequency, sentiment, or evolution for comparison_type.",
      "Comparison failed: Unable to perform theme comparison with provided data."
    ],
    "usage": "Provide two sets of themes for comparison and specify the comparison method. The tool identifies similarities, differences, and patterns between theme sets.",
    "output_details": {
      "common_themes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of themes present in both sets"
      },
      "unique_to_a": {
        "type":
