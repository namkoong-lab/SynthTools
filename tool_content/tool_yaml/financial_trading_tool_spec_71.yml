field_name: financial_trading
subfield: risk_management_and_assessment
task: Regulatory compliance reporting and filing
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **hard** due to its extensive scope covering multiple regulatory frameworks, high ambiguity in interpreting complex compliance rules, significant coordination dependencies across departments, severe impact of errors (regulatory penalties, legal consequences), and substantial data infrastructure requirements for accurate reporting and audit trails.

  ## STEP 2 — Set a tool budget

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to comprehensively address regulatory compliance reporting workflows including data collection, validation, report generation, filing, and audit management.

  ## STEP 3 — List all tool names and dependencies

  **Tools and their data flow:**
  1. **Regulatory Framework Detector** → produces compliance requirements
  2. **Trade Data Aggregator** → consumes trade records → produces consolidated datasets
  3. **Position Data Collector** → consumes portfolio data → produces position snapshots
  4. **Risk Metrics Calculator** → consumes position/trade data → produces risk measurements
  5. **Compliance Rule Validator** → consumes data + rules → produces validation results
  6. **Regulatory Report Generator** → consumes validated data → produces formatted reports
  7. **Filing Deadline Tracker** → consumes regulatory calendar → produces deadline schedules
  8. **Document Version Controller** → consumes reports → produces versioned documents
  9. **Submission Status Monitor** → consumes filing records → produces status updates
  10. **Audit Trail Generator** → consumes all activities → produces audit logs
  11. **Data Quality Checker** → consumes raw data → produces quality assessments
  12. **Regulatory Change Monitor** → consumes regulatory updates → produces change notifications
  13. **Cross-Reference Validator** → consumes multiple reports → produces consistency checks
  14. **Electronic Filing Formatter** → consumes reports → produces filing-ready formats
  15. **Compliance Dashboard Creator** → consumes all metrics → produces summary dashboards
  16. **Regulatory Communication Logger** → consumes correspondence → produces communication records
  17. **Exception Report Generator** → consumes violations → produces exception documentation

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Position Report**: Position Data Collector → Risk Metrics Calculator → Regulatory Report Generator
  2. **Deadline Tracking**: Filing Deadline Tracker → Submission Status Monitor → Compliance Dashboard Creator

  **Medium Plans:**
  1. **Standard Filing Workflow**: Trade Data Aggregator → Data Quality Checker → Compliance Rule Validator → Regulatory Report Generator → Electronic Filing Formatter → Submission Status Monitor
  2. **Audit Preparation**: Audit Trail Generator → Document Version Controller → Cross-Reference Validator → Exception Report Generator

  **Complex Plans:**
  1. **Full Compliance Cycle**: Regulatory Framework Detector → Trade Data Aggregator + Position Data Collector → Data Quality Checker → Risk Metrics Calculator → Compliance Rule Validator → Regulatory Report Generator → Electronic Filing Formatter → Document Version Controller → Submission Status Monitor → Audit Trail Generator
  2. **Regulatory Change Management**: Regulatory Change Monitor → Compliance Rule Validator → Cross-Reference Validator → Exception Report Generator → Regulatory Communication Logger → Filing Deadline Tracker → Compliance Dashboard Creator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Regulatory Framework Detector",
    "tool_description": "Identifies applicable regulatory frameworks and compliance requirements based on firm characteristics and trading activities.",
    "parameters": {
      "firm_type": {
        "type": "string",
        "required": true,
        "description": "Type of financial institution (bank, broker_dealer, investment_advisor, hedge_fund, pension_fund)"
      },
      "jurisdictions": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of regulatory jurisdictions (US, EU, UK, APAC, etc.)"
      },
      "asset_classes": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Asset classes traded (equities, bonds, derivatives, commodities, forex, crypto)"
      },
      "aum_threshold": {
        "type": "number",
        "required": false,
        "description": "Assets under management in millions USD",
        "default": null
      }
    },
    "error_messages": [
      "Invalid firm type: Must be one of [bank, broker_dealer, investment_advisor, hedge_fund, pension_fund]",
      "Empty jurisdictions array: At least one jurisdiction must be specified",
      "Unsupported asset class: Use standard asset class names from the approved list",
      "Invalid AUM value: Must be a positive number or null"
    ],
    "usage": "Specify firm_type, jurisdictions, and asset_classes to identify applicable regulatory requirements. Optionally provide aum_threshold for size-based regulations.",
    "output_details": {
      "applicable_regulations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of applicable regulatory frameworks and rules"
      },
      "reporting_requirements": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Required reports and filings"
      },
      "key_deadlines": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Critical compliance deadlines"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Trade Data Aggregator",
    "tool_description": "Collects and consolidates trade data from multiple sources for regulatory reporting purposes.",
    "parameters": {
      "data_sources": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of data source identifiers or file paths"
      },
      "start_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "Start date for trade data collection"
      },
      "end_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "End date for trade data collection"
      },
      "trade_types": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Filter for specific trade types",
        "default": null
      },
      "counterparties": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Filter for specific counterparties",
        "default": null
      }
    },
    "error_messages": [
      "Invalid date range: end_date must be after start_date",
      "Data source unavailable: One or more specified data sources cannot be accessed",
      "Insufficient permissions: Access denied to specified data sources",
      "Date format error: Dates must be in ISO 8601 format"
    ],
    "usage": "Provide data_sources array and date range to aggregate trade data. Use optional filters for trade_types and counterparties to refine the dataset.",
    "output_details": {
      "total_trades": {
        "type": "integer",
        "description": "Total number of trades aggregated"
      },
      "trade_volume": {
        "type": "number",
        "description": "Total notional value of trades"
      },
      "data_completeness": {
        "type": "number",
        "description": "Percentage of complete trade records"
      },
      "aggregation_summary": {
        "type": "string",
        "description": "Summary of the aggregation process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Position Data Collector",
    "tool_description": "Captures current and historical position data across portfolios for regulatory position reporting.",
    "parameters": {
      "portfolio_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of portfolio identifiers to collect positions from"
      },
      "snapshot_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "Date for position snapshot"
      },
      "include_derivatives": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include derivative positions",
        "default": true
      }
    },
    "error_messages": [
      "Portfolio not found: One or more portfolio IDs do not exist",
      "Invalid snapshot date: Date must be a valid business day",
      "Data unavailable: Position data not available for the specified date"
    ],
    "usage": "Specify portfolio_ids and snapshot_date to collect position data. Set include_derivatives to false to exclude derivative positions.",
    "output_details": {
      "total_positions": {
        "type": "integer",
        "description": "Total number of positions collected"
      },
      "gross_exposure": {
        "type": "number",
        "description": "Gross notional exposure across all positions"
      },
      "net_exposure": {
        "type": "number",
        "description": "Net notional exposure across all positions"
      },
      "collection_status": {
        "type": "string",
        "description": "Status of the position collection process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Metrics Calculator",
    "tool_description": "Calculates regulatory risk metrics including VaR, leverage ratios, and concentration measures from position and trade data.",
    "parameters": {
      "calculation_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "Date for risk metric calculations"
      },
      "confidence_level": {
        "type": "number",
        "required": true,
        "description": "Confidence level for VaR calculation (0.90-0.99)"
      },
      "holding_period": {
        "type": "integer",
        "required": true,
        "description": "Holding period in days for risk calculations"
      },
      "portfolio_value": {
        "type": "number",
        "required": true,
        "description": "Total portfolio value for calculations"
      },
      "regulatory_capital": {
        "type": "number",
        "required": true,
        "description": "Regulatory capital amount"
      },
      "risk_methodology": {
        "type": "string",
        "required": false,
        "description": "Risk calculation methodology (historical, monte_carlo, parametric)",
        "default": "historical"
      },
      "include_stress_tests": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include regulatory stress test scenarios",
        "default": false
      },
      "concentration_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold percentage for concentration risk calculation",
        "default": 5.0
      },
      "correlation_adjustment": {
        "type": "boolean",
        "required": false,
        "description": "Apply correlation adjustments to risk metrics",
        "default": true
      },
      "market_data_source": {
        "type": "string",
        "required": false,
        "description": "Source for market data used in calculations",
        "default": "primary"
      }
    },
    "error_messages": [
      "Invalid confidence level: Must be between 0.90 and 0.99",
      "Invalid holding period: Must be a positive integer between 1 and 250 days",
      "Insufficient data: Not enough historical data for the selected methodology",
      "Invalid methodology: Use one of [historical, monte_carlo, parametric]",
      "Negative values: portfolio_value and regulatory_capital must be positive",
      "Market data unavailable: Cannot access market data for the specified date"
    ],
    "usage": "Provide calculation_date, confidence_level, holding_period, portfolio_value, and regulatory_capital. Optionally specify risk_methodology and other parameters for customized calculations.",
    "output_details": {
      "value_at_risk": {
        "type": "number",
        "description": "Calculated Value at Risk"
      },
      "expected_shortfall": {
        "type": "number",
        "description": "Expected shortfall (conditional VaR)"
      },
      "leverage_ratio": {
        "type": "number",
        "description": "Regulatory leverage ratio"
      },
      "concentration_risk": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Concentration risk measures by asset class"
      },
      "stress_test_results": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Results from regulatory stress test scenarios"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Rule Validator",
    "tool_description": "Validates trading and position data against regulatory compliance rules and identifies violations.",
    "parameters": {
      "validation_type": {
        "type": "string",
        "required": true,
        "description": "Type of validation (trade_validation, position_limits, exposure_limits, concentration_limits)"
      },
      "regulatory_framework": {
        "type": "string",
        "required": true,
        "description": "Applicable regulatory framework (MiFID2, Dodd_Frank, EMIR, Basel_III, etc.)"
      },
      "validation_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "Date for compliance validation"
      },
      "entity_id": {
        "type": "string",
        "required": true,
        "description": "Entity or portfolio identifier being validated"
      },
      "threshold_overrides": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Custom threshold values to override defaults",
        "default": null
      }
    },
    "error_messages": [
      "Unknown validation type: Use one of [trade_validation, position_limits, exposure_limits, concentration_limits]",
      "Unsupported regulatory framework: Framework not recognized or not implemented",
      "Entity not found: Specified entity_id does not exist in the system",
      "Invalid threshold values: Override values must be positive numbers"
    ],
    "usage": "Specify validation_type, regulatory_framework, validation_date, and entity_id to perform compliance validation. Use threshold_overrides to apply custom limits.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result (passed, failed, warning)"
      },
      "violations_count": {
        "type": "integer",
        "description": "Number of compliance violations found"
      },
      "violation_details": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed descriptions of each violation"
      },
      "compliance_score": {
        "type": "number",
        "description": "Overall compliance score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Regulatory Report Generator",
    "tool_description": "Generates formatted regulatory reports based on validated data and specified report templates.",
    "parameters": {
      "report_type": {
        "type": "string",
        "required": true,
        "description": "Type of regulatory report to generate"
      },
      "reporting_period": {
        "type": "string",
        "required": true,
        "description": "Reporting period (daily, weekly, monthly, quarterly, annual)"
      },
      "report_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "As-of date for the report"
      },
      "template_version": {
        "type": "string",
        "required": false,
        "description": "Specific template version to use",
        "default": "latest"
      },
      "output_format": {
        "type": "string",
        "required": false,
        "description": "Output format (pdf, xlsx, xml, csv)",
        "default": "pdf"
      }
    },
    "error_messages": [
      "Unknown report type: Specified report type is not supported",
      "Invalid reporting period: Use one of [daily, weekly, monthly, quarterly, annual]",
      "Template not found: Specified template version does not exist",
      "Unsupported output format: Use one of [pdf, xlsx, xml, csv]",
      "Insufficient data: Required data for report generation is missing or incomplete"
    ],
    "usage": "Specify report_type, reporting_period, and report_date to generate a regulatory report. Optionally set template_version and output_format for customization.",
    "output_details": {
      "report_id": {
        "type": "string",
        "description": "Unique identifier for the generated report"
      },
      "generation_status": {
        "type": "string",
        "description": "Status of report generation process"
      },
      "page_count": {
        "type": "integer",
        "description": "Number of pages in the generated report"
      },
      "file_size_kb": {
        "type": "integer",
        "description": "Size of the generated report file in KB"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Filing Deadline Tracker",
    "tool_description": "Tracks regulatory filing deadlines and generates alerts for upcoming submissions.",
    "parameters": {
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Regulatory jurisdiction (US, EU, UK, etc.)"
      },
      "firm_type": {
        "type": "string",
        "required": true,
        "description": "Type of financial firm for deadline filtering"
      },
      "alert_days": {
        "type": "array",
        "items": {"type": "integer"},
        "required": false,
        "description": "Days before deadline to trigger alerts",
        "default": [30, 14, 7, 1]
      }
    },
    "error_messages": [
      "Unsupported jurisdiction: Specified jurisdiction is not supported",
      "Invalid firm type: Firm type not recognized for deadline tracking",
      "Invalid alert days: Alert days must be positive integers"
    ],
    "usage": "Specify jurisdiction and firm_type to track relevant filing deadlines. Customize alert_days array to set when alerts should be triggered.",
    "output_details": {
      "upcoming_deadlines": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of upcoming filing deadlines with dates"
      },
      "active_alerts": {
        "type": "integer",
        "description": "Number of active deadline alerts"
      },
      "overdue_filings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of any overdue filing requirements"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Document Version Controller",
    "tool_description": "Manages versioning and change tracking for regulatory documents and reports.",
    "parameters": {
      "document_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the document"
      },
      "action": {
        "type": "string",
        "required": true,
        "description": "Version control action (create, update, archive, restore)"
      },
      "change_description": {
        "type": "string",
        "required": false,
        "description": "Description of changes made",
        "default": null
      },
      "author": {
        "type": "string",
        "required": true,
        "description": "User ID or name of the person making changes"
      }
    },
    "error_messages": [
      "Document not found: Specified document_id does not exist",
      "Invalid action: Use one of [create, update, archive, restore]",
      "Unauthorized user: Author does not have permission for this action",
      "Version conflict: Document has been modified by another user"
    ],
    "usage": "Specify document_id, action, and author to manage document versions. Include change_description for update actions to maintain proper audit trail.",
    "output_details": {
      "version_number": {
        "type": "string",
        "description": "New version number assigned to the document"
      },
      "timestamp": {
        "type": "string",
        "description": "Timestamp of the version control action"
      },
      "previous_version": {
        "type": "string",
        "description": "Previous version number (for updates)"
      },
      "status": {
        "type": "string",
        "description": "Current status of the document"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Submission Status Monitor",
    "tool_description": "Monitors the status of regulatory filing submissions and tracks acknowledgments from regulatory authorities.",
    "parameters": {
      "submission_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the filing submission"
      },
      "check_interval": {
        "type": "integer",
        "required": false,
        "description": "Interval in minutes between status checks",
        "default": 60
      },
      "notification_enabled": {
        "type": "boolean",
        "required": false,
        "description": "Whether to send status change notifications",
        "default": true
      }
    },
    "error_messages": [
      "Submission not found: Specified submission_id does not exist",
      "Invalid check interval: Must be between 5 and 1440 minutes",
      "Connection timeout: Unable to connect to regulatory authority system",
      "Authentication failed: Invalid credentials for regulatory system access"
    ],
    "usage": "Provide submission_id to monitor filing status. Optionally set check_interval and notification_enabled to customize monitoring behavior.",
    "output_details": {
      "current_status": {
        "type": "string",
        "description": "Current status of the submission"
      },
      "last_updated": {
        "type": "string",
        "description": "Timestamp of last status update"
      },
      "acknowledgment_received": {
        "type": "boolean",
        "description": "Whether acknowledgment has been received from authorities"
      },
      "error_messages": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Any error messages from the regulatory system"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audit Trail Generator",
    "tool_description": "Creates comprehensive audit trails for all compliance and regulatory activities with tamper-evident logging.",
    "parameters": {
      "activity_type": {
        "type": "string",
        "required": true,
        "description": "Type of activity to log (data_access, report_generation, filing_submission, validation_check, configuration_change)"
      },
      "user_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the user performing the activity"
      },
      "resource_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the resource or entity being accessed/modified"
      },
      "activity_details": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the activity performed"
      },
      "ip_address": {
        "type": "string",
        "required": false,
        "description": "IP address of the user session",
        "default": null
      },
      "session_id": {
        "type": "string",
        "required": false,
        "description": "Session identifier for the user",
        "default": null
      },
      "additional_metadata": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Additional metadata or context information",
        "default": null
      }
    },
    "error_messages": [
      "Invalid activity type: Use one of [data_access, report_generation, filing_submission, validation_check, configuration_change]",
      "Missing required fields: user_id, resource_id, and activity_details are required",
      "User not found: Specified user_id does not exist in the system",
      "Invalid IP address format: IP address must be in valid IPv4 or IPv6 format",
      "Audit log storage failure: Unable to write audit record to secure storage"
    ],
    "usage": "Specify activity_type, user_id, resource_id, and activity_details to create an audit log entry. Include optional fields for enhanced tracking and security.",
    "output_details": {
      "audit_id": {
        "type": "string",
        "description": "Unique identifier for the audit log entry"
      },
      "timestamp": {
        "type": "string",
        "description": "Precise timestamp of the logged activity"
      },
      "hash_value": {
        "type": "string",
        "description": "Cryptographic hash for tamper detection"
      },
      "log_status": {
        "type": "string",
        "description": "Status of the audit log creation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Data Quality Checker",
    "tool_description": "Validates data quality and completeness for regulatory reporting datasets, identifying missing, inconsistent, or erroneous data.",
    "parameters": {
      "dataset_id": {
        "type": "string",
        "required": true,
        "description": "Identifier for the dataset to be validated"
      },
      "quality_rules": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of data quality rules to apply (completeness, accuracy, consistency, validity, uniqueness)"
      },
      "tolerance_level": {
        "type": "string",
        "required": false,
        "description": "Quality tolerance level (strict, moderate, lenient)",
        "default": "moderate"
      },
      "sample_size": {
        "type": "integer",
        "required": false,
        "description": "Number of records to sample for quality checks (0 for full dataset)",
        "default": 0
      },
      "critical_fields": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Fields that require highest quality standards",
        "default": null
      }
    },
    "error_messages": [
      "Dataset not found: Specified dataset_id does not exist or is not accessible",
      "Invalid quality rules: Use one or more of [completeness, accuracy, consistency, validity, uniqueness]",
      "Invalid tolerance level: Use one of [strict, moderate, lenient]",
      "Invalid sample size: Must be 0 (full dataset) or positive integer less than dataset size",
      "Critical fields not found: One or more specified critical fields do not exist in the dataset"
    ],
    "usage": "Provide dataset_id and quality_rules array to perform data quality validation. Use optional parameters to customize validation scope and criteria.",
    "output_details": {
      "overall_quality_score": {
        "type": "number",
        "description": "Overall data quality score (0-100)"
      },
      "records_checked": {
        "type": "integer",
        "description": "Total number of records validated"
      },
      "issues_found": {
        "type": "integer",
        "description": "Total number of data quality issues identified"
      },
      "quality_breakdown": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Quality scores by rule type"
      },
      "critical_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of critical data quality issues requiring immediate attention"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Regulatory Change Monitor",
    "tool_description": "Monitors regulatory updates, rule changes, and new compliance requirements across multiple jurisdictions.",
    "parameters": {
      "monitored_jurisdictions": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of jurisdictions to monitor for regulatory changes"
      },
      "regulatory_areas": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Areas of regulation to monitor (capital_requirements, reporting, market_conduct, etc.)"
      },
      "alert_threshold": {
        "type": "string",
        "required": false,
        "description": "Impact threshold for alerts (low, medium, high)",
        "default": "medium"
      },
      "lookback_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to look back for changes",
        "default": 30
      }
    },
    "error_messages": [
      "Invalid jurisdiction: One or more jurisdictions are not supported for monitoring",
      "Invalid regulatory area: Use recognized regulatory area codes",
      "Invalid alert threshold: Use one of [low, medium, high]",
      "Invalid lookback period: Must be between 1 and 365 days"
    ],
    "usage": "Specify monitored_jurisdictions and regulatory_areas to track relevant regulatory changes. Set alert_threshold and lookback_days to customize monitoring scope.",
    "output_details": {
      "changes_detected": {
        "type": "integer",
        "description": "Number of regulatory changes detected"
      },
      "high_impact_changes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of high-impact regulatory changes"
      },
      "implementation_deadlines": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Upcoming implementation deadlines for new regulations"
      },
      "monitoring_status": {
        "type": "string",
        "description": "Overall status of the regulatory monitoring process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross-Reference Validator",
    "tool_description": "Validates consistency and accuracy across multiple regulatory reports and identifies discrepancies between related filings.",
    "parameters": {
      "primary_report_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the primary report for cross-reference validation"
      },
      "reference_report_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of report IDs to cross-reference against the primary report"
      },
      "validation_fields": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of fields to validate across reports"
      },
      "tolerance_threshold": {
        "type": "number",
        "required": false,
        "description": "Acceptable tolerance for numerical discrepancies (as percentage)",
        "default": 0.01
      }
    },
    "error_messages": [
      "Primary report not found: Specified primary_report_id does not exist",
      "Reference report not found: One or more reference report IDs do not exist",
      "Field mismatch: One or more validation fields do not exist in the specified reports",
      "Invalid tolerance threshold: Must be between 0 and 10 percent"
    ],
    "usage": "Specify primary_report_id, reference_report_ids, and validation_fields to perform cross-reference validation. Set tolerance_threshold for numerical field comparisons.",
    "output_details": {
      "validation_result": {
