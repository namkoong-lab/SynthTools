field_name: customer_support
subfield: call_center_operations
task: Track and analyze agent performance metrics and call statistics
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is medium difficulty. It involves collecting diverse performance metrics across multiple agents, managing real-time and historical data, coordinating between various call systems, and producing actionable insights. While the core data collection is straightforward, the complexity comes from handling multiple data sources, ensuring data quality, and providing meaningful analytics that can impact agent evaluations and operational decisions.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target 12 tools to handle the various aspects of agent performance tracking, call statistics analysis, data validation, reporting, and performance optimization workflows.

  **STEP 3 — List all tool names and dependencies**

  Tools and their dependencies:
  1. **Call Data Extractor** - Consumes: time ranges, agent filters; Produces: raw call records
  2. **Agent Performance Calculator** - Consumes: call records; Produces: performance metrics
  3. **Call Quality Analyzer** - Consumes: call records, quality criteria; Produces: quality scores
  4. **Performance Trend Analyzer** - Consumes: historical metrics; Produces: trend analysis
  5. **Agent Comparison Tool** - Consumes: multiple agent metrics; Produces: comparative analysis
  6. **Call Volume Tracker** - Consumes: time periods, filters; Produces: volume statistics
  7. **Resolution Rate Calculator** - Consumes: call outcomes; Produces: resolution metrics
  8. **Wait Time Analyzer** - Consumes: call timing data; Produces: wait time statistics
  9. **Performance Alert Generator** - Consumes: metrics, thresholds; Produces: alerts/notifications
  10. **Shift Performance Evaluator** - Consumes: shift data, agent assignments; Produces: shift analysis
  11. **Customer Satisfaction Correlator** - Consumes: satisfaction scores, agent data; Produces: correlation analysis
  12. **Performance Report Generator** - Consumes: all metrics; Produces: formatted reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic agent tracking: Call Data Extractor → Agent Performance Calculator → Performance Report Generator
  2. Quality monitoring: Call Data Extractor → Call Quality Analyzer → Performance Alert Generator

  **Medium Plans:**
  1. Comprehensive agent review: Call Data Extractor → Agent Performance Calculator → Performance Trend Analyzer → Agent Comparison Tool → Performance Report Generator
  2. Operational analysis: Call Volume Tracker → Wait Time Analyzer → Resolution Rate Calculator → Performance Report Generator

  **Complex Plans:**
  1. Full performance audit: Call Data Extractor → Agent Performance Calculator → Call Quality Analyzer → Performance Trend Analyzer → Agent Comparison Tool → Customer Satisfaction Correlator → Performance Report Generator
  2. Real-time monitoring system: Call Data Extractor → Agent Performance Calculator → Call Quality Analyzer → Performance Alert Generator → Shift Performance Evaluator → Performance Report Generator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Call Data Extractor",
    "tool_description": "Extracts raw call records from call center systems within specified time ranges and filters, providing foundational data for performance analysis.",
    "parameters": {
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for data extraction in ISO 8601 format",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for data extraction in ISO 8601 format",
        "format": "date-time"
      },
      "agent_ids": {
        "type": "array",
        "required": false,
        "description": "List of specific agent IDs to filter by",
        "items": {"type": "string"},
        "default": null
      },
      "call_types": {
        "type": "array",
        "required": false,
        "description": "Types of calls to include (inbound, outbound, transfer)",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Invalid date range: End date must be after start date and both dates must be valid ISO 8601 format.",
      "Date range too large: Maximum allowed range is 365 days to prevent system overload.",
      "Invalid agent IDs: One or more agent IDs do not exist in the system.",
      "Invalid call types: Use only 'inbound', 'outbound', or 'transfer' as call types."
    ],
    "usage": "Provide start_date and end_date as required parameters. Optionally filter by specific agent_ids or call_types arrays. The tool returns structured call records for further analysis.",
    "output_details": {
      "total_records": {
        "type": "integer",
        "description": "Total number of call records extracted"
      },
      "call_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of unique call identifiers"
      },
      "agent_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of agent IDs involved in the calls"
      },
      "extraction_timestamp": {
        "type": "string",
        "description": "Timestamp when data was extracted",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Agent Performance Calculator",
    "tool_description": "Calculates comprehensive performance metrics for call center agents including handle times, call volumes, and efficiency ratios based on call records.",
    "parameters": {
      "call_records": {
        "type": "array",
        "required": true,
        "description": "Array of call record identifiers to analyze",
        "items": {"type": "string"},
        "minItems": 1
      },
      "agent_id": {
        "type": "string",
        "required": true,
        "description": "Specific agent ID to calculate metrics for"
      },
      "include_breaks": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include break times in availability calculations",
        "default": false
      },
      "metric_types": {
        "type": "array",
        "required": false,
        "description": "Specific metrics to calculate",
        "items": {"type": "string"},
        "default": ["all"]
      },
      "benchmark_period": {
        "type": "string",
        "required": false,
        "description": "Reference period for performance comparison (daily, weekly, monthly)",
        "default": "daily"
      }
    },
    "error_messages": [
      "No call records found: The provided call record identifiers do not exist or are empty.",
      "Invalid agent ID: The specified agent ID does not exist in the system.",
      "Invalid metric types: Use supported metric names like 'handle_time', 'call_volume', 'resolution_rate'.",
      "Invalid benchmark period: Use 'daily', 'weekly', or 'monthly' for benchmark comparison.",
      "Insufficient data: At least one call record is required for metric calculation."
    ],
    "usage": "Provide call_records array and agent_id as required parameters. Optionally specify include_breaks, metric_types, and benchmark_period. Returns calculated performance metrics for the agent.",
    "output_details": {
      "agent_id": {
        "type": "string",
        "description": "The agent ID for which metrics were calculated"
      },
      "average_handle_time": {
        "type": "number",
        "description": "Average call handle time in seconds"
      },
      "total_calls_handled": {
        "type": "integer",
        "description": "Total number of calls processed by the agent"
      },
      "calls_per_hour": {
        "type": "number",
        "description": "Average calls handled per hour"
      },
      "availability_percentage": {
        "type": "number",
        "description": "Percentage of time agent was available for calls"
      },
      "performance_score": {
        "type": "number",
        "description": "Overall performance score based on multiple metrics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Call Quality Analyzer",
    "tool_description": "Analyzes call quality metrics including customer satisfaction, compliance scores, and communication effectiveness based on call recordings and feedback data.",
    "parameters": {
      "call_records": {
        "type": "array",
        "required": true,
        "description": "Array of call record identifiers to analyze for quality",
        "items": {"type": "string"},
        "minItems": 1
      },
      "quality_criteria": {
        "type": "array",
        "required": true,
        "description": "Quality assessment criteria to evaluate",
        "items": {"type": "string"},
        "minItems": 1
      },
      "minimum_score_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum acceptable quality score (0-100)",
        "default": 70
      },
      "include_transcripts": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include call transcript analysis",
        "default": true
      },
      "weight_customer_feedback": {
        "type": "number",
        "required": false,
        "description": "Weight given to customer feedback scores (0-1)",
        "default": 0.6
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "description": "Level of analysis detail (basic, standard, comprehensive)",
        "default": "standard"
      }
    },
    "error_messages": [
      "No call records provided: At least one call record identifier must be specified.",
      "Invalid quality criteria: Provide valid criteria such as 'courtesy', 'accuracy', 'resolution', 'compliance'.",
      "Invalid score threshold: Minimum score threshold must be between 0 and 100.",
      "Invalid weight value: Customer feedback weight must be between 0 and 1.",
      "Invalid analysis depth: Use 'basic', 'standard', or 'comprehensive' for analysis depth.",
      "Missing quality data: Some call records lack sufficient quality assessment data."
    ],
    "usage": "Provide call_records array and quality_criteria as required parameters. Optionally set minimum_score_threshold, include_transcripts, weight_customer_feedback, and analysis_depth to customize the quality analysis.",
    "output_details": {
      "overall_quality_score": {
        "type": "number",
        "description": "Overall quality score across all analyzed calls"
      },
      "calls_analyzed": {
        "type": "integer",
        "description": "Number of calls successfully analyzed"
      },
      "quality_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed breakdown of quality metrics by category"
      },
      "calls_below_threshold": {
        "type": "integer",
        "description": "Number of calls scoring below the minimum threshold"
      },
      "improvement_suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggested areas for quality improvement"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Trend Analyzer",
    "tool_description": "Analyzes historical performance trends over time to identify patterns, improvements, or declining performance in agent metrics.",
    "parameters": {
      "agent_id": {
        "type": "string",
        "required": true,
        "description": "Agent ID to analyze trends for"
      },
      "metric_name": {
        "type": "string",
        "required": true,
        "description": "Performance metric to analyze trends for"
      },
      "trend_period": {
        "type": "string",
        "required": true,
        "description": "Time period for trend analysis (weekly, monthly, quarterly)"
      },
      "historical_months": {
        "type": "integer",
        "required": false,
        "description": "Number of months of historical data to include (1-24)",
        "default": 6
      },
      "trend_sensitivity": {
        "type": "string",
        "required": false,
        "description": "Sensitivity level for trend detection (low, medium, high)",
        "default": "medium"
      }
    },
    "error_messages": [
      "Invalid agent ID: The specified agent ID does not exist in historical records.",
      "Invalid metric name: Use supported metrics like 'handle_time', 'quality_score', 'resolution_rate'.",
      "Invalid trend period: Use 'weekly', 'monthly', or 'quarterly' for trend analysis.",
      "Invalid historical months: Specify between 1 and 24 months for historical data range.",
      "Invalid sensitivity level: Use 'low', 'medium', or 'high' for trend sensitivity.",
      "Insufficient historical data: Not enough historical data points for meaningful trend analysis."
    ],
    "usage": "Provide agent_id, metric_name, and trend_period as required parameters. Optionally set historical_months and trend_sensitivity to customize the analysis depth and detection sensitivity.",
    "output_details": {
      "trend_direction": {
        "type": "string",
        "description": "Overall trend direction (improving, declining, stable)"
      },
      "trend_strength": {
        "type": "number",
        "description": "Strength of the trend from 0 (no trend) to 1 (strong trend)"
      },
      "data_points": {
        "type": "integer",
        "description": "Number of data points used in trend analysis"
      },
      "trend_summary": {
        "type": "string",
        "description": "Textual summary of the trend analysis findings"
      },
      "seasonal_patterns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified seasonal or cyclical patterns in performance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Agent Comparison Tool",
    "tool_description": "Compares performance metrics across multiple agents to identify top performers, areas for improvement, and benchmark standards.",
    "parameters": {
      "agent_ids": {
        "type": "array",
        "required": true,
        "description": "List of agent IDs to compare",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 50
      },
      "comparison_metrics": {
        "type": "array",
        "required": true,
        "description": "Metrics to include in comparison",
        "items": {"type": "string"},
        "minItems": 1
      },
      "ranking_method": {
        "type": "string",
        "required": false,
        "description": "Method for ranking agents (weighted_average, individual_metrics, composite_score)",
        "default": "composite_score"
      },
      "include_percentiles": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include percentile rankings",
        "default": true
      }
    },
    "error_messages": [
      "Insufficient agents: At least 2 agent IDs must be provided for comparison.",
      "Too many agents: Maximum 50 agents can be compared in a single analysis.",
      "Invalid agent IDs: One or more agent IDs do not exist in the system.",
      "Invalid comparison metrics: Use supported metrics like 'handle_time', 'quality_score', 'resolution_rate'.",
      "Invalid ranking method: Use 'weighted_average', 'individual_metrics', or 'composite_score'."
    ],
    "usage": "Provide agent_ids array (2-50 agents) and comparison_metrics as required parameters. Optionally set ranking_method and include_percentiles to customize the comparison analysis.",
    "output_details": {
      "top_performer": {
        "type": "string",
        "description": "Agent ID of the top performing agent"
      },
      "agent_rankings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Ordered list of agent IDs from best to worst performance"
      },
      "performance_gaps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified performance gaps between agents"
      },
      "benchmark_metrics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Benchmark values for each comparison metric"
      },
      "comparison_summary": {
        "type": "string",
        "description": "Summary of key findings from the comparison"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Call Volume Tracker",
    "tool_description": "Tracks and analyzes call volume patterns across different time periods, identifying peak hours, seasonal trends, and capacity planning insights.",
    "parameters": {
      "tracking_period": {
        "type": "string",
        "required": true,
        "description": "Period to track call volumes (hourly, daily, weekly, monthly)"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for volume tracking",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for volume tracking",
        "format": "date-time"
      },
      "department_filter": {
        "type": "array",
        "required": false,
        "description": "Specific departments to include in volume tracking",
        "items": {"type": "string"},
        "default": null
      },
      "call_type_filter": {
        "type": "array",
        "required": false,
        "description": "Types of calls to include in volume analysis",
        "items": {"type": "string"},
        "default": null
      },
      "include_abandoned": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include abandoned calls in volume counts",
        "default": true
      },
      "timezone": {
        "type": "string",
        "required": false,
        "description": "Timezone for time-based analysis (e.g., 'America/New_York')",
        "default": "UTC"
      }
    },
    "error_messages": [
      "Invalid tracking period: Use 'hourly', 'daily', 'weekly', or 'monthly' for tracking period.",
      "Invalid date range: End date must be after start date and both must be valid ISO 8601 format.",
      "Invalid timezone: Provide a valid timezone identifier.",
      "Date range too large: Maximum tracking period varies by granularity (hourly: 7 days, daily: 365 days).",
      "Invalid department filter: One or more department names are not recognized.",
      "Invalid call type filter: Use valid call types like 'inbound', 'outbound', 'transfer'."
    ],
    "usage": "Provide tracking_period, start_date, and end_date as required parameters. Optionally filter by department_filter, call_type_filter, and set include_abandoned and timezone preferences.",
    "output_details": {
      "total_call_volume": {
        "type": "integer",
        "description": "Total number of calls in the specified period"
      },
      "peak_volume_time": {
        "type": "string",
        "description": "Time period with highest call volume"
      },
      "average_calls_per_period": {
        "type": "number",
        "description": "Average number of calls per tracking period unit"
      },
      "volume_variance": {
        "type": "number",
        "description": "Statistical variance in call volumes across periods"
      },
      "trending_direction": {
        "type": "string",
        "description": "Whether call volume is increasing, decreasing, or stable"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Resolution Rate Calculator",
    "tool_description": "Calculates first-call resolution rates and overall issue resolution effectiveness across agents and time periods.",
    "parameters": {
      "calculation_period": {
        "type": "string",
        "required": true,
        "description": "Time period for resolution rate calculation (daily, weekly, monthly)"
      },
      "agent_filter": {
        "type": "array",
        "required": false,
        "description": "Specific agent IDs to include in calculation",
        "items": {"type": "string"},
        "default": null
      },
      "resolution_criteria": {
        "type": "string",
        "required": false,
        "description": "Definition of successful resolution (first_call, within_24h, within_week)",
        "default": "first_call"
      }
    },
    "error_messages": [
      "Invalid calculation period: Use 'daily', 'weekly', or 'monthly' for calculation period.",
      "Invalid agent filter: One or more agent IDs do not exist in the system.",
      "Invalid resolution criteria: Use 'first_call', 'within_24h', or 'within_week' for resolution criteria.",
      "No resolution data available: Insufficient call resolution data for the specified period and filters."
    ],
    "usage": "Provide calculation_period as required parameter. Optionally filter by specific agent_filter and set resolution_criteria to define what constitutes successful resolution.",
    "output_details": {
      "overall_resolution_rate": {
        "type": "number",
        "description": "Overall resolution rate as a percentage"
      },
      "total_cases_analyzed": {
        "type": "integer",
        "description": "Total number of cases included in the calculation"
      },
      "successful_resolutions": {
        "type": "integer",
        "description": "Number of successfully resolved cases"
      },
      "resolution_rate_by_agent": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Resolution rates broken down by individual agent"
      },
      "improvement_needed": {
        "type": "boolean",
        "description": "Whether resolution rates are below acceptable thresholds"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Wait Time Analyzer",
    "tool_description": "Analyzes customer wait times, queue performance, and service level adherence to identify bottlenecks and optimization opportunities.",
    "parameters": {
      "analysis_timeframe": {
        "type": "string",
        "required": true,
        "description": "Timeframe for wait time analysis (hourly, daily, weekly)"
      },
      "service_level_target": {
        "type": "number",
        "required": false,
        "description": "Target service level percentage (e.g., 80 for 80% of calls answered within target time)",
        "default": 80
      },
      "target_answer_time": {
        "type": "integer",
        "required": false,
        "description": "Target answer time in seconds",
        "default": 30
      },
      "include_callback_requests": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include callback requests in wait time analysis",
        "default": false
      }
    },
    "error_messages": [
      "Invalid analysis timeframe: Use 'hourly', 'daily', or 'weekly' for analysis timeframe.",
      "Invalid service level target: Service level target must be between 1 and 100.",
      "Invalid target answer time: Target answer time must be a positive integer in seconds.",
      "Insufficient data: Not enough call data available for meaningful wait time analysis."
    ],
    "usage": "Provide analysis_timeframe as required parameter. Optionally set service_level_target, target_answer_time, and include_callback_requests to customize the wait time analysis parameters.",
    "output_details": {
      "average_wait_time": {
        "type": "number",
        "description": "Average customer wait time in seconds"
      },
      "service_level_achieved": {
        "type": "number",
        "description": "Actual service level percentage achieved"
      },
      "longest_wait_time": {
        "type": "number",
        "description": "Longest recorded wait time in seconds"
      },
      "calls_exceeding_target": {
        "type": "integer",
        "description": "Number of calls that exceeded target answer time"
      },
      "peak_wait_periods": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Time periods with highest average wait times"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Alert Generator",
    "tool_description": "Generates automated alerts and notifications when agent performance metrics fall outside defined thresholds or show concerning trends.",
    "parameters": {
      "alert_metrics": {
        "type": "array",
        "required": true,
        "description": "Performance metrics to monitor for alerts",
        "items": {"type": "string"},
        "minItems": 1
      },
      "threshold_values": {
        "type": "array",
        "required": true,
        "description": "Threshold values corresponding to each metric",
        "items": {"type": "number"},
        "minItems": 1
      },
      "alert_sensitivity": {
        "type": "string",
        "required": false,
        "description": "Sensitivity level for triggering alerts (low, medium, high)",
        "default": "medium"
      },
      "notification_channels": {
        "type": "array",
        "required": false,
        "description": "Channels to send alerts to (email, dashboard, sms)",
        "items": {"type": "string"},
        "default": ["dashboard"]
      },
      "agent_scope": {
        "type": "array",
        "required": false,
        "description": "Specific agents to monitor, or null for all agents",
        "items": {"type": "string"},
        "default": null
      },
      "alert_frequency": {
        "type": "string",
        "required": false,
        "description": "How often to check for alert conditions (real_time, hourly, daily)",
        "default": "hourly"
      },
      "escalation_enabled": {
        "type": "boolean",
        "required": false,
        "description": "Whether to escalate repeated violations",
        "default": true
      },
      "business_hours_only": {
        "type": "boolean",
        "required": false,
        "description": "Whether to generate alerts only during business hours",
        "default": false
      },
      "minimum_data_points": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of data points required before generating alert",
        "default": 5
      },
      "alert_priority": {
        "type": "string",
        "required": false,
        "description": "Priority level for generated alerts (low, medium, high, critical)",
        "default": "medium"
      }
    },
    "error_messages": [
      "Mismatched array lengths: alert_metrics and threshold_values arrays must have the same length.",
      "Invalid alert metrics: Use supported metrics like 'handle_time', 'quality_score', 'resolution_rate'.",
      "Invalid threshold values: All threshold values must be positive numbers appropriate for their metrics.",
      "Invalid sensitivity level: Use 'low', 'medium', or 'high' for alert sensitivity.",
      "Invalid notification channels: Use 'email', 'dashboard', or 'sms' for notification channels.",
      "Invalid alert frequency: Use 'real_time', 'hourly', or 'daily' for alert frequency.",
      "Invalid agent scope: One or more specified agent IDs do not exist in the system.",
      "Invalid minimum data points: Must be a positive integer between 1 and 100.",
      "Invalid alert priority: Use 'low', 'medium', 'high', or 'critical' for alert priority."
    ],
    "usage": "Provide alert_metrics and corresponding threshold_values arrays as required parameters. Customize alert behavior with optional parameters like alert_sensitivity, notification_channels, agent_scope, alert_frequency, escalation_enabled, business_hours_only, minimum_data_points, and alert_priority.",
    "output_details": {
      "alerts_generated": {
        "type": "integer",
        "description": "Number of alerts generated in this execution"
      },
      "alert_details": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Details of each alert including metric, agent, and violation severity"
      },
      "escalated_alerts": {
        "type": "integer",
        "description": "Number of alerts that were escalated due to repeated violations"
      },
      "next_check_time": {
        "type": "string",
        "description": "Timestamp for next scheduled alert check",
        "format": "date-time"
      },
      "monitoring_status": {
        "type": "string",
        "description": "Status of the alert monitoring system (active, paused, error)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Shift Performance Evaluator",
    "tool_description": "Evaluates performance metrics specific to different work shifts, comparing effectiveness across time periods and identifying shift-based patterns.",
    "parameters": {
      "evaluation_date": {
        "type": "string",
        "required": true,
        "description": "Date to evaluate shift performance for",
        "format": "date-time"
      },
      "shift_definitions": {
        "type": "array",
        "required": true,
        "description": "Shift time definitions (e.g., 'morning:08:00-16:00', 'evening:16:00-00:00')",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5
      },
      "performance_dimensions": {
        "type": "array",
        "required": false,
        "description": "Performance aspects to evaluate per shift",
        "items": {"type": "string"},
        "default": ["efficiency", "quality", "volume"]
      }
    },
    "error_messages": [
      "Invalid evaluation date: Provide a valid ISO 8601 date format.",
      "Invalid shift definitions: Use format 'shift_name:HH:MM-HH:MM' for each shift definition.",
      "Overlapping shifts: Shift time periods cannot overlap with each other.",
      "Invalid performance dimensions: Use supported dimensions like 'efficiency', 'quality', 'volume', 'satisfaction'.",
      "Too many shifts: Maximum 5 shifts can be evaluated simultaneously.",
      "Insufficient shift data: Not enough performance data available for the specified shifts and date."
    ],
    "usage": "Provide evaluation_date and shift_definitions array as required parameters. Optionally specify performance_dimensions to focus on specific aspects of shift performance.",
    "output_details": {
      "best_performing_shift": {
        "type": "string",
        "description": "Name of the shift with highest overall performance"
      },
      "shift_performance_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Performance scores for each evaluated shift"
      },
      "performance_variance": {
        "type": "number",
        "description": "Variance in performance across different shifts"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommendations for improving underperforming shifts"
      },
      "shift_comparison_summary": {
        "type": "string",
        "description": "Summary comparing performance across all evaluated shifts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Customer Satisfaction Correlator",
    "tool_description": "Correlates customer satisfaction scores with agent performance metrics to identify factors that most strongly influence customer experience.",
    "parameters": {
      "satisfaction_metric": {
        "type": "string",
        "required": true,
