field_name: ecommerce_and_retail
subfield: Inventory Management and Tracking
task: Supplier and vendor relationship management for procurement
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves managing complex multi-party relationships, coordinating procurement workflows, tracking performance metrics, and handling contract negotiations with financial implications. The scope includes supplier evaluation, order management, quality control, and strategic relationship building with significant coordination dependencies and moderate risk of errors affecting supply chain operations. **Difficulty: Medium**

  **STEP 2 — Set a tool budget**

  Given the medium complexity involving multiple procurement workflows, supplier evaluation processes, and relationship management activities, I'll target **12 tools** to cover the breadth of supplier and vendor relationship management comprehensively.

  **STEP 3 — List all tool names and dependencies**

  1. **Supplier Database Manager** - Consumes: supplier details → Produces: structured supplier records
  2. **Vendor Performance Evaluator** - Consumes: performance data → Produces: evaluation scores/reports
  3. **Purchase Order Generator** - Consumes: order requirements → Produces: formatted purchase orders
  4. **Contract Terms Analyzer** - Consumes: contract documents → Produces: terms analysis
  5. **Price Quote Comparator** - Consumes: multiple quotes → Produces: comparative analysis
  6. **Supplier Risk Assessor** - Consumes: supplier data → Produces: risk ratings
  7. **Order Status Tracker** - Consumes: order IDs → Produces: status updates
  8. **Quality Control Reporter** - Consumes: inspection data → Produces: quality reports
  9. **Payment Schedule Manager** - Consumes: contract terms → Produces: payment schedules
  10. **Supplier Communication Hub** - Consumes: messages/updates → Produces: communication logs
  11. **Procurement Analytics Dashboard** - Consumes: transaction data → Produces: analytics insights
  12. **Vendor Onboarding Processor** - Consumes: vendor applications → Produces: onboarding status

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - **New Vendor Setup**: Vendor Onboarding Processor → Supplier Database Manager → Supplier Risk Assessor
  - **Basic Order Processing**: Purchase Order Generator → Order Status Tracker → Payment Schedule Manager

  **Medium Plans:**
  - **Vendor Selection Process**: Price Quote Comparator → Contract Terms Analyzer → Supplier Risk Assessor → Vendor Performance Evaluator
  - **Order Fulfillment Monitoring**: Purchase Order Generator → Order Status Tracker → Quality Control Reporter → Supplier Communication Hub

  **Complex Plans:**
  - **Complete Supplier Lifecycle Management**: Vendor Onboarding Processor → Supplier Database Manager → Supplier Risk Assessor → Price Quote Comparator → Contract Terms Analyzer → Purchase Order Generator → Order Status Tracker → Quality Control Reporter → Vendor Performance Evaluator → Procurement Analytics Dashboard
  - **Strategic Procurement Optimization**: Procurement Analytics Dashboard → Vendor Performance Evaluator → Supplier Risk Assessor → Price Quote Comparator → Contract Terms Analyzer → Supplier Communication Hub

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Supplier Database Manager",
    "tool_description": "Manages comprehensive supplier information including contact details, capabilities, certifications, and historical data for vendor relationship management.",
    "parameters": {
      "action": {
        "type": "string",
        "required": true,
        "description": "Database operation to perform: create, read, update, delete, search"
      },
      "supplier_id": {
        "type": "string",
        "required": false,
        "description": "Unique identifier for the supplier",
        "default": "None"
      },
      "company_name": {
        "type": "string",
        "required": false,
        "description": "Name of the supplier company",
        "default": "None"
      },
      "contact_email": {
        "type": "string",
        "required": false,
        "description": "Primary contact email address",
        "default": "None"
      },
      "phone_number": {
        "type": "string",
        "required": false,
        "description": "Primary contact phone number",
        "default": "None"
      },
      "categories": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Product or service categories the supplier provides",
        "default": "None"
      },
      "location": {
        "type": "string",
        "required": false,
        "description": "Supplier's primary business location",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid action: Action must be one of [create, read, update, delete, search]",
      "Missing supplier_id: supplier_id is required for read, update, and delete operations",
      "Supplier not found: No supplier exists with the provided supplier_id",
      "Duplicate supplier: A supplier with this company_name already exists",
      "Invalid email format: Provide a valid email address for contact_email",
      "Missing required fields: company_name and contact_email are required for create operations"
    ],
    "usage": "Specify the action and relevant parameters. For create operations, provide company_name, contact_email, and optional details. For read/update/delete, provide supplier_id. For search, provide search criteria like company_name or categories.",
    "output_details": {
      "status": {
        "type": "string",
        "description": "Operation status: success or error"
      },
      "supplier_data": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of supplier information strings matching the query"
      },
      "total_count": {
        "type": "integer",
        "description": "Number of suppliers returned"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vendor Performance Evaluator",
    "tool_description": "Evaluates vendor performance across multiple metrics including delivery timeliness, quality scores, communication effectiveness, and overall reliability to support procurement decisions.",
    "parameters": {
      "supplier_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the supplier to evaluate"
      },
      "evaluation_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date for the evaluation period",
        "format": "date-time"
      },
      "evaluation_period_end": {
        "type": "string",
        "required": true,
        "description": "End date for the evaluation period",
        "format": "date-time"
      },
      "delivery_score": {
        "type": "number",
        "required": false,
        "description": "Delivery performance score (0-100)",
        "default": "None"
      },
      "quality_score": {
        "type": "number",
        "required": false,
        "description": "Quality performance score (0-100)",
        "default": "None"
      },
      "communication_score": {
        "type": "number",
        "required": false,
        "description": "Communication effectiveness score (0-100)",
        "default": "None"
      },
      "cost_competitiveness": {
        "type": "number",
        "required": false,
        "description": "Cost competitiveness score (0-100)",
        "default": "None"
      },
      "include_historical_data": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include historical performance trends",
        "default": true
      }
    },
    "error_messages": [
      "Invalid supplier_id: No supplier found with the provided supplier_id",
      "Invalid date range: evaluation_period_start must be before evaluation_period_end",
      "Score out of range: All performance scores must be between 0 and 100",
      "Insufficient data: Not enough transaction data available for the specified period",
      "Invalid date format: Provide dates in ISO 8601 format"
    ],
    "usage": "Provide supplier_id and evaluation period dates. Optionally include specific performance scores to update the evaluation. Set include_historical_data to true for trend analysis.",
    "output_details": {
      "overall_score": {
        "type": "number",
        "description": "Weighted overall performance score (0-100)"
      },
      "category_scores": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of category-specific performance score descriptions"
      },
      "recommendation": {
        "type": "string",
        "description": "Performance-based recommendation for supplier relationship"
      },
      "trend_analysis": {
        "type": "string",
        "description": "Historical performance trend summary if requested"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Purchase Order Generator",
    "tool_description": "Creates formatted purchase orders with line items, pricing, delivery requirements, and terms conditions for supplier procurement.",
    "parameters": {
      "supplier_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the supplier receiving the order"
      },
      "order_items": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Array of item descriptions with quantities and unit prices",
        "minItems": 1,
        "maxItems": 50
      },
      "delivery_date": {
        "type": "string",
        "required": true,
        "description": "Required delivery date",
        "format": "date-time"
      },
      "delivery_address": {
        "type": "string",
        "required": true,
        "description": "Complete delivery address"
      },
      "payment_terms": {
        "type": "string",
        "required": false,
        "description": "Payment terms (e.g., Net 30, Net 60)",
        "default": "Net 30"
      },
      "special_instructions": {
        "type": "string",
        "required": false,
        "description": "Special handling or delivery instructions",
        "default": "None"
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Order priority: standard, high, urgent",
        "default": "standard"
      }
    },
    "error_messages": [
      "Invalid supplier_id: No supplier found with the provided supplier_id",
      "Empty order items: At least one order item must be specified",
      "Invalid delivery date: Delivery date must be in the future",
      "Missing delivery address: A complete delivery address is required",
      "Invalid payment terms: Use standard payment terms like Net 30, Net 60, COD",
      "Invalid priority level: Priority must be one of [standard, high, urgent]"
    ],
    "usage": "Provide supplier_id, order_items array, delivery_date, and delivery_address. Optionally specify payment_terms, special_instructions, and priority_level. Each order item should include description, quantity, and unit price.",
    "output_details": {
      "purchase_order_id": {
        "type": "string",
        "description": "Generated unique purchase order identifier"
      },
      "total_amount": {
        "type": "number",
        "description": "Total order amount including taxes and fees"
      },
      "order_status": {
        "type": "string",
        "description": "Initial order status"
      },
      "estimated_delivery": {
        "type": "string",
        "description": "Estimated delivery date-time",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Contract Terms Analyzer",
    "tool_description": "Analyzes supplier contracts to extract key terms, identify risks, compare clauses, and provide recommendations for contract negotiations.",
    "parameters": {
      "contract_text": {
        "type": "string",
        "required": true,
        "description": "Full text content of the contract to analyze"
      },
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of contract: supply_agreement, service_contract, master_agreement, nda"
      },
      "analysis_focus": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Specific areas to focus analysis on",
        "default": ["pricing", "delivery", "liability", "termination"]
      },
      "compare_with_standard": {
        "type": "boolean",
        "required": false,
        "description": "Whether to compare terms against industry standards",
        "default": true
      }
    },
    "error_messages": [
      "Empty contract text: Contract text cannot be empty",
      "Invalid contract type: Contract type must be one of [supply_agreement, service_contract, master_agreement, nda]",
      "Contract too short: Contract text appears incomplete or too brief for analysis",
      "Invalid analysis focus: Focus areas must be from [pricing, delivery, liability, termination, warranty, payment, intellectual_property]",
      "Analysis failed: Unable to extract meaningful terms from the provided contract text"
    ],
    "usage": "Provide the complete contract_text and specify the contract_type. Optionally set analysis_focus array to target specific contract areas and enable compare_with_standard for benchmarking.",
    "output_details": {
      "key_terms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of extracted key contract terms and conditions"
      },
      "risk_assessment": {
        "type": "string",
        "description": "Overall risk level and key risk factors identified"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of recommendations for contract improvement"
      },
      "compliance_score": {
        "type": "number",
        "description": "Compliance score against industry standards (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Price Quote Comparator",
    "tool_description": "Compares multiple supplier quotes for the same products or services, analyzing pricing, terms, and total cost of ownership to support procurement decisions.",
    "parameters": {
      "quote_data": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Array of quote information strings including supplier, items, and pricing",
        "minItems": 2,
        "maxItems": 10
      },
      "comparison_criteria": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Criteria for comparison ranking",
        "default": ["price", "delivery_time", "quality", "terms"]
      },
      "weight_price": {
        "type": "number",
        "required": false,
        "description": "Weight for price factor in comparison (0-1)",
        "default": 0.4
      },
      "weight_delivery": {
        "type": "number",
        "required": false,
        "description": "Weight for delivery time factor (0-1)",
        "default": 0.3
      },
      "weight_quality": {
        "type": "number",
        "required": false,
        "description": "Weight for quality factor (0-1)",
        "default": 0.2
      },
      "weight_terms": {
        "type": "number",
        "required": false,
        "description": "Weight for terms factor (0-1)",
        "default": 0.1
      }
    },
    "error_messages": [
      "Insufficient quotes: At least 2 quotes required for comparison",
      "Invalid quote format: Each quote must include supplier name, items, and pricing information",
      "Weight sum error: All weight parameters must sum to 1.0",
      "Invalid weight values: All weight parameters must be between 0 and 1",
      "Missing price data: All quotes must include pricing information for comparison",
      "Incomparable quotes: Quotes must be for similar or identical products/services"
    ],
    "usage": "Provide an array of quote_data with at least 2 supplier quotes. Optionally specify comparison_criteria and adjust weight parameters for different factors. Ensure weights sum to 1.0.",
    "output_details": {
      "ranked_quotes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of quotes ranked by weighted score with supplier names"
      },
      "best_quote": {
        "type": "string",
        "description": "Recommended best quote based on analysis"
      },
      "cost_analysis": {
        "type": "string",
        "description": "Detailed cost breakdown and comparison summary"
      },
      "savings_potential": {
        "type": "number",
        "description": "Potential cost savings from selecting best quote"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Supplier Risk Assessor",
    "tool_description": "Evaluates supplier risk across financial stability, operational capacity, geographic factors, and compliance status to support vendor selection and monitoring.",
    "parameters": {
      "supplier_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the supplier to assess"
      },
      "financial_data": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Array of financial metrics and indicators",
        "default": "None"
      },
      "geographic_location": {
        "type": "string",
        "required": false,
        "description": "Primary business location for geographic risk assessment",
        "default": "None"
      },
      "business_size": {
        "type": "string",
        "required": false,
        "description": "Business size category: small, medium, large, enterprise",
        "default": "None"
      },
      "industry_sector": {
        "type": "string",
        "required": false,
        "description": "Primary industry sector of the supplier",
        "default": "None"
      },
      "compliance_certifications": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Array of compliance certifications held",
        "default": "None"
      },
      "years_in_business": {
        "type": "integer",
        "required": false,
        "description": "Number of years the supplier has been in business",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid supplier_id: No supplier found with the provided supplier_id",
      "Invalid business size: Business size must be one of [small, medium, large, enterprise]",
      "Negative years: Years in business cannot be negative",
      "Insufficient data: Not enough information available for comprehensive risk assessment",
      "Invalid geographic location: Unable to assess geographic risk for the provided location"
    ],
    "usage": "Provide supplier_id as minimum requirement. Include additional parameters like financial_data, geographic_location, business_size for more comprehensive risk assessment. The tool will evaluate multiple risk dimensions.",
    "output_details": {
      "overall_risk_score": {
        "type": "number",
        "description": "Overall risk score from 0-100 (higher means more risky)"
      },
      "risk_category": {
        "type": "string",
        "description": "Risk categorization: low, medium, high, critical"
      },
      "risk_factors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of identified risk factors and concerns"
      },
      "mitigation_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of recommended risk mitigation strategies"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Order Status Tracker",
    "tool_description": "Tracks and monitors purchase order status, delivery progress, and milestone updates throughout the procurement fulfillment process.",
    "parameters": {
      "purchase_order_id": {
        "type": "string",
        "required": true,
        "description": "Purchase order identifier to track"
      },
      "update_status": {
        "type": "string",
        "required": false,
        "description": "New status to update: confirmed, in_production, shipped, delivered, cancelled",
        "default": "None"
      },
      "tracking_number": {
        "type": "string",
        "required": false,
        "description": "Shipping tracking number if available",
        "default": "None"
      },
      "estimated_delivery": {
        "type": "string",
        "required": false,
        "description": "Updated estimated delivery date",
        "format": "date-time",
        "default": "None"
      },
      "status_notes": {
        "type": "string",
        "required": false,
        "description": "Additional notes or comments about the status update",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid purchase_order_id: No purchase order found with the provided ID",
      "Invalid status: Status must be one of [confirmed, in_production, shipped, delivered, cancelled]",
      "Invalid date format: Provide estimated_delivery in ISO 8601 format",
      "Past delivery date: Estimated delivery date cannot be in the past",
      "Status sequence error: Cannot update to a previous status in the workflow"
    ],
    "usage": "Provide purchase_order_id to retrieve current status, or include update_status to change the order status. Optionally add tracking_number, estimated_delivery, and status_notes for comprehensive updates.",
    "output_details": {
      "current_status": {
        "type": "string",
        "description": "Current order status"
      },
      "status_history": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of status change history with timestamps"
      },
      "delivery_progress": {
        "type": "string",
        "description": "Delivery progress description and timeline"
      },
      "days_until_delivery": {
        "type": "integer",
        "description": "Estimated days until delivery"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Quality Control Reporter",
    "tool_description": "Records and analyzes quality control inspections, defect reports, and supplier quality performance to maintain procurement standards.",
    "parameters": {
      "inspection_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the quality inspection"
      },
      "supplier_id": {
        "type": "string",
        "required": true,
        "description": "Supplier identifier for the inspected items"
      },
      "purchase_order_id": {
        "type": "string",
        "required": true,
        "description": "Related purchase order identifier"
      },
      "inspection_date": {
        "type": "string",
        "required": true,
        "description": "Date when inspection was conducted",
        "format": "date-time"
      },
      "items_inspected": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Array of item descriptions that were inspected",
        "minItems": 1,
        "maxItems": 100
      },
      "quality_scores": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Quality scores for each inspected item (0-100)",
        "minItems": 1,
        "maxItems": 100
      },
      "defects_found": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Array of defects or issues identified",
        "default": "None"
      },
      "pass_fail_status": {
        "type": "string",
        "required": true,
        "description": "Overall inspection result: pass, conditional_pass, fail"
      },
      "inspector_notes": {
        "type": "string",
        "required": false,
        "description": "Additional notes from the quality inspector",
        "default": "None"
      },
      "corrective_action_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether corrective action is needed from supplier",
        "default": false
      }
    },
    "error_messages": [
      "Invalid inspection_id: Inspection ID must be provided and unique",
      "Invalid supplier_id: No supplier found with the provided supplier_id",
      "Invalid purchase_order_id: No purchase order found with the provided ID",
      "Mismatched array lengths: items_inspected and quality_scores arrays must have the same length",
      "Invalid quality scores: All quality scores must be between 0 and 100",
      "Invalid pass_fail_status: Status must be one of [pass, conditional_pass, fail]",
      "Future inspection date: Inspection date cannot be in the future"
    ],
    "usage": "Provide inspection_id, supplier_id, purchase_order_id, inspection_date, items_inspected array, quality_scores array, and pass_fail_status. Optionally include defects_found, inspector_notes, and corrective_action_required flag.",
    "output_details": {
      "average_quality_score": {
        "type": "number",
        "description": "Average quality score across all inspected items"
      },
      "inspection_summary": {
        "type": "string",
        "description": "Summary of inspection results and findings"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of recommendations based on inspection results"
      },
      "quality_trend": {
        "type": "string",
        "description": "Quality trend analysis for this supplier"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Payment Schedule Manager",
    "tool_description": "Creates and manages payment schedules, tracks payment milestones, and monitors payment terms compliance for supplier contracts.",
    "parameters": {
      "contract_id": {
        "type": "string",
        "required": true,
        "description": "Contract identifier for payment schedule management"
      },
      "total_contract_value": {
        "type": "number",
        "required": true,
        "description": "Total value of the contract"
      },
      "payment_terms": {
        "type": "string",
        "required": true,
        "description": "Payment terms: net_30, net_60, milestone_based, advance_payment"
      },
      "milestone_descriptions": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Array of milestone descriptions for milestone-based payments",
        "default": "None"
      },
      "milestone_percentages": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Array of payment percentages for each milestone",
        "default": "None"
      },
      "contract_start_date": {
        "type": "string",
        "required": true,
        "description": "Contract start date",
        "format": "date-time"
      },
      "advance_payment_percentage": {
        "type": "number",
        "required": false,
        "description": "Percentage of advance payment if applicable (0-50)",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid contract_id: Contract ID must be provided and valid",
      "Invalid contract value: Total contract value must be greater than 0",
      "Invalid payment terms: Payment terms must be one of [net_30, net_60, milestone_based, advance_payment]",
      "Milestone mismatch: milestone_descriptions and milestone_percentages arrays must have same length",
      "Invalid milestone percentages: All percentages must be positive and sum to 100",
      "Invalid advance payment: Advance payment percentage must be between 0 and 50",
      "Missing milestone data: Milestone-based payments require milestone_descriptions and milestone_percentages"
    ],
    "usage": "Provide contract_id, total_contract_value, payment_terms, and contract_start_date. For milestone-based payments, include milestone_descriptions and milestone_percentages arrays. For advance payments, set advance_payment_percentage.",
    "output_details": {
      "payment_schedule": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of scheduled payment dates and amounts"
      },
      "total_payments": {
        "type": "number",
        "description": "Total amount to be paid across all milestones"
      },
      "next_payment_due": {
        "type": "string",
        "description": "Next payment due date and amount",
        "format": "date-time"
      },
      "schedule_summary": {
        "type": "string",
        "description": "Summary of the payment schedule structure"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Supplier Communication Hub",
    "tool_description": "Manages communication logs, messages, and interaction history with suppliers to maintain relationship records and track correspondence.",
    "parameters": {
      "supplier_id": {
        "type": "string",
        "required": true,
        "description": "Supplier identifier for communication management"
      },
      "communication_type": {
        "type": "string",
        "required": true,
        "description": "Type of communication: email, phone, meeting, document, notification"
      },
      "message_content": {
        "type": "string",
        "required": false,
        "description": "Content of the communication message",
        "default": "None"
      },
      "communication_date": {
        "type": "string",
        "required": true,
        "description": "Date and time of the communication",
        "format": "date-time"
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Communication priority: low, normal, high, urgent",
        "default": "normal"
      },
      "action_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether follow-up action is required",
        "default": false
      },
      "related_order_id": {
        "type": "string",
        "required": false,
        "description": "Related purchase order ID if applicable",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid supplier_id: No supplier found with the provided supplier_id",
      "Invalid communication_type: Type must be one of [email, phone, meeting, document, notification]",
      "Invalid priority_level: Priority must be one of [low, normal, high, urgent]",
      "Invalid date format: Provide communication_date in ISO 8601 format",
      "Future communication date: Communication date cannot be in the future",
      "Empty message content: Message content is required for email and document communications"
    ],
    "usage": "Provide supplier_id, communication_type, and communication_date. Include message_content for substantive communications. Set priority_level and action_required as needed. Link to related_order_id when applicable.",
    "output_details": {
      "communication_log_id": {
        "type": "string",
        "description": "Unique identifier for the logged communication"
      },
      "communication_history": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of recent communication history with timestamps"
      },
      "pending_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of pending follow-up actions"
      },
      "response_status":
