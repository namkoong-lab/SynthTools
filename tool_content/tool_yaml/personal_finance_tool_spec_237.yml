field_name: personal_finance
subfield: Budget Planning and Expense Tracking
task: Track and categorize daily expenses and transactions
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **medium** difficulty. It involves multiple coordinated subproblems (transaction parsing, categorization, rule management, reporting) with moderate data processing requirements. While the core concepts are straightforward, the task requires handling diverse transaction formats, maintaining consistent categorization rules, and providing meaningful financial insights.

  **STEP 2 — Set a tool budget**

  Based on medium difficulty, I'll target **12 tools** to cover the various workflows involved in expense tracking and categorization.

  **STEP 3 — List all tool names and dependencies**

  1. **Transaction Parser** - Consumes: raw transaction data → Produces: structured transaction records
  2. **Category Rule Manager** - Consumes: category definitions → Produces: categorization rules
  3. **Auto Categorizer** - Consumes: transactions + rules → Produces: categorized transactions
  4. **Manual Category Assigner** - Consumes: individual transactions → Produces: manually categorized transactions
  5. **Expense Validator** - Consumes: transaction records → Produces: validated/flagged transactions
  6. **Budget Threshold Checker** - Consumes: spending data + budgets → Produces: budget status alerts
  7. **Spending Pattern Analyzer** - Consumes: historical transactions → Produces: spending insights
  8. **Category Summary Generator** - Consumes: categorized transactions → Produces: category breakdowns
  9. **Transaction Search Filter** - Consumes: transaction database + criteria → Produces: filtered results
  10. **Duplicate Transaction Detector** - Consumes: transaction list → Produces: duplicate flags
  11. **Monthly Report Generator** - Consumes: categorized transactions → Produces: monthly summaries
  12. **Export Formatter** - Consumes: transaction data → Produces: formatted exports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - **Basic Expense Entry**: Transaction Parser → Auto Categorizer → Category Summary Generator
  - **Quick Duplicate Check**: Transaction Parser → Duplicate Transaction Detector → Manual Category Assigner

  **Medium Plans:**
  - **Daily Expense Processing**: Transaction Parser → Expense Validator → Auto Categorizer → Budget Threshold Checker → Category Summary Generator
  - **Transaction Review Workflow**: Transaction Search Filter → Manual Category Assigner → Spending Pattern Analyzer → Monthly Report Generator

  **Complex Plans:**
  - **Complete Expense Management**: Transaction Parser → Duplicate Transaction Detector → Expense Validator → Auto Categorizer → Manual Category Assigner → Budget Threshold Checker → Spending Pattern Analyzer → Category Summary Generator → Monthly Report Generator → Export Formatter
  - **Advanced Analytics Pipeline**: Transaction Search Filter → Category Summary Generator → Spending Pattern Analyzer → Budget Threshold Checker → Monthly Report Generator → Export Formatter

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Transaction Parser",
    "tool_description": "Parses raw transaction data from various sources (bank statements, receipts, manual entry) and converts them into standardized transaction records with consistent formatting.",
    "parameters": {
      "raw_data": {
        "type": "string",
        "required": true,
        "description": "Raw transaction data in text format from bank statements, CSV exports, or manual input"
      },
      "data_source": {
        "type": "string",
        "required": true,
        "description": "Source type of the data: bank_statement, csv_file, manual_entry, receipt_scan"
      },
      "date_format": {
        "type": "string",
        "required": false,
        "description": "Expected date format in the raw data (e.g., MM/DD/YYYY, DD-MM-YYYY)",
        "default": "MM/DD/YYYY"
      }
    },
    "error_messages": [
      "Invalid data source: Use one of [bank_statement, csv_file, manual_entry, receipt_scan].",
      "Unparseable transaction data: Ensure the raw data contains recognizable transaction information including dates, amounts, and descriptions.",
      "Invalid date format: Provide a valid date format string or use the default MM/DD/YYYY format."
    ],
    "usage": "Provide raw transaction data as a string along with the source type. Optionally specify the date format if different from the default. The tool will return structured transaction records.",
    "output_details": {
      "parsed_transactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of parsed transaction records in standardized format"
      },
      "parse_count": {
        "type": "integer",
        "description": "Number of transactions successfully parsed"
      },
      "failed_entries": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of raw data entries that could not be parsed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Category Rule Manager",
    "tool_description": "Creates and manages categorization rules based on transaction patterns, keywords, merchants, and amounts to automatically assign expense categories.",
    "parameters": {
      "rule_type": {
        "type": "string",
        "required": true,
        "description": "Type of rule to create or manage: keyword, merchant, amount_range, description_pattern"
      },
      "rule_action": {
        "type": "string",
        "required": true,
        "description": "Action to perform: create, update, delete, list"
      },
      "category_name": {
        "type": "string",
        "required": false,
        "description": "Target category for the rule (required for create/update actions)",
        "default": "None"
      },
      "rule_criteria": {
        "type": "string",
        "required": false,
        "description": "Specific criteria for the rule (keywords, merchant names, amount ranges, or patterns)",
        "default": "None"
      },
      "rule_priority": {
        "type": "integer",
        "required": false,
        "description": "Priority level for rule application (1-10, higher numbers take precedence)",
        "default": 5
      }
    },
    "error_messages": [
      "Invalid rule type: Use one of [keyword, merchant, amount_range, description_pattern].",
      "Invalid rule action: Use one of [create, update, delete, list].",
      "Missing required fields: For create/update actions, both category_name and rule_criteria are required.",
      "Invalid priority level: Priority must be an integer between 1 and 10.",
      "Rule criteria format error: Ensure rule_criteria matches the expected format for the specified rule_type."
    ],
    "usage": "Specify the rule_type and rule_action. For create/update operations, provide category_name and rule_criteria. Optionally set rule_priority to control rule application order.",
    "output_details": {
      "operation_status": {
        "type": "string",
        "description": "Status of the rule operation (success, failed, or partial)"
      },
      "active_rules": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of currently active categorization rules"
      },
      "affected_rules": {
        "type": "integer",
        "description": "Number of rules affected by the operation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Auto Categorizer",
    "tool_description": "Automatically assigns categories to transactions based on established rules, merchant patterns, and transaction descriptions using machine learning and rule-based matching.",
    "parameters": {
      "transactions": {
        "type": "array",
        "required": true,
        "description": "Array of transaction records to be categorized",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "use_ml_suggestions": {
        "type": "boolean",
        "required": false,
        "description": "Enable machine learning-based category suggestions for unknown patterns",
        "default": true
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence score (0.0-1.0) required for automatic categorization",
        "default": 0.7
      }
    },
    "error_messages": [
      "Empty transaction list: Provide at least one transaction record for categorization.",
      "Invalid transaction format: Ensure transactions are properly formatted with required fields (date, amount, description).",
      "Invalid confidence threshold: Threshold must be a number between 0.0 and 1.0.",
      "Categorization rules not found: Ensure categorization rules have been set up using the Category Rule Manager."
    ],
    "usage": "Provide an array of parsed transaction records. Optionally enable ML suggestions and set a confidence threshold for automatic categorization. Transactions below the threshold will be marked for manual review.",
    "output_details": {
      "categorized_transactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of transactions with assigned categories"
      },
      "auto_categorized_count": {
        "type": "integer",
        "description": "Number of transactions automatically categorized"
      },
      "manual_review_needed": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of transactions requiring manual categorization"
      },
      "confidence_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Array of confidence scores for each categorization"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Manual Category Assigner",
    "tool_description": "Allows manual assignment or correction of transaction categories with validation and learning capabilities to improve future automatic categorization.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the transaction to categorize"
      },
      "assigned_category": {
        "type": "string",
        "required": true,
        "description": "Category to assign to the transaction"
      },
      "create_rule": {
        "type": "boolean",
        "required": false,
        "description": "Whether to create an automatic rule based on this manual assignment",
        "default": false
      },
      "confidence_override": {
        "type": "boolean",
        "required": false,
        "description": "Override low confidence automatic categorization",
        "default": false
      }
    },
    "error_messages": [
      "Transaction not found: The provided transaction_id does not exist in the current dataset.",
      "Invalid category: The assigned category must be a valid expense category.",
      "Transaction already categorized: Use confidence_override=true to change an existing categorization.",
      "Rule creation failed: Unable to create an automatic rule based on this assignment."
    ],
    "usage": "Provide the transaction_id and the assigned_category. Optionally enable create_rule to generate automatic rules for similar transactions, or use confidence_override to change existing categorizations.",
    "output_details": {
      "assignment_status": {
        "type": "string",
        "description": "Status of the category assignment operation"
      },
      "updated_transaction": {
        "type": "string",
        "description": "The transaction record with updated category information"
      },
      "rule_created": {
        "type": "boolean",
        "description": "Whether an automatic rule was successfully created"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Expense Validator",
    "tool_description": "Validates transaction records for completeness, accuracy, and potential anomalies such as duplicate entries, unusual amounts, or suspicious patterns.",
    "parameters": {
      "transactions": {
        "type": "array",
        "required": true,
        "description": "Array of transaction records to validate",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 500
      },
      "validation_rules": {
        "type": "array",
        "required": false,
        "description": "Specific validation rules to apply: completeness, amount_range, date_validity, duplicate_check",
        "items": {
          "type": "string"
        },
        "default": ["completeness", "amount_range", "date_validity"]
      },
      "amount_threshold": {
        "type": "number",
        "required": false,
        "description": "Flag transactions above this amount as potentially unusual",
        "default": 1000
      },
      "date_range_days": {
        "type": "integer",
        "required": false,
        "description": "Flag transactions outside this many days from today as potentially outdated",
        "default": 365
      }
    },
    "error_messages": [
      "Empty transaction list: Provide at least one transaction for validation.",
      "Invalid validation rule: Use combinations of [completeness, amount_range, date_validity, duplicate_check].",
      "Invalid amount threshold: Threshold must be a positive number.",
      "Invalid date range: Date range days must be a positive integer."
    ],
    "usage": "Provide transaction records and optionally specify validation rules, amount threshold, and date range. The tool will identify and flag transactions that require attention or correction.",
    "output_details": {
      "validation_summary": {
        "type": "string",
        "description": "Overall validation results summary"
      },
      "valid_transactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of transactions that passed all validation checks"
      },
      "flagged_transactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of transactions that failed validation with reason codes"
      },
      "validation_errors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of specific validation error descriptions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Budget Threshold Checker",
    "tool_description": "Monitors spending against predefined budget limits and generates alerts when thresholds are approached or exceeded for different categories and time periods.",
    "parameters": {
      "budget_categories": {
        "type": "array",
        "required": true,
        "description": "List of budget categories to monitor",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "budget_limits": {
        "type": "array",
        "required": true,
        "description": "Corresponding budget limits for each category",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "time_period": {
        "type": "string",
        "required": true,
        "description": "Budget monitoring period: daily, weekly, monthly, quarterly, yearly"
      },
      "current_spending": {
        "type": "array",
        "required": true,
        "description": "Current spending amounts for each category in the specified period",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "alert_threshold": {
        "type": "number",
        "required": false,
        "description": "Percentage of budget limit at which to trigger alerts (0.0-1.0)",
        "default": 0.8
      },
      "include_projections": {
        "type": "boolean",
        "required": false,
        "description": "Include projected end-of-period spending in alerts",
        "default": true
      }
    },
    "error_messages": [
      "Mismatched array lengths: budget_categories, budget_limits, and current_spending arrays must have the same length.",
      "Invalid time period: Use one of [daily, weekly, monthly, quarterly, yearly].",
      "Invalid budget limits: All budget limits must be positive numbers.",
      "Invalid alert threshold: Threshold must be between 0.0 and 1.0.",
      "Negative spending amounts: Current spending amounts cannot be negative."
    ],
    "usage": "Provide arrays of budget categories, their limits, and current spending amounts for a specified time period. Set alert threshold to control when warnings are generated. Enable projections for predictive alerts.",
    "output_details": {
      "budget_status": {
        "type": "string",
        "description": "Overall budget status summary"
      },
      "category_alerts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of budget alerts for categories approaching or exceeding limits"
      },
      "remaining_budgets": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Remaining budget amounts for each category"
      },
      "utilization_percentages": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Budget utilization percentages for each category"
      },
      "projected_overruns": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Projected budget overruns if current spending patterns continue"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Spending Pattern Analyzer",
    "tool_description": "Analyzes historical transaction data to identify spending patterns, trends, and anomalies across different time periods and categories to provide insights for budget planning.",
    "parameters": {
      "transactions": {
        "type": "array",
        "required": true,
        "description": "Array of historical transaction records for analysis",
        "items": {
          "type": "string"
        },
        "minItems": 10,
        "maxItems": 5000
      },
      "analysis_period": {
        "type": "string",
        "required": true,
        "description": "Time period for pattern analysis: daily, weekly, monthly, quarterly, yearly"
      },
      "pattern_types": {
        "type": "array",
        "required": false,
        "description": "Types of patterns to analyze: trends, seasonality, anomalies, category_shifts, frequency",
        "items": {
          "type": "string"
        },
        "default": ["trends", "seasonality", "anomalies"]
      },
      "minimum_transaction_count": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of transactions required per category for analysis",
        "default": 5
      },
      "anomaly_sensitivity": {
        "type": "number",
        "required": false,
        "description": "Sensitivity for anomaly detection (0.0-1.0, higher values detect more anomalies)",
        "default": 0.7
      }
    },
    "error_messages": [
      "Insufficient transaction data: Provide at least 10 transactions for meaningful pattern analysis.",
      "Invalid analysis period: Use one of [daily, weekly, monthly, quarterly, yearly].",
      "Invalid pattern types: Use combinations of [trends, seasonality, anomalies, category_shifts, frequency].",
      "Invalid transaction count: Minimum transaction count must be a positive integer.",
      "Invalid sensitivity level: Anomaly sensitivity must be between 0.0 and 1.0."
    ],
    "usage": "Provide historical transaction data and specify the analysis period. Optionally select specific pattern types to analyze and adjust sensitivity settings. The tool will identify spending patterns and provide actionable insights.",
    "output_details": {
      "analysis_summary": {
        "type": "string",
        "description": "Overall summary of spending pattern analysis results"
      },
      "identified_trends": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of identified spending trends with descriptions"
      },
      "seasonal_patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of seasonal spending patterns by category"
      },
      "detected_anomalies": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of spending anomalies with dates and descriptions"
      },
      "category_insights": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of insights and recommendations for each spending category"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Category Summary Generator",
    "tool_description": "Generates comprehensive summaries of spending by category including totals, averages, percentages, and comparisons across different time periods.",
    "parameters": {
      "categorized_transactions": {
        "type": "array",
        "required": true,
        "description": "Array of transactions with assigned categories",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 2000
      },
      "summary_period": {
        "type": "string",
        "required": true,
        "description": "Time period for summary generation: daily, weekly, monthly, quarterly, yearly"
      },
      "include_subcategories": {
        "type": "boolean",
        "required": false,
        "description": "Include subcategory breakdowns in the summary",
        "default": true
      },
      "sort_by": {
        "type": "string",
        "required": false,
        "description": "Sort categories by: amount_desc, amount_asc, frequency_desc, frequency_asc, alphabetical",
        "default": "amount_desc"
      },
      "include_percentages": {
        "type": "boolean",
        "required": false,
        "description": "Include percentage breakdowns of total spending",
        "default": true
      }
    },
    "error_messages": [
      "Empty transaction list: Provide at least one categorized transaction for summary generation.",
      "Invalid summary period: Use one of [daily, weekly, monthly, quarterly, yearly].",
      "Invalid sort option: Use one of [amount_desc, amount_asc, frequency_desc, frequency_asc, alphabetical].",
      "Uncategorized transactions found: Ensure all transactions have assigned categories before generating summary."
    ],
    "usage": "Provide categorized transaction data and specify the summary period. Optionally include subcategories, set sorting preferences, and enable percentage calculations for comprehensive spending summaries.",
    "output_details": {
      "total_spending": {
        "type": "number",
        "description": "Total spending amount for the specified period"
      },
      "category_totals": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of category names with corresponding total amounts"
      },
      "category_percentages": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Array of percentage breakdowns for each category"
      },
      "transaction_counts": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Array of transaction counts per category"
      },
      "average_amounts": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Array of average transaction amounts per category"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Transaction Search Filter",
    "tool_description": "Searches and filters transaction records based on multiple criteria including date ranges, amounts, categories, merchants, and description keywords.",
    "parameters": {
      "transactions": {
        "type": "array",
        "required": true,
        "description": "Array of transaction records to search and filter",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 3000
      },
      "start_date": {
        "type": "string",
        "required": false,
        "description": "Start date for date range filter (ISO 8601 format)",
        "format": "date-time",
        "default": "None"
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "End date for date range filter (ISO 8601 format)",
        "format": "date-time",
        "default": "None"
      },
      "categories": {
        "type": "array",
        "required": false,
        "description": "Array of categories to include in results",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "min_amount": {
        "type": "number",
        "required": false,
        "description": "Minimum transaction amount to include",
        "default": "None"
      },
      "max_amount": {
        "type": "number",
        "required": false,
        "description": "Maximum transaction amount to include",
        "default": "None"
      },
      "keywords": {
        "type": "array",
        "required": false,
        "description": "Keywords to search for in transaction descriptions",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "match_all_keywords": {
        "type": "boolean",
        "required": false,
        "description": "Whether all keywords must match (true) or any keyword can match (false)",
        "default": false
      }
    },
    "error_messages": [
      "Empty transaction list: Provide at least one transaction record for searching.",
      "Invalid date format: Use ISO 8601 date-time format for start_date and end_date.",
      "Invalid date range: start_date must be earlier than end_date.",
      "Invalid amount range: min_amount must be less than max_amount.",
      "No matching transactions: The specified filter criteria returned no results."
    ],
    "usage": "Provide transaction data and specify any combination of filter criteria. Use date ranges, amount limits, category lists, and keywords to narrow down results. Set match_all_keywords to control keyword matching behavior.",
    "output_details": {
      "filtered_transactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of transactions matching the specified criteria"
      },
      "total_matches": {
        "type": "integer",
        "description": "Total number of transactions matching the filter criteria"
      },
      "filter_summary": {
        "type": "string",
        "description": "Summary of applied filters and their effects"
      },
      "total_amount": {
        "type": "number",
        "description": "Sum of all amounts in the filtered results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Duplicate Transaction Detector",
    "tool_description": "Identifies potential duplicate transactions based on amount, date proximity, merchant similarity, and description patterns to prevent double-counting expenses.",
    "parameters": {
      "transactions": {
        "type": "array",
        "required": true,
        "description": "Array of transaction records to analyze for duplicates",
        "items": {
          "type": "string"
        },
        "minItems": 2,
        "maxItems": 1000
      },
      "date_tolerance_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days within which transactions are considered potentially duplicate",
        "default": 3
      },
      "amount_tolerance_percent": {
        "type": "number",
        "required": false,
        "description": "Percentage tolerance for amount differences (0.0-0.2)",
        "default": 0.01
      },
      "description_similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum similarity score for transaction descriptions (0.0-1.0)",
        "default": 0.8
      }
    },
    "error_messages": [
      "Insufficient transactions: Provide at least 2 transactions for duplicate detection.",
      "Invalid date tolerance: Date tolerance must be a non-negative integer.",
      "Invalid amount tolerance: Amount tolerance must be between 0.0 and 0.2.",
      "Invalid similarity threshold: Description similarity threshold must be between 0.0 and 1.0."
    ],
    "usage": "Provide transaction records and optionally adjust tolerance settings for date proximity, amount differences, and description similarity. The tool will identify groups of potentially duplicate transactions for review.",
    "output_details": {
      "duplicate_groups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of transaction groups identified as potential duplicates"
      },
      "duplicate_count": {
        "type": "integer",
        "description": "Total number of transactions identified as potential duplicates"
      },
      "confidence_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Array of confidence scores for each duplicate group"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Monthly Report Generator",
    "tool_description": "Creates comprehensive monthly expense reports with category summaries, trend analysis, budget comparisons, and visual data representations for financial review.",
    "parameters": {
      "transactions": {
        "type": "array",
        "required": true,
        "description": "Array of categorized transactions for the reporting period",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 2000
      },
      "report_month": {
        "type": "string",
        "required": true,
        "description": "Month for the report in YYYY-MM format",
        "format": "date-time"
      },
      "budget_data": {
        "type": "array",
        "required": false,
        "description": "Array of budget limits for comparison",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "include_comparisons": {
        "type": "boolean",
        "required": false,
        "description": "Include comparisons with previous months",
        "default": true
      },
      "include_trends": {
        "type": "boolean",
        "required": false,
        "description": "Include trend analysis and projections",
        "default": true
      },
      "include_recommendations": {
        "type": "boolean",
        "required": false,
        "description": "Include personalized spending recommendations",
        "default": true
      },
      "report_format": {
        "type": "string",
        "required": false,
        "description": "Output format for the report: summary, detailed, executive",
        "default": "detailed"
      }
    },
    "error_messages": [
      "Empty transaction data: Provide at least one transaction for report generation.",
      "Invalid report month: Use YYYY-MM format for the report month.",
      "Invalid report format: Use one of [summary, detailed, executive].",
      "Insufficient data for comparisons: Previous month data not available for comparison analysis.",
      "Budget data format error: Ensure budget data matches the expected format if provided."
    ],
    "usage": "Provide transaction data and specify the report month. Optionally include budget data for comparisons and enable trend analysis and recommendations. Choose the appropriate report format based on your needs.",
    "output_details": {
      "report_title": {
        "type": "string",
        "description": "Title and date range of the generated report"
      },
      "executive_summary": {
        "type":
