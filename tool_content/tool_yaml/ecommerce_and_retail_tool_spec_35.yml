field_name: ecommerce_and_retail
subfield: Inventory Management and Tracking
task: Inventory valuation and cost analysis reporting
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves complex financial calculations, integration of multiple data sources (inventory levels, purchase costs, sales data), compliance with accounting standards (FIFO, LIFO, weighted average), and generating comprehensive reports with multiple valuation methods. The task is **hard** due to its broad scope covering multiple valuation methodologies, dependencies between inventory movements and cost calculations, and the critical impact of errors on financial reporting.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting 17 tools within the 15-20 range to cover inventory data management, cost calculation methodologies, valuation analysis, reporting, and compliance requirements.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Inventory Data Loader** - Consumes: file paths, data sources → Produces: standardized inventory records
  2. **Cost Basis Calculator** - Consumes: purchase records, method type → Produces: unit cost calculations
  3. **FIFO Valuation Engine** - Consumes: inventory movements, purchase costs → Produces: FIFO-based valuations
  4. **LIFO Valuation Engine** - Consumes: inventory movements, purchase costs → Produces: LIFO-based valuations
  5. **Weighted Average Calculator** - Consumes: inventory data, cost records → Produces: weighted average costs
  6. **Standard Cost Analyzer** - Consumes: standard costs, actual costs → Produces: variance analysis
  7. **Inventory Movement Tracker** - Consumes: transaction records → Produces: movement summaries
  8. **Obsolescence Assessor** - Consumes: inventory age, sales velocity → Produces: obsolescence reserves
  9. **Market Value Comparator** - Consumes: current inventory, market prices → Produces: market value analysis
  10. **Lower of Cost or Market Calculator** - Consumes: cost values, market values → Produces: LCM adjustments
  11. **Shrinkage Analyzer** - Consumes: book inventory, physical counts → Produces: shrinkage calculations
  12. **Turn Rate Calculator** - Consumes: sales data, average inventory → Produces: turnover metrics
  13. **ABC Classification Engine** - Consumes: inventory items, value/velocity criteria → Produces: ABC categories
  14. **Cost Variance Reporter** - Consumes: standard costs, actual costs → Produces: variance reports
  15. **Inventory Aging Analyzer** - Consumes: inventory records, receipt dates → Produces: aging reports
  16. **Valuation Summary Generator** - Consumes: multiple valuation results → Produces: consolidated summaries
  17. **Financial Report Builder** - Consumes: valuation data, templates → Produces: formatted financial reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - **Basic Inventory Valuation**: Inventory Data Loader → FIFO Valuation Engine → Valuation Summary Generator
  - **Quick Turnover Analysis**: Inventory Data Loader → Turn Rate Calculator → Financial Report Builder

  **Medium Plans:**
  - **Comparative Valuation Analysis**: Inventory Data Loader → FIFO Valuation Engine + LIFO Valuation Engine + Weighted Average Calculator → Valuation Summary Generator → Financial Report Builder
  - **Obsolescence Assessment**: Inventory Data Loader → Inventory Aging Analyzer → Obsolescence Assessor → Lower of Cost or Market Calculator → Financial Report Builder

  **Complex Plans:**
  - **Comprehensive Inventory Analysis**: Inventory Data Loader → ABC Classification Engine → FIFO/LIFO/Weighted Average Calculators → Market Value Comparator → Lower of Cost or Market Calculator → Shrinkage Analyzer → Turn Rate Calculator → Cost Variance Reporter → Valuation Summary Generator → Financial Report Builder
  - **Full Cost Management Review**: Inventory Data Loader → Cost Basis Calculator → Standard Cost Analyzer → Inventory Movement Tracker → Inventory Aging Analyzer → Obsolescence Assessor → Cost Variance Reporter → Valuation Summary Generator → Financial Report Builder

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Inventory Data Loader",
    "tool_description": "Loads and standardizes inventory data from various sources including CSV files, databases, and APIs, ensuring data consistency for downstream analysis.",
    "parameters": {
      "data_source_path": {
        "type": "string",
        "required": true,
        "description": "Path to the inventory data source (file path, database connection string, or API endpoint)"
      },
      "data_format": {
        "type": "string",
        "required": true,
        "description": "Format of the data source (csv, json, database, api)"
      },
      "date_range_start": {
        "type": "string",
        "required": false,
        "description": "Start date for data filtering in ISO 8601 format",
        "format": "date-time",
        "default": "None"
      },
      "date_range_end": {
        "type": "string",
        "required": false,
        "description": "End date for data filtering in ISO 8601 format",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid data source path: Ensure the file path, database connection, or API endpoint is accessible and correctly formatted.",
      "Unsupported data format: Use one of [csv, json, database, api].",
      "Invalid date range: Ensure start date is before end date and both are in valid ISO 8601 format.",
      "Data parsing error: Check that the data source contains required columns (item_id, quantity, unit_cost, transaction_date)."
    ],
    "usage": "Provide data_source_path and data_format. Optionally filter by date range. The tool standardizes and validates inventory data for further processing.",
    "output_details": {
      "records_loaded": {
        "type": "integer",
        "description": "Number of inventory records successfully loaded"
      },
      "data_summary": {
        "type": "string",
        "description": "Summary of loaded data including date ranges and item count"
      },
      "validation_status": {
        "type": "string",
        "description": "Status of data validation (passed, warnings, errors)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "FIFO Valuation Engine",
    "tool_description": "Calculates inventory valuation using First-In-First-Out methodology, tracking cost layers and generating detailed valuation reports.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers to process",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10000
      },
      "purchase_records": {
        "type": "array",
        "required": true,
        "description": "Array of purchase transaction IDs",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "sales_records": {
        "type": "array",
        "required": true,
        "description": "Array of sales transaction IDs",
        "items": {
          "type": "string"
        }
      },
      "valuation_date": {
        "type": "string",
        "required": true,
        "description": "Date for inventory valuation calculation",
        "format": "date-time"
      },
      "include_cost_layers": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include detailed cost layer information in output",
        "default": true
      },
      "currency": {
        "type": "string",
        "required": false,
        "description": "Currency code for valuation (ISO 4217 format)",
        "default": "USD"
      }
    },
    "error_messages": [
      "Missing inventory data: Ensure inventory_items array contains valid item identifiers.",
      "Invalid transaction records: Purchase and sales record arrays must contain valid transaction IDs.",
      "Invalid valuation date: Provide a valid ISO 8601 formatted date.",
      "Insufficient purchase data: Cannot perform FIFO calculation without adequate purchase history.",
      "Currency code error: Use valid ISO 4217 currency codes (e.g., USD, EUR, GBP)."
    ],
    "usage": "Provide inventory_items, purchase_records, sales_records, and valuation_date. Optionally include cost layer details and specify currency. Returns FIFO-based inventory valuation.",
    "output_details": {
      "total_inventory_value": {
        "type": "number",
        "description": "Total inventory value using FIFO method"
      },
      "item_valuations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Per-item valuation details"
      },
      "cost_of_goods_sold": {
        "type": "number",
        "description": "COGS calculated using FIFO method"
      },
      "remaining_cost_layers": {
        "type": "integer",
        "description": "Number of cost layers remaining in inventory"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "LIFO Valuation Engine",
    "tool_description": "Calculates inventory valuation using Last-In-First-Out methodology, providing alternative valuation perspective for cost analysis.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers to process",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10000
      },
      "purchase_records": {
        "type": "array",
        "required": true,
        "description": "Array of purchase transaction IDs",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "sales_records": {
        "type": "array",
        "required": true,
        "description": "Array of sales transaction IDs",
        "items": {
          "type": "string"
        }
      },
      "valuation_date": {
        "type": "string",
        "required": true,
        "description": "Date for inventory valuation calculation",
        "format": "date-time"
      },
      "currency": {
        "type": "string",
        "required": false,
        "description": "Currency code for valuation (ISO 4217 format)",
        "default": "USD"
      }
    },
    "error_messages": [
      "Missing inventory data: Ensure inventory_items array contains valid item identifiers.",
      "Invalid transaction records: Purchase and sales record arrays must contain valid transaction IDs.",
      "Invalid valuation date: Provide a valid ISO 8601 formatted date.",
      "Insufficient purchase data: Cannot perform LIFO calculation without adequate purchase history.",
      "Currency code error: Use valid ISO 4217 currency codes (e.g., USD, EUR, GBP)."
    ],
    "usage": "Provide inventory_items, purchase_records, sales_records, and valuation_date. Optionally specify currency. Returns LIFO-based inventory valuation for comparison with other methods.",
    "output_details": {
      "total_inventory_value": {
        "type": "number",
        "description": "Total inventory value using LIFO method"
      },
      "item_valuations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Per-item valuation details"
      },
      "cost_of_goods_sold": {
        "type": "number",
        "description": "COGS calculated using LIFO method"
      },
      "lifo_reserve": {
        "type": "number",
        "description": "LIFO reserve amount (difference from FIFO valuation)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weighted Average Calculator",
    "tool_description": "Computes inventory valuation using weighted average cost method, providing smooth cost averaging across purchase periods.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers to process",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10000
      },
      "calculation_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date for weighted average calculation period",
        "format": "date-time"
      },
      "calculation_period_end": {
        "type": "string",
        "required": true,
        "description": "End date for weighted average calculation period",
        "format": "date-time"
      },
      "recalculation_frequency": {
        "type": "string",
        "required": false,
        "description": "Frequency for recalculating weighted average (daily, weekly, monthly)",
        "default": "monthly"
      }
    },
    "error_messages": [
      "Missing inventory data: Ensure inventory_items array contains valid item identifiers.",
      "Invalid calculation period: Start date must be before end date, both in ISO 8601 format.",
      "Invalid recalculation frequency: Use one of [daily, weekly, monthly].",
      "Insufficient data points: Need at least 2 purchase transactions for meaningful weighted average calculation."
    ],
    "usage": "Provide inventory_items and calculation period dates. Optionally set recalculation frequency. Returns weighted average cost calculations for inventory valuation.",
    "output_details": {
      "total_inventory_value": {
        "type": "number",
        "description": "Total inventory value using weighted average method"
      },
      "average_unit_costs": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Weighted average unit cost for each item"
      },
      "cost_variance": {
        "type": "number",
        "description": "Variance in costs over the calculation period"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Obsolescence Assessor",
    "tool_description": "Analyzes inventory for obsolescence risk based on aging, sales velocity, and market conditions, calculating appropriate reserves.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers to assess",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50000
      },
      "aging_thresholds": {
        "type": "array",
        "required": true,
        "description": "Age thresholds in days for obsolescence categories",
        "items": {
          "type": "integer"
        },
        "minItems": 2,
        "maxItems": 10
      },
      "velocity_lookback_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to look back for sales velocity calculation"
      },
      "obsolescence_percentages": {
        "type": "array",
        "required": true,
        "description": "Reserve percentages for each aging category",
        "items": {
          "type": "number"
        },
        "minItems": 2,
        "maxItems": 10
      },
      "assessment_date": {
        "type": "string",
        "required": true,
        "description": "Date for obsolescence assessment",
        "format": "date-time"
      },
      "include_seasonal_adjustment": {
        "type": "boolean",
        "required": false,
        "description": "Whether to adjust for seasonal sales patterns",
        "default": false
      },
      "minimum_reserve_amount": {
        "type": "number",
        "required": false,
        "description": "Minimum reserve amount per item",
        "default": 0
      },
      "exclude_categories": {
        "type": "array",
        "required": false,
        "description": "Product categories to exclude from obsolescence assessment",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid aging configuration: aging_thresholds and obsolescence_percentages arrays must have the same length.",
      "Invalid threshold values: aging_thresholds must be positive integers in ascending order.",
      "Invalid percentage values: obsolescence_percentages must be between 0 and 100.",
      "Invalid assessment date: Provide a valid ISO 8601 formatted date.",
      "Insufficient velocity data: velocity_lookback_days must be at least 30 days.",
      "Array length mismatch: Ensure aging_thresholds and obsolescence_percentages have matching lengths.",
      "Invalid reserve amount: minimum_reserve_amount must be non-negative."
    ],
    "usage": "Provide inventory_items, aging_thresholds, obsolescence_percentages, velocity_lookback_days, and assessment_date. Configure seasonal adjustments and exclusions as needed. Returns obsolescence analysis and reserve calculations.",
    "output_details": {
      "total_obsolescence_reserve": {
        "type": "number",
        "description": "Total recommended obsolescence reserve amount"
      },
      "items_at_risk": {
        "type": "integer",
        "description": "Number of items identified as obsolescence risks"
      },
      "reserve_by_category": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Reserve amounts broken down by aging category"
      },
      "high_risk_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of highest risk items requiring immediate attention"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Market Value Comparator",
    "tool_description": "Compares current inventory book values with market prices to identify potential write-downs and valuation adjustments.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers for market comparison",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 25000
      },
      "market_data_source": {
        "type": "string",
        "required": true,
        "description": "Source for market price data (api, file, database)"
      },
      "comparison_date": {
        "type": "string",
        "required": true,
        "description": "Date for market value comparison",
        "format": "date-time"
      },
      "price_tolerance_percentage": {
        "type": "number",
        "required": false,
        "description": "Tolerance percentage for price variations before flagging",
        "default": 5
      },
      "include_replacement_cost": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include replacement cost analysis",
        "default": true
      },
      "market_data_age_limit": {
        "type": "integer",
        "required": false,
        "description": "Maximum age of market data in days to consider current",
        "default": 7
      },
      "currency_conversion": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform currency conversion for international items",
        "default": false
      },
      "exclude_custom_items": {
        "type": "boolean",
        "required": false,
        "description": "Whether to exclude custom or made-to-order items from comparison",
        "default": true
      }
    },
    "error_messages": [
      "Invalid market data source: Use one of [api, file, database].",
      "Market data unavailable: Cannot retrieve current market prices for comparison.",
      "Invalid comparison date: Provide a valid ISO 8601 formatted date.",
      "Price tolerance out of range: price_tolerance_percentage must be between 0 and 50.",
      "Stale market data: Market data exceeds age limit specified in market_data_age_limit.",
      "Currency conversion error: Enable currency_conversion only when exchange rate data is available.",
      "Data age limit invalid: market_data_age_limit must be between 1 and 30 days."
    ],
    "usage": "Provide inventory_items, market_data_source, and comparison_date. Configure tolerance levels and analysis options. Returns market value comparison highlighting items requiring write-downs.",
    "output_details": {
      "items_requiring_writedown": {
        "type": "integer",
        "description": "Number of items with market value below book value"
      },
      "total_writedown_amount": {
        "type": "number",
        "description": "Total recommended write-down amount"
      },
      "market_comparison_summary": {
        "type": "string",
        "description": "Summary of market value comparison results"
      },
      "price_variance_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Items with significant price variances from market"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Lower of Cost or Market Calculator",
    "tool_description": "Applies Lower of Cost or Market (LCM) rule to inventory valuation, ensuring compliance with accounting standards.",
    "parameters": {
      "cost_valuations": {
        "type": "array",
        "required": true,
        "description": "Array of cost-based valuation amounts",
        "items": {
          "type": "number"
        },
        "minItems": 1
      },
      "market_valuations": {
        "type": "array",
        "required": true,
        "description": "Array of market-based valuation amounts",
        "items": {
          "type": "number"
        },
        "minItems": 1
      },
      "item_identifiers": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers corresponding to valuations",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "lcm_application_level": {
        "type": "string",
        "required": false,
        "description": "Level at which to apply LCM rule (item, category, total)",
        "default": "item"
      },
      "accounting_standard": {
        "type": "string",
        "required": false,
        "description": "Accounting standard to follow (GAAP, IFRS)",
        "default": "GAAP"
      }
    },
    "error_messages": [
      "Array length mismatch: cost_valuations, market_valuations, and item_identifiers must have the same length.",
      "Invalid valuation amounts: All valuation amounts must be non-negative numbers.",
      "Invalid LCM application level: Use one of [item, category, total].",
      "Invalid accounting standard: Use one of [GAAP, IFRS].",
      "Missing valuation data: Ensure all arrays contain valid numeric values."
    ],
    "usage": "Provide matching arrays of cost_valuations, market_valuations, and item_identifiers. Specify application level and accounting standard. Returns LCM-adjusted inventory valuations.",
    "output_details": {
      "lcm_adjusted_total": {
        "type": "number",
        "description": "Total inventory value after LCM adjustments"
      },
      "total_writedown": {
        "type": "number",
        "description": "Total amount written down due to LCM rule"
      },
      "items_written_down": {
        "type": "integer",
        "description": "Number of items requiring LCM write-downs"
      },
      "lcm_details": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed LCM calculations for each item"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Turn Rate Calculator",
    "tool_description": "Calculates inventory turnover rates and related metrics to assess inventory efficiency and management performance.",
    "parameters": {
      "cost_of_goods_sold": {
        "type": "number",
        "required": true,
        "description": "Cost of goods sold for the analysis period"
      },
      "average_inventory_value": {
        "type": "number",
        "required": true,
        "description": "Average inventory value during the analysis period"
      },
      "analysis_period_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days in the analysis period"
      },
      "industry_benchmark": {
        "type": "number",
        "required": false,
        "description": "Industry benchmark turnover rate for comparison",
        "default": "None"
      },
      "target_turnover_rate": {
        "type": "number",
        "required": false,
        "description": "Company's target inventory turnover rate",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid COGS amount: cost_of_goods_sold must be a positive number.",
      "Invalid inventory value: average_inventory_value must be a positive number.",
      "Invalid analysis period: analysis_period_days must be between 30 and 365.",
      "Division by zero: average_inventory_value cannot be zero for turnover calculation.",
      "Invalid benchmark values: industry_benchmark and target_turnover_rate must be positive if provided."
    ],
    "usage": "Provide cost_of_goods_sold, average_inventory_value, and analysis_period_days. Optionally include benchmarks for comparison. Returns comprehensive turnover analysis.",
    "output_details": {
      "inventory_turnover_rate": {
        "type": "number",
        "description": "Calculated inventory turnover rate (times per period)"
      },
      "days_sales_inventory": {
        "type": "number",
        "description": "Average number of days to sell inventory"
      },
      "turnover_performance": {
        "type": "string",
        "description": "Performance assessment compared to benchmarks"
      },
      "efficiency_score": {
        "type": "number",
        "description": "Inventory efficiency score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "ABC Classification Engine",
    "tool_description": "Classifies inventory items into ABC categories based on value, velocity, or custom criteria for focused management attention.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers to classify",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100000
      },
      "classification_criteria": {
        "type": "string",
        "required": true,
        "description": "Primary classification criteria (value, volume, profit, custom)"
      },
      "a_category_percentage": {
        "type": "number",
        "required": false,
        "description": "Percentage of items to classify as Category A",
        "default": 20
      },
      "b_category_percentage": {
        "type": "number",
        "required": false,
        "description": "Percentage of items to classify as Category B",
        "default": 30
      },
      "analysis_period_months": {
        "type": "integer",
        "required": false,
        "description": "Number of months to analyze for classification",
        "default": 12
      },
      "minimum_transaction_threshold": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of transactions required for classification",
        "default": 1
      },
      "include_seasonal_adjustment": {
        "type": "boolean",
        "required": false,
        "description": "Whether to adjust for seasonal variations",
        "default": false
      },
      "custom_weights": {
        "type": "array",
        "required": false,
        "description": "Custom weighting factors for multi-criteria classification",
        "items": {
          "type": "number"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid classification criteria: Use one of [value, volume, profit, custom].",
      "Invalid category percentages: a_category_percentage + b_category_percentage must be less than 100.",
      "Invalid analysis period: analysis_period_months must be between 1 and 60.",
      "Invalid transaction threshold: minimum_transaction_threshold must be non-negative.",
      "Custom weights required: When using 'custom' criteria, provide custom_weights array.",
      "Percentage out of range: Category percentages must be between 1 and 99.",
      "Insufficient data: Not enough transaction data for meaningful ABC classification."
    ],
    "usage": "Provide inventory_items and classification_criteria. Configure category percentages and analysis parameters. For custom criteria, include custom_weights. Returns ABC classification results.",
    "output_details": {
      "category_a_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Items classified as Category A (high importance)"
      },
      "category_b_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Items classified as Category B (medium importance)"
      },
      "category_c_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Items classified as Category C (low importance)"
      },
      "classification_summary": {
        "type": "string",
        "description": "Summary of ABC classification results and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Aging Analyzer",
    "tool_description": "Analyzes inventory age distribution and identifies slow-moving or stagnant stock requiring attention.",
    "parameters": {
      "inventory_items": {
        "type": "array",
        "required": true,
        "description": "Array of item identifiers to analyze",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "analysis_date": {
        "type": "string",
        "required": true,
        "description": "Date for aging analysis calculation",
        "format": "date-time"
      },
      "aging_buckets": {
        "type": "array",
        "required": true,
        "description": "Age bucket definitions in days",
        "items": {
          "type": "integer"
        },
        "minItems": 2,
        "maxItems": 8
      },
      "include_zero_quantity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include items with zero on-hand quantity",
        "default": false
      }
    },
    "error_messages": [
      "Invalid analysis date: Provide a valid ISO 8601 formatted date.",
      "Invalid aging buckets: Bucket values must be positive integers in ascending order.",
      "Insufficient aging buckets: Provide at least 2 aging bucket definitions.",
      "Too many aging buckets: Maximum of 8 aging buckets allowed for clarity.",
      "Missing inventory data: Ensure inventory_items contains valid item identifiers."
    ],
    "usage": "Provide inventory_items, analysis_date, and aging_buckets. Configure whether to include zero-quantity items. Returns detailed inventory aging analysis.",
    "output_details": {
      "aging_summary": {
        "type":
