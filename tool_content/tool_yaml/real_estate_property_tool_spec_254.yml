field_name: real_estate_property
subfield: residential_sales_and_marketing
task: Property listing creation and management across multiple platforms
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves moderate complexity with multiple interconnected subproblems including data collection, content creation, platform integration, and ongoing management. The scope includes coordinating across different listing platforms with varying requirements, managing media assets, and maintaining data consistency. The task has medium difficulty due to the coordination requirements and potential for errors that could impact property visibility and sales.

  **STEP 2 — Set a tool budget**

  Based on the medium difficulty assessment, I will target 12 tools to cover the comprehensive workflow of property listing creation and management across multiple platforms.

  **STEP 3 — List all tool names and dependencies**

  1. Property Data Collector - consumes property details → produces structured property data
  2. Market Comparator - consumes property data and location → produces market analysis
  3. Photo Processor - consumes image files → produces optimized listing photos
  4. Virtual Tour Generator - consumes photos and floor plans → produces virtual tour links
  5. Listing Description Writer - consumes property data and market analysis → produces marketing descriptions
  6. Price Optimizer - consumes property data and market comparables → produces recommended pricing
  7. Platform Publisher - consumes listing data and media → produces platform-specific listings
  8. Multi-Platform Syncer - consumes listing data → produces synchronized updates across platforms
  9. Lead Tracker - consumes inquiry data → produces organized lead information
  10. Performance Analyzer - consumes listing metrics → produces performance reports
  11. Listing Status Manager - consumes status changes → produces updated listing states
  12. Content Scheduler - consumes listing updates → produces scheduled publication timeline

  **STEP 4 — Multi-tool plans**

  Simple plans:
  - Basic listing creation: Property Data Collector → Listing Description Writer → Platform Publisher
  - Photo management: Photo Processor → Platform Publisher → Multi-Platform Syncer

  Medium plans:
  - Complete new listing workflow: Property Data Collector → Market Comparator → Price Optimizer → Photo Processor → Listing Description Writer → Platform Publisher
  - Performance monitoring: Lead Tracker → Performance Analyzer → Listing Status Manager → Multi-Platform Syncer

  Complex plans:
  - Full-service listing management: Property Data Collector → Market Comparator → Photo Processor → Virtual Tour Generator → Price Optimizer → Listing Description Writer → Platform Publisher → Multi-Platform Syncer → Content Scheduler
  - Comprehensive optimization cycle: Performance Analyzer → Market Comparator → Price Optimizer → Listing Description Writer → Multi-Platform Syncer → Lead Tracker → Performance Analyzer

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Property Data Collector",
    "tool_description": "Collects and structures comprehensive property information including specifications, location details, and features for listing creation.",
    "parameters": {
      "property_address": {
        "type": "string",
        "required": true,
        "description": "Complete street address of the property"
      },
      "property_type": {
        "type": "string",
        "required": true,
        "description": "Type of property: single_family, condo, townhouse, multi_family, land"
      },
      "bedrooms": {
        "type": "integer",
        "required": true,
        "description": "Number of bedrooms"
      },
      "bathrooms": {
        "type": "number",
        "required": true,
        "description": "Number of bathrooms (can be decimal like 2.5)"
      },
      "square_feet": {
        "type": "integer",
        "required": true,
        "description": "Total square footage of the property"
      },
      "lot_size": {
        "type": "number",
        "required": false,
        "description": "Lot size in acres",
        "default": null
      },
      "year_built": {
        "type": "integer",
        "required": false,
        "description": "Year the property was built",
        "default": null
      },
      "amenities": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "List of property amenities and features",
        "default": []
      }
    },
    "error_messages": [
      "Invalid property type: Must be one of single_family, condo, townhouse, multi_family, land",
      "Invalid address format: Provide complete street address including street number, name, city, state, and ZIP",
      "Invalid numeric values: Bedrooms must be positive integer, bathrooms must be positive number, square_feet must be positive integer",
      "Year built out of range: Must be between 1800 and current year",
      "Lot size invalid: Must be positive number in acres"
    ],
    "usage": "Provide basic property details including address, type, bedrooms, bathrooms, and square footage. Optionally include lot size, year built, and amenities list. Returns structured property data for use in listing creation.",
    "output_details": {
      "property_id": {
        "type": "string",
        "description": "Unique identifier for the property"
      },
      "structured_data": {
        "type": "string",
        "description": "JSON-formatted property information"
      },
      "validation_status": {
        "type": "string",
        "description": "Status of data validation: valid, warning, or error"
      },
      "missing_fields": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of recommended additional fields to collect"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Market Comparator",
    "tool_description": "Analyzes comparable properties in the area to provide market insights and competitive positioning data for pricing and marketing strategy.",
    "parameters": {
      "property_address": {
        "type": "string",
        "required": true,
        "description": "Subject property address for comparison"
      },
      "search_radius": {
        "type": "number",
        "required": false,
        "description": "Search radius in miles for comparable properties",
        "default": 1.0
      },
      "max_comparables": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of comparable properties to analyze",
        "default": 10
      },
      "days_back": {
        "type": "integer",
        "required": false,
        "description": "Number of days back to search for sold comparables",
        "default": 90
      }
    },
    "error_messages": [
      "Address not found: Unable to locate the specified property address",
      "Insufficient comparables: Not enough comparable properties found in the specified radius and timeframe",
      "Invalid search parameters: Search radius must be between 0.1 and 5 miles, max_comparables between 1 and 50, days_back between 30 and 365"
    ],
    "usage": "Provide the property address and optionally specify search radius, maximum comparables, and lookback period. Returns market analysis including comparable sales and current listings.",
    "output_details": {
      "market_summary": {
        "type": "string",
        "description": "Overview of local market conditions"
      },
      "average_price_per_sqft": {
        "type": "number",
        "description": "Average price per square foot for comparable properties"
      },
      "comparable_count": {
        "type": "integer",
        "description": "Number of comparable properties found"
      },
      "market_trends": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Key market trends and insights"
      },
      "competitive_advantages": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Unique selling points compared to market"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Photo Processor",
    "tool_description": "Processes and optimizes property photos for listing platforms including resizing, enhancement, and format conversion.",
    "parameters": {
      "image_urls": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "URLs or paths to property images to process",
        "minItems": 1,
        "maxItems": 50
      },
      "target_resolution": {
        "type": "string",
        "required": false,
        "description": "Target image resolution: high, medium, low",
        "default": "high"
      },
      "enhancement_level": {
        "type": "string",
        "required": false,
        "description": "Photo enhancement level: none, basic, advanced",
        "default": "basic"
      },
      "watermark_text": {
        "type": "string",
        "required": false,
        "description": "Text to add as watermark on images",
        "default": null
      }
    },
    "error_messages": [
      "Invalid image format: Supported formats are JPEG, PNG, HEIC, and TIFF",
      "Image file too large: Maximum file size is 50MB per image",
      "Invalid enhancement level: Must be none, basic, or advanced",
      "Invalid target resolution: Must be high, medium, or low",
      "Watermark text too long: Maximum 50 characters for watermark text"
    ],
    "usage": "Provide array of image URLs/paths and optionally specify resolution, enhancement level, and watermark. Returns processed images optimized for listing platforms.",
    "output_details": {
      "processed_images": {
        "type": "array",
        "items": {"type": "string"},
        "description": "URLs to processed and optimized images"
      },
      "processing_summary": {
        "type": "string",
        "description": "Summary of processing actions performed"
      },
      "failed_images": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of images that failed processing"
      },
      "total_processed": {
        "type": "integer",
        "description": "Number of successfully processed images"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Virtual Tour Generator",
    "tool_description": "Creates virtual tours and 3D walkthroughs from property photos and floor plans for enhanced online listing experience.",
    "parameters": {
      "room_photos": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "URLs to interior room photos",
        "minItems": 3,
        "maxItems": 30
      },
      "floor_plan_url": {
        "type": "string",
        "required": false,
        "description": "URL to property floor plan image",
        "default": null
      },
      "tour_type": {
        "type": "string",
        "required": false,
        "description": "Type of virtual tour: slideshow, panoramic, or walkthrough",
        "default": "slideshow"
      },
      "include_audio": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include audio narration",
        "default": false
      },
      "background_music": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include background music",
        "default": false
      }
    },
    "error_messages": [
      "Insufficient photos: Minimum 3 room photos required for virtual tour creation",
      "Invalid tour type: Must be slideshow, panoramic, or walkthrough",
      "Photo quality insufficient: Photos must be high resolution for virtual tour creation",
      "Floor plan format unsupported: Floor plan must be in JPEG or PNG format"
    ],
    "usage": "Provide array of room photos and optionally floor plan, tour type, and audio preferences. Returns virtual tour links and embed codes for listing platforms.",
    "output_details": {
      "tour_url": {
        "type": "string",
        "description": "URL to the generated virtual tour"
      },
      "embed_code": {
        "type": "string",
        "description": "HTML embed code for the virtual tour"
      },
      "mobile_optimized": {
        "type": "boolean",
        "description": "Whether the tour is optimized for mobile devices"
      },
      "tour_duration": {
        "type": "integer",
        "description": "Estimated duration of virtual tour in seconds"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Listing Description Writer",
    "tool_description": "Generates compelling property descriptions optimized for different listing platforms using property data and market insights.",
    "parameters": {
      "property_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing structured property information"
      },
      "market_analysis": {
        "type": "string",
        "required": true,
        "description": "JSON string containing market comparison data"
      },
      "description_style": {
        "type": "string",
        "required": false,
        "description": "Writing style: professional, luxury, family_friendly, investor_focused",
        "default": "professional"
      },
      "target_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Target listing platforms for optimization",
        "default": ["mls", "zillow", "realtor"]
      },
      "highlight_features": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Specific features to emphasize in description",
        "default": []
      },
      "character_limit": {
        "type": "integer",
        "required": false,
        "description": "Maximum character count for description",
        "default": 1000
      },
      "include_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "SEO keywords to include in description",
        "default": []
      }
    },
    "error_messages": [
      "Invalid property data format: Property data must be valid JSON string",
      "Invalid market analysis format: Market analysis must be valid JSON string",
      "Unsupported description style: Must be professional, luxury, family_friendly, or investor_focused",
      "Unsupported platform: Supported platforms are mls, zillow, realtor, facebook, craigslist",
      "Character limit too restrictive: Minimum character limit is 100, maximum is 5000"
    ],
    "usage": "Provide structured property data and market analysis as JSON strings, then specify description style, target platforms, and optional highlighting preferences. Returns optimized descriptions for each platform.",
    "output_details": {
      "platform_descriptions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Descriptions optimized for each target platform"
      },
      "headline": {
        "type": "string",
        "description": "Compelling headline for the property listing"
      },
      "key_highlights": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Bullet points of key property features"
      },
      "seo_score": {
        "type": "integer",
        "description": "SEO optimization score from 1-100"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Price Optimizer",
    "tool_description": "Recommends optimal listing price based on property characteristics, market comparables, and pricing strategy goals.",
    "parameters": {
      "property_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing property specifications"
      },
      "comparables_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing comparable sales data"
      },
      "pricing_strategy": {
        "type": "string",
        "required": false,
        "description": "Pricing approach: competitive, premium, quick_sale",
        "default": "competitive"
      },
      "days_on_market_target": {
        "type": "integer",
        "required": false,
        "description": "Target number of days to sell",
        "default": 60
      }
    },
    "error_messages": [
      "Invalid property data: Property data must be valid JSON with required fields",
      "Insufficient comparable data: Need at least 3 comparable sales for accurate pricing",
      "Invalid pricing strategy: Must be competitive, premium, or quick_sale",
      "Invalid days on market target: Must be between 15 and 365 days"
    ],
    "usage": "Provide property data and comparable sales information, then specify pricing strategy and target timeline. Returns recommended price with supporting analysis.",
    "output_details": {
      "recommended_price": {
        "type": "integer",
        "description": "Recommended listing price in dollars"
      },
      "price_range_low": {
        "type": "integer",
        "description": "Lower bound of recommended price range"
      },
      "price_range_high": {
        "type": "integer",
        "description": "Upper bound of recommended price range"
      },
      "confidence_score": {
        "type": "integer",
        "description": "Confidence in pricing recommendation from 1-100"
      },
      "pricing_rationale": {
        "type": "string",
        "description": "Explanation of pricing recommendation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Platform Publisher",
    "tool_description": "Publishes property listings to multiple real estate platforms with platform-specific formatting and requirements.",
    "parameters": {
      "listing_data": {
        "type": "string",
        "required": true,
        "description": "Complete listing information in JSON format"
      },
      "target_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Platforms to publish to",
        "minItems": 1,
        "maxItems": 10
      },
      "listing_photos": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "URLs to listing photos",
        "minItems": 1,
        "maxItems": 50
      },
      "virtual_tour_url": {
        "type": "string",
        "required": false,
        "description": "URL to virtual tour if available",
        "default": null
      },
      "agent_contact_info": {
        "type": "string",
        "required": true,
        "description": "JSON string with agent/broker contact details"
      },
      "listing_status": {
        "type": "string",
        "required": false,
        "description": "Initial listing status: active, coming_soon, pending",
        "default": "active"
      },
      "auto_sync": {
        "type": "boolean",
        "required": false,
        "description": "Enable automatic synchronization across platforms",
        "default": true
      },
      "publish_immediately": {
        "type": "boolean",
        "required": false,
        "description": "Publish immediately or save as draft",
        "default": false
      }
    },
    "error_messages": [
      "Invalid listing data format: Listing data must be valid JSON with all required fields",
      "Unsupported platform: Check supported platforms list (MLS, Zillow, Realtor.com, etc.)",
      "Missing required photos: At least one photo is required for listing publication",
      "Invalid contact information: Agent contact info must include name, phone, and email",
      "Photo upload failed: One or more photos failed to upload to platform",
      "Platform authentication failed: Check API credentials for specified platforms",
      "Listing validation failed: Listing doesn't meet platform requirements"
    ],
    "usage": "Provide complete listing data, select target platforms, include photos and agent contact information. Optionally add virtual tour and set publishing preferences. Returns publication status for each platform.",
    "output_details": {
      "publication_results": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Success/failure status for each platform"
      },
      "listing_urls": {
        "type": "array",
        "items": {"type": "string"},
        "description": "URLs to published listings on each platform"
      },
      "failed_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Platforms where publication failed"
      },
      "sync_enabled": {
        "type": "boolean",
        "description": "Whether cross-platform synchronization is active"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Multi-Platform Syncer",
    "tool_description": "Synchronizes listing updates, price changes, and status modifications across all connected listing platforms simultaneously.",
    "parameters": {
      "listing_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the listing to sync"
      },
      "update_type": {
        "type": "string",
        "required": true,
        "description": "Type of update: price, status, description, photos, all"
      },
      "new_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing the updated information"
      },
      "sync_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Specific platforms to sync, or all connected platforms",
        "default": []
      },
      "delay_sync": {
        "type": "integer",
        "required": false,
        "description": "Delay sync by specified minutes",
        "default": 0
      }
    },
    "error_messages": [
      "Listing not found: The specified listing ID doesn't exist in the system",
      "Invalid update type: Must be price, status, description, photos, or all",
      "Invalid new data format: Update data must be valid JSON matching the update type",
      "Platform sync failed: One or more platforms failed to update",
      "Sync delay invalid: Delay must be between 0 and 1440 minutes (24 hours)"
    ],
    "usage": "Provide listing ID, update type, and new data as JSON. Optionally specify which platforms to sync and any delay. Returns sync status for all platforms.",
    "output_details": {
      "sync_summary": {
        "type": "string",
        "description": "Overall synchronization result summary"
      },
      "successful_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Platforms that successfully updated"
      },
      "failed_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Platforms that failed to update"
      },
      "sync_timestamp": {
        "type": "string",
        "description": "When the synchronization was completed",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Lead Tracker",
    "tool_description": "Captures and organizes inquiries and leads from all listing platforms into a unified tracking system with contact management.",
    "parameters": {
      "listing_id": {
        "type": "string",
        "required": true,
        "description": "Listing identifier to track leads for"
      },
      "source_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Platforms to monitor for leads",
        "default": []
      },
      "lead_scoring": {
        "type": "boolean",
        "required": false,
        "description": "Enable automatic lead scoring based on inquiry details",
        "default": true
      },
      "auto_response": {
        "type": "boolean",
        "required": false,
        "description": "Send automatic response to new leads",
        "default": false
      }
    },
    "error_messages": [
      "Listing not found: The specified listing ID is not in the system",
      "Platform integration error: Unable to connect to one or more specified platforms",
      "Lead data incomplete: Some lead information is missing required fields"
    ],
    "usage": "Provide listing ID and optionally specify platforms to monitor and lead management preferences. Returns organized lead data with scoring and contact information.",
    "output_details": {
      "total_leads": {
        "type": "integer",
        "description": "Total number of leads captured"
      },
      "new_leads": {
        "type": "integer",
        "description": "Number of new leads since last check"
      },
      "high_priority_leads": {
        "type": "integer",
        "description": "Number of high-scoring leads requiring immediate attention"
      },
      "lead_sources": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Platforms generating the most leads"
      },
      "response_rate": {
        "type": "number",
        "description": "Percentage of leads that received responses"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Analyzer",
    "tool_description": "Analyzes listing performance metrics including views, inquiries, and engagement across all platforms to optimize marketing strategy.",
    "parameters": {
      "listing_id": {
        "type": "string",
        "required": true,
        "description": "Listing identifier to analyze"
      },
      "analysis_period": {
        "type": "integer",
        "required": false,
        "description": "Number of days to analyze",
        "default": 30
      },
      "include_competitor_data": {
        "type": "boolean",
        "required": false,
        "description": "Include competitive analysis data",
        "default": true
      }
    },
    "error_messages": [
      "Listing not found: The specified listing ID doesn't exist",
      "Insufficient data: Not enough performance data available for analysis",
      "Analysis period invalid: Period must be between 1 and 365 days"
    ],
    "usage": "Provide listing ID and analysis timeframe. Optionally include competitor comparison. Returns comprehensive performance metrics and recommendations.",
    "output_details": {
      "total_views": {
        "type": "integer",
        "description": "Total listing views across all platforms"
      },
      "inquiry_rate": {
        "type": "number",
        "description": "Percentage of views that generated inquiries"
      },
      "best_performing_platform": {
        "type": "string",
        "description": "Platform generating the most engagement"
      },
      "performance_trends": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Key trends in listing performance"
      },
      "optimization_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific recommendations to improve performance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Listing Status Manager",
    "tool_description": "Manages and updates listing status changes including price reductions, pending sales, and closings across all platforms.",
    "parameters": {
      "listing_id": {
        "type": "string",
        "required": true,
        "description": "Identifier for the listing to update"
      },
      "new_status": {
        "type": "string",
        "required": true,
        "description": "New listing status: active, pending, sold, withdrawn, expired"
      },
      "status_date": {
        "type": "string",
        "required": false,
        "description": "Date when status change is effective",
        "format": "date-time",
        "default": null
      },
      "notify_platforms": {
        "type": "boolean",
        "required": false,
        "description": "Automatically notify all connected platforms",
        "default": true
      }
    },
    "error_messages": [
      "Listing not found: The specified listing ID is not in the system",
      "Invalid status: Status must be active, pending, sold, withdrawn, or expired",
      "Invalid status date: Date must be in ISO 8601 format and not in the future",
      "Platform notification failed: Unable to update status on one or more platforms"
    ],
    "usage": "Provide listing ID and new status, optionally specify effective date and platform notification preference. Returns status update confirmation across all platforms.",
    "output_details": {
      "status_updated": {
        "type": "boolean",
        "description": "Whether status was successfully updated"
      },
      "updated_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Platforms where status was updated"
      },
      "update_timestamp": {
        "type": "string",
        "description": "When the status update was completed",
        "format": "date-time"
      },
      "previous_status": {
        "type": "string",
        "description": "The listing's previous status"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Scheduler",
    "tool_description": "Schedules and automates listing updates, price changes, and promotional content across multiple platforms with calendar management.",
    "parameters": {
      "listing_id": {
        "type": "string",
        "required": true,
        "description": "Listing identifier for scheduled updates"
      },
      "schedule_type": {
        "type": "string",
        "required": true,
        "description": "Type of scheduled action: price_update, status_change, content_refresh, promotion"
      },
      "scheduled_datetime": {
        "type": "string",
        "required": true,
        "description": "When to execute the scheduled action",
        "format": "date-time"
      },
      "action_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing the action parameters"
      },
      "target_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Specific platforms for the scheduled action",
        "default": []
      },
      "recurring": {
        "type": "boolean",
        "required": false,
        "description": "Whether this is a recurring scheduled action",
        "default": false
      },
      "recurrence_interval": {
        "type": "integer",
        "required": false,
        "description": "Days between recurring actions (if recurring is true)",
        "default": null
      }
    },
    "error_messages": [
      "Listing not found: The specified listing ID doesn't exist in the system",
      "Invalid schedule type: Must be price_update, status_change, content_refresh, or promotion",
      "Invalid datetime: Scheduled datetime must be in future and valid ISO 8601 format",
      "Invalid action data: Action data must be valid JSON matching the schedule type",
      "Recurrence interval invalid: Must be between 1 and 365 days when recurring is enabled",
      "Platform not supported: One or more target platforms are not supported for scheduling"
    ],
    "usage": "Provide listing ID, schedule type, datetime, and action data. Optionally specify target platforms and recurrence settings. Returns confirmation of scheduled action with unique scheduler ID.",
    "output_details": {
      "schedule_id": {
        "type": "string",
        "description": "Unique identifier for the scheduled action"
      },
      "confirmation_status": {
        "type": "string",
        "description": "Status of the scheduling request: confirmed, pending, failed"
      },
      "next_execution": {
        "type": "string",
        "description": "Next scheduled execution time",
        "format": "date-time"
      },
      "affected_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "
