field_name: wildlife_observation_and_birding
subfield: wildlife_tracking_and_migration_monitoring
task: Species identification and behavioral documentation from field observations
tool_description: |-
  **STEP 1 — Rate task difficulty**
  This task has medium difficulty. It requires coordinating multiple observation methods, managing diverse data types (visual, audio, GPS, behavioral), and ensuring accurate species identification which can have significant conservation implications. The scope involves field data collection, taxonomic expertise, and behavioral analysis with moderate dependencies between observation tools.

  **STEP 2 — Set a tool budget**
  For this medium difficulty task, I'll target 12 tools to cover the breadth of field observation, identification, documentation, and analysis workflows needed for comprehensive wildlife tracking and behavioral studies.

  **STEP 3 — List all tool names and dependencies**
  1. **Field Observation Logger** - Consumes: location, weather, time data; Produces: structured observation records
  2. **Species Visual Identifier** - Consumes: visual descriptions, morphometric data; Produces: species identification candidates
  3. **Audio Call Analyzer** - Consumes: audio recordings, frequency data; Produces: species identification from vocalizations
  4. **Behavioral Pattern Recorder** - Consumes: observation sequences, activity data; Produces: structured behavioral records
  5. **GPS Track Processor** - Consumes: GPS coordinates, timestamps; Produces: movement patterns and territories
  6. **Photo Evidence Cataloger** - Consumes: image data, metadata; Produces: organized visual evidence records
  7. **Weather Context Aggregator** - Consumes: environmental conditions; Produces: contextual environmental data
  8. **Migration Route Mapper** - Consumes: location data, timing; Produces: migration pathway analysis
  9. **Observation Quality Validator** - Consumes: field records; Produces: data quality assessments
  10. **Field Report Generator** - Consumes: multiple observation data; Produces: comprehensive field reports
  11. **Species Comparison Tool** - Consumes: multiple species data; Produces: comparative identification analysis
  12. **Behavioral Timeline Builder** - Consumes: timestamped behaviors; Produces: chronological behavior sequences

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic identification: Field Observation Logger → Species Visual Identifier → Photo Evidence Cataloger
  - Audio identification: Audio Call Analyzer → Species Comparison Tool → Field Report Generator

  **Medium Plans:**
  - Comprehensive observation: Field Observation Logger → Weather Context Aggregator → Behavioral Pattern Recorder → Observation Quality Validator → Field Report Generator
  - Movement tracking: GPS Track Processor → Migration Route Mapper → Behavioral Timeline Builder → Field Report Generator

  **Complex Plans:**
  - Complete species study: Field Observation Logger → Species Visual Identifier → Audio Call Analyzer → Behavioral Pattern Recorder → GPS Track Processor → Weather Context Aggregator → Photo Evidence Cataloger → Observation Quality Validator → Species Comparison Tool → Migration Route Mapper → Behavioral Timeline Builder → Field Report Generator
  - Multi-modal identification verification: Species Visual Identifier → Audio Call Analyzer → Species Comparison Tool → Photo Evidence Cataloger → Observation Quality Validator → Field Report Generator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Field Observation Logger",
    "tool_description": "Records structured field observations with location, environmental conditions, and basic sighting data for wildlife tracking studies.",
    "parameters": {
      "observer_name": {
        "type": "string",
        "required": true,
        "description": "Name or ID of the observer conducting the field work"
      },
      "observation_datetime": {
        "type": "string",
        "required": true,
        "description": "Date and time of observation in ISO 8601 format",
        "format": "date-time"
      },
      "latitude": {
        "type": "number",
        "required": true,
        "description": "GPS latitude coordinate (-90 to 90 degrees)"
      },
      "longitude": {
        "type": "number",
        "required": true,
        "description": "GPS longitude coordinate (-180 to 180 degrees)"
      },
      "species_count": {
        "type": "integer",
        "required": true,
        "description": "Number of individual animals observed (1 to 10000)"
      },
      "observation_distance": {
        "type": "number",
        "required": false,
        "description": "Distance to observed species in meters (1 to 5000)",
        "default": 50
      },
      "habitat_type": {
        "type": "string",
        "required": false,
        "description": "Primary habitat where observation occurred",
        "default": "mixed"
      }
    },
    "error_messages": [
      "Invalid coordinates: Latitude must be between -90 and 90, longitude between -180 and 180.",
      "Invalid datetime format: Use ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ).",
      "Species count out of range: Must be between 1 and 10000.",
      "Invalid observation distance: Must be between 1 and 5000 meters.",
      "Missing required observer identification: observer_name cannot be empty."
    ],
    "usage": "Provide observer_name, observation_datetime, GPS coordinates, and species_count. Optionally specify observation_distance and habitat_type to enhance record completeness.",
    "output_details": {
      "observation_id": {
        "type": "string",
        "description": "Unique identifier generated for this observation record"
      },
      "record_status": {
        "type": "string",
        "description": "Status indicating successful logging or validation warnings"
      },
      "coordinates_formatted": {
        "type": "string",
        "description": "Human-readable coordinate string with decimal degrees"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Species Visual Identifier",
    "tool_description": "Analyzes visual characteristics and morphometric data to generate species identification candidates with confidence scores.",
    "parameters": {
      "body_size": {
        "type": "string",
        "required": true,
        "description": "General body size category: small, medium, large, extra_large"
      },
      "primary_color": {
        "type": "string",
        "required": true,
        "description": "Dominant body coloration observed"
      },
      "secondary_colors": {
        "type": "array",
        "required": false,
        "description": "Additional colors present on the animal",
        "items": {"type": "string"},
        "default": null
      },
      "distinctive_markings": {
        "type": "array",
        "required": false,
        "description": "Notable patterns, spots, stripes, or unique features",
        "items": {"type": "string"},
        "default": null
      },
      "bill_beak_shape": {
        "type": "string",
        "required": false,
        "description": "Shape of bill or beak if applicable: pointed, curved, flat, hooked",
        "default": null
      },
      "tail_characteristics": {
        "type": "string",
        "required": false,
        "description": "Tail shape and length: short, long, forked, rounded, pointed",
        "default": null
      },
      "leg_color": {
        "type": "string",
        "required": false,
        "description": "Color of legs and feet if visible",
        "default": null
      },
      "wing_patterns": {
        "type": "array",
        "required": false,
        "description": "Wing markings or patterns observed during flight or display",
        "items": {"type": "string"},
        "default": null
      },
      "behavioral_posture": {
        "type": "string",
        "required": false,
        "description": "Notable posture or stance: upright, crouched, perched, swimming",
        "default": null
      },
      "habitat_context": {
        "type": "string",
        "required": false,
        "description": "Habitat where observed: forest, wetland, grassland, urban, coastal",
        "default": null
      },
      "geographic_region": {
        "type": "string",
        "required": true,
        "description": "Geographic region for range filtering: north_america, south_america, europe, asia, africa, oceania"
      }
    },
    "error_messages": [
      "Invalid body size: Must be one of [small, medium, large, extra_large].",
      "Invalid geographic region: Must be one of [north_america, south_america, europe, asia, africa, oceania].",
      "Invalid bill shape: Must be one of [pointed, curved, flat, hooked] or null.",
      "Invalid tail characteristics: Must be one of [short, long, forked, rounded, pointed] or null.",
      "Empty color specification: primary_color cannot be empty.",
      "Invalid behavioral posture: Must be one of [upright, crouched, perched, swimming] or null."
    ],
    "usage": "Specify body_size, primary_color, and geographic_region as minimum requirements. Add secondary_colors, distinctive_markings, and morphological details to improve identification accuracy.",
    "output_details": {
      "candidate_species": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of potential species matches ranked by likelihood"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence percentages corresponding to each candidate species"
      },
      "identification_notes": {
        "type": "string",
        "description": "Additional notes about distinguishing features or identification challenges"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audio Call Analyzer",
    "tool_description": "Processes audio recordings of animal vocalizations to identify species based on frequency patterns, call structure, and acoustic characteristics.",
    "parameters": {
      "recording_duration": {
        "type": "number",
        "required": true,
        "description": "Duration of audio recording in seconds (1 to 300)"
      },
      "dominant_frequency": {
        "type": "number",
        "required": true,
        "description": "Primary frequency of vocalizations in Hz (20 to 20000)"
      },
      "call_pattern": {
        "type": "string",
        "required": true,
        "description": "Pattern of vocalizations: single_note, repeated_notes, trill, warble, complex_song"
      },
      "call_intensity": {
        "type": "string",
        "required": false,
        "description": "Volume level of calls: whisper, soft, moderate, loud, very_loud",
        "default": "moderate"
      },
      "recording_time": {
        "type": "string",
        "required": true,
        "description": "Time when recording was made",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Invalid recording duration: Must be between 1 and 300 seconds.",
      "Invalid frequency range: Dominant frequency must be between 20 and 20000 Hz.",
      "Invalid call pattern: Must be one of [single_note, repeated_notes, trill, warble, complex_song].",
      "Invalid call intensity: Must be one of [whisper, soft, moderate, loud, very_loud].",
      "Invalid datetime format: Use ISO 8601 format for recording_time."
    ],
    "usage": "Provide recording_duration, dominant_frequency, call_pattern, and recording_time. Optionally specify call_intensity for more precise species matching based on acoustic characteristics.",
    "output_details": {
      "species_matches": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Species identified from acoustic analysis"
      },
      "match_confidence": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for each species match"
      },
      "acoustic_signature": {
        "type": "string",
        "description": "Technical description of the audio signature analyzed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Behavioral Pattern Recorder",
    "tool_description": "Documents and categorizes observed animal behaviors into structured records for behavioral analysis and pattern recognition.",
    "parameters": {
      "observation_id": {
        "type": "string",
        "required": true,
        "description": "Reference ID linking to the primary observation record"
      },
      "behavior_type": {
        "type": "string",
        "required": true,
        "description": "Primary behavior category: feeding, nesting, mating, territorial, social, flight, resting, grooming"
      },
      "behavior_duration": {
        "type": "number",
        "required": true,
        "description": "Duration of observed behavior in minutes (0.1 to 480)"
      },
      "interaction_type": {
        "type": "string",
        "required": false,
        "description": "Type of interaction: solitary, pair, small_group, large_group, interspecies",
        "default": "solitary"
      },
      "behavior_intensity": {
        "type": "string",
        "required": false,
        "description": "Intensity level: calm, moderate, active, aggressive, frantic",
        "default": "moderate"
      },
      "environmental_trigger": {
        "type": "string",
        "required": false,
        "description": "Apparent environmental cause for behavior",
        "default": null
      },
      "success_outcome": {
        "type": "boolean",
        "required": false,
        "description": "Whether the behavior appeared successful or complete",
        "default": null
      }
    },
    "error_messages": [
      "Invalid behavior duration: Must be between 0.1 and 480 minutes.",
      "Invalid behavior type: Must be one of [feeding, nesting, mating, territorial, social, flight, resting, grooming].",
      "Invalid interaction type: Must be one of [solitary, pair, small_group, large_group, interspecies].",
      "Invalid behavior intensity: Must be one of [calm, moderate, active, aggressive, frantic].",
      "Missing observation ID: observation_id cannot be empty."
    ],
    "usage": "Link behaviors to observations using observation_id, specify behavior_type and behavior_duration. Add interaction_type, behavior_intensity, environmental_trigger, and success_outcome for comprehensive behavioral documentation.",
    "output_details": {
      "behavior_record_id": {
        "type": "string",
        "description": "Unique identifier for this behavioral observation"
      },
      "behavior_summary": {
        "type": "string",
        "description": "Structured summary of the recorded behavior"
      },
      "classification_tags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Behavioral classification tags for analysis"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "GPS Track Processor",
    "tool_description": "Analyzes GPS coordinate sequences to determine movement patterns, territory boundaries, and migration routes from tracking data.",
    "parameters": {
      "track_points": {
        "type": "array",
        "required": true,
        "description": "Array of latitude values for the GPS track",
        "items": {"type": "number"},
        "minItems": 3,
        "maxItems": 1000
      },
      "longitude_points": {
        "type": "array",
        "required": true,
        "description": "Array of longitude values corresponding to track_points",
        "items": {"type": "number"},
        "minItems": 3,
        "maxItems": 1000
      },
      "timestamps": {
        "type": "array",
        "required": true,
        "description": "Array of timestamp strings for each GPS point",
        "items": {"type": "string"},
        "minItems": 3,
        "maxItems": 1000
      },
      "analysis_type": {
        "type": "string",
        "required": true,
        "description": "Type of analysis: territory_mapping, migration_route, daily_movement, foraging_pattern"
      }
    },
    "error_messages": [
      "Coordinate array mismatch: track_points, longitude_points, and timestamps must have the same length.",
      "Insufficient data points: Minimum 3 GPS points required for analysis.",
      "Invalid coordinates: Latitude values must be between -90 and 90, longitude between -180 and 180.",
      "Invalid analysis type: Must be one of [territory_mapping, migration_route, daily_movement, foraging_pattern].",
      "Invalid timestamp format: All timestamps must be in ISO 8601 format."
    ],
    "usage": "Provide arrays of track_points (latitudes), longitude_points, and corresponding timestamps with matching lengths. Specify analysis_type to determine the type of movement analysis performed.",
    "output_details": {
      "total_distance": {
        "type": "number",
        "description": "Total distance traveled in kilometers"
      },
      "movement_summary": {
        "type": "string",
        "description": "Summary of movement patterns and key findings"
      },
      "territory_bounds": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Boundary coordinates of identified territory or range"
      },
      "movement_speed": {
        "type": "number",
        "description": "Average movement speed in kilometers per hour"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Photo Evidence Cataloger",
    "tool_description": "Organizes and catalogs photographic evidence with metadata extraction and quality assessment for wildlife documentation.",
    "parameters": {
      "image_quality": {
        "type": "string",
        "required": true,
        "description": "Overall image quality: excellent, good, fair, poor"
      },
      "subject_clarity": {
        "type": "string",
        "required": true,
        "description": "Clarity of main subject: sharp, slightly_blurred, blurred, very_blurred"
      },
      "photo_datetime": {
        "type": "string",
        "required": true,
        "description": "Date and time photo was taken",
        "format": "date-time"
      },
      "camera_settings": {
        "type": "string",
        "required": false,
        "description": "Camera settings used (ISO, aperture, shutter speed)",
        "default": null
      },
      "subject_distance": {
        "type": "number",
        "required": false,
        "description": "Estimated distance to subject in meters (1 to 1000)",
        "default": null
      }
    },
    "error_messages": [
      "Invalid image quality: Must be one of [excellent, good, fair, poor].",
      "Invalid subject clarity: Must be one of [sharp, slightly_blurred, blurred, very_blurred].",
      "Invalid datetime format: Use ISO 8601 format for photo_datetime.",
      "Invalid subject distance: Must be between 1 and 1000 meters if specified."
    ],
    "usage": "Specify image_quality, subject_clarity, and photo_datetime for basic cataloging. Add camera_settings and subject_distance for enhanced metadata documentation.",
    "output_details": {
      "catalog_id": {
        "type": "string",
        "description": "Unique identifier assigned to cataloged photo"
      },
      "quality_score": {
        "type": "number",
        "description": "Numerical quality assessment score (0-100)"
      },
      "usability_rating": {
        "type": "string",
        "description": "Assessment of photo usability for identification purposes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weather Context Aggregator",
    "tool_description": "Aggregates and contextualizes environmental conditions during wildlife observations to support behavioral and ecological analysis.",
    "parameters": {
      "temperature": {
        "type": "number",
        "required": true,
        "description": "Temperature in Celsius (-50 to 60)"
      },
      "wind_speed": {
        "type": "number",
        "required": true,
        "description": "Wind speed in km/h (0 to 200)"
      },
      "precipitation": {
        "type": "string",
        "required": true,
        "description": "Precipitation type: none, light_rain, heavy_rain, snow, sleet, fog"
      },
      "cloud_cover": {
        "type": "string",
        "required": true,
        "description": "Sky condition: clear, partly_cloudy, mostly_cloudy, overcast"
      },
      "visibility": {
        "type": "number",
        "required": false,
        "description": "Visibility distance in kilometers (0.1 to 50)",
        "default": 10
      },
      "humidity": {
        "type": "number",
        "required": false,
        "description": "Relative humidity percentage (0 to 100)",
        "default": 50
      },
      "barometric_pressure": {
        "type": "number",
        "required": false,
        "description": "Atmospheric pressure in hPa (900 to 1100)",
        "default": 1013
      }
    },
    "error_messages": [
      "Invalid temperature range: Must be between -50 and 60 Celsius.",
      "Invalid wind speed: Must be between 0 and 200 km/h.",
      "Invalid precipitation type: Must be one of [none, light_rain, heavy_rain, snow, sleet, fog].",
      "Invalid cloud cover: Must be one of [clear, partly_cloudy, mostly_cloudy, overcast].",
      "Invalid visibility: Must be between 0.1 and 50 kilometers.",
      "Invalid humidity: Must be between 0 and 100 percent.",
      "Invalid pressure: Must be between 900 and 1100 hPa."
    ],
    "usage": "Provide temperature, wind_speed, precipitation, and cloud_cover as minimum requirements. Add visibility, humidity, and barometric_pressure for comprehensive environmental documentation.",
    "output_details": {
      "weather_summary": {
        "type": "string",
        "description": "Comprehensive summary of environmental conditions"
      },
      "impact_assessment": {
        "type": "string",
        "description": "Assessment of how conditions may affect wildlife behavior"
      },
      "observation_favorability": {
        "type": "string",
        "description": "Rating of conditions for wildlife observation quality"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Migration Route Mapper",
    "tool_description": "Maps and analyzes migration patterns from tracking data to identify routes, stopover sites, and seasonal movement patterns.",
    "parameters": {
      "species_name": {
        "type": "string",
        "required": true,
        "description": "Scientific or common name of the species being tracked"
      },
      "start_location": {
        "type": "array",
        "required": true,
        "description": "Starting coordinates [latitude, longitude]",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 2
      },
      "end_location": {
        "type": "array",
        "required": true,
        "description": "Ending coordinates [latitude, longitude]",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 2
      },
      "waypoint_coordinates": {
        "type": "array",
        "required": false,
        "description": "Intermediate waypoint coordinates",
        "items": {"type": "number"},
        "default": null
      },
      "migration_season": {
        "type": "string",
        "required": true,
        "description": "Season of migration: spring, summer, fall, winter"
      },
      "tracking_duration": {
        "type": "number",
        "required": true,
        "description": "Duration of tracking period in days (1 to 365)"
      }
    },
    "error_messages": [
      "Invalid coordinates: Latitude must be between -90 and 90, longitude between -180 and 180.",
      "Invalid migration season: Must be one of [spring, summer, fall, winter].",
      "Invalid tracking duration: Must be between 1 and 365 days.",
      "Empty species name: Species name cannot be empty.",
      "Identical start and end locations: Start and end coordinates must be different."
    ],
    "usage": "Specify species_name, start_location, end_location, migration_season, and tracking_duration. Optionally add waypoint_coordinates for detailed route mapping.",
    "output_details": {
      "route_distance": {
        "type": "number",
        "description": "Total migration distance in kilometers"
      },
      "stopover_sites": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified stopover locations along the route"
      },
      "migration_pattern": {
        "type": "string",
        "description": "Description of the migration pattern and behavior"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Observation Quality Validator",
    "tool_description": "Validates field observation records for completeness, consistency, and scientific reliability, flagging potential data quality issues.",
    "parameters": {
      "observation_record": {
        "type": "string",
        "required": true,
        "description": "Observation record ID to validate"
      },
      "validation_level": {
        "type": "string",
        "required": true,
        "description": "Validation strictness: basic, standard, rigorous"
      }
    },
    "error_messages": [
      "Invalid validation level: Must be one of [basic, standard, rigorous].",
      "Empty observation record: observation_record cannot be empty.",
      "Record not found: The specified observation record ID does not exist."
    ],
    "usage": "Provide observation_record ID and select validation_level to assess data quality. Higher validation levels apply more stringent quality checks.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: passed, warning, failed"
      },
      "quality_score": {
        "type": "number",
        "description": "Numerical quality score from 0 to 100"
      },
      "issues_found": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of data quality issues or inconsistencies identified"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggestions for improving observation record quality"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Field Report Generator",
    "tool_description": "Compiles comprehensive field reports from multiple observation records, integrating behavioral, environmental, and identification data.",
    "parameters": {
      "observation_ids": {
        "type": "array",
        "required": true,
        "description": "Array of observation record IDs to include in report",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "report_type": {
        "type": "string",
        "required": true,
        "description": "Type of report: daily_summary, species_focus, behavioral_study, migration_report"
      },
      "include_photos": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include photo references in report",
        "default": true
      },
      "include_weather": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include environmental conditions",
        "default": true
      }
    },
    "error_messages": [
      "Invalid report type: Must be one of [daily_summary, species_focus, behavioral_study, migration_report].",
      "Too many observations: Maximum 50 observation IDs allowed per report.",
      "Empty observation list: At least one observation ID required.",
      "Invalid observation ID format: All observation IDs must be non-empty strings."
    ],
    "usage": "Provide array of observation_ids and specify report_type. Control content inclusion with include_photos and include_weather boolean flags for customized report generation.",
    "output_details": {
      "report_id": {
        "type": "string",
        "description": "Unique identifier for the generated report"
      },
      "report_summary": {
        "type": "string",
        "description": "Executive summary of key findings and observations"
      },
      "species_list": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of all species documented in the report"
      },
      "total_observations": {
        "type": "integer",
        "description": "Total number of observations included in report"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Species Comparison Tool",
    "tool_description": "Compares morphological and behavioral characteristics between multiple species to aid in difficult identifications and taxonomic decisions.",
    "parameters": {
      "primary_species": {
        "type": "string",
        "required": true,
        "description": "Primary species for comparison"
      },
      "comparison_species": {
        "type": "array",
        "required": true,
        "description": "List of species to compare against primary species",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5
      },
      "comparison_criteria": {
        "type": "array",
        "required": true,
        "description": "Characteristics to compare",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      }
    },
    "error_messages": [
      "Empty primary species: Primary species name cannot be empty.",
      "Too many comparison species: Maximum 5 species allowed for comparison.",
      "Empty comparison criteria: At least one comparison criterion required.",
      "Duplicate species: Primary species cannot appear in comparison species list.",
      "Too many criteria: Maximum 10 comparison criteria allowed."
    ],
    "usage": "Specify primary_species, array of comparison_species (up to 5), and comparison_criteria for analysis. The tool generates detailed comparative analysis between species.",
    "output_details": {
      "comparison_matrix": {
        "type": "string",
        "description": "Structured comparison of characteristics across species"
      },
      "distinguishing_features": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Key features that differentiate the compared species"
      },
      "identification_confidence": {
        "type": "string",
        "description": "Assessment of identification certainty based on comparison"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Behavioral Timeline Builder",
    "tool_description": "Constructs chronological sequences of observed behaviors to identify patterns, cycles, and behavioral transitions over time.",
    "parameters": {
      "behavior_records": {
        "type": "array",
        "required": true,
        "description": "Array of behavior record IDs in chronological order",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 100
      },
      "time_resolution": {
        "type": "string",
        "required": true,
        "description": "Temporal resolution for timeline: minute, hour, day, week"
      },
      "analysis_focus": {
        "type": "string",
        "required": false,
        "description": "Specific behavioral aspect to analyze: activity_cycles, social_interactions, feeding_patterns, territorial_behavior",
        "default": "activity_cycles"
      }
    },
    "error_messages": [
      "Insufficient behavior records: Minimum 2 behavior records required for timeline.",
      "Too many records: Maximum 100 behavior records allowed per timeline.",
      "Invalid time resolution: Must be one of [minute, hour,
