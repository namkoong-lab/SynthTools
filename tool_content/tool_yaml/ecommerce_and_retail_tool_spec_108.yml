field_name: ecommerce_and_retail
subfield: Shipping and Logistics Coordination
task: Optimize delivery routes and scheduling for efficient logistics operations
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves complex multi-objective optimization with real-time constraints, vehicle capacity limits, traffic patterns, delivery windows, and cost minimization. The coordination of multiple vehicles, dynamic route adjustments, and integration of various data sources (traffic, weather, customer preferences) makes this a **hard** task due to high coordination dependencies, significant impact of errors on customer satisfaction and costs, and substantial data infrastructure requirements.

  ## STEP 2 — Set a tool budget

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15–20 range to handle the complexity of route optimization, scheduling coordination, real-time monitoring, and logistics management.

  ## STEP 3 — List all tool names and dependencies

  **Tools and their data flow:**
  1. **Address Geocoder** - Consumes: addresses → Produces: coordinates
  2. **Distance Matrix Calculator** - Consumes: coordinates → Produces: distance/time matrices
  3. **Vehicle Fleet Manager** - Consumes: vehicle specs → Produces: fleet availability
  4. **Delivery Window Validator** - Consumes: time constraints → Produces: valid scheduling windows
  5. **Route Optimizer** - Consumes: distances, constraints → Produces: optimized routes
  6. **Capacity Planner** - Consumes: package specs, vehicle limits → Produces: loading plans
  7. **Traffic Data Fetcher** - Consumes: route segments → Produces: traffic conditions
  8. **Weather Monitor** - Consumes: locations, dates → Produces: weather forecasts
  9. **Delivery Schedule Generator** - Consumes: routes, time windows → Produces: schedules
  10. **Cost Calculator** - Consumes: routes, fuel prices → Produces: cost estimates
  11. **Route Tracker** - Consumes: vehicle positions → Produces: real-time status
  12. **Delivery Notification Manager** - Consumes: schedules → Produces: customer notifications
  13. **Performance Analytics** - Consumes: completed deliveries → Produces: KPI reports
  14. **Emergency Rerouter** - Consumes: incidents, current routes → Produces: alternative routes
  15. **Driver Assignment Optimizer** - Consumes: routes, driver data → Produces: assignments
  16. **Delivery Confirmation Logger** - Consumes: delivery events → Produces: completion records
  17. **Multi-Stop Route Validator** - Consumes: proposed routes → Produces: feasibility assessment

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  - **Basic Route Planning:** Address Geocoder → Distance Matrix Calculator → Route Optimizer → Delivery Schedule Generator
  - **Fleet Availability Check:** Vehicle Fleet Manager → Capacity Planner → Driver Assignment Optimizer

  **Medium Plans:**
  - **Weather-Adjusted Routing:** Address Geocoder → Weather Monitor → Traffic Data Fetcher → Route Optimizer → Cost Calculator → Delivery Schedule Generator
  - **Real-time Monitoring:** Route Tracker → Emergency Rerouter → Delivery Notification Manager → Performance Analytics

  **Complex Plans:**
  - **Full Logistics Optimization:** Address Geocoder → Distance Matrix Calculator → Vehicle Fleet Manager → Delivery Window Validator → Weather Monitor → Traffic Data Fetcher → Route Optimizer → Capacity Planner → Driver Assignment Optimizer → Cost Calculator → Multi-Stop Route Validator → Delivery Schedule Generator → Route Tracker → Delivery Notification Manager
  - **Dynamic Operations Management:** Route Tracker → Traffic Data Fetcher → Emergency Rerouter → Delivery Notification Manager → Delivery Confirmation Logger → Performance Analytics → Cost Calculator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Address Geocoder",
    "tool_description": "Converts delivery addresses into precise latitude/longitude coordinates for route planning and distance calculations.",
    "parameters": {
      "addresses": {
        "type": "array",
        "required": true,
        "description": "List of delivery addresses to geocode",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "country_code": {
        "type": "string",
        "required": false,
        "description": "ISO country code to improve geocoding accuracy",
        "default": "US"
      },
      "include_postal_validation": {
        "type": "boolean",
        "required": false,
        "description": "Whether to validate postal codes",
        "default": true
      }
    },
    "error_messages": [
      "Invalid address format: One or more addresses could not be parsed. Ensure addresses include street, city, and postal code.",
      "Geocoding service unavailable: The geocoding service is temporarily unavailable. Retry after a few minutes.",
      "Address not found: One or more addresses could not be located. Verify address accuracy and completeness.",
      "Rate limit exceeded: Too many geocoding requests. Reduce batch size or implement delays between requests."
    ],
    "usage": "Provide an array of delivery addresses with optional country code and validation settings. The tool returns coordinates for each address along with confidence scores.",
    "output_details": {
      "geocoded_addresses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Standardized address formats"
      },
      "latitudes": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Latitude coordinates for each address"
      },
      "longitudes": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Longitude coordinates for each address"
      },
      "confidence_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Geocoding accuracy scores (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Distance Matrix Calculator",
    "tool_description": "Calculates travel distances and estimated times between multiple delivery locations for route optimization.",
    "parameters": {
      "origin_latitudes": {
        "type": "array",
        "required": true,
        "description": "Latitude coordinates of origin points",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "origin_longitudes": {
        "type": "array",
        "required": true,
        "description": "Longitude coordinates of origin points",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "destination_latitudes": {
        "type": "array",
        "required": true,
        "description": "Latitude coordinates of destination points",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "destination_longitudes": {
        "type": "array",
        "required": true,
        "description": "Longitude coordinates of destination points",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "transport_mode": {
        "type": "string",
        "required": false,
        "description": "Mode of transportation: driving, walking, bicycling, transit",
        "default": "driving"
      }
    },
    "error_messages": [
      "Coordinate array mismatch: Origin and destination latitude/longitude arrays must have matching lengths.",
      "Invalid coordinates: Latitude must be between -90 and 90, longitude between -180 and 180.",
      "Unsupported transport mode: Use one of [driving, walking, bicycling, transit].",
      "Matrix size exceeded: Reduce the number of origin-destination pairs to stay within API limits."
    ],
    "usage": "Provide arrays of origin and destination coordinates with optional transport mode. Returns distance and duration matrices for route planning.",
    "output_details": {
      "distance_matrix": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Distances in kilometers (flattened matrix)"
      },
      "duration_matrix": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Travel times in minutes (flattened matrix)"
      },
      "matrix_dimensions": {
        "type": "string",
        "description": "Dimensions of the distance/duration matrices"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vehicle Fleet Manager",
    "tool_description": "Manages vehicle fleet information including availability, capacity, and operational constraints for delivery planning.",
    "parameters": {
      "vehicle_ids": {
        "type": "array",
        "required": true,
        "description": "Unique identifiers for vehicles in the fleet",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "vehicle_types": {
        "type": "array",
        "required": true,
        "description": "Vehicle types (van, truck, motorcycle, bicycle)",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "max_capacities": {
        "type": "array",
        "required": true,
        "description": "Maximum cargo capacity in cubic meters",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "max_weights": {
        "type": "array",
        "required": true,
        "description": "Maximum weight capacity in kilograms",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "operating_start_times": {
        "type": "array",
        "required": true,
        "description": "Daily operation start times in HH:MM format",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "operating_end_times": {
        "type": "array",
        "required": true,
        "description": "Daily operation end times in HH:MM format",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "base_locations": {
        "type": "array",
        "required": true,
        "description": "Vehicle depot/base location names",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "maintenance_schedules": {
        "type": "array",
        "required": false,
        "description": "Scheduled maintenance dates in YYYY-MM-DD format",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "fuel_efficiency": {
        "type": "array",
        "required": false,
        "description": "Fuel efficiency in km per liter",
        "items": {
          "type": "number"
        },
        "default": "None"
      },
      "driver_requirements": {
        "type": "array",
        "required": false,
        "description": "Special driver license requirements",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "refrigeration_capable": {
        "type": "array",
        "required": false,
        "description": "Whether vehicle has refrigeration capability",
        "items": {
          "type": "boolean"
        },
        "default": "None"
      },
      "tracking_enabled": {
        "type": "array",
        "required": false,
        "description": "Whether vehicle has GPS tracking",
        "items": {
          "type": "boolean"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Array length mismatch: All required arrays must have the same length as vehicle_ids.",
      "Invalid vehicle type: Use one of [van, truck, motorcycle, bicycle].",
      "Invalid time format: Operating times must be in HH:MM format (24-hour).",
      "Invalid capacity values: Max capacity and weight must be positive numbers.",
      "Invalid maintenance date: Use YYYY-MM-DD format for maintenance schedules."
    ],
    "usage": "Provide vehicle fleet information including IDs, types, capacities, operating hours, and optional features. Returns organized fleet data for routing decisions.",
    "output_details": {
      "available_vehicles": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of available vehicle IDs"
      },
      "total_capacity": {
        "type": "number",
        "description": "Total fleet cargo capacity in cubic meters"
      },
      "total_weight_capacity": {
        "type": "number",
        "description": "Total fleet weight capacity in kilograms"
      },
      "vehicle_summary": {
        "type": "string",
        "description": "Summary of fleet composition and capabilities"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Delivery Window Validator",
    "tool_description": "Validates and optimizes delivery time windows based on customer preferences and operational constraints.",
    "parameters": {
      "customer_ids": {
        "type": "array",
        "required": true,
        "description": "Unique customer identifiers",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 500
      },
      "preferred_start_times": {
        "type": "array",
        "required": true,
        "description": "Customer preferred delivery start times in HH:MM format",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 500
      },
      "preferred_end_times": {
        "type": "array",
        "required": true,
        "description": "Customer preferred delivery end times in HH:MM format",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 500
      },
      "delivery_date": {
        "type": "string",
        "required": true,
        "description": "Target delivery date in YYYY-MM-DD format"
      },
      "service_duration": {
        "type": "integer",
        "required": false,
        "description": "Average service time per delivery in minutes",
        "default": 10
      }
    },
    "error_messages": [
      "Array length mismatch: Customer IDs, start times, and end times arrays must have equal lengths.",
      "Invalid time format: Use HH:MM format for delivery window times.",
      "Invalid date format: Use YYYY-MM-DD format for delivery date.",
      "Invalid time window: Start time must be earlier than end time for each customer.",
      "Service duration out of range: Service duration must be between 1 and 240 minutes."
    ],
    "usage": "Provide customer delivery preferences with target date and service duration. Returns validated time windows and conflict analysis.",
    "output_details": {
      "valid_windows": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Validated delivery time windows"
      },
      "conflicting_customers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Customer IDs with problematic time windows"
      },
      "total_delivery_time": {
        "type": "integer",
        "description": "Total estimated delivery time in minutes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Route Optimizer",
    "tool_description": "Optimizes delivery routes using advanced algorithms to minimize travel time, distance, and fuel consumption while respecting constraints.",
    "parameters": {
      "depot_latitude": {
        "type": "number",
        "required": true,
        "description": "Starting depot latitude coordinate"
      },
      "depot_longitude": {
        "type": "number",
        "required": true,
        "description": "Starting depot longitude coordinate"
      },
      "delivery_latitudes": {
        "type": "array",
        "required": true,
        "description": "Latitude coordinates of delivery locations",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "delivery_longitudes": {
        "type": "array",
        "required": true,
        "description": "Longitude coordinates of delivery locations",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "distance_matrix": {
        "type": "array",
        "required": true,
        "description": "Flattened distance matrix between all locations",
        "items": {
          "type": "number"
        }
      },
      "time_matrix": {
        "type": "array",
        "required": true,
        "description": "Flattened travel time matrix between all locations",
        "items": {
          "type": "number"
        }
      },
      "optimization_objective": {
        "type": "string",
        "required": false,
        "description": "Optimization goal: minimize_distance, minimize_time, minimize_vehicles, balanced",
        "default": "balanced"
      },
      "max_vehicle_count": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of vehicles to use",
        "default": 10
      },
      "max_route_duration": {
        "type": "integer",
        "required": false,
        "description": "Maximum route duration in minutes",
        "default": 480
      },
      "priority_weights": {
        "type": "array",
        "required": false,
        "description": "Delivery priority weights (1-10 scale)",
        "items": {
          "type": "integer"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Coordinate array mismatch: Delivery latitude and longitude arrays must have equal lengths.",
      "Matrix size mismatch: Distance and time matrices must match the number of locations.",
      "Invalid optimization objective: Use one of [minimize_distance, minimize_time, minimize_vehicles, balanced].",
      "Insufficient vehicles: Increase max_vehicle_count to handle all deliveries within time constraints.",
      "Priority weights mismatch: Priority weights array must match the number of deliveries if provided."
    ],
    "usage": "Provide depot location, delivery coordinates, distance/time matrices, and optimization parameters. Returns optimized routes with vehicle assignments.",
    "output_details": {
      "optimized_routes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Sequence of delivery locations for each route"
      },
      "vehicle_assignments": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Vehicle IDs assigned to each route"
      },
      "total_distance": {
        "type": "number",
        "description": "Total distance across all routes in kilometers"
      },
      "total_duration": {
        "type": "integer",
        "description": "Total travel time across all routes in minutes"
      },
      "routes_count": {
        "type": "integer",
        "description": "Number of optimized routes generated"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Capacity Planner",
    "tool_description": "Plans cargo loading and capacity utilization for vehicles based on package dimensions and delivery requirements.",
    "parameters": {
      "package_ids": {
        "type": "array",
        "required": true,
        "description": "Unique package identifiers",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 300
      },
      "package_volumes": {
        "type": "array",
        "required": true,
        "description": "Package volumes in cubic meters",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 300
      },
      "package_weights": {
        "type": "array",
        "required": true,
        "description": "Package weights in kilograms",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 300
      },
      "fragile_flags": {
        "type": "array",
        "required": true,
        "description": "Whether each package is fragile",
        "items": {
          "type": "boolean"
        },
        "minItems": 1,
        "maxItems": 300
      },
      "vehicle_capacities": {
        "type": "array",
        "required": true,
        "description": "Available vehicle cargo capacities in cubic meters",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "vehicle_weight_limits": {
        "type": "array",
        "required": true,
        "description": "Vehicle weight limits in kilograms",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "loading_efficiency": {
        "type": "number",
        "required": false,
        "description": "Loading efficiency factor (0.6-1.0)",
        "default": 0.85
      }
    },
    "error_messages": [
      "Array length mismatch: Package IDs, volumes, weights, and fragile flags must have equal lengths.",
      "Vehicle array mismatch: Vehicle capacities and weight limits arrays must have equal lengths.",
      "Invalid capacity values: All volumes and weights must be positive numbers.",
      "Loading efficiency out of range: Loading efficiency must be between 0.6 and 1.0.",
      "Insufficient vehicle capacity: Total package volume/weight exceeds available vehicle capacity."
    ],
    "usage": "Provide package specifications and vehicle capacities with optional loading efficiency. Returns optimized loading plan and capacity utilization.",
    "output_details": {
      "loading_plan": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Package-to-vehicle assignments"
      },
      "capacity_utilization": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Capacity utilization percentage for each vehicle"
      },
      "weight_utilization": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Weight utilization percentage for each vehicle"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Traffic Data Fetcher",
    "tool_description": "Retrieves real-time traffic conditions and congestion data for route segments to optimize delivery timing.",
    "parameters": {
      "route_segments": {
        "type": "array",
        "required": true,
        "description": "Route segments defined as coordinate pairs",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "query_time": {
        "type": "string",
        "required": false,
        "description": "Time for traffic query in HH:MM format",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid segment format: Route segments must be formatted as 'lat1,lon1;lat2,lon2'.",
      "Invalid time format: Query time must be in HH:MM format.",
      "Traffic service unavailable: Traffic data service is temporarily unavailable.",
      "Too many segments: Reduce the number of route segments to stay within API limits."
    ],
    "usage": "Provide route segments as coordinate pairs with optional query time. Returns traffic conditions and delay estimates for each segment.",
    "output_details": {
      "traffic_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Traffic condition status for each segment"
      },
      "delay_minutes": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Expected delay in minutes for each segment"
      },
      "congestion_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Congestion severity levels (low, medium, high, severe)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weather Monitor",
    "tool_description": "Monitors weather conditions and forecasts for delivery locations to assess potential impacts on logistics operations.",
    "parameters": {
      "locations": {
        "type": "array",
        "required": true,
        "description": "Location coordinates as 'latitude,longitude' strings",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "forecast_date": {
        "type": "string",
        "required": true,
        "description": "Date for weather forecast in YYYY-MM-DD format"
      },
      "include_hourly": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include hourly weather details",
        "default": true
      }
    },
    "error_messages": [
      "Invalid location format: Locations must be formatted as 'latitude,longitude'.",
      "Invalid date format: Use YYYY-MM-DD format for forecast date.",
      "Weather service unavailable: Weather data service is temporarily unavailable.",
      "Forecast date out of range: Weather forecasts are only available for the next 7 days."
    ],
    "usage": "Provide location coordinates and forecast date with optional hourly details. Returns weather conditions and delivery risk assessments.",
    "output_details": {
      "weather_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Weather condition descriptions for each location"
      },
      "precipitation_chance": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Precipitation probability percentages"
      },
      "delivery_risk_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Delivery risk assessment (low, medium, high)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Delivery Schedule Generator",
    "tool_description": "Generates detailed delivery schedules combining optimized routes with time windows and operational constraints.",
    "parameters": {
      "route_sequences": {
        "type": "array",
        "required": true,
        "description": "Optimized delivery sequences for each route",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "vehicle_ids": {
        "type": "array",
        "required": true,
        "description": "Vehicle assignments for each route",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "delivery_windows": {
        "type": "array",
        "required": true,
        "description": "Time windows for deliveries in HH:MM-HH:MM format",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "travel_times": {
        "type": "array",
        "required": true,
        "description": "Travel times between locations in minutes",
        "items": {
          "type": "integer"
        },
        "minItems": 1,
        "maxItems": 1000
      },
      "schedule_date": {
        "type": "string",
        "required": true,
        "description": "Schedule date in YYYY-MM-DD format"
      },
      "start_time": {
        "type": "string",
        "required": false,
        "description": "Daily operation start time in HH:MM format",
        "default": "08:00"
      },
      "service_time": {
        "type": "integer",
        "required": false,
        "description": "Service time per delivery in minutes",
        "default": 10
      }
    },
    "error_messages": [
      "Array length mismatch: Route sequences and vehicle IDs arrays must have equal lengths.",
      "Invalid time window format: Use HH:MM-HH:MM format for delivery windows.",
      "Invalid date format: Use YYYY-MM-DD format for schedule date.",
      "Invalid start time: Use HH:MM format for operation start time.",
      "Service time out of range: Service time must be between 1 and 60 minutes."
    ],
    "usage": "Provide route sequences, vehicle assignments, delivery windows, and timing constraints. Returns comprehensive delivery schedule with timestamps.",
    "output_details": {
      "delivery_schedules": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed delivery schedules with timestamps"
      },
      "estimated_completion_times": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Estimated completion times for each route"
      },
      "total_scheduled_duration": {
        "type": "integer",
        "description": "Total scheduled operation duration in minutes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cost Calculator",
    "tool_description": "Calculates comprehensive delivery costs including fuel, labor, vehicle maintenance, and operational expenses.",
    "parameters": {
      "total_distance": {
        "type": "number",
        "required": true,
        "description": "Total route distance in kilometers"
      },
      "total_duration": {
        "type": "integer",
        "required": true,
        "description": "Total delivery duration in minutes"
      },
      "fuel_price_per_liter": {
        "type": "number",
        "required": true,
        "description": "Current fuel price per liter"
      },
      "vehicle_fuel_efficiency": {
        "type": "number",
        "required": true,
        "description": "Vehicle fuel efficiency in km per liter"
      },
      "driver_hourly_rate": {
        "type": "number",
        "required": false,
        "description": "Driver hourly wage rate",
        "default": 15.0
      },
      "vehicle_maintenance_rate": {
        "type": "number",
        "required": false,
        "description": "Maintenance cost per kilometer",
        "default": 0.10
      }
    },
    "error_messages": [
      "Invalid distance or duration: Distance and duration must be positive numbers.",
      "Invalid fuel parameters: Fuel price and efficiency must be positive numbers.",
      "Invalid labor cost: Driver hourly rate must be a positive number.",
      "Invalid maintenance rate: Vehicle maintenance rate must be a positive number."
    ],
    "usage": "Provide route metrics, fuel costs,
