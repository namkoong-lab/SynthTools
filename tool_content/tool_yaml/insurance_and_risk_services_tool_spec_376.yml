field_name: insurance_and_risk_services
subfield: Life Insurance Underwriting and Assessment
task: Medical history analysis and health risk evaluation
tool_description: |-
  **STEP 1 — Rate task difficulty**
  This task is **hard** due to the complex medical knowledge required, multiple interdependent health factors, regulatory compliance requirements, high impact of errors on coverage decisions, and the need for sophisticated risk modeling across diverse medical conditions and demographic factors.

  **STEP 2 — Set a tool budget**
  Given the hard difficulty rating, I'm targeting **17 tools** to cover medical data parsing, risk assessment, regulatory compliance, and decision support workflows.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  - Medical Record Parser → Medical History Validator → Risk Factor Extractor
  - Lab Result Analyzer → Health Metric Calculator → Medical Risk Scorer
  - Family History Processor → Genetic Risk Assessor → Hereditary Risk Calculator
  - Medication Analyzer → Drug Risk Evaluator → Treatment Impact Scorer
  - Lifestyle Factor Assessor → Behavioral Risk Calculator → Composite Risk Integrator
  - Underwriting Rule Engine → Coverage Recommendation Generator → Risk Premium Calculator

  **STEP 4 — Multi-tool plans**

  Simple plans:
  1. Basic health screening: Medical Record Parser → Risk Factor Extractor → Medical Risk Scorer
  2. Lab analysis workflow: Lab Result Analyzer → Health Metric Calculator → Risk Premium Calculator

  Medium plans:
  1. Comprehensive medical review: Medical Record Parser → Medical History Validator → Risk Factor Extractor → Medical Risk Scorer → Underwriting Rule Engine → Coverage Recommendation Generator
  2. Family risk assessment: Family History Processor → Genetic Risk Assessor → Hereditary Risk Calculator → Composite Risk Integrator → Risk Premium Calculator

  Complex plans:
  1. Full underwriting evaluation: All medical tools → risk calculators → Composite Risk Integrator → Underwriting Rule Engine → Coverage Recommendation Generator → Risk Premium Calculator
  2. High-risk case analysis: Medical Record Parser → Medical History Validator → multiple specialized analyzers → all risk calculators → Underwriting Rule Engine with detailed review flags

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Medical Record Parser",
    "tool_description": "Extracts structured medical information from unstructured medical records, reports, and health documents for underwriting analysis.",
    "parameters": {
      "medical_document_text": {
        "type": "string",
        "required": true,
        "description": "Raw text content of medical records or health documents"
      },
      "document_type": {
        "type": "string",
        "required": true,
        "description": "Type of medical document: medical_record, lab_report, discharge_summary, physician_note, specialist_report"
      },
      "parse_depth": {
        "type": "string",
        "required": false,
        "description": "Level of detail for parsing: basic, standard, comprehensive",
        "default": "standard"
      }
    },
    "error_messages": [
      "Empty document content: Provide non-empty medical_document_text for processing.",
      "Unsupported document type: Use one of [medical_record, lab_report, discharge_summary, physician_note, specialist_report].",
      "Invalid parse depth: Use one of [basic, standard, comprehensive].",
      "Document parsing failed: Unable to extract meaningful medical information from the provided text."
    ],
    "usage": "Provide the raw medical document text and specify the document type. Optionally set parse_depth for more detailed extraction. Returns structured medical data ready for further analysis.",
    "output_details": {
      "parsed_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of medical conditions identified in the document"
      },
      "medications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of medications mentioned in the document"
      },
      "procedures": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of medical procedures or treatments mentioned"
      },
      "dates_mentioned": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Important dates found in the medical record"
      },
      "severity_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Keywords or phrases indicating condition severity"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Lab Result Analyzer",
    "tool_description": "Analyzes laboratory test results and biomarkers to identify health risks and abnormalities relevant to life insurance underwriting.",
    "parameters": {
      "test_results": {
        "type": "array",
        "required": true,
        "description": "Array of lab test names and their corresponding values",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "test_values": {
        "type": "array",
        "required": true,
        "description": "Array of numeric values corresponding to each test result",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "test_units": {
        "type": "array",
        "required": true,
        "description": "Array of measurement units for each test value",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "reference_ranges": {
        "type": "array",
        "required": false,
        "description": "Array of normal reference ranges for each test",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "test_date": {
        "type": "string",
        "required": true,
        "description": "Date when lab tests were conducted",
        "format": "date-time"
      },
      "applicant_age": {
        "type": "integer",
        "required": true,
        "description": "Age of the insurance applicant in years"
      },
      "applicant_gender": {
        "type": "string",
        "required": true,
        "description": "Gender of the applicant: male, female, other"
      }
    },
    "error_messages": [
      "Mismatched array lengths: test_results, test_values, and test_units arrays must have the same length.",
      "Invalid test values: All test_values must be valid numbers.",
      "Invalid gender: Use one of [male, female, other].",
      "Invalid age: applicant_age must be between 18 and 100.",
      "Invalid test date: Provide a valid date-time string for test_date.",
      "Unrecognized test name: One or more test names in test_results are not recognized."
    ],
    "usage": "Provide arrays of test names, values, and units along with applicant demographics. The tool analyzes results against age and gender-specific reference ranges and identifies concerning values.",
    "output_details": {
      "abnormal_results": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of test results that fall outside normal ranges"
      },
      "risk_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Health risk categories suggested by the lab results"
      },
      "severity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Numeric severity scores for each abnormal result (0-10 scale)"
      },
      "follow_up_recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Suggested additional tests or medical evaluations needed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Factor Extractor",
    "tool_description": "Extracts and categorizes health risk factors from parsed medical data for underwriting risk assessment.",
    "parameters": {
      "medical_conditions": {
        "type": "array",
        "required": true,
        "description": "List of diagnosed medical conditions",
        "items": {
          "type": "string"
        }
      },
      "medications": {
        "type": "array",
        "required": false,
        "description": "List of current medications",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "procedures": {
        "type": "array",
        "required": false,
        "description": "List of medical procedures or surgeries",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "risk_category_focus": {
        "type": "string",
        "required": false,
        "description": "Specific risk category to focus on: cardiovascular, cancer, diabetes, mental_health, respiratory, all",
        "default": "all"
      }
    },
    "error_messages": [
      "Empty medical conditions: Provide at least one medical condition in medical_conditions array.",
      "Invalid risk category: Use one of [cardiovascular, cancer, diabetes, mental_health, respiratory, all].",
      "Unrecognized medical condition: One or more conditions cannot be categorized for risk assessment."
    ],
    "usage": "Provide medical conditions and optionally medications and procedures. Specify risk_category_focus to concentrate on specific health areas. Returns categorized risk factors with severity assessments.",
    "output_details": {
      "high_risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Medical factors classified as high risk for life insurance"
      },
      "moderate_risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Medical factors classified as moderate risk"
      },
      "low_risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Medical factors classified as low risk"
      },
      "risk_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Primary health risk categories identified"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Family History Processor",
    "tool_description": "Processes family medical history information to identify hereditary risk patterns and genetic predispositions relevant to life insurance underwriting.",
    "parameters": {
      "family_members": {
        "type": "array",
        "required": true,
        "description": "List of family member relationships: parent, sibling, grandparent, aunt, uncle, cousin",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "member_conditions": {
        "type": "array",
        "required": true,
        "description": "Medical conditions for each family member",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "member_ages_at_diagnosis": {
        "type": "array",
        "required": false,
        "description": "Age at diagnosis for each condition (0 if unknown)",
        "items": {
          "type": "integer"
        },
        "default": "None"
      },
      "member_ages_at_death": {
        "type": "array",
        "required": false,
        "description": "Age at death for deceased family members (0 if living or unknown)",
        "items": {
          "type": "integer"
        },
        "default": "None"
      },
      "focus_conditions": {
        "type": "array",
        "required": false,
        "description": "Specific conditions to focus hereditary analysis on",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Mismatched array lengths: family_members and member_conditions must have the same length.",
      "Invalid relationship: Use valid family relationships [parent, sibling, grandparent, aunt, uncle, cousin].",
      "Invalid age values: Ages must be between 0 and 120, with 0 indicating unknown.",
      "Array length mismatch: If provided, member_ages_at_diagnosis and member_ages_at_death must match family_members length."
    ],
    "usage": "Provide family member relationships and their medical conditions. Optionally include ages at diagnosis and death for more precise risk assessment. Returns hereditary risk patterns and genetic predisposition indicators.",
    "output_details": {
      "hereditary_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Medical conditions with apparent hereditary patterns"
      },
      "genetic_risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified genetic risk factors based on family history"
      },
      "early_onset_patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Conditions showing early onset patterns in the family"
      },
      "familial_clustering": {
        "type": "boolean",
        "description": "Whether conditions show significant familial clustering"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Lifestyle Factor Assessor",
    "tool_description": "Evaluates lifestyle and behavioral factors that impact health risks for life insurance underwriting decisions.",
    "parameters": {
      "smoking_status": {
        "type": "string",
        "required": true,
        "description": "Current smoking status: never, former, current"
      },
      "alcohol_consumption": {
        "type": "string",
        "required": true,
        "description": "Alcohol consumption level: none, light, moderate, heavy"
      },
      "exercise_frequency": {
        "type": "string",
        "required": false,
        "description": "Exercise frequency: none, rare, regular, frequent",
        "default": "none"
      },
      "bmi": {
        "type": "number",
        "required": true,
        "description": "Body Mass Index value"
      },
      "occupation": {
        "type": "string",
        "required": false,
        "description": "Primary occupation or job category",
        "default": "office_worker"
      },
      "hobbies": {
        "type": "array",
        "required": false,
        "description": "List of hobbies or recreational activities",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "travel_patterns": {
        "type": "string",
        "required": false,
        "description": "Travel frequency and destinations: domestic_only, international_safe, international_high_risk",
        "default": "domestic_only"
      }
    },
    "error_messages": [
      "Invalid smoking status: Use one of [never, former, current].",
      "Invalid alcohol consumption: Use one of [none, light, moderate, heavy].",
      "Invalid exercise frequency: Use one of [none, rare, regular, frequent].",
      "Invalid BMI value: BMI must be between 10 and 60.",
      "Invalid travel pattern: Use one of [domestic_only, international_safe, international_high_risk]."
    ],
    "usage": "Provide smoking status, alcohol consumption, and BMI as required parameters. Optionally include exercise frequency, occupation, hobbies, and travel patterns for comprehensive lifestyle risk assessment.",
    "output_details": {
      "lifestyle_risk_score": {
        "type": "number",
        "description": "Overall lifestyle risk score (0-100 scale)"
      },
      "risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified lifestyle-related risk factors"
      },
      "protective_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Lifestyle factors that may reduce health risks"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Lifestyle modification recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medical Risk Scorer",
    "tool_description": "Calculates comprehensive medical risk scores based on extracted health factors, lab results, and medical history for underwriting assessment.",
    "parameters": {
      "high_risk_factors": {
        "type": "array",
        "required": true,
        "description": "List of high-risk medical factors identified",
        "items": {
          "type": "string"
        }
      },
      "moderate_risk_factors": {
        "type": "array",
        "required": false,
        "description": "List of moderate-risk medical factors",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "abnormal_lab_results": {
        "type": "array",
        "required": false,
        "description": "List of abnormal laboratory findings",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "applicant_age": {
        "type": "integer",
        "required": true,
        "description": "Age of the insurance applicant"
      },
      "risk_weighting_method": {
        "type": "string",
        "required": false,
        "description": "Method for weighting risk factors: conservative, standard, liberal",
        "default": "standard"
      }
    },
    "error_messages": [
      "Empty high risk factors: Provide at least one high-risk factor or indicate none available.",
      "Invalid age: applicant_age must be between 18 and 100.",
      "Invalid weighting method: Use one of [conservative, standard, liberal].",
      "Risk calculation error: Unable to calculate risk score with provided factors."
    ],
    "usage": "Provide identified risk factors and applicant age. The tool calculates weighted risk scores considering factor severity and age-related risk adjustments.",
    "output_details": {
      "overall_medical_risk_score": {
        "type": "number",
        "description": "Composite medical risk score (0-100 scale)"
      },
      "category_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Risk scores for different medical categories"
      },
      "score_breakdown": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed breakdown of how the score was calculated"
      },
      "risk_classification": {
        "type": "string",
        "description": "Overall risk classification: low, moderate, high, severe"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Genetic Risk Assessor",
    "tool_description": "Assesses genetic and hereditary risk factors based on family history patterns for life insurance risk evaluation.",
    "parameters": {
      "hereditary_conditions": {
        "type": "array",
        "required": true,
        "description": "Medical conditions with hereditary patterns identified in family",
        "items": {
          "type": "string"
        }
      },
      "early_onset_patterns": {
        "type": "array",
        "required": false,
        "description": "Conditions showing early onset in family members",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "applicant_age": {
        "type": "integer",
        "required": true,
        "description": "Current age of the insurance applicant"
      },
      "genetic_testing_results": {
        "type": "array",
        "required": false,
        "description": "Results from genetic tests if available",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Empty hereditary conditions: Provide at least one hereditary condition or indicate none identified.",
      "Invalid applicant age: Age must be between 18 and 100.",
      "Unrecognized genetic condition: One or more hereditary conditions cannot be assessed for genetic risk."
    ],
    "usage": "Provide hereditary conditions identified from family history analysis. Include genetic testing results if available for more accurate risk assessment.",
    "output_details": {
      "genetic_risk_score": {
        "type": "number",
        "description": "Genetic risk score based on hereditary factors (0-100 scale)"
      },
      "high_risk_genes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Genetic factors contributing most to risk elevation"
      },
      "penetrance_estimates": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Estimated penetrance percentages for identified genetic risks"
      },
      "surveillance_recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended health monitoring based on genetic risks"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medication Analyzer",
    "tool_description": "Analyzes current medications to assess underlying health conditions and medication-related risks for insurance underwriting.",
    "parameters": {
      "medication_names": {
        "type": "array",
        "required": true,
        "description": "List of medication names (generic or brand names)",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "dosages": {
        "type": "array",
        "required": false,
        "description": "Dosage information for each medication",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "duration_of_use": {
        "type": "array",
        "required": false,
        "description": "How long each medication has been used (in months)",
        "items": {
          "type": "integer"
        },
        "default": "None"
      },
      "prescribing_reasons": {
        "type": "array",
        "required": false,
        "description": "Medical reasons for each prescription",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Empty medication list: Provide at least one medication name for analysis.",
      "Array length mismatch: If provided, dosages, duration_of_use, and prescribing_reasons arrays must match medication_names length.",
      "Invalid duration values: Duration values must be non-negative integers representing months.",
      "Unrecognized medication: One or more medications cannot be identified in the database."
    ],
    "usage": "Provide a list of medication names. Optionally include dosages, duration of use, and prescribing reasons for more comprehensive analysis of medication-related health risks.",
    "output_details": {
      "implied_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Medical conditions suggested by the medication regimen"
      },
      "medication_risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Risk factors associated with the medications"
      },
      "drug_interactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Potential drug interactions identified"
      },
      "therapeutic_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Therapeutic categories of the medications"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Health Metric Calculator",
    "tool_description": "Calculates standardized health metrics and ratios from laboratory results and vital signs for risk assessment.",
    "parameters": {
      "cholesterol_total": {
        "type": "number",
        "required": false,
        "description": "Total cholesterol level in mg/dL",
        "default": "None"
      },
      "hdl_cholesterol": {
        "type": "number",
        "required": false,
        "description": "HDL cholesterol level in mg/dL",
        "default": "None"
      },
      "ldl_cholesterol": {
        "type": "number",
        "required": false,
        "description": "LDL cholesterol level in mg/dL",
        "default": "None"
      },
      "triglycerides": {
        "type": "number",
        "required": false,
        "description": "Triglyceride level in mg/dL",
        "default": "None"
      },
      "glucose_fasting": {
        "type": "number",
        "required": false,
        "description": "Fasting glucose level in mg/dL",
        "default": "None"
      },
      "hba1c": {
        "type": "number",
        "required": false,
        "description": "Hemoglobin A1C percentage",
        "default": "None"
      },
      "blood_pressure_systolic": {
        "type": "integer",
        "required": false,
        "description": "Systolic blood pressure in mmHg",
        "default": "None"
      },
      "blood_pressure_diastolic": {
        "type": "integer",
        "required": false,
        "description": "Diastolic blood pressure in mmHg",
        "default": "None"
      },
      "creatinine": {
        "type": "number",
        "required": false,
        "description": "Serum creatinine level in mg/dL",
        "default": "None"
      },
      "bun": {
        "type": "number",
        "required": false,
        "description": "Blood urea nitrogen level in mg/dL",
        "default": "None"
      },
      "alt": {
        "type": "number",
        "required": false,
        "description": "Alanine transaminase level in U/L",
        "default": "None"
      },
      "ast": {
        "type": "number",
        "required": false,
        "description": "Aspartate transaminase level in U/L",
        "default": "None"
      },
      "applicant_age": {
        "type": "integer",
        "required": true,
        "description": "Age of the applicant in years"
      },
      "applicant_gender": {
        "type": "string",
        "required": true,
        "description": "Gender of the applicant: male, female, other"
      }
    },
    "error_messages": [
      "Invalid lab values: All provided lab values must be positive numbers.",
      "Invalid blood pressure: Both systolic and diastolic values must be provided together and be between 70-250 mmHg.",
      "Invalid age: Applicant age must be between 18 and 100.",
      "Invalid gender: Use one of [male, female, other].",
      "Insufficient data: At least one lab value must be provided for metric calculation."
    ],
    "usage": "Provide available lab results and applicant demographics. The tool calculates relevant health ratios and metabolic indicators used in risk assessment.",
    "output_details": {
      "cholesterol_ratio": {
        "type": "number",
        "description": "Total cholesterol to HDL ratio"
      },
      "cardiovascular_risk_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Cardiovascular risk indicators based on lipid profile"
      },
      "diabetes_risk_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Diabetes risk indicators based on glucose measures"
      },
      "kidney_function_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Kidney function status based on creatinine and BUN"
      },
      "liver_function_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Liver function status based on enzyme levels"
      },
      "metabolic_syndrome_score": {
        "type": "number",
        "description": "Risk score for metabolic syndrome (0-10 scale)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medical History Validator",
    "tool_description": "Validates and cross-references medical history information for consistency and completeness in underwriting assessment.",
    "parameters": {
      "medical_conditions": {
        "type": "array",
        "required": true,
        "description": "List of reported medical conditions",
        "items": {
          "type": "string"
        }
      },
      "medications": {
        "type": "array",
        "required": false,
        "description": "List of current medications",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "symptoms_reported": {
        "type": "array",
        "required": false,
        "description": "List of symptoms reported by applicant",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "lab_abnormalities": {
        "type": "array",
        "required": false,
        "description": "List of abnormal lab findings",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Empty medical conditions: Provide at least one medical condition for validation.",
      "Validation failed: Unable to cross-reference provided medical information.",
      "Inconsistent information: Medications do not align with reported medical conditions."
    ],
    "usage": "Provide medical conditions and supporting information like medications, symptoms, and lab results. The tool validates consistency and identifies potential gaps or inconsistencies in the medical history.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: validated, inconsistent, incomplete, requires_clarification"
      },
      "consistency_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified inconsistencies in the medical information"
      },
      "missing_information": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Expected information that appears to be missing"
      },
      "validation_confidence": {
        "type": "number",
        "description": "Confidence level in the validation (0-100 scale)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Composite Risk Integrator",
    "tool_description": "Integrates multiple risk assessment components into a unified risk profile for comprehensive under
