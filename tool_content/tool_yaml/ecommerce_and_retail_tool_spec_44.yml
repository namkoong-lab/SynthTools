field_name: ecommerce_and_retail
subfield: Order Processing and Fulfillment
task: Inventory adjustment and stock level updates
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves moderate complexity with multiple interconnected subprocesses including inventory tracking, stock validation, adjustment calculations, and system updates across potentially multiple warehouses and channels. The task requires careful coordination to prevent overselling, maintain data consistency, and handle concurrent transactions, making it a **medium** difficulty task.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty rating, I'll target **12 tools** within the 10-15 range to cover inventory validation, stock adjustments, warehouse management, reporting, and integration workflows.

  ## STEP 3 — List all tool names with dependencies and affordances

  1. **Stock Level Validator** - Consumes: SKU, location data → Produces: current stock levels, validation status
  2. **Inventory Adjustment Calculator** - Consumes: current levels, adjustment requests → Produces: calculated adjustments, safety checks
  3. **Warehouse Stock Updater** - Consumes: adjustment calculations → Produces: updated warehouse inventory
  4. **Multi-Location Sync Manager** - Consumes: warehouse updates → Produces: synchronized inventory across locations
  5. **Stock Movement Logger** - Consumes: adjustment details → Produces: audit trail, transaction records
  6. **Reorder Point Analyzer** - Consumes: updated stock levels → Produces: reorder recommendations, alerts
  7. **Safety Stock Calculator** - Consumes: historical data, lead times → Produces: optimal safety stock levels
  8. **Stock Reservation Manager** - Consumes: reservation requests → Produces: reserved inventory allocations
  9. **Inventory Reconciliation Tool** - Consumes: system vs physical counts → Produces: discrepancy reports, reconciliation actions
  10. **Stock Alert Generator** - Consumes: current levels, thresholds → Produces: low stock alerts, notifications
  11. **Batch Adjustment Processor** - Consumes: bulk adjustment files → Produces: processed batch updates
  12. **Inventory Report Generator** - Consumes: stock data, time ranges → Produces: comprehensive inventory reports

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Stock Update**: Stock Level Validator → Inventory Adjustment Calculator → Warehouse Stock Updater
  2. **Alert Generation**: Stock Level Validator → Stock Alert Generator

  **Medium Plans:**
  1. **Complete Adjustment Workflow**: Stock Level Validator → Inventory Adjustment Calculator → Warehouse Stock Updater → Multi-Location Sync Manager → Stock Movement Logger
  2. **Reorder Management**: Stock Level Validator → Reorder Point Analyzer → Safety Stock Calculator → Stock Alert Generator

  **Complex Plans:**
  1. **Full Inventory Reconciliation**: Inventory Reconciliation Tool → Batch Adjustment Processor → Multi-Location Sync Manager → Stock Movement Logger → Inventory Report Generator
  2. **End-to-End Stock Management**: Stock Level Validator → Stock Reservation Manager → Inventory Adjustment Calculator → Warehouse Stock Updater → Multi-Location Sync Manager → Reorder Point Analyzer → Stock Alert Generator → Inventory Report Generator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Stock Level Validator",
    "tool_description": "Validates and retrieves current stock levels for specified SKUs across one or more warehouse locations, checking data integrity and availability.",
    "parameters": {
      "sku_list": {
        "type": "array",
        "required": true,
        "description": "List of SKU identifiers to validate",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "location_codes": {
        "type": "array",
        "required": true,
        "description": "List of warehouse/location codes to check",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "include_reserved": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include reserved inventory in calculations",
        "default": true
      }
    },
    "error_messages": [
      "Invalid SKU format: One or more SKUs contain invalid characters or exceed length limits.",
      "Location not found: One or more location codes do not exist in the system.",
      "SKU not found: One or more SKUs do not exist in inventory database.",
      "Data access error: Unable to retrieve stock data due to system connectivity issues."
    ],
    "usage": "Provide sku_list and location_codes arrays to validate current stock levels. Set include_reserved to false if you want to exclude reserved inventory from totals.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: success, partial, or failed"
      },
      "stock_levels": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Current stock quantities corresponding to each SKU-location combination"
      },
      "location_status": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Status of each location: active, inactive, or maintenance"
      },
      "last_updated": {
        "type": "string",
        "description": "Timestamp of last stock level update",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Adjustment Calculator",
    "tool_description": "Calculates inventory adjustments based on current stock levels and requested changes, applying business rules and safety checks to prevent invalid adjustments.",
    "parameters": {
      "sku": {
        "type": "string",
        "required": true,
        "description": "SKU identifier for the item being adjusted"
      },
      "location_code": {
        "type": "string",
        "required": true,
        "description": "Warehouse location code for the adjustment"
      },
      "adjustment_type": {
        "type": "string",
        "required": true,
        "description": "Type of adjustment: increase, decrease, set_absolute, or cycle_count"
      },
      "adjustment_quantity": {
        "type": "integer",
        "required": true,
        "description": "Quantity to adjust (positive or negative based on adjustment_type)"
      },
      "current_stock": {
        "type": "integer",
        "required": true,
        "description": "Current stock level before adjustment"
      },
      "reason_code": {
        "type": "string",
        "required": true,
        "description": "Reason for adjustment: damage, theft, found, supplier_return, customer_return, or manual_correction"
      },
      "allow_negative": {
        "type": "boolean",
        "required": false,
        "description": "Whether to allow negative stock levels after adjustment",
        "default": false
      },
      "max_adjustment_limit": {
        "type": "integer",
        "required": false,
        "description": "Maximum allowed adjustment quantity in single operation",
        "default": 10000
      }
    },
    "error_messages": [
      "Invalid adjustment type: Use one of [increase, decrease, set_absolute, cycle_count].",
      "Invalid reason code: Use one of [damage, theft, found, supplier_return, customer_return, manual_correction].",
      "Adjustment exceeds limit: Requested adjustment exceeds max_adjustment_limit.",
      "Negative stock not allowed: Adjustment would result in negative stock and allow_negative is false.",
      "Invalid quantity: adjustment_quantity must be a non-zero integer."
    ],
    "usage": "Provide SKU, location, adjustment details, and current stock level. The tool calculates the final stock level and validates the adjustment against business rules.",
    "output_details": {
      "calculated_new_stock": {
        "type": "integer",
        "description": "Calculated stock level after adjustment"
      },
      "adjustment_approved": {
        "type": "boolean",
        "description": "Whether the adjustment passed all validation checks"
      },
      "adjustment_value": {
        "type": "integer",
        "description": "Final adjustment quantity to be applied"
      },
      "warnings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Any warnings or notices about the adjustment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Warehouse Stock Updater",
    "tool_description": "Updates warehouse inventory levels by applying calculated adjustments and maintaining transaction integrity with rollback capabilities.",
    "parameters": {
      "sku": {
        "type": "string",
        "required": true,
        "description": "SKU identifier for the inventory update"
      },
      "location_code": {
        "type": "string",
        "required": true,
        "description": "Warehouse location code"
      },
      "new_stock_level": {
        "type": "integer",
        "required": true,
        "description": "New stock level to set"
      },
      "adjustment_quantity": {
        "type": "integer",
        "required": true,
        "description": "Net adjustment quantity (positive or negative)"
      },
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Unique transaction identifier for tracking"
      },
      "user_id": {
        "type": "string",
        "required": true,
        "description": "User ID performing the update"
      },
      "reason_code": {
        "type": "string",
        "required": true,
        "description": "Reason code for the adjustment"
      },
      "force_update": {
        "type": "boolean",
        "required": false,
        "description": "Whether to override concurrent modification checks",
        "default": false
      }
    },
    "error_messages": [
      "Concurrent modification detected: Stock level was modified by another transaction. Set force_update to true to override.",
      "Transaction ID already exists: Provide a unique transaction_id.",
      "Database connection error: Unable to connect to inventory database.",
      "Invalid user permissions: User does not have permission to update inventory at this location.",
      "Stock level mismatch: Current stock level differs from expected value."
    ],
    "usage": "Provide all required parameters including SKU, location, new stock level, and transaction details. The tool will update the warehouse inventory and return confirmation.",
    "output_details": {
      "update_successful": {
        "type": "boolean",
        "description": "Whether the inventory update was successful"
      },
      "previous_stock": {
        "type": "integer",
        "description": "Stock level before the update"
      },
      "current_stock": {
        "type": "integer",
        "description": "Stock level after the update"
      },
      "timestamp": {
        "type": "string",
        "description": "Timestamp when update was completed",
        "format": "date-time"
      },
      "transaction_reference": {
        "type": "string",
        "description": "Reference number for the completed transaction"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Multi-Location Sync Manager",
    "tool_description": "Synchronizes inventory updates across multiple warehouse locations and sales channels, ensuring data consistency and managing distribution center allocations.",
    "parameters": {
      "primary_sku": {
        "type": "string",
        "required": true,
        "description": "Primary SKU identifier being synchronized"
      },
      "source_location": {
        "type": "string",
        "required": true,
        "description": "Source warehouse location code where change originated"
      },
      "target_locations": {
        "type": "array",
        "required": true,
        "description": "List of target locations to synchronize with",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "sync_type": {
        "type": "string",
        "required": true,
        "description": "Type of synchronization: full_sync, partial_sync, or rebalance"
      },
      "updated_quantity": {
        "type": "integer",
        "required": true,
        "description": "New quantity at source location"
      },
      "distribution_rule": {
        "type": "string",
        "required": false,
        "description": "Distribution rule: equal, weighted, or priority_based",
        "default": "equal"
      },
      "channel_sync_enabled": {
        "type": "boolean",
        "required": false,
        "description": "Whether to sync with online sales channels",
        "default": true
      },
      "max_sync_delay": {
        "type": "integer",
        "required": false,
        "description": "Maximum acceptable sync delay in minutes",
        "default": 5
      }
    },
    "error_messages": [
      "Invalid sync type: Use one of [full_sync, partial_sync, rebalance].",
      "Invalid distribution rule: Use one of [equal, weighted, priority_based].",
      "Location not reachable: One or more target locations are not responding.",
      "Sync timeout exceeded: Synchronization took longer than max_sync_delay.",
      "Channel integration error: Failed to sync with one or more sales channels."
    ],
    "usage": "Provide primary_sku, source_location, target_locations, and sync parameters. The tool will coordinate inventory synchronization across all specified locations.",
    "output_details": {
      "sync_status": {
        "type": "string",
        "description": "Overall synchronization status: completed, partial, or failed"
      },
      "locations_synced": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of locations successfully synchronized"
      },
      "locations_failed": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of locations that failed synchronization"
      },
      "total_inventory": {
        "type": "integer",
        "description": "Total inventory across all synchronized locations"
      },
      "sync_duration": {
        "type": "integer",
        "description": "Time taken for synchronization in seconds"
      },
      "next_sync_time": {
        "type": "string",
        "description": "Scheduled time for next synchronization",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stock Movement Logger",
    "tool_description": "Creates detailed audit trails for all inventory movements and adjustments, maintaining compliance records and transaction history for reporting and analysis.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the transaction being logged"
      },
      "sku": {
        "type": "string",
        "required": true,
        "description": "SKU identifier for the item"
      },
      "movement_type": {
        "type": "string",
        "required": true,
        "description": "Type of movement: adjustment, transfer, sale, purchase, return, or correction"
      },
      "quantity_change": {
        "type": "integer",
        "required": true,
        "description": "Quantity change (positive for increases, negative for decreases)"
      },
      "location_from": {
        "type": "string",
        "required": false,
        "description": "Source location for transfers",
        "default": "None"
      },
      "location_to": {
        "type": "string",
        "required": false,
        "description": "Destination location for transfers",
        "default": "None"
      },
      "user_id": {
        "type": "string",
        "required": true,
        "description": "User ID who performed the action"
      },
      "reason_code": {
        "type": "string",
        "required": true,
        "description": "Reason code for the movement"
      },
      "reference_document": {
        "type": "string",
        "required": false,
        "description": "Reference document number (PO, SO, etc.)",
        "default": "None"
      },
      "cost_impact": {
        "type": "number",
        "required": false,
        "description": "Financial impact of the movement",
        "default": 0
      },
      "notes": {
        "type": "string",
        "required": false,
        "description": "Additional notes or comments",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid movement type: Use one of [adjustment, transfer, sale, purchase, return, correction].",
      "Missing location information: location_to is required for transfer movements.",
      "Invalid transaction ID: Transaction ID already exists in audit log.",
      "Database write error: Unable to write audit record to database.",
      "Invalid user ID: User ID not found in system."
    ],
    "usage": "Provide transaction details including SKU, movement type, quantity change, and user information. For transfers, specify both location_from and location_to.",
    "output_details": {
      "log_entry_id": {
        "type": "string",
        "description": "Unique identifier for the created log entry"
      },
      "logged_successfully": {
        "type": "boolean",
        "description": "Whether the log entry was successfully created"
      },
      "timestamp": {
        "type": "string",
        "description": "Timestamp when the log entry was created",
        "format": "date-time"
      },
      "audit_trail_reference": {
        "type": "string",
        "description": "Reference number for audit trail compliance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Reorder Point Analyzer",
    "tool_description": "Analyzes current stock levels against reorder points and lead times to generate purchase recommendations and identify items requiring immediate attention.",
    "parameters": {
      "sku_list": {
        "type": "array",
        "required": true,
        "description": "List of SKUs to analyze for reorder points",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "location_code": {
        "type": "string",
        "required": true,
        "description": "Warehouse location code for analysis"
      },
      "analysis_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to analyze for demand patterns",
        "default": 30
      },
      "lead_time_buffer": {
        "type": "number",
        "required": false,
        "description": "Additional buffer percentage for lead time variability",
        "default": 1.2
      }
    },
    "error_messages": [
      "SKU not found: One or more SKUs do not exist in the system.",
      "Insufficient historical data: Not enough sales history to calculate reliable reorder points.",
      "Invalid analysis period: analysis_period_days must be between 7 and 365.",
      "Location not configured: Reorder points not configured for specified location."
    ],
    "usage": "Provide sku_list and location_code to analyze reorder requirements. Optionally adjust analysis_period_days and lead_time_buffer for more precise calculations.",
    "output_details": {
      "reorder_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of SKUs requiring immediate reorder"
      },
      "current_stock_levels": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Current stock levels for each analyzed SKU"
      },
      "reorder_points": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Calculated reorder points for each SKU"
      },
      "suggested_order_quantities": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Suggested quantities to order for each SKU requiring reorder"
      },
      "days_until_stockout": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Estimated days until stockout for each SKU"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Safety Stock Calculator",
    "tool_description": "Calculates optimal safety stock levels based on historical demand variability, lead time fluctuations, and service level targets to minimize stockouts while optimizing inventory costs.",
    "parameters": {
      "sku": {
        "type": "string",
        "required": true,
        "description": "SKU identifier for safety stock calculation"
      },
      "historical_demand": {
        "type": "array",
        "required": true,
        "description": "Historical daily demand data for the past periods",
        "items": {"type": "integer"},
        "minItems": 30,
        "maxItems": 365
      },
      "lead_times": {
        "type": "array",
        "required": true,
        "description": "Historical lead times in days",
        "items": {"type": "integer"},
        "minItems": 5,
        "maxItems": 50
      },
      "service_level": {
        "type": "number",
        "required": true,
        "description": "Target service level as percentage (85-99.9)"
      },
      "demand_forecast": {
        "type": "array",
        "required": true,
        "description": "Forecasted demand for upcoming periods",
        "items": {"type": "integer"},
        "minItems": 7,
        "maxItems": 90
      },
      "seasonality_factor": {
        "type": "number",
        "required": false,
        "description": "Seasonal adjustment factor (0.5-2.0)",
        "default": 1.0
      },
      "cost_per_unit": {
        "type": "number",
        "required": true,
        "description": "Unit cost for carrying cost calculations"
      },
      "carrying_cost_percentage": {
        "type": "number",
        "required": false,
        "description": "Annual carrying cost as percentage of unit cost",
        "default": 25
      },
      "stockout_cost": {
        "type": "number",
        "required": false,
        "description": "Estimated cost per stockout incident",
        "default": 0
      },
      "review_period": {
        "type": "integer",
        "required": false,
        "description": "Inventory review period in days",
        "default": 7
      },
      "min_safety_stock": {
        "type": "integer",
        "required": false,
        "description": "Minimum safety stock quantity",
        "default": 0
      }
    },
    "error_messages": [
      "Insufficient demand data: Provide at least 30 days of historical demand data.",
      "Invalid service level: Service level must be between 85 and 99.9.",
      "Invalid seasonality factor: Must be between 0.5 and 2.0.",
      "Inconsistent data length: Historical data arrays must have consistent time periods.",
      "Invalid cost parameters: cost_per_unit must be positive, carrying_cost_percentage must be between 1 and 50."
    ],
    "usage": "Provide SKU, historical demand and lead time data, service level target, and cost parameters. The tool calculates optimal safety stock using statistical methods and cost optimization.",
    "output_details": {
      "recommended_safety_stock": {
        "type": "integer",
        "description": "Calculated optimal safety stock quantity"
      },
      "demand_variability": {
        "type": "number",
        "description": "Standard deviation of demand"
      },
      "lead_time_variability": {
        "type": "number",
        "description": "Standard deviation of lead times"
      },
      "total_carrying_cost": {
        "type": "number",
        "description": "Estimated annual carrying cost for safety stock"
      },
      "stockout_probability": {
        "type": "number",
        "description": "Probability of stockout with recommended safety stock"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stock Reservation Manager",
    "tool_description": "Manages inventory reservations for orders, allocations, and holds, ensuring available inventory is properly allocated and preventing overselling across multiple channels.",
    "parameters": {
      "sku": {
        "type": "string",
        "required": true,
        "description": "SKU identifier for reservation"
      },
      "location_code": {
        "type": "string",
        "required": true,
        "description": "Warehouse location for reservation"
      },
      "reservation_type": {
        "type": "string",
        "required": true,
        "description": "Type of reservation: order, allocation, hold, or quality_check"
      },
      "quantity": {
        "type": "integer",
        "required": true,
        "description": "Quantity to reserve"
      },
      "order_reference": {
        "type": "string",
        "required": true,
        "description": "Order or reference number for the reservation"
      },
      "expiration_time": {
        "type": "string",
        "required": false,
        "description": "When the reservation expires",
        "format": "date-time",
        "default": "None"
      },
      "priority_level": {
        "type": "integer",
        "required": false,
        "description": "Priority level (1-10, higher is more important)",
        "default": 5
      }
    },
    "error_messages": [
      "Insufficient inventory: Not enough available stock to fulfill reservation.",
      "Invalid reservation type: Use one of [order, allocation, hold, quality_check].",
      "Invalid priority level: Priority must be between 1 and 10.",
      "Duplicate reservation: Order reference already has active reservation for this SKU.",
      "Invalid expiration time: Expiration must be in the future."
    ],
    "usage": "Provide SKU, location, reservation type, quantity, and order reference. Optionally set expiration_time and priority_level for advanced reservation management.",
    "output_details": {
      "reservation_id": {
        "type": "string",
        "description": "Unique identifier for the created reservation"
      },
      "reservation_successful": {
        "type": "boolean",
        "description": "Whether the reservation was successfully created"
      },
      "reserved_quantity": {
        "type": "integer",
        "description": "Actual quantity reserved (may differ from requested)"
      },
      "available_after_reservation": {
        "type": "integer",
        "description": "Available inventory after this reservation"
      },
      "reservation_expires": {
        "type": "string",
        "description": "When this reservation will expire",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Reconciliation Tool",
    "tool_description": "Compares physical inventory counts with system records to identify discrepancies, calculate variances, and generate adjustment recommendations for inventory accuracy.",
    "parameters": {
      "location_code": {
        "type": "string",
        "required": true,
        "description": "Warehouse location code for reconciliation"
      },
      "physical_counts": {
        "type": "array",
        "required": true,
        "description": "Physical count quantities for each SKU",
        "items": {"type": "integer"},
        "minItems": 1,
        "maxItems": 10000
      },
      "sku_list": {
        "type": "array",
        "required": true,
        "description": "List of SKUs corresponding to physical counts",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10000
      },
      "count_date": {
        "type": "string",
        "required": true,
        "description": "Date when physical count was performed",
        "format": "date-time"
      },
      "counter_id": {
        "type": "string",
        "required": true,
        "description": "ID of person who performed the count"
      },
      "count_method": {
        "type": "string",
        "required": true,
        "description": "Counting method: full_physical, cycle_count, or spot_check"
      },
      "variance_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum variance percentage to report (0-100)",
        "default": 1.0
      },
      "auto_adjust": {
        "type": "boolean",
        "required": false,
        "description": "Whether to automatically adjust small variances",
        "default": false
      },
      "exclude_reserved": {
        "type": "boolean",
        "required": false,
        "description": "Whether to exclude reserved inventory from comparison",
        "default": true
      }
    },
    "error_messages": [
      "Data length mismatch: physical_counts and sku_list must have the same length.",
      "Invalid count method: Use one of [full_physical, cycle_count, spot_check].",
      "Invalid count date: Count date cannot be in the future.",
      "SKU not found: One or more SKUs do not exist in the system.",
      "Invalid variance threshold: Must be between 0 and 100."
    ],
    "usage": "Provide physical count data with corresponding SKU list, along with count details. The tool compares against system records and identifies discrepancies requiring attention.",
    "output_details": {
      "total_skus_counted": {
        "type": "integer",
        "description": "Total number of SKUs included in reconciliation"
      },
      "skus_with_variances": {
        "type": "integer",
        "description": "Number of SKUs with variances above threshold"
      },
      "total_variance_value": {
        "type": "number",
        "description": "Total financial impact of all variances"
      },
      "variance_details": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed variance information for each discrepant SKU"
      },
      "adjustment_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended adjustments to correct discrepancies"
      },
      "accuracy_percentage": {
        "type": "number",
        "description": "Overall inventory accuracy percentage"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stock Alert Generator",
    "tool_description": "Monitors inventory levels and generates alerts for low stock, overstock, and other inventory conditions based on configurable thresholds and business rules.",
    "parameters": {
      "sku_list": {
        "type": "array",
        "required": true,
        "description": "List of SKUs to monitor for alerts",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "location_codes": {
        "type": "array",
        "required": true,
        "description": "Warehouse locations to monitor",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "alert_types": {
        "type": "array",
        "required": true,
        "description": "Types of alerts to check: low_stock, out_of_stock, overstock, slow_moving",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      }
    },
    "error_messages": [
      "Invalid alert type: Use one or more of [low_stock, out_of_stock, overstock, slow_moving, expired, damaged].",
      "SKU not found: One or more SKUs do not exist in the system.",
