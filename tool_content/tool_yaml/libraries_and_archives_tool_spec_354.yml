field_name: libraries_and_archives
subfield: Cataloging and Metadata Creation
task: Generate and assign standardized metadata schemas for digital collections
tool_description: "**STEP 1 — Rate task difficulty**\nThis task has high complexity due to the need for deep domain expertise in cataloging standards (Dublin Core, MARC, MODS), understanding diverse digital formats, ensuring metadata consistency across collections, and managing intricate workflows with multiple stakeholders. The scope encompasses technical validation, quality control, and integration with existing library systems, making this a **hard** difficulty task.\n\n**STEP 2 — Set a tool budget**\nGiven the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range. This allows comprehensive coverage of metadata creation workflows while maintaining tool composability and avoiding overlap.\n\n**STEP 3 — List all tool names and dependencies**\n\nTools and their data flow:\n1. **Digital Asset Scanner** → produces asset inventories\n2. **Metadata Schema Validator** → consumes schema definitions, produces validation reports  \n3. **Dublin Core Generator** → consumes asset data, produces DC metadata\n4. **MARC Record Creator** → consumes bibliographic data, produces MARC records\n5. **MODS Metadata Builder** → consumes descriptive data, produces MODS records\n6. **Subject Heading Mapper** → consumes terms, produces controlled vocabularies\n7. **Authority Control Checker** → consumes names/entities, produces verified authorities\n8. **Metadata Quality Analyzer** → consumes metadata records, produces quality reports\n9. **Batch Metadata Processor** → consumes multiple records, produces processed batches\n10. **Schema Crosswalk Generator** → consumes source/target schemas, produces mappings\n11. **Collection Hierarchy Builder** → consumes items/relationships, produces hierarchical structures\n12. **Rights Statement Assigner** → consumes usage data, produces rights metadata\n13. **Thumbnail Generator** → consumes digital assets, produces preview images\n14. **Metadata Export Formatter** → consumes records, produces formatted exports\n15. **Duplicate Record Detector** → consumes metadata sets, produces deduplication reports\n16. **Workflow Status Tracker** → consumes task data, produces progress reports\n17. **Metadata Validation Reporter** → consumes validation results, produces compliance reports\n\n**STEP 4 — Multi-tool plans**\n\n**Simple Plans:**\n- Basic cataloging: Digital Asset Scanner → Dublin Core Generator → Metadata Quality Analyzer\n- Rights assignment: Digital Asset Scanner → Rights Statement Assigner → Metadata Export Formatter\n\n**Medium Plans:** \n- Standard workflow: Digital Asset Scanner → MARC Record Creator → Authority Control Checker → Subject Heading Mapper → Metadata Quality Analyzer → Metadata Export Formatter\n- Quality control: Batch Metadata Processor → Duplicate Record Detector → Metadata Quality Analyzer → Metadata Validation Reporter\n\n**Complex Plans:**\n- Full collection processing: Digital Asset Scanner → Collection Hierarchy Builder → MODS Metadata Builder → Authority Control Checker → Subject Heading Mapper → Rights Statement Assigner → Thumbnail Generator → Schema Crosswalk Generator → Metadata Quality Analyzer → Duplicate Record Detector → Workflow Status Tracker → Metadata Export Formatter\n- Multi-standard migration: Metadata Schema Validator → Schema Crosswalk Generator → Batch Metadata Processor → MARC Record Creator → Dublin Core Generator → MODS Metadata Builder → Metadata Quality Analyzer → Metadata Validation Reporter\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Digital Asset Scanner\",\n  \"tool_description\": \"Scans directories and catalogs digital assets, extracting basic technical metadata and file properties for collection processing.\",\n  \"parameters\": {\n    \"directory_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Full path to the directory containing digital assets to scan\"\n    },\n    \"file_extensions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"pdf\", \"jpg\", \"png\", \"tiff\", \"mp4\", \"wav\"],\n    \
  \  \"description\": \"File extensions to include in scan\"\n    },\n    \"recursive_scan\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to scan subdirectories recursively\"\n    },\n    \"extract_technical_metadata\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to extract technical metadata like dimensions, duration, etc.\"\n    }\n  },\n  \"error_messages\": [\n    \"Directory not found: Ensure the directory_path exists and is accessible\",\n    \"Permission denied: Verify read permissions for the specified directory\",\n    \"Invalid file extensions: File extensions must be strings without dots\",\n    \"Scan timeout: Large directories may require chunked processing\"\n  ],\n  \"usage\": \"Provide a directory_path to scan. Optionally specify file_extensions to filter results, set recursive_scan for subdirectories, and enable extract_technical_metadata for detailed file analysis.\",\n  \"output_details\": {\n    \"total_files\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of digital assets found\"\n    },\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Full paths to all discovered assets\"\n    },\n    \"file_types\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Unique file types found in collection\"\n    },\n    \"total_size_mb\": {\n      \"type\": \"number\",\n      \"description\": \"Total collection size in megabytes\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Metadata Schema Validator\",\n  \"tool_description\": \"Validates metadata records against specified standards including Dublin Core, MARC21, MODS, and custom schemas.\",\n  \"parameters\": {\n    \"metadata_records\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of metadata record identifiers or content to validate\"\n    },\n    \"schema_standard\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Metadata schema standard: dublin_core, marc21, mods, or custom\"\n    },\n    \"validation_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"strict\",\n      \"description\": \"Validation strictness: strict, moderate, or lenient\"\n    },\n    \"custom_schema_url\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"URL to custom schema definition if schema_standard is custom\"\n    },\n    \"required_fields\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"List of fields that must be present in each record\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid schema standard: Use dublin_core, marc21, mods, or custom\",\n    \"Custom schema required: Provide custom_schema_url when using custom standard\",\n    \"Invalid validation level: Use strict, moderate, or lenient\",\n    \"Schema fetch failed: Unable to retrieve custom schema from provided URL\",\n    \"Empty metadata records: Provide at least one metadata record to validate\"\n  ],\n  \"usage\": \"Provide metadata_records and schema_standard. For custom schemas, include custom_schema_url. Set validation_level and required_fields as needed for your validation requirements.\",\n  \"output_details\": {\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Overall validation result: passed, failed, or partial\"\n    },\n    \"total_records\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of records validated\"\n    },\n    \"valid_records\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of records that passed validation\"\n    },\n    \"error_details\": {\n      \"type\": \"array\",\n      \"items\": {\"type\"\
  : \"string\"},\n      \"description\": \"Specific validation errors found\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Dublin Core Generator\",\n  \"tool_description\": \"Creates Dublin Core metadata records from digital assets and provided descriptive information.\",\n  \"parameters\": {\n    \"asset_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to the digital asset for which to create Dublin Core metadata\"\n    },\n    \"title\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Title of the digital asset\"\n    },\n    \"creator\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Creator or author of the asset\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Description or abstract of the asset\"\n    },\n    \"subject_terms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Subject headings or keywords\"\n    }\n  },\n  \"error_messages\": [\n    \"Asset not found: Verify the asset_path points to an existing file\",\n    \"Empty title: Title field cannot be empty\",\n    \"Invalid subject terms: Subject terms must be non-empty strings\",\n    \"Metadata extraction failed: Unable to extract technical metadata from asset\"\n  ],\n  \"usage\": \"Provide asset_path and title as minimum requirements. Add creator, description, and subject_terms for richer metadata. The tool automatically extracts technical metadata from the asset.\",\n  \"output_details\": {\n    \"dublin_core_xml\": {\n      \"type\": \"string\",\n      \"description\": \"Complete Dublin Core record in XML format\"\n    },\n    \"record_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier assigned to the metadata record\"\n    },\n    \"creation_date\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when the metadata record was created\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"MARC Record Creator\",\n  \"tool_description\": \"Generates MARC21 bibliographic records for library catalog integration with comprehensive field mapping and validation.\",\n  \"parameters\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Main title of the resource\"\n    },\n    \"author\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Primary author or creator\"\n    },\n    \"publication_year\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Year of publication or creation\"\n    },\n    \"publisher\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Publisher or issuing body\"\n    },\n    \"isbn\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"ISBN for published materials\"\n    },\n    \"subject_headings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Library of Congress Subject Headings\"\n    },\n    \"language_code\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"eng\",\n      \"description\": \"Three-letter ISO language code\"\n    },\n    \"material_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of material: book, journal, manuscript, electronic_resource, audiovisual\"\n    },\n    \"collection_name\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Name of the collection this item belongs to\"\n    },\n    \"call_number\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n\
  \      \"description\": \"Library call number or classification\"\n    },\n    \"physical_description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Physical description of the item\"\n    },\n    \"notes\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"General notes about the resource\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid material type: Use book, journal, manuscript, electronic_resource, or audiovisual\",\n    \"Invalid language code: Provide a valid three-letter ISO 639-2 language code\",\n    \"Invalid ISBN format: ISBN must be in valid 10 or 13 digit format\",\n    \"Empty title: Title field is required and cannot be empty\",\n    \"Invalid publication year: Year must be a four-digit integer between 1000 and current year + 1\"\n  ],\n  \"usage\": \"Provide title and material_type as required fields. Add bibliographic details like author, publication_year, publisher, and subject_headings for comprehensive cataloging. Include collection_name and call_number for integration with existing catalog systems.\",\n  \"output_details\": {\n    \"marc_xml\": {\n      \"type\": \"string\",\n      \"description\": \"Complete MARC21 record in MARCXML format\"\n    },\n    \"marc_binary\": {\n      \"type\": \"string\",\n      \"description\": \"MARC record in ISO 2709 binary format (base64 encoded)\"\n    },\n    \"control_number\": {\n      \"type\": \"string\",\n      \"description\": \"MARC control number assigned to the record\"\n    },\n    \"leader\": {\n      \"type\": \"string\",\n      \"description\": \"MARC leader field indicating record characteristics\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"MODS Metadata Builder\",\n  \"tool_description\": \"Constructs detailed MODS (Metadata Object Description Schema) records with hierarchical descriptive elements for complex digital objects.\",\n  \"parameters\": {\n    \"title_info\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Primary title information for the resource\"\n    },\n    \"name_entries\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Personal or corporate names associated with the resource\"\n    },\n    \"type_of_resource\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Resource type: text, cartographic, notated_music, sound_recording, moving_image, still_image, software_multimedia, mixed_material\"\n    },\n    \"genre\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Genre or form of the material\"\n    },\n    \"origin_info\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Publication, creation, or issuance information\"\n    },\n    \"physical_description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Physical characteristics of the resource\"\n    },\n    \"abstract\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Summary or abstract of the content\"\n    },\n    \"table_of_contents\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Table of contents or structured description\"\n    },\n    \"note_fields\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Various notes about the resource\"\n    },\n    \"subject_terms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Subject headings and topic terms\"\n    },\n    \"classification\"\
  : {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Classification number or code\"\n    },\n    \"related_items\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"References to related resources\"\n    },\n    \"access_condition\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Access rights and restrictions\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid resource type: Use text, cartographic, notated_music, sound_recording, moving_image, still_image, software_multimedia, or mixed_material\",\n    \"Empty title: title_info is required and cannot be empty\",\n    \"Invalid name format: Names should follow standard cataloging conventions\",\n    \"Missing required elements: MODS records must include title_info and type_of_resource\",\n    \"Invalid classification format: Classification should follow standard numbering systems\"\n  ],\n  \"usage\": \"Provide title_info and type_of_resource as minimum requirements. Add descriptive elements like name_entries, genre, origin_info, and subject_terms for comprehensive description. Include access_condition and related_items for complete resource relationships.\",\n  \"output_details\": {\n    \"mods_xml\": {\n      \"type\": \"string\",\n      \"description\": \"Complete MODS record in XML format\"\n    },\n    \"record_identifier\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the MODS record\"\n    },\n    \"creation_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"ISO 8601 timestamp of record creation\"\n    },\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"MODS schema validation result\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Subject Heading Mapper\",\n  \"tool_description\": \"Maps subject terms to controlled vocabularies including Library of Congress Subject Headings, Getty AAT, and custom thesauri.\",\n  \"parameters\": {\n    \"input_terms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Subject terms to map to controlled vocabularies\"\n    },\n    \"vocabulary_source\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target vocabulary: lcsh, getty_aat, mesh, local_thesaurus\"\n    },\n    \"match_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.8,\n      \"description\": \"Minimum similarity score for automatic matching (0.5-1.0)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid vocabulary source: Use lcsh, getty_aat, mesh, or local_thesaurus\",\n    \"Empty input terms: Provide at least one subject term to map\",\n    \"Invalid match threshold: Threshold must be between 0.5 and 1.0\",\n    \"Vocabulary service unavailable: Unable to connect to controlled vocabulary service\"\n  ],\n  \"usage\": \"Provide input_terms and vocabulary_source. Adjust match_threshold to control mapping sensitivity. Returns both exact and suggested matches with confidence scores.\",\n  \"output_details\": {\n    \"mapped_terms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Successfully mapped controlled vocabulary terms\"\n    },\n    \"suggested_terms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Suggested matches requiring manual review\"\n    },\n    \"unmapped_terms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Terms with no suitable matches found\"\n    },\n    \"confidence_scores\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Confidence scores for mapped terms\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Authority Control Checker\",\n  \"tool_description\": \"Validates\
  \ and standardizes name authorities against established authority files like VIAF, LCNAF, and local authority databases.\",\n  \"parameters\": {\n    \"names\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Personal, corporate, or geographic names to verify\"\n    },\n    \"authority_source\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Authority file to check: viaf, lcnaf, local\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid authority source: Use viaf, lcnaf, or local\",\n    \"Empty names list: Provide at least one name to verify\",\n    \"Authority service timeout: Unable to connect to authority service\",\n    \"Invalid name format: Names must be non-empty strings\"\n  ],\n  \"usage\": \"Provide names array and authority_source. The tool returns verified forms, authority identifiers, and suggested corrections for unverified names.\",\n  \"output_details\": {\n    \"verified_names\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Names found in authority files with standardized forms\"\n    },\n    \"authority_ids\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Authority control numbers for verified names\"\n    },\n    \"suggested_forms\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Suggested standardized forms for unverified names\"\n    },\n    \"unverified_names\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Names not found in authority files\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Metadata Quality Analyzer\",\n  \"tool_description\": \"Evaluates metadata record quality by checking completeness, consistency, accuracy, and adherence to best practices.\",\n  \"parameters\": {\n    \"metadata_records\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Metadata records to analyze (XML, JSON, or record identifiers)\"\n    },\n    \"quality_criteria\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"completeness\", \"consistency\", \"accuracy\"],\n      \"description\": \"Quality dimensions to evaluate\"\n    },\n    \"required_fields\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Fields that must be present for completeness check\"\n    },\n    \"minimum_score\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.7,\n      \"description\": \"Minimum quality score threshold (0.0-1.0)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid quality criteria: Use completeness, consistency, accuracy, or standardization\",\n    \"Empty metadata records: Provide at least one record to analyze\",\n    \"Invalid minimum score: Score must be between 0.0 and 1.0\",\n    \"Malformed metadata: Unable to parse metadata record format\"\n  ],\n  \"usage\": \"Provide metadata_records for analysis. Specify quality_criteria and required_fields to customize evaluation. Set minimum_score threshold for quality assessment.\",\n  \"output_details\": {\n    \"overall_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall quality score from 0.0 to 1.0\"\n    },\n    \"quality_issues\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Identified quality problems and recommendations\"\n    },\n    \"completeness_score\": {\n      \"type\": \"number\",\n      \"description\": \"Completeness score based on required fields\"\n    },\n    \"records_above_threshold\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of records meeting minimum quality score\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Batch Metadata Processor\"\
  ,\n  \"tool_description\": \"Processes multiple metadata records simultaneously with transformation, enhancement, and bulk operations capabilities.\",\n  \"parameters\": {\n    \"input_records\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of metadata records or file paths to process\"\n    },\n    \"operation_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Batch operation: enhance, transform, validate, deduplicate\"\n    },\n    \"target_schema\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Target metadata schema for transformation operations\"\n    },\n    \"enhancement_fields\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Fields to enhance with additional metadata\"\n    },\n    \"batch_size\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 100,\n      \"description\": \"Number of records to process in each batch\"\n    },\n    \"preserve_originals\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to preserve original records during processing\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid operation type: Use enhance, transform, validate, or deduplicate\",\n    \"Empty input records: Provide at least one record to process\",\n    \"Invalid batch size: Batch size must be between 1 and 1000\",\n    \"Missing target schema: Transform operations require target_schema parameter\",\n    \"Processing failed: Unable to complete batch operation\"\n  ],\n  \"usage\": \"Provide input_records and operation_type. For transform operations, specify target_schema. Use enhancement_fields for selective enhancement. Adjust batch_size for performance optimization.\",\n  \"output_details\": {\n    \"processed_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of records successfully processed\"\n    },\n    \"failed_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of records that failed processing\"\n    },\n    \"processing_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of batch processing results\"\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"description\": \"Format of processed records\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Schema Crosswalk Generator\",\n  \"tool_description\": \"Creates mapping relationships between different metadata schemas to enable record conversion and interoperability.\",\n  \"parameters\": {\n    \"source_schema\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Source metadata schema: dublin_core, marc21, mods, ead, custom\"\n    },\n    \"target_schema\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target metadata schema: dublin_core, marc21, mods, ead, custom\"\n    },\n    \"mapping_rules\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Custom field mapping rules in format 'source_field:target_field'\"\n    },\n    \"mapping_precision\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"balanced\",\n      \"description\": \"Mapping approach: exact, balanced, or comprehensive\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid schema names: Use dublin_core, marc21, mods, ead, or custom\",\n    \"Identical schemas: Source and target schemas must be different\",\n    \"Invalid mapping rules: Rules must follow 'source_field:target_field' format\",\n    \"Invalid mapping precision: Use exact, balanced, or comprehensive\",\n    \"Unsupported conversion: No crosswalk available for specified schema pair\"\n  ],\n  \"usage\": \"Specify source_schema and target_schema for automatic\
  \ crosswalk generation. Provide custom mapping_rules for specialized conversions. Set mapping_precision to control conversion detail level.\",\n  \"output_details\": {\n    \"crosswalk_rules\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Generated field mapping rules\"\n    },\n    \"mapping_coverage\": {\n      \"type\": \"number\",\n      \"description\": \"Percentage of source fields that can be mapped\"\n    },\n    \"conversion_notes\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Notes about mapping limitations and recommendations\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Collection Hierarchy Builder\",\n  \"tool_description\": \"Constructs hierarchical relationships between collection items, creating structured organization with parent-child relationships and series information.\",\n  \"parameters\": {\n    \"collection_items\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of collection item identifiers to organize\"\n    },\n    \"hierarchy_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of hierarchy: archival, bibliographic, thematic, chronological\"\n    },\n    \"parent_collection\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": null,\n      \"description\": \"Identifier of parent collection or series\"\n    },\n    \"grouping_criteria\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"date\", \"subject\", \"format\"],\n      \"description\": \"Criteria for automatic grouping of items\"\n    },\n    \"max_depth\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 5,\n      \"description\": \"Maximum levels in the hierarchy (1-10)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid hierarchy type: Use archival, bibliographic, thematic, or chronological\",\n    \"Empty collection items: Provide at least one item to organize\",\n    \"Invalid max depth: Depth must be between 1 and 10\",\n    \"Invalid grouping criteria: Use recognized metadata fields for grouping\",\n    \"Circular reference: Items cannot be parents of themselves\"\n  ],\n  \"usage\": \"Provide collection_items and hierarchy_type. Specify parent_collection for sub-collections. Use grouping_criteria to define automatic organization rules. Set max_depth to control hierarchy complexity.\",\n  \"output_details\": {\n    \"hierarchy_structure\": {\n      \"type\": \"string\",\n      \"description\": \"JSON representation of the hierarchical structure\"\n    },\n    \"total_levels\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of levels in the created hierarchy\"\n    },\n    \"grouped_items\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of items successfully organized\"\n    },\n    \"ungrouped_items\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Items that could not be organized hierarchically\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Rights Statement Assigner\",\n  \"tool_description\": \"Assigns appropriate rights statements and usage permissions to digital collection items based on copyright status, licensing, and institutional policies.\",\n  \"parameters\": {\n    \"item_identifiers\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Identifiers of items requiring rights assignment\"\n    },\n    \"copyright_status\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Copyright status: public_domain, copyrighted, unknown, un"
