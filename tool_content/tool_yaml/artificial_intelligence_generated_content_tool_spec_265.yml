field_name: artificial_intelligence_generated_content
subfield: Text Generation and Writing
task: Grammar checking and language correction for written text
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task has medium difficulty. While individual grammar rules are well-defined, the scope includes multiple linguistic dimensions (syntax, semantics, style, context), requires handling ambiguous cases where multiple corrections are valid, and demands coordination between different types of corrections to avoid conflicts.\n\n**STEP 2 — Set a tool budget**\n\nGiven the medium complexity, I'll target 12 tools to cover the various aspects of grammar checking and language correction while maintaining focused, composable functionality.\n\n**STEP 3 — List all tool names with dependencies and affordances**\n\n1. Text Tokenizer - Consumes: raw text → Produces: tokenized text units\n2. Grammar Rule Checker - Consumes: tokenized text → Produces: grammar violations\n3. Spell Checker - Consumes: text → Produces: spelling corrections\n4. Punctuation Validator - Consumes: text → Produces: punctuation errors\n5. Style Analyzer - Consumes: text → Produces: style suggestions  \n6. Sentence Structure Analyzer - Consumes: tokenized text → Produces: structural issues\n7. Vocabulary Enhancer - Consumes: text → Produces: vocabulary improvements\n8. Readability Scorer - Consumes: text → Produces: readability metrics\n9. Correction Merger - Consumes: multiple correction sets → Produces: unified corrections\n10. Context Validator - Consumes: text + corrections → Produces: contextual appropriateness\n11. Language Detector - Consumes: text → Produces: detected language\n12. Correction Applier - Consumes: text + corrections → Produces: corrected text\n\n**STEP 4 — Multi-tool plans**\n\nSimple plans:\n- Basic spell check: Language Detector → Spell Checker → Correction Applier\n- Quick grammar fix: Text Tokenizer → Grammar Rule Checker → Correction Applier\n\nMedium plans:\n- Standard proofreading: Language Detector → Text Tokenizer → Grammar Rule Checker → Spell Checker → Punctuation Validator → Correction Merger → Correction Applier\n- Style enhancement: Text Tokenizer → Style Analyzer → Vocabulary Enhancer → Readability Scorer → Correction Merger → Correction Applier\n\nComplex plans:\n- Comprehensive editing: Language Detector → Text Tokenizer → Grammar Rule Checker → Spell Checker → Punctuation Validator → Sentence Structure Analyzer → Style Analyzer → Vocabulary Enhancer → Context Validator → Correction Merger → Correction Applier → Readability Scorer\n- Professional writing review: All tools in sequence with Context Validator checking each correction type before final merge\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Text Tokenizer\",\n  \"tool_description\": \"Breaks down input text into linguistic units (words, sentences, paragraphs) for analysis by other grammar checking tools.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"The input text to be tokenized\"\n    },\n    \"tokenization_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Level of tokenization: word, sentence, or paragraph\",\n      \"default\": \"word\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty text input: Provide non-empty text string for tokenization.\",\n    \"Invalid tokenization level: Use one of [word, sentence, paragraph].\",\n    \"Text too long: Input text must be under 50,000 characters.\"\n  ],\n  \"usage\": \"Provide the text to tokenize and optionally specify the tokenization level. Returns structured tokens with position information.\",\n  \"output_details\": {\n    \"tokens\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of text tokens based on specified level\"\n    },\n    \"token_positions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"Character positions where each token starts in original text\"\n    },\n    \"total_tokens\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of tokens identified\"\
  \n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Grammar Rule Checker\",\n  \"tool_description\": \"Identifies grammatical errors in text using comprehensive rule-based analysis including subject-verb agreement, tense consistency, and syntactic structures.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"The text to check for grammar errors\"\n    },\n    \"language\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target language for grammar checking (e.g., en-US, en-GB, es, fr)\"\n    },\n    \"rule_categories\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Specific grammar rule categories to check\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": [\"all\"]\n    },\n    \"strictness_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Checking strictness: lenient, standard, or strict\",\n      \"default\": \"standard\"\n    },\n    \"ignore_proper_nouns\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to ignore grammar checks on proper nouns\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Unsupported language: Provide a supported language code (en-US, en-GB, es, fr, de, it).\",\n    \"Invalid rule category: Use categories like [syntax, agreement, tense, punctuation, style] or [all].\",\n    \"Invalid strictness level: Use one of [lenient, standard, strict].\",\n    \"Text too long: Input text must be under 10,000 characters for grammar analysis.\"\n  ],\n  \"usage\": \"Provide text and language, optionally specify rule categories and strictness. Returns detailed grammar violations with suggested corrections.\",\n  \"output_details\": {\n    \"violations\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of grammar violation descriptions\"\n    },\n    \"violation_positions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"Character positions where violations occur\"\n    },\n    \"suggested_corrections\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Suggested corrections for each violation\"\n    },\n    \"confidence_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Confidence scores for each suggested correction (0-1)\"\n    },\n    \"total_violations\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of grammar violations found\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Spell Checker\",\n  \"tool_description\": \"Detects and suggests corrections for misspelled words using dictionary lookup and phonetic similarity algorithms.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"The text to check for spelling errors\"\n    },\n    \"language\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Language for spell checking (e.g., en-US, en-GB)\"\n    },\n    \"custom_dictionary\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Additional valid words to include\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    }\n  },\n  \"error_messages\": [\n    \"Unsupported language: Provide a supported language code.\",\n    \"Invalid custom dictionary: Custom words must be non-empty strings.\",\n    \"Text too long: Input must be under 20,000 characters.\"\n  ],\n  \"usage\": \"Provide text and language, optionally add custom dictionary words. Returns misspelled words with correction suggestions.\",\n  \"output_details\": {\n    \"misspelled_words\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n    \
  \  },\n      \"description\": \"Array of misspelled words found\"\n    },\n    \"word_positions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"Character positions of misspelled words\"\n    },\n    \"correction_suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Top correction suggestions for each misspelled word\"\n    },\n    \"total_errors\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of spelling errors found\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Punctuation Validator\",\n  \"tool_description\": \"Analyzes punctuation usage including comma placement, quotation marks, apostrophes, and end punctuation according to style guide rules.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Text to validate for punctuation errors\"\n    },\n    \"style_guide\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Punctuation style guide: AP, Chicago, MLA, or APA\",\n      \"default\": \"Chicago\"\n    },\n    \"check_spacing\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check spacing around punctuation marks\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Unsupported style guide: Use one of [AP, Chicago, MLA, APA].\",\n    \"Empty text: Provide text content for punctuation validation.\",\n    \"Text too long: Maximum 15,000 characters allowed.\"\n  ],\n  \"usage\": \"Provide text and optionally specify style guide and spacing preferences. Returns punctuation errors with corrections.\",\n  \"output_details\": {\n    \"punctuation_errors\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Description of punctuation errors found\"\n    },\n    \"error_positions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"Character positions of punctuation errors\"\n    },\n    \"corrections\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Suggested punctuation corrections\"\n    },\n    \"error_types\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Types of punctuation errors (comma, apostrophe, quotation, etc.)\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Style Analyzer\",\n  \"tool_description\": \"Evaluates writing style including tone, voice consistency, word choice, sentence variety, and provides enhancement suggestions for better flow and clarity.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Text to analyze for style improvements\"\n    },\n    \"target_audience\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Intended audience: academic, professional, casual, or creative\",\n      \"default\": \"professional\"\n    },\n    \"writing_purpose\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Writing purpose: informative, persuasive, narrative, or descriptive\",\n      \"default\": \"informative\"\n    },\n    \"formality_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Desired formality: formal, semi-formal, or informal\",\n      \"default\": \"semi-formal\"\n    },\n    \"check_passive_voice\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to flag excessive passive voice usage\",\n      \"default\": true\n    },\n    \"analyze_sentence_variety\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check for sentence length and structure variety\",\n      \"default\": true\n    }\n  },\n  \"error_messages\"\
  : [\n    \"Invalid target audience: Use one of [academic, professional, casual, creative].\",\n    \"Invalid writing purpose: Use one of [informative, persuasive, narrative, descriptive].\",\n    \"Invalid formality level: Use one of [formal, semi-formal, informal].\",\n    \"Text too short: Provide at least 50 characters for meaningful style analysis.\",\n    \"Text too long: Maximum 25,000 characters allowed for style analysis.\"\n  ],\n  \"usage\": \"Provide text with optional audience, purpose, and formality specifications. Returns style assessment with improvement suggestions.\",\n  \"output_details\": {\n    \"overall_style_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall style quality score from 0-10\"\n    },\n    \"tone_consistency\": {\n      \"type\": \"string\",\n      \"description\": \"Assessment of tone consistency throughout text\"\n    },\n    \"style_suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Specific style improvement suggestions\"\n    },\n    \"passive_voice_instances\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of passive voice constructions found\"\n    },\n    \"sentence_variety_score\": {\n      \"type\": \"number\",\n      \"description\": \"Score for sentence structure variety (0-10)\"\n    },\n    \"word_choice_flags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Words or phrases flagged for improvement\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Sentence Structure Analyzer\",\n  \"tool_description\": \"Examines sentence construction for clarity, complexity, fragment detection, run-on sentences, and structural coherence issues.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Text containing sentences to analyze\"\n    },\n    \"complexity_tolerance\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Acceptable sentence complexity: simple, moderate, or complex\",\n      \"default\": \"moderate\"\n    },\n    \"detect_fragments\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to identify sentence fragments\",\n      \"default\": true\n    },\n    \"detect_run_ons\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to identify run-on sentences\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid complexity tolerance: Use one of [simple, moderate, complex].\",\n    \"Empty text: Provide text with sentences for structural analysis.\",\n    \"Text too long: Maximum 20,000 characters for sentence analysis.\"\n  ],\n  \"usage\": \"Provide text and optionally set complexity tolerance and detection preferences. Returns structural issues with improvement suggestions.\",\n  \"output_details\": {\n    \"sentence_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of sentences analyzed\"\n    },\n    \"fragments_found\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Sentence fragments identified\"\n    },\n    \"run_on_sentences\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Run-on sentences identified\"\n    },\n    \"complexity_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Complexity scores for each sentence (1-10)\"\n    },\n    \"structural_suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Suggestions for improving sentence structure\"\n    },\n    \"average_sentence_length\": {\n      \"type\": \"number\",\n      \"description\": \"Average sentence length in words\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Vocabulary Enhancer\"\
  ,\n  \"tool_description\": \"Suggests vocabulary improvements including word choice alternatives, elimination of redundancy, and enhancement of precision and variety in word usage.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Text to enhance with improved vocabulary\"\n    },\n    \"vocabulary_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Target vocabulary complexity: basic, intermediate, or advanced\",\n      \"default\": \"intermediate\"\n    },\n    \"preserve_tone\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to maintain original tone while enhancing\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid vocabulary level: Use one of [basic, intermediate, advanced].\",\n    \"Text too short: Provide at least 20 words for vocabulary enhancement.\",\n    \"Text too long: Maximum 15,000 characters for vocabulary analysis.\"\n  ],\n  \"usage\": \"Provide text with optional vocabulary level and tone preservation settings. Returns vocabulary improvement suggestions.\",\n  \"output_details\": {\n    \"enhancement_suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Specific vocabulary enhancement recommendations\"\n    },\n    \"word_alternatives\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Alternative word choices for improvement\"\n    },\n    \"redundancy_flags\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Words or phrases flagged as redundant\"\n    },\n    \"vocabulary_diversity_score\": {\n      \"type\": \"number\",\n      \"description\": \"Score for vocabulary diversity (0-10)\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Readability Scorer\",\n  \"tool_description\": \"Calculates readability metrics using multiple algorithms and provides recommendations for improving text accessibility and comprehension.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Text to evaluate for readability\"\n    },\n    \"target_grade_level\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Target reading grade level (1-16)\",\n      \"default\": 12\n    }\n  },\n  \"error_messages\": [\n    \"Invalid grade level: Target grade level must be between 1 and 16.\",\n    \"Text too short: Minimum 100 characters required for reliable readability scoring.\",\n    \"Text too long: Maximum 30,000 characters allowed.\"\n  ],\n  \"usage\": \"Provide text and optionally specify target grade level. Returns comprehensive readability metrics and improvement suggestions.\",\n  \"output_details\": {\n    \"flesch_kincaid_score\": {\n      \"type\": \"number\",\n      \"description\": \"Flesch-Kincaid readability score\"\n    },\n    \"grade_level\": {\n      \"type\": \"number\",\n      \"description\": \"Estimated grade level required to understand text\"\n    },\n    \"reading_time_minutes\": {\n      \"type\": \"number\",\n      \"description\": \"Estimated reading time in minutes\"\n    },\n    \"readability_assessment\": {\n      \"type\": \"string\",\n      \"description\": \"Overall readability assessment (excellent, good, fair, difficult)\"\n    },\n    \"improvement_suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Specific suggestions to improve readability\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Correction Merger\",\n  \"tool_description\": \"Combines multiple correction suggestions from different tools, resolves conflicts, prioritizes changes, and creates a unified set of corrections for application.\",\n  \"parameters\": {\n    \"original_text\": {\n      \"type\": \"string\",\n      \"required\": true,\n\
  \      \"description\": \"The original text being corrected\"\n    },\n    \"grammar_corrections\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Grammar corrections with positions\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    },\n    \"spelling_corrections\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Spelling corrections with positions\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    },\n    \"punctuation_corrections\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Punctuation corrections with positions\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    },\n    \"style_corrections\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Style-related corrections\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    },\n    \"vocabulary_corrections\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Vocabulary enhancement suggestions\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    },\n    \"structure_corrections\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Sentence structure corrections\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": []\n    },\n    \"priority_order\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Priority order for correction types\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": [\"grammar\", \"spelling\", \"punctuation\", \"structure\", \"style\", \"vocabulary\"]\n    },\n    \"conflict_resolution\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"How to handle conflicts: priority_based, conservative, or aggressive\",\n      \"default\": \"priority_based\"\n    },\n    \"max_corrections\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum number of corrections to include (1-100)\",\n      \"default\": 50\n    }\n  },\n  \"error_messages\": [\n    \"Empty original text: Provide the original text for correction merging.\",\n    \"Invalid priority order: Include valid correction types [grammar, spelling, punctuation, structure, style, vocabulary].\",\n    \"Invalid conflict resolution: Use one of [priority_based, conservative, aggressive].\",\n    \"Invalid max corrections: Value must be between 1 and 100.\",\n    \"Malformed correction data: Corrections must be properly formatted strings.\"\n  ],\n  \"usage\": \"Provide original text and correction arrays from various tools, optionally set priority order and conflict resolution strategy. Returns unified, prioritized corrections.\",\n  \"output_details\": {\n    \"merged_corrections\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Final merged corrections in priority order\"\n    },\n    \"correction_positions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"Character positions for each merged correction\"\n    },\n    \"correction_types\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Type category for each correction\"\n    },\n    \"conflicts_resolved\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of correction conflicts resolved\"\n    },\n    \"total_corrections\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of corrections in merged set\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Context Validator\",\n  \"tool_description\": \"Evaluates whether proposed corrections maintain contextual appropriateness, meaning consistency, and natural language flow within the broader text context.\"\
  ,\n  \"parameters\": {\n    \"original_text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Original text before corrections\"\n    },\n    \"proposed_corrections\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Corrections to validate for contextual appropriateness\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"correction_positions\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Character positions of proposed corrections\",\n      \"items\": {\n        \"type\": \"integer\"\n      }\n    },\n    \"context_window\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of words to consider around each correction for context (5-50)\",\n      \"default\": 10\n    }\n  },\n  \"error_messages\": [\n    \"Mismatched arrays: proposed_corrections and correction_positions must have the same length.\",\n    \"Invalid context window: Must be between 5 and 50 words.\",\n    \"Empty correction data: Provide at least one correction for validation.\",\n    \"Text too long: Maximum 25,000 characters for context validation.\"\n  ],\n  \"usage\": \"Provide original text, proposed corrections, and their positions, optionally set context window size. Returns validation results for each correction.\",\n  \"output_details\": {\n    \"validated_corrections\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Corrections that passed contextual validation\"\n    },\n    \"validation_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Contextual appropriateness scores (0-1) for each correction\"\n    },\n    \"rejected_corrections\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Corrections rejected due to contextual issues\"\n    },\n    \"context_warnings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Warnings about potential contextual problems\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Language Detector\",\n  \"tool_description\": \"Automatically detects the primary language of input text and identifies mixed-language content for appropriate processing by other language-specific tools.\",\n  \"parameters\": {\n    \"text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Text to analyze for language detection\"\n    },\n    \"confidence_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum confidence level for language detection (0.1-1.0)\",\n      \"default\": 0.8\n    }\n  },\n  \"error_messages\": [\n    \"Empty text: Provide text content for language detection.\",\n    \"Invalid confidence threshold: Must be between 0.1 and 1.0.\",\n    \"Text too short: Minimum 10 characters required for reliable language detection.\"\n  ],\n  \"usage\": \"Provide text and optionally set confidence threshold. Returns detected language with confidence scores and mixed-language analysis.\",\n  \"output_details\": {\n    \"primary_language\": {\n      \"type\": \"string\",\n      \"description\": \"Primary language code detected (e.g., en-US, es, fr)\"\n    },\n    \"confidence_score\": {\n      \"type\": \"number\",\n      \"description\": \"Confidence score for primary language detection (0-1)\"\n    },\n    \"secondary_languages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Additional languages detected in mixed content\"\n    },\n    \"is_mixed_language\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether text contains multiple languages\"\n    },\n    \"supported_for_correction\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether detected language is supported by correction tools\"\n    }\n \
  \ }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Correction Applier\",\n  \"tool_description\": \"Applies validated corrections to original text, handles text reconstruction, maintains formatting, and produces the final corrected version.\",\n  \"parameters\": {\n    \"original_text\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Original text to apply corrections to\"\n    },\n    \"corrections\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Validated corrections to apply\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"correction_positions\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Character positions for each correction\",\n      \"items\": {\n        \"type\": \"integer\"\n      }\n    },\n    \"preserve_formatting\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to maintain original text formatting\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Mismatched correction data: corrections and correction_positions must have equal length.\",\n    \"Invalid position data: Correction positions must be within text boundaries.\",\n    \"Overlapping corrections: Multiple corrections cannot target the same text position.\",\n    \"Empty input: Provide original text and at least one correction.\"\n  ],\n  \"usage\": \"Provide original text, corrections, and positions, optionally preserve formatting. Returns corrected text with change summary.\",\n  \"output_details\": {\n    \"corrected_text\": {\n      \"type\": \"string\",\n      \"description\": \"Final text with all corrections applied\"\n    },\n    \"corrections_applied\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of corrections successfully applied\"\n    },\n    \"changes_summary\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Summary of changes made to original text\"\n    },\n    \"character_count_change\": {\n      \"type\": \"integer\",\n      \"description\": \"Net change in character count after corrections\"\n    }\n  }\n}\n```"
