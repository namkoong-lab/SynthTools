field_name: security_and_iam_identity_and_access_management
subfield: Role-Based Access Control (RBAC) Management
task: Assign and revoke roles from users across multiple systems and applications
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task is **hard** due to its broad scope across multiple heterogeneous systems, high coordination requirements between different access control mechanisms, significant risk of security breaches from incorrect permissions, and complex dependencies involving user hierarchies, role inheritance, and cross-system synchronization.\n\n## STEP 2 — Set a tool budget\n\nGiven the hard difficulty rating, I'll target **18 tools** within the 15-20 range to handle the complexity of multi-system RBAC management, audit trails, policy enforcement, and security validation.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tool Names with Dependencies:**\n1. **User Validator** - Consumes: user identifiers → Produces: validated user existence\n2. **Role Definition Parser** - Consumes: role specifications → Produces: structured role data  \n3. **System Connector** - Consumes: system credentials → Produces: authenticated connections\n4. **Permission Mapper** - Consumes: roles, systems → Produces: permission mappings\n5. **Role Assignment Engine** - Consumes: users, roles, systems → Produces: assignment results\n6. **Role Revocation Engine** - Consumes: users, roles, systems → Produces: revocation results\n7. **Access Policy Validator** - Consumes: role assignments, policies → Produces: compliance status\n8. **Conflict Detector** - Consumes: role combinations → Produces: conflict reports\n9. **Audit Trail Logger** - Consumes: all operations → Produces: audit records\n10. **Permission Tester** - Consumes: user, system, resource → Produces: access test results\n11. **Role Hierarchy Manager** - Consumes: role relationships → Produces: hierarchy structure\n12. **Batch Assignment Processor** - Consumes: bulk operations → Produces: batch results\n13. **System Sync Validator** - Consumes: cross-system states → Produces: sync status\n14. **Compliance Checker** - Consumes: assignments, regulations → Produces: compliance reports\n15. **Role Impact Analyzer** - Consumes: proposed changes → Produces: impact assessments\n16. **Emergency Access Manager** - Consumes: emergency requests → Produces: temporary access\n17. **Session Monitor** - Consumes: active sessions → Produces: session status\n18. **Rollback Manager** - Consumes: operation history → Produces: rollback execution\n\n## STEP 4 — Multi-tool plans\n\n**Simple Plans:**\n- **Basic Role Assignment**: User Validator → Role Definition Parser → Role Assignment Engine → Audit Trail Logger\n- **Permission Verification**: User Validator → System Connector → Permission Tester → Audit Trail Logger\n\n**Medium Plans:**\n- **Secure Role Management**: User Validator → Role Definition Parser → Conflict Detector → Access Policy Validator → Role Assignment Engine → Audit Trail Logger\n- **Cross-System Sync**: System Connector → Permission Mapper → System Sync Validator → Batch Assignment Processor → Audit Trail Logger\n\n**Complex Plans:**\n- **Enterprise Role Deployment**: User Validator → Role Definition Parser → Role Hierarchy Manager → Permission Mapper → Conflict Detector → Access Policy Validator → Role Impact Analyzer → Role Assignment Engine → System Sync Validator → Compliance Checker → Audit Trail Logger\n- **Emergency Response Workflow**: User Validator → Emergency Access Manager → Role Assignment Engine → Session Monitor → Audit Trail Logger → Rollback Manager\n\n## STEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"User Validator\",\n  \"tool_description\": \"Validates user existence and status across specified systems before role operations.\",\n  \"parameters\": {\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"User ID, email, or username to validate\"\n    },\n    \"system_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target system name for validation\"\n    },\n    \"validation_type\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Type of validation: existence, active, suspended, locked\"\
  ,\n      \"default\": \"existence\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid user identifier: Provide a non-empty user identifier string.\",\n    \"System not accessible: The specified system cannot be reached or authenticated.\",\n    \"Invalid validation type: Use one of [existence, active, suspended, locked].\",\n    \"User lookup failed: User identifier not found in the specified system.\"\n  ],\n  \"usage\": \"Provide user_identifier and system_name to validate user existence. Optionally specify validation_type for detailed status checks.\",\n  \"output_details\": {\n    \"user_exists\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether the user exists in the system\"\n    },\n    \"user_status\": {\n      \"type\": \"string\",\n      \"description\": \"Current status of the user account\"\n    },\n    \"last_login\": {\n      \"type\": \"string\",\n      \"description\": \"Last login timestamp if available\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Role Definition Parser\",\n  \"tool_description\": \"Parses and validates role definitions with their associated permissions and constraints.\",\n  \"parameters\": {\n    \"role_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the role to parse\"\n    },\n    \"role_description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Description of the role's purpose\",\n      \"default\": null\n    },\n    \"permissions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of permissions associated with the role\",\n      \"minItems\": 1,\n      \"maxItems\": 100\n    },\n    \"constraints\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Access constraints or conditions\",\n      \"default\": null\n    },\n    \"expiration_hours\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Role expiration in hours (0 means no expiration)\",\n      \"default\": 0\n    }\n  },\n  \"error_messages\": [\n    \"Invalid role name: Role name must be a non-empty string without special characters.\",\n    \"Empty permissions list: At least one permission must be specified.\",\n    \"Invalid permission format: Permissions must follow the format 'resource:action'.\",\n    \"Invalid expiration: Expiration hours must be a non-negative integer.\",\n    \"Constraint parsing error: Constraints must be valid conditional expressions.\"\n  ],\n  \"usage\": \"Provide role_name and permissions array. Optionally add role_description, constraints, and expiration_hours for complete role definition.\",\n  \"output_details\": {\n    \"role_id\": {\n      \"type\": \"string\",\n      \"description\": \"Generated unique identifier for the role\"\n    },\n    \"parsed_permissions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Validated and formatted permissions\"\n    },\n    \"role_level\": {\n      \"type\": \"string\",\n      \"description\": \"Calculated access level of the role\"\n    },\n    \"is_privileged\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether the role has elevated privileges\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"System Connector\",\n  \"tool_description\": \"Establishes authenticated connections to target systems for role management operations.\",\n  \"parameters\": {\n    \"system_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the target system to connect to\"\n    },\n    \"connection_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Connection protocol: ldap, api, database, saml\"\n    },\n    \"endpoint_url\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"System endpoint URL or connection string\"\n    },\n    \"credentials_id\": {\n      \"type\": \"\
  string\",\n      \"required\": true,\n      \"description\": \"Reference to stored credentials for authentication\"\n    },\n    \"timeout_seconds\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Connection timeout in seconds (10-300)\",\n      \"default\": 30\n    },\n    \"verify_ssl\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to verify SSL certificates\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Connection failed: Unable to establish connection to the specified endpoint.\",\n    \"Authentication error: Invalid credentials or insufficient permissions.\",\n    \"Invalid connection type: Use one of [ldap, api, database, saml].\",\n    \"Timeout error: Connection attempt exceeded the specified timeout period.\",\n    \"SSL verification failed: Certificate verification failed, check verify_ssl setting.\",\n    \"Invalid timeout: Timeout must be between 10 and 300 seconds.\"\n  ],\n  \"usage\": \"Provide system_name, connection_type, endpoint_url, and credentials_id. Optionally adjust timeout_seconds and verify_ssl settings for security requirements.\",\n  \"output_details\": {\n    \"connection_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the established connection\"\n    },\n    \"connection_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of the connection attempt\"\n    },\n    \"system_version\": {\n      \"type\": \"string\",\n      \"description\": \"Version of the connected system if available\"\n    },\n    \"capabilities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Available operations supported by the system\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Permission Mapper\",\n  \"tool_description\": \"Maps role permissions to specific system resources and actions with translation for different system formats.\",\n  \"parameters\": {\n    \"role_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Role identifier to map permissions for\"\n    },\n    \"target_system\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target system for permission mapping\"\n    },\n    \"permission_format\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target permission format: standard, aws_iam, azure_rbac, ldap_groups\"\n    },\n    \"resource_scope\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Specific resources to scope the mapping to\",\n      \"default\": null\n    },\n    \"include_inherited\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include permissions from parent roles\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid role ID: Role identifier not found or invalid format.\",\n    \"Unsupported system: Target system is not supported for permission mapping.\",\n    \"Invalid permission format: Use one of [standard, aws_iam, azure_rbac, ldap_groups].\",\n    \"Resource scope error: One or more specified resources are invalid.\",\n    \"Mapping failed: Unable to translate permissions to target format.\"\n  ],\n  \"usage\": \"Provide role_id, target_system, and permission_format. Optionally specify resource_scope for targeted mapping and set include_inherited as needed.\",\n  \"output_details\": {\n    \"mapped_permissions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Permissions formatted for the target system\"\n    },\n    \"resource_mappings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Resource-specific permission mappings\"\n    },\n    \"mapping_warnings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Warnings about potential mapping issues\"\
  \n    },\n    \"compatibility_score\": {\n      \"type\": \"number\",\n      \"description\": \"Compatibility score between source and target formats\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Role Assignment Engine\",\n  \"tool_description\": \"Assigns roles to users in target systems with validation and conflict resolution.\",\n  \"parameters\": {\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"User to assign the role to\"\n    },\n    \"role_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Role identifier to assign\"\n    },\n    \"system_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target system for role assignment\"\n    },\n    \"assignment_reason\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Justification for the role assignment\"\n    },\n    \"effective_date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": false,\n      \"description\": \"When the role assignment becomes effective\",\n      \"default\": null\n    },\n    \"expiration_date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": false,\n      \"description\": \"When the role assignment expires\",\n      \"default\": null\n    },\n    \"approval_required\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether assignment requires approval workflow\",\n      \"default\": false\n    },\n    \"force_assignment\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Override conflict warnings and assign anyway\",\n      \"default\": false\n    },\n    \"notify_user\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Send notification to user about role assignment\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"User not found: The specified user identifier does not exist in the target system.\",\n    \"Invalid role: Role ID is not valid or not available in the target system.\",\n    \"Assignment conflict: Role conflicts with existing user permissions unless force_assignment is true.\",\n    \"Permission denied: Insufficient privileges to assign this role.\",\n    \"Invalid date format: Dates must be in ISO 8601 format.\",\n    \"Date logic error: Effective date must be before expiration date.\",\n    \"System unavailable: Target system is not accessible for role assignment.\",\n    \"Approval pending: Assignment requires approval before completion.\"\n  ],\n  \"usage\": \"Provide user_identifier, role_id, system_name, and assignment_reason. Optionally set effective_date, expiration_date, and control flags for approval, force assignment, and notifications.\",\n  \"output_details\": {\n    \"assignment_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the role assignment\"\n    },\n    \"assignment_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of the assignment operation\"\n    },\n    \"effective_permissions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Actual permissions granted through this assignment\"\n    },\n    \"conflicts_resolved\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Any conflicts that were automatically resolved\"\n    },\n    \"approval_id\": {\n      \"type\": \"string\",\n      \"description\": \"Approval workflow ID if approval is required\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Role Revocation Engine\",\n  \"tool_description\": \"Revokes roles from users across systems with cleanup and validation of dependent permissions.\",\n  \"parameters\": {\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"User to revoke the role from\"\n    },\n    \"role_id\": {\n      \"type\": \"string\",\n\
  \      \"required\": true,\n      \"description\": \"Role identifier to revoke\"\n    },\n    \"system_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target system for role revocation\"\n    },\n    \"revocation_reason\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Justification for the role revocation\"\n    },\n    \"immediate_revocation\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Revoke immediately or at next scheduled time\",\n      \"default\": true\n    },\n    \"cleanup_dependent\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Remove dependent permissions and group memberships\",\n      \"default\": true\n    },\n    \"preserve_data_access\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Maintain read access to previously accessible data\",\n      \"default\": false\n    },\n    \"notify_user\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Send notification to user about role revocation\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"User not found: The specified user identifier does not exist in the target system.\",\n    \"Role not assigned: The specified role is not currently assigned to this user.\",\n    \"Revocation blocked: Role cannot be revoked due to system constraints or dependencies.\",\n    \"Permission denied: Insufficient privileges to revoke this role.\",\n    \"System unavailable: Target system is not accessible for role revocation.\",\n    \"Cleanup failed: Role revoked but dependent permission cleanup encountered errors.\"\n  ],\n  \"usage\": \"Provide user_identifier, role_id, system_name, and revocation_reason. Control timing with immediate_revocation and specify cleanup behavior with cleanup_dependent and preserve_data_access flags.\",\n  \"output_details\": {\n    \"revocation_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the role revocation\"\n    },\n    \"revocation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of the revocation operation\"\n    },\n    \"permissions_removed\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of permissions that were removed\"\n    },\n    \"cleanup_results\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Results of dependent permission cleanup\"\n    },\n    \"retained_access\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Access rights that were preserved if requested\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Access Policy Validator\",\n  \"tool_description\": \"Validates role assignments against organizational access policies and security requirements.\",\n  \"parameters\": {\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"User identifier to validate policies for\"\n    },\n    \"role_assignments\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of role IDs to validate\",\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"policy_set\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Policy set to validate against: corporate, regulatory, industry, custom\"\n    },\n    \"validation_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Validation strictness: permissive, standard, strict\",\n      \"default\": \"standard\"\n    },\n    \"include_warnings\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include policy warnings in addition to violations\",\n      \"default\": true\n    },\n    \"department\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\"\
  : \"User's department for department-specific policy checks\",\n      \"default\": null\n    },\n    \"employment_type\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Employment type: full_time, part_time, contractor, vendor\",\n      \"default\": \"full_time\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid user identifier: User identifier must be a non-empty string.\",\n    \"Empty role list: At least one role assignment must be provided for validation.\",\n    \"Invalid policy set: Use one of [corporate, regulatory, industry, custom].\",\n    \"Invalid validation level: Use one of [permissive, standard, strict].\",\n    \"Invalid employment type: Use one of [full_time, part_time, contractor, vendor].\",\n    \"Policy validation failed: Unable to complete validation due to policy engine error.\"\n  ],\n  \"usage\": \"Provide user_identifier, role_assignments array, and policy_set. Optionally specify validation_level, department, and employment_type for context-aware policy validation.\",\n  \"output_details\": {\n    \"validation_result\": {\n      \"type\": \"string\",\n      \"description\": \"Overall validation result: passed, failed, warning\"\n    },\n    \"policy_violations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of policy violations found\"\n    },\n    \"policy_warnings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of policy warnings if requested\"\n    },\n    \"compliance_score\": {\n      \"type\": \"number\",\n      \"description\": \"Compliance score from 0.0 to 1.0\"\n    },\n    \"recommended_actions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Recommended actions to address violations\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Conflict Detector\",\n  \"tool_description\": \"Detects and analyzes conflicts between role assignments including segregation of duties violations.\",\n  \"parameters\": {\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"User identifier to check for conflicts\"\n    },\n    \"proposed_roles\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of role IDs being considered for assignment\",\n      \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"existing_roles\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"List of currently assigned role IDs\",\n      \"default\": null\n    },\n    \"conflict_rules\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Conflict rule set: sox_compliance, financial, healthcare, general\",\n      \"default\": \"general\"\n    },\n    \"severity_filter\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Minimum severity to report: low, medium, high, critical\",\n      \"default\": \"medium\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid user identifier: User identifier must be a non-empty string.\",\n    \"Empty proposed roles: At least one proposed role must be provided.\",\n    \"Invalid conflict rules: Use one of [sox_compliance, financial, healthcare, general].\",\n    \"Invalid severity filter: Use one of [low, medium, high, critical].\",\n    \"Conflict detection failed: Unable to complete conflict analysis due to engine error.\"\n  ],\n  \"usage\": \"Provide user_identifier and proposed_roles array. Optionally include existing_roles for comprehensive analysis and set conflict_rules and severity_filter for targeted detection.\",\n  \"output_details\": {\n    \"conflicts_found\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether any conflicts were detected\"\n    },\n    \"conflict_details\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Detailed\
  \ descriptions of detected conflicts\"\n    },\n    \"severity_levels\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Severity level for each detected conflict\"\n    },\n    \"mitigation_options\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Possible ways to resolve or mitigate conflicts\"\n    },\n    \"risk_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall risk score from 0.0 to 10.0\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Audit Trail Logger\",\n  \"tool_description\": \"Logs all role management operations with detailed metadata for compliance and security auditing.\",\n  \"parameters\": {\n    \"operation_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of operation: assign, revoke, modify, query, validate\"\n    },\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"User involved in the operation\"\n    },\n    \"role_id\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Role involved in the operation\",\n      \"default\": null\n    },\n    \"system_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"System where operation was performed\"\n    },\n    \"operator_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"ID of person/system performing the operation\"\n    },\n    \"operation_result\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Result of the operation: success, failure, pending\"\n    },\n    \"justification\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Business justification for the operation\",\n      \"default\": null\n    },\n    \"metadata\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Additional operation metadata as key=value pairs\",\n      \"default\": null\n    },\n    \"risk_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Risk level of the operation: low, medium, high, critical\",\n      \"default\": \"medium\"\n    },\n    \"compliance_tags\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Compliance framework tags for the operation\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid operation type: Use one of [assign, revoke, modify, query, validate].\",\n    \"Invalid operation result: Use one of [success, failure, pending].\",\n    \"Invalid risk level: Use one of [low, medium, high, critical].\",\n    \"Missing required fields: user_identifier, system_name, and operator_id are required.\",\n    \"Audit logging failed: Unable to write audit record to audit system.\"\n  ],\n  \"usage\": \"Provide operation_type, user_identifier, system_name, operator_id, and operation_result. Include justification and metadata for comprehensive audit trails, and set risk_level and compliance_tags for compliance reporting.\",\n  \"output_details\": {\n    \"audit_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the audit record\"\n    },\n    \"timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"ISO 8601 timestamp when the audit was logged\"\n    },\n    \"log_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of the audit logging operation\"\n    },\n    \"retention_period\": {\n      \"type\": \"string\",\n      \"description\": \"How long the audit record will be retained\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Permission Tester\",\n  \"tool_description\": \"Tests actual user permissions against specific resources and actions to verify role effectiveness.\",\n  \"parameters\": {\n    \"user_identifier\": {\n      \"type\": \"string\",\n      \"\
  required\": true,\n      \"description\": \"User whose permissions to test\"\n    },\n    \"system_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"System to test permissions in\"\n    },\n    \"resource_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path or identifier of the resource to test\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Action to test: read, write, delete, execute, admin\"\n    },\n    \"test_mode\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Test mode: simulation, actual_test, dry_run\",\n      \"default\": \"simulation\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid user identifier: User identifier must be a non-empty string.\",\n    \"System not accessible: Unable to connect to the specified system for testing.\",\n    \"Invalid resource path: Resource path is not valid for the target system.\",\n    \"Invalid action: Use one of [read, write, delete, execute, admin].\",\n    \"Invalid test mode: Use one of [simulation, actual_test, dry_run].\",\n    \"Permission test failed: Unable to complete permission test due to system error.\"\n  ],\n  \"usage\": \"Provide user_identifier, system_name, resource_path, and action to test. Set test_mode to control whether to perform simulation or actual testing.\",\n  \"output_details\": {\n    \"access_granted\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether access would be granted for the tested permission\"\n    },\n    \"permission_source\": {\n      \"type\": \"string\",\n      \"description\": \"Which role or assignment granted the permission\"\n    },\n    \"test_details\": {\n      \"type\": \"string\",\n      \"description\": \"Detailed explanation of the permission test result\"\n    },\n    \"response_time\": {\n      \"type\": \"number\",\n      \"description\": \"Time taken to complete the permission test in milliseconds\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Role Hierarchy Manager\",\n  \"tool_description\": \"Manages role inheritance relationships and calculates effective permissions through role hierarchies.\",\n  \"parameters\": {\n    \"parent_role_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Parent role in the hierarchy relationship\"\n    },\n    \"child_role_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Child role that inherits from parent\"\n    },\n    \"operation\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Hierarchy operation: create, delete, query, validate\"\n    },\n    \"inheritance_type\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Type of inheritance: additive, restrictive, override\",\n      \"default\": \"additive\"\n    },\n    \"max_depth\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum hierarchy depth to process (1-10)\",\n      \"default\": 5\n    },\n    \"include_transitive\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include transitive inheritance relationships\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid parent role: Parent role ID is not valid or does not exist.\",\n    \"Invalid child role: Child role ID is not valid or does not exist.\",\n    \"Invalid operation: Use one of [create, delete, query, validate].\",\n    \"Invalid inheritance type: Use one of [additive, restrictive, override].\",\n    \"Circular dependency: Operation would create a circular inheritance relationship.\",\n    \"Invalid depth: Maximum depth must be between 1 and 10.\",\n    \"Hierarchy operation failed: Unable to complete hierarchy operation.\"\n  ],\n  \"usage\": \"Provide parent_role_id, child_role_id, and operation type"
