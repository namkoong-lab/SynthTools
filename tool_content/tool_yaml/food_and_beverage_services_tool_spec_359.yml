field_name: food_and_beverage_services
subfield: restaurant_operations_management
task: Menu planning and recipe cost analysis
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task has medium difficulty due to its moderate scope involving nutritional calculations, cost analysis, supplier management, and regulatory compliance. While individual components are well-defined, the coordination between inventory management, pricing strategies, and menu optimization requires careful dependency management and has moderate financial impact on restaurant profitability.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty, I'm targeting 12 tools to cover the essential workflows: ingredient management, recipe creation and costing, nutritional analysis, supplier coordination, menu optimization, and compliance tracking.

  ## STEP 3 — List all tool names and dependencies

  **Tools and Dependencies:**
  1. **Ingredient Database Manager** - Consumes: ingredient specs, nutritional data | Produces: standardized ingredient records
  2. **Recipe Builder** - Consumes: ingredient IDs, quantities, instructions | Produces: structured recipes
  3. **Recipe Cost Calculator** - Consumes: recipe IDs, current pricing | Produces: detailed cost breakdowns
  4. **Nutritional Analyzer** - Consumes: recipe data, portion sizes | Produces: nutritional profiles
  5. **Supplier Price Tracker** - Consumes: supplier data, price updates | Produces: current market pricing
  6. **Menu Item Profitability** - Consumes: recipe costs, target margins | Produces: pricing recommendations
  7. **Seasonal Menu Optimizer** - Consumes: ingredient availability, demand patterns | Produces: optimized menu selections
  8. **Allergen Compliance Checker** - Consumes: recipe ingredients, allergen database | Produces: compliance reports
  9. **Inventory Requirements Calculator** - Consumes: menu plans, expected volume | Produces: procurement lists
  10. **Menu Performance Analyzer** - Consumes: sales data, cost data | Produces: profitability insights
  11. **Recipe Scaling Tool** - Consumes: base recipes, target quantities | Produces: scaled recipes
  12. **Cost Variance Tracker** - Consumes: projected vs actual costs | Produces: variance analysis

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Recipe Costing**: Ingredient Database Manager → Recipe Builder → Recipe Cost Calculator (create and price a single recipe)
  2. **Nutritional Labeling**: Recipe Builder → Nutritional Analyzer → Allergen Compliance Checker (ensure menu compliance)

  **Medium Plans:**
  1. **Menu Item Development**: Ingredient Database Manager → Recipe Builder → Recipe Cost Calculator → Menu Item Profitability → Nutritional Analyzer (develop profitable, compliant menu items)
  2. **Seasonal Menu Update**: Supplier Price Tracker → Seasonal Menu Optimizer → Recipe Cost Calculator → Menu Item Profitability (optimize menu for seasonal ingredients and pricing)

  **Complex Plans:**
  1. **Complete Menu Redesign**: Ingredient Database Manager → Supplier Price Tracker → Recipe Builder → Recipe Cost Calculator → Nutritional Analyzer → Allergen Compliance Checker → Menu Item Profitability → Seasonal Menu Optimizer (comprehensive menu overhaul)
  2. **Operational Planning**: Menu Performance Analyzer → Seasonal Menu Optimizer → Inventory Requirements Calculator → Recipe Scaling Tool → Cost Variance Tracker (plan operations based on performance data)

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Ingredient Database Manager",
    "tool_description": "Manages a centralized database of ingredients with nutritional information, allergen data, and storage requirements for recipe development and menu planning.",
    "parameters": {
      "action": {
        "type": "string",
        "required": true,
        "description": "Action to perform: add, update, delete, search, or list"
      },
      "ingredient_name": {
        "type": "string",
        "required": false,
        "description": "Name of the ingredient to manage",
        "default": "None"
      },
      "category": {
        "type": "string",
        "required": false,
        "description": "Ingredient category: protein, vegetable, grain, dairy, spice, sauce, or other",
        "default": "None"
      },
      "unit_of_measure": {
        "type": "string",
        "required": false,
        "description": "Standard unit: kg, lb, liter, gallon, piece, or cup",
        "default": "None"
      },
      "calories_per_unit": {
        "type": "number",
        "required": false,
        "description": "Calories per unit of measure",
        "default": "None"
      },
      "allergens": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "List of allergens present",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid action: Use one of [add, update, delete, search, list]",
      "Missing ingredient name: Ingredient name is required for add, update, delete, and search actions",
      "Invalid category: Use one of [protein, vegetable, grain, dairy, spice, sauce, other]",
      "Invalid unit of measure: Use one of [kg, lb, liter, gallon, piece, cup]",
      "Invalid calories value: Calories per unit must be a positive number",
      "Duplicate ingredient: An ingredient with this name already exists"
    ],
    "usage": "Specify the action and provide relevant ingredient details. Use 'list' to see all ingredients, 'search' to find specific ingredients, or 'add'/'update'/'delete' to modify the database.",
    "output_details": {
      "status": {
        "type": "string",
        "description": "Success or error status of the operation"
      },
      "ingredient_count": {
        "type": "integer",
        "description": "Number of ingredients returned or affected"
      },
      "ingredients": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of ingredient records matching the request"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recipe Builder",
    "tool_description": "Creates and manages recipes with ingredients, quantities, instructions, and metadata for menu planning and cost analysis.",
    "parameters": {
      "recipe_name": {
        "type": "string",
        "required": true,
        "description": "Name of the recipe"
      },
      "ingredients": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of ingredient names used in recipe",
        "minItems": 1,
        "maxItems": 50
      },
      "quantities": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Quantities corresponding to each ingredient",
        "minItems": 1,
        "maxItems": 50
      },
      "prep_time_minutes": {
        "type": "integer",
        "required": true,
        "description": "Preparation time in minutes"
      },
      "cook_time_minutes": {
        "type": "integer",
        "required": true,
        "description": "Cooking time in minutes"
      },
      "servings": {
        "type": "integer",
        "required": true,
        "description": "Number of servings the recipe produces"
      },
      "instructions": {
        "type": "string",
        "required": true,
        "description": "Step-by-step cooking instructions"
      },
      "difficulty_level": {
        "type": "string",
        "required": false,
        "description": "Difficulty level: easy, medium, or hard",
        "default": "medium"
      }
    },
    "error_messages": [
      "Missing recipe name: Recipe name cannot be empty",
      "Ingredient quantity mismatch: Number of ingredients must match number of quantities",
      "Invalid time values: Prep time and cook time must be positive integers",
      "Invalid servings: Number of servings must be a positive integer",
      "Invalid difficulty level: Use easy, medium, or hard",
      "Empty instructions: Cooking instructions are required",
      "Unknown ingredient: One or more ingredients not found in database"
    ],
    "usage": "Provide recipe name, ingredients list with corresponding quantities, timing information, servings, and instructions. Ensure all ingredients exist in the ingredient database.",
    "output_details": {
      "recipe_id": {
        "type": "string",
        "description": "Unique identifier for the created recipe"
      },
      "total_time": {
        "type": "integer",
        "description": "Total preparation and cooking time in minutes"
      },
      "ingredient_count": {
        "type": "integer",
        "description": "Number of ingredients in the recipe"
      },
      "status": {
        "type": "string",
        "description": "Creation status message"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recipe Cost Calculator",
    "tool_description": "Calculates detailed cost breakdown for recipes including ingredient costs, labor, and overhead to determine total recipe cost per serving.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the recipe to cost"
      },
      "labor_rate_per_hour": {
        "type": "number",
        "required": false,
        "description": "Hourly labor cost rate",
        "default": 15.0
      },
      "overhead_percentage": {
        "type": "number",
        "required": false,
        "description": "Overhead cost as percentage of ingredient costs (0-100)",
        "default": 20.0
      }
    },
    "error_messages": [
      "Recipe not found: No recipe exists with the provided recipe_id",
      "Invalid labor rate: Labor rate must be a positive number",
      "Invalid overhead percentage: Overhead must be between 0 and 100",
      "Missing ingredient prices: Some ingredients lack current pricing data",
      "Calculation error: Unable to compute costs due to missing data"
    ],
    "usage": "Provide a valid recipe_id and optionally adjust labor_rate_per_hour and overhead_percentage. The tool will calculate comprehensive costs including ingredients, labor, and overhead.",
    "output_details": {
      "total_cost": {
        "type": "number",
        "description": "Total cost for the entire recipe"
      },
      "cost_per_serving": {
        "type": "number",
        "description": "Cost per individual serving"
      },
      "ingredient_cost": {
        "type": "number",
        "description": "Total cost of all ingredients"
      },
      "labor_cost": {
        "type": "number",
        "description": "Labor cost based on prep and cook time"
      },
      "overhead_cost": {
        "type": "number",
        "description": "Calculated overhead cost"
      },
      "cost_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed breakdown of costs by ingredient"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Nutritional Analyzer",
    "tool_description": "Analyzes recipes to calculate comprehensive nutritional information per serving including macronutrients, micronutrients, and dietary compliance.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the recipe to analyze"
      },
      "portion_size": {
        "type": "number",
        "required": false,
        "description": "Portion size multiplier (1.0 = standard serving)",
        "default": 1.0
      }
    },
    "error_messages": [
      "Recipe not found: No recipe exists with the provided recipe_id",
      "Invalid portion size: Portion size must be a positive number",
      "Missing nutritional data: Some ingredients lack complete nutritional information",
      "Calculation error: Unable to compute nutritional values"
    ],
    "usage": "Provide a valid recipe_id and optionally adjust portion_size. The tool calculates comprehensive nutritional information based on ingredient database values.",
    "output_details": {
      "calories_per_serving": {
        "type": "number",
        "description": "Total calories per serving"
      },
      "protein_grams": {
        "type": "number",
        "description": "Protein content in grams"
      },
      "carbs_grams": {
        "type": "number",
        "description": "Carbohydrate content in grams"
      },
      "fat_grams": {
        "type": "number",
        "description": "Fat content in grams"
      },
      "fiber_grams": {
        "type": "number",
        "description": "Fiber content in grams"
      },
      "sodium_mg": {
        "type": "number",
        "description": "Sodium content in milligrams"
      },
      "dietary_flags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Dietary compliance flags like vegetarian, vegan, gluten-free"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Supplier Price Tracker",
    "tool_description": "Tracks and manages current pricing from multiple suppliers for ingredients, enabling cost comparison and procurement optimization.",
    "parameters": {
      "action": {
        "type": "string",
        "required": true,
        "description": "Action to perform: add_supplier, update_price, get_prices, compare_suppliers, or get_best_price"
      },
      "supplier_name": {
        "type": "string",
        "required": false,
        "description": "Name of the supplier",
        "default": "None"
      },
      "ingredient_name": {
        "type": "string",
        "required": false,
        "description": "Name of the ingredient",
        "default": "None"
      },
      "price_per_unit": {
        "type": "number",
        "required": false,
        "description": "Price per unit of the ingredient",
        "default": "None"
      },
      "minimum_order_quantity": {
        "type": "number",
        "required": false,
        "description": "Minimum order quantity required by supplier",
        "default": "None"
      },
      "delivery_days": {
        "type": "integer",
        "required": false,
        "description": "Standard delivery time in days",
        "default": "None"
      },
      "quality_rating": {
        "type": "integer",
        "required": false,
        "description": "Quality rating from 1-5 (5 being highest)",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid action: Use one of [add_supplier, update_price, get_prices, compare_suppliers, get_best_price]",
      "Missing supplier name: Supplier name is required for add_supplier and update_price actions",
      "Missing ingredient name: Ingredient name is required for pricing operations",
      "Invalid price: Price per unit must be a positive number",
      "Invalid quality rating: Quality rating must be between 1 and 5",
      "Invalid delivery days: Delivery days must be a positive integer",
      "Supplier not found: No supplier exists with the provided name"
    ],
    "usage": "Specify the action and provide relevant supplier/ingredient information. Use get_best_price to find optimal suppliers based on price, quality, and delivery time.",
    "output_details": {
      "status": {
        "type": "string",
        "description": "Operation status message"
      },
      "supplier_count": {
        "type": "integer",
        "description": "Number of suppliers returned"
      },
      "best_price": {
        "type": "number",
        "description": "Best available price for the ingredient"
      },
      "recommended_supplier": {
        "type": "string",
        "description": "Name of recommended supplier based on criteria"
      },
      "price_data": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of supplier pricing information"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Menu Item Profitability",
    "tool_description": "Calculates menu item profitability by analyzing recipe costs against target margins and market pricing to recommend optimal menu prices.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the recipe"
      },
      "target_food_cost_percentage": {
        "type": "number",
        "required": true,
        "description": "Target food cost as percentage of menu price (20-40)"
      },
      "market_price_low": {
        "type": "number",
        "required": false,
        "description": "Lower bound of market price range for similar items",
        "default": "None"
      },
      "market_price_high": {
        "type": "number",
        "required": false,
        "description": "Upper bound of market price range for similar items",
        "default": "None"
      },
      "competitor_average_price": {
        "type": "number",
        "required": false,
        "description": "Average competitor price for similar menu item",
        "default": "None"
      }
    },
    "error_messages": [
      "Recipe not found: No recipe exists with the provided recipe_id",
      "Invalid food cost percentage: Target must be between 20 and 40 percent",
      "Invalid market price range: Market price low must be less than market price high",
      "Missing recipe cost data: Recipe must be costed before profitability analysis",
      "Unrealistic margins: Target margins may not be achievable at market prices"
    ],
    "usage": "Provide recipe_id and target_food_cost_percentage. Optionally include market pricing data for competitive analysis. The tool recommends optimal pricing strategy.",
    "output_details": {
      "recommended_menu_price": {
        "type": "number",
        "description": "Recommended menu price based on target margins"
      },
      "actual_food_cost_percentage": {
        "type": "number",
        "description": "Actual food cost percentage at recommended price"
      },
      "profit_per_serving": {
        "type": "number",
        "description": "Profit per serving at recommended price"
      },
      "competitive_position": {
        "type": "string",
        "description": "Position relative to market prices (below, competitive, above)"
      },
      "margin_analysis": {
        "type": "string",
        "description": "Analysis of margin achievability and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Seasonal Menu Optimizer",
    "tool_description": "Optimizes menu selections based on seasonal ingredient availability, pricing trends, and historical demand patterns to maximize profitability and freshness.",
    "parameters": {
      "season": {
        "type": "string",
        "required": true,
        "description": "Target season: spring, summer, fall, or winter"
      },
      "recipe_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of recipe IDs to evaluate for seasonal optimization",
        "minItems": 1,
        "maxItems": 100
      },
      "location": {
        "type": "string",
        "required": true,
        "description": "Geographic location for seasonal availability data"
      },
      "max_menu_items": {
        "type": "integer",
        "required": true,
        "description": "Maximum number of items to include in optimized menu"
      },
      "prioritize_local": {
        "type": "boolean",
        "required": false,
        "description": "Prioritize locally sourced ingredients",
        "default": false
      },
      "cost_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for cost optimization (0-1, higher means cost is more important)",
        "default": 0.4
      },
      "freshness_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for ingredient freshness (0-1)",
        "default": 0.3
      },
      "demand_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for historical demand (0-1)",
        "default": 0.3
      }
    },
    "error_messages": [
      "Invalid season: Use one of [spring, summer, fall, winter]",
      "Invalid recipe IDs: One or more recipe IDs not found",
      "Invalid max menu items: Must be a positive integer less than total recipes provided",
      "Invalid weights: All weights must be between 0 and 1, and should sum to approximately 1.0",
      "Location not supported: Geographic location not found in seasonal data",
      "Insufficient data: Not enough seasonal data available for optimization"
    ],
    "usage": "Provide season, recipe_ids list, location, and max_menu_items. Adjust weight parameters to balance cost, freshness, and demand priorities. The tool returns optimized menu selection.",
    "output_details": {
      "optimized_menu": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of recommended recipe IDs for the season"
      },
      "seasonal_score": {
        "type": "number",
        "description": "Overall seasonal optimization score (0-100)"
      },
      "cost_savings": {
        "type": "number",
        "description": "Estimated cost savings from seasonal optimization"
      },
      "local_ingredient_percentage": {
        "type": "number",
        "description": "Percentage of ingredients sourced locally"
      },
      "optimization_summary": {
        "type": "string",
        "description": "Summary of optimization results and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Allergen Compliance Checker",
    "tool_description": "Verifies recipe compliance with allergen regulations, identifies potential cross-contamination risks, and generates required allergen disclosure labels.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the recipe to check"
      },
      "regulatory_standard": {
        "type": "string",
        "required": false,
        "description": "Regulatory standard: FDA, EU, or CODEX",
        "default": "FDA"
      },
      "check_cross_contamination": {
        "type": "boolean",
        "required": false,
        "description": "Include cross-contamination risk assessment",
        "default": true
      }
    },
    "error_messages": [
      "Recipe not found: No recipe exists with the provided recipe_id",
      "Invalid regulatory standard: Use FDA, EU, or CODEX",
      "Missing allergen data: Some ingredients lack complete allergen information",
      "Compliance check failed: Unable to complete allergen analysis"
    ],
    "usage": "Provide recipe_id and specify regulatory_standard if different from FDA. Enable check_cross_contamination for comprehensive risk assessment.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status: compliant, warning, or non-compliant"
      },
      "present_allergens": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of allergens present in the recipe"
      },
      "cross_contamination_risks": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Potential cross-contamination allergen risks"
      },
      "disclosure_label": {
        "type": "string",
        "description": "Required allergen disclosure text for menu"
      },
      "compliance_warnings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of compliance warnings or issues"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Requirements Calculator",
    "tool_description": "Calculates precise inventory requirements based on menu planning, expected sales volume, and waste factors to optimize procurement and reduce food waste.",
    "parameters": {
      "menu_recipe_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of recipe IDs planned for the menu period",
        "minItems": 1,
        "maxItems": 50
      },
      "planning_period_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to calculate inventory for"
      },
      "expected_daily_covers": {
        "type": "integer",
        "required": true,
        "description": "Expected number of customers per day"
      },
      "item_popularity_percentages": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Popularity percentage for each menu item (must sum to 100)",
        "minItems": 1,
        "maxItems": 50
      },
      "waste_factor_percentage": {
        "type": "number",
        "required": false,
        "description": "Expected waste percentage (5-15)",
        "default": 8.0
      },
      "safety_stock_percentage": {
        "type": "number",
        "required": false,
        "description": "Safety stock buffer percentage (10-30)",
        "default": 20.0
      }
    },
    "error_messages": [
      "Recipe count mismatch: Number of recipe IDs must match number of popularity percentages",
      "Invalid popularity percentages: All percentages must be positive and sum to 100",
      "Invalid planning period: Planning period must be between 1 and 30 days",
      "Invalid daily covers: Expected daily covers must be a positive integer",
      "Invalid waste factor: Waste factor must be between 5 and 15 percent",
      "Invalid safety stock: Safety stock must be between 10 and 30 percent",
      "Recipe not found: One or more recipe IDs not found in database"
    ],
    "usage": "Provide menu_recipe_ids, planning_period_days, expected_daily_covers, and corresponding item_popularity_percentages. Adjust waste_factor_percentage and safety_stock_percentage as needed.",
    "output_details": {
      "total_ingredients_needed": {
        "type": "integer",
        "description": "Total number of unique ingredients required"
      },
      "procurement_list": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed list of ingredients with quantities needed"
      },
      "estimated_total_cost": {
        "type": "number",
        "description": "Estimated total cost for all ingredients"
      },
      "storage_requirements": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Storage requirements summary by category"
      },
      "order_schedule": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended ordering schedule based on ingredient shelf life"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Menu Performance Analyzer",
    "tool_description": "Analyzes menu item performance using sales data, profitability metrics, and customer feedback to identify top performers and underperforming items.",
    "parameters": {
      "analysis_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date for analysis period",
        "format": "date-time"
      },
      "analysis_period_end": {
        "type": "string",
        "required": true,
        "description": "End date for analysis period",
        "format": "date-time"
      },
      "recipe_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of recipe IDs to analyze",
        "minItems": 1,
        "maxItems": 100
      }
    },
    "error_messages": [
      "Invalid date range: Start date must be before end date",
      "Invalid date format: Use ISO 8601 date-time format",
      "Analysis period too long: Maximum analysis period is 365 days",
      "Recipe not found: One or more recipe IDs not found",
      "Insufficient sales data: Not enough data available for the specified period"
    ],
    "usage": "Provide analysis_period_start, analysis_period_end, and recipe_ids list. The tool analyzes performance metrics and provides actionable insights.",
    "output_details": {
      "top_performers": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of best performing recipe IDs"
      },
      "underperformers": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of underperforming recipe IDs"
      },
      "average_profit_margin": {
        "type": "number",
        "description": "Average profit margin across all analyzed items"
      },
      "total_revenue": {
        "type": "number",
        "description": "Total revenue from analyzed menu items"
      },
      "performance_summary": {
        "type": "string",
        "description": "Summary of key performance insights and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recipe Scaling Tool",
    "tool_description": "Scales recipes up or down while maintaining proper proportions and adjusting cooking times and temperatures for different batch sizes and service volumes.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the recipe to scale"
      },
      "target_servings": {
        "type": "integer",
        "required": true,
        "description": "Desired number of servings for scaled recipe"
      },
      "adjust_cooking_time": {
        "type": "boolean",
        "required": false,
        "description": "Automatically adjust cooking times for scale",
        "default": true
      }
    },
    "error_messages": [
      "Recipe not found: No recipe exists with the provided recipe_id",
      "Invalid target servings: Target servings must be a positive integer",
      "Scale factor too extreme: Recipe can only be scaled between 0.1x and 50x original size",
      "Scaling error: Unable to properly scale ingredient quantities"
    ],
    "usage": "Provide recipe_id and target_servings. The tool will proportionally scale all ingredients and optionally adjust cooking parameters.",
    "output_details": {
      "scaled_recipe_id": {
        "type": "string",
        "description": "New unique identifier for the scaled recipe"
      },
      "scale_factor": {
        "type": "number",
        "description": "Multiplication factor applied to original recipe"
      },
      "adjusted_prep_time": {
        "type": "integer",
        "description": "Adjusted preparation time in minutes"
      },
      "adjusted_cook_time": {
        "type": "integer",
        "description": "Adjusted cooking time in minutes"
      },
      "scaling_notes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Important notes about the scaling adjustments"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cost Variance Tracker",
    "tool_description": "Tracks and analyzes variances between projected and actual recipe costs, identifying cost drivers and providing alerts for significant deviations.",
    "parameters": {
      "recipe_id": {
        "type
