field_name: parenting_and_childcare
subfield: Child Development Tracking
task: Track and log developmental milestones across physical, cognitive, social, and emotional domains
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is of **medium** difficulty. It involves tracking multiple developmental domains with age-specific milestones, requires coordination between observation, assessment, and reporting tools, and has moderate complexity in data requirements and milestone validation across different age ranges.

  **STEP 2 — Set a tool budget**

  Based on the medium difficulty assessment, I will target **12 tools** to cover milestone tracking, assessment, logging, analysis, and reporting functionalities.

  **STEP 3 — List all tool names and dependencies**

  1. **Child Profile Creator** - Consumes: child demographics → Produces: child profile data
  2. **Milestone Database Query** - Consumes: age ranges, domains → Produces: milestone definitions
  3. **Physical Development Tracker** - Consumes: child data, observations → Produces: physical milestone records
  4. **Cognitive Assessment Logger** - Consumes: child data, test results → Produces: cognitive milestone records
  5. **Social Skills Observer** - Consumes: behavioral observations → Produces: social milestone records
  6. **Emotional Development Monitor** - Consumes: emotional indicators → Produces: emotional milestone records
  7. **Milestone Achievement Validator** - Consumes: milestone records → Produces: validated achievements
  8. **Development Timeline Generator** - Consumes: milestone records → Produces: chronological timeline
  9. **Progress Report Builder** - Consumes: validated milestones → Produces: comprehensive reports
  10. **Milestone Reminder System** - Consumes: child profile, milestones → Produces: upcoming milestone alerts
  11. **Development Comparison Tool** - Consumes: child records, norms → Produces: comparative analysis
  12. **Export Data Manager** - Consumes: all records → Produces: formatted exports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Tracking**: Child Profile Creator → Physical Development Tracker → Milestone Achievement Validator (tracks basic physical milestones)
  2. **Quick Assessment**: Milestone Database Query → Cognitive Assessment Logger → Progress Report Builder (generates simple cognitive assessment report)

  **Medium Plans:**
  1. **Domain-Specific Monitoring**: Child Profile Creator → Milestone Database Query → Social Skills Observer → Emotional Development Monitor → Development Timeline Generator (comprehensive social-emotional tracking)
  2. **Progress Review**: Milestone Achievement Validator → Development Comparison Tool → Progress Report Builder → Export Data Manager (analyzes and reports progress)

  **Complex Plans:**
  1. **Complete Development Tracking**: Child Profile Creator → Milestone Database Query → Physical Development Tracker → Cognitive Assessment Logger → Social Skills Observer → Emotional Development Monitor → Milestone Achievement Validator → Development Timeline Generator → Progress Report Builder (full milestone tracking workflow)
  2. **Comprehensive Analysis with Alerts**: All tracking tools → Development Comparison Tool → Milestone Reminder System → Progress Report Builder → Export Data Manager (complete system with predictive alerts and analysis)

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Child Profile Creator",
    "tool_description": "Creates and manages basic child profile information including demographics, birth details, and developmental baseline data for milestone tracking purposes.",
    "parameters": {
      "child_name": {
        "type": "string",
        "required": true,
        "description": "Full name of the child"
      },
      "birth_date": {
        "type": "string",
        "required": true,
        "description": "Child's birth date in ISO 8601 format",
        "format": "date-time"
      },
      "gender": {
        "type": "string",
        "required": false,
        "description": "Child's gender (male, female, other)",
        "default": "not_specified"
      },
      "current_weight_kg": {
        "type": "number",
        "required": false,
        "description": "Current weight in kilograms (0.5-150)",
        "default": "None"
      },
      "current_height_cm": {
        "type": "number",
        "required": false,
        "description": "Current height in centimeters (30-200)",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid birth date: Provide a valid ISO 8601 date that is not in the future.",
      "Invalid gender specification: Use 'male', 'female', 'other', or leave blank for default.",
      "Weight out of range: Weight must be between 0.5 and 150 kg.",
      "Height out of range: Height must be between 30 and 200 cm.",
      "Missing required field: child_name and birth_date are mandatory."
    ],
    "usage": "Provide child_name and birth_date as required fields. Optionally include gender, current_weight_kg, and current_height_cm. The tool creates a unique child profile for milestone tracking.",
    "output_details": {
      "child_id": {
        "type": "string",
        "description": "Unique identifier for the child profile"
      },
      "age_months": {
        "type": "integer",
        "description": "Current age in months calculated from birth date"
      },
      "profile_created": {
        "type": "string",
        "description": "Timestamp when profile was created"
      },
      "status": {
        "type": "string",
        "description": "Profile creation status (active, incomplete, error)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Milestone Database Query",
    "tool_description": "Retrieves age-appropriate developmental milestones from the database based on child's age and specified developmental domains.",
    "parameters": {
      "age_months_min": {
        "type": "integer",
        "required": true,
        "description": "Minimum age in months (0-216)"
      },
      "age_months_max": {
        "type": "integer",
        "required": true,
        "description": "Maximum age in months (0-216)"
      },
      "domains": {
        "type": "array",
        "required": true,
        "description": "Developmental domains to query",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 4
      },
      "milestone_type": {
        "type": "string",
        "required": false,
        "description": "Type of milestone (emerging, typical, advanced)",
        "default": "typical"
      }
    },
    "error_messages": [
      "Invalid age range: age_months_min must be less than age_months_max, both within 0-216.",
      "Invalid domains: Use combinations of 'physical', 'cognitive', 'social', 'emotional'.",
      "Invalid milestone type: Use 'emerging', 'typical', or 'advanced'.",
      "No milestones found: No milestones exist for the specified age range and domains."
    ],
    "usage": "Specify age range with age_months_min and age_months_max, select domains array with desired developmental areas, and optionally set milestone_type. Returns relevant milestones for the specified criteria.",
    "output_details": {
      "milestone_count": {
        "type": "integer",
        "description": "Number of milestones retrieved"
      },
      "milestones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of milestone descriptions"
      },
      "age_ranges": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Age ranges for each milestone"
      },
      "domains_covered": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Developmental domains covered in results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Physical Development Tracker",
    "tool_description": "Records and tracks physical developmental milestones including motor skills, growth measurements, and physical abilities with observation notes.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "observation_date": {
        "type": "string",
        "required": true,
        "description": "Date of observation in ISO 8601 format",
        "format": "date-time"
      },
      "gross_motor_skills": {
        "type": "array",
        "required": false,
        "description": "List of observed gross motor skills",
        "items": {
          "type": "string"
        },
        "maxItems": 20,
        "default": "None"
      },
      "fine_motor_skills": {
        "type": "array",
        "required": false,
        "description": "List of observed fine motor skills",
        "items": {
          "type": "string"
        },
        "maxItems": 20,
        "default": "None"
      },
      "weight_kg": {
        "type": "number",
        "required": false,
        "description": "Current weight in kilograms (0.5-150)",
        "default": "None"
      },
      "height_cm": {
        "type": "number",
        "required": false,
        "description": "Current height in centimeters (30-200)",
        "default": "None"
      },
      "head_circumference_cm": {
        "type": "number",
        "required": false,
        "description": "Head circumference in centimeters (20-70)",
        "default": "None"
      },
      "observer_notes": {
        "type": "string",
        "required": false,
        "description": "Additional observations and notes",
        "default": ""
      },
      "milestone_achieved": {
        "type": "array",
        "required": false,
        "description": "List of milestones achieved during this observation",
        "items": {
          "type": "string"
        },
        "maxItems": 10,
        "default": "None"
      },
      "assessment_method": {
        "type": "string",
        "required": false,
        "description": "Method used for assessment (observation, measurement, guided_activity)",
        "default": "observation"
      },
      "environment": {
        "type": "string",
        "required": false,
        "description": "Environment where observation took place",
        "default": "home"
      }
    },
    "error_messages": [
      "Invalid child_id: Child profile not found in system.",
      "Invalid observation date: Date must be valid ISO 8601 format and not in future.",
      "Invalid measurement values: Weight (0.5-150kg), height (30-200cm), head_circumference (20-70cm).",
      "Invalid assessment method: Use 'observation', 'measurement', or 'guided_activity'.",
      "Too many items: Motor skills arrays limited to 20 items, milestones to 10 items.",
      "Missing observation data: At least one of motor skills, measurements, or milestones must be provided."
    ],
    "usage": "Provide child_id and observation_date as required. Add any combination of motor skills, measurements, milestones, and notes. Specify assessment_method and environment for context. Records physical development progress.",
    "output_details": {
      "tracking_id": {
        "type": "string",
        "description": "Unique identifier for this tracking record"
      },
      "milestones_recorded": {
        "type": "integer",
        "description": "Number of milestones recorded in this session"
      },
      "growth_percentiles": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Growth percentiles for recorded measurements"
      },
      "development_age_months": {
        "type": "number",
        "description": "Estimated developmental age based on observed skills"
      },
      "status": {
        "type": "string",
        "description": "Recording status (complete, partial, needs_review)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cognitive Assessment Logger",
    "tool_description": "Logs cognitive development observations including language skills, problem-solving abilities, memory, attention, and learning patterns with structured assessment data.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "assessment_date": {
        "type": "string",
        "required": true,
        "description": "Date of cognitive assessment in ISO 8601 format",
        "format": "date-time"
      },
      "language_skills": {
        "type": "array",
        "required": false,
        "description": "Observed language and communication skills",
        "items": {
          "type": "string"
        },
        "maxItems": 15,
        "default": "None"
      },
      "problem_solving_skills": {
        "type": "array",
        "required": false,
        "description": "Observed problem-solving and reasoning abilities",
        "items": {
          "type": "string"
        },
        "maxItems": 15,
        "default": "None"
      },
      "attention_span_minutes": {
        "type": "number",
        "required": false,
        "description": "Observed attention span duration in minutes (0.5-120)",
        "default": "None"
      },
      "memory_tasks_completed": {
        "type": "integer",
        "required": false,
        "description": "Number of age-appropriate memory tasks completed successfully (0-20)",
        "default": "None"
      },
      "vocabulary_words_used": {
        "type": "integer",
        "required": false,
        "description": "Estimated number of different words used during assessment (0-10000)",
        "default": "None"
      },
      "cognitive_milestones": {
        "type": "array",
        "required": false,
        "description": "Specific cognitive milestones achieved",
        "items": {
          "type": "string"
        },
        "maxItems": 10,
        "default": "None"
      },
      "assessment_context": {
        "type": "string",
        "required": false,
        "description": "Context of assessment (play, structured, natural_interaction)",
        "default": "natural_interaction"
      },
      "assessor_notes": {
        "type": "string",
        "required": false,
        "description": "Detailed notes from the assessor",
        "default": ""
      }
    },
    "error_messages": [
      "Invalid child_id: Child profile not found in system.",
      "Invalid assessment date: Date must be valid ISO 8601 format and not in future.",
      "Invalid attention span: Must be between 0.5 and 120 minutes.",
      "Invalid memory tasks: Must be between 0 and 20 tasks.",
      "Invalid vocabulary count: Must be between 0 and 10000 words.",
      "Invalid assessment context: Use 'play', 'structured', or 'natural_interaction'.",
      "Array size exceeded: Language and problem-solving skills limited to 15 items, milestones to 10.",
      "Insufficient assessment data: At least one cognitive measure must be provided."
    ],
    "usage": "Provide child_id and assessment_date. Record any combination of language_skills, problem_solving_skills, attention metrics, memory performance, and vocabulary observations. Add cognitive_milestones achieved and assessor_notes for comprehensive logging.",
    "output_details": {
      "assessment_id": {
        "type": "string",
        "description": "Unique identifier for this cognitive assessment"
      },
      "cognitive_age_equivalent": {
        "type": "number",
        "description": "Estimated cognitive age in months based on assessment"
      },
      "strengths_identified": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Key cognitive strengths observed"
      },
      "areas_for_development": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Areas needing additional development support"
      },
      "assessment_quality": {
        "type": "string",
        "description": "Quality rating of assessment data (comprehensive, adequate, limited)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Social Skills Observer",
    "tool_description": "Observes and records social development including peer interactions, social play, communication patterns, and relationship-building behaviors in various social contexts.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "observation_date": {
        "type": "string",
        "required": true,
        "description": "Date of social observation in ISO 8601 format",
        "format": "date-time"
      },
      "social_setting": {
        "type": "string",
        "required": true,
        "description": "Setting where observation occurred (home, daycare, playground, family_gathering, peer_group)"
      },
      "peer_interactions": {
        "type": "array",
        "required": false,
        "description": "Observed interactions with peers",
        "items": {
          "type": "string"
        },
        "maxItems": 12,
        "default": "None"
      },
      "adult_interactions": {
        "type": "array",
        "required": false,
        "description": "Observed interactions with adults",
        "items": {
          "type": "string"
        },
        "maxItems": 12,
        "default": "None"
      },
      "play_behaviors": {
        "type": "array",
        "required": false,
        "description": "Types of play behaviors observed",
        "items": {
          "type": "string"
        },
        "maxItems": 10,
        "default": "None"
      },
      "cooperation_level": {
        "type": "string",
        "required": false,
        "description": "Level of cooperation observed (high, medium, low, not_applicable)",
        "default": "not_applicable"
      },
      "sharing_behavior": {
        "type": "boolean",
        "required": false,
        "description": "Whether sharing behavior was observed",
        "default": "None"
      },
      "conflict_resolution": {
        "type": "string",
        "required": false,
        "description": "How conflicts were handled (independent, with_help, avoided, escalated)",
        "default": "not_applicable"
      }
    },
    "error_messages": [
      "Invalid child_id: Child profile not found in system.",
      "Invalid observation date: Date must be valid ISO 8601 format and not in future.",
      "Invalid social setting: Use 'home', 'daycare', 'playground', 'family_gathering', or 'peer_group'.",
      "Invalid cooperation level: Use 'high', 'medium', 'low', or 'not_applicable'.",
      "Invalid conflict resolution: Use 'independent', 'with_help', 'avoided', 'escalated', or 'not_applicable'.",
      "Array size exceeded: Interaction arrays limited to 12 items, play behaviors to 10 items.",
      "Missing observation data: At least one social behavior must be documented."
    ],
    "usage": "Provide child_id, observation_date, and social_setting. Document any combination of peer_interactions, adult_interactions, play_behaviors, cooperation_level, sharing_behavior, and conflict_resolution patterns observed during the session.",
    "output_details": {
      "observation_id": {
        "type": "string",
        "description": "Unique identifier for this social observation"
      },
      "social_age_equivalent": {
        "type": "number",
        "description": "Estimated social development age in months"
      },
      "social_milestones_met": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Social milestones demonstrated during observation"
      },
      "interaction_quality": {
        "type": "string",
        "description": "Overall quality of social interactions (excellent, good, developing, concerning)"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended activities to support social development"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Emotional Development Monitor",
    "tool_description": "Monitors emotional development including emotion recognition, regulation, expression, empathy, and self-awareness with behavioral indicators and coping strategies.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "monitoring_date": {
        "type": "string",
        "required": true,
        "description": "Date of emotional monitoring in ISO 8601 format",
        "format": "date-time"
      },
      "emotions_expressed": {
        "type": "array",
        "required": false,
        "description": "Emotions observed being expressed",
        "items": {
          "type": "string"
        },
        "maxItems": 15,
        "default": "None"
      },
      "regulation_strategies": {
        "type": "array",
        "required": false,
        "description": "Self-regulation strategies observed",
        "items": {
          "type": "string"
        },
        "maxItems": 10,
        "default": "None"
      },
      "empathy_indicators": {
        "type": "array",
        "required": false,
        "description": "Behaviors indicating empathy or understanding of others' emotions",
        "items": {
          "type": "string"
        },
        "maxItems": 8,
        "default": "None"
      },
      "comfort_seeking": {
        "type": "boolean",
        "required": false,
        "description": "Whether child seeks comfort when distressed",
        "default": "None"
      },
      "emotional_intensity": {
        "type": "string",
        "required": false,
        "description": "General intensity of emotional expressions (high, moderate, low)",
        "default": "moderate"
      },
      "triggers_identified": {
        "type": "array",
        "required": false,
        "description": "Identified emotional triggers",
        "items": {
          "type": "string"
        },
        "maxItems": 8,
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid child_id: Child profile not found in system.",
      "Invalid monitoring date: Date must be valid ISO 8601 format and not in future.",
      "Invalid emotional intensity: Use 'high', 'moderate', or 'low'.",
      "Array size exceeded: Emotions limited to 15 items, regulation strategies to 10, empathy indicators and triggers to 8 each.",
      "Missing emotional data: At least one emotional behavior or indicator must be documented.",
      "Inconsistent data: Comfort seeking behavior should align with regulation strategies observed."
    ],
    "usage": "Provide child_id and monitoring_date. Document emotions_expressed, regulation_strategies, empathy_indicators, comfort_seeking behaviors, emotional_intensity level, and triggers_identified during the monitoring period for comprehensive emotional development tracking.",
    "output_details": {
      "monitoring_id": {
        "type": "string",
        "description": "Unique identifier for this emotional monitoring session"
      },
      "emotional_age_equivalent": {
        "type": "number",
        "description": "Estimated emotional development age in months"
      },
      "emotional_strengths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified emotional development strengths"
      },
      "support_needs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Areas where emotional support may be beneficial"
      },
      "milestone_progress": {
        "type": "string",
        "description": "Overall emotional milestone progress (on_track, ahead, needs_attention)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Milestone Achievement Validator",
    "tool_description": "Validates and confirms milestone achievements by cross-referencing observations with standard developmental criteria and age-appropriate expectations.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "milestone_records": {
        "type": "array",
        "required": true,
        "description": "Array of milestone record IDs to validate",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "validation_date": {
        "type": "string",
        "required": true,
        "description": "Date of validation in ISO 8601 format",
        "format": "date-time"
      },
      "strict_criteria": {
        "type": "boolean",
        "required": false,
        "description": "Whether to apply strict or flexible validation criteria",
        "default": false
      },
      "validator_id": {
        "type": "string",
        "required": false,
        "description": "Identifier for the person performing validation",
        "default": "system"
      }
    },
    "error_messages": [
      "Invalid child_id: Child profile not found in system.",
      "Invalid milestone records: One or more milestone record IDs not found.",
      "Invalid validation date: Date must be valid ISO 8601 format and not in future.",
      "Too many records: Maximum 20 milestone records can be validated at once.",
      "Insufficient data: Some milestone records lack sufficient observation data for validation.",
      "Age mismatch: Some milestones are not age-appropriate for the child's current developmental stage."
    ],
    "usage": "Provide child_id, array of milestone_records IDs to validate, and validation_date. Optionally set strict_criteria to true for more rigorous validation or specify validator_id. The tool confirms which milestones meet validation criteria.",
    "output_details": {
      "validation_id": {
        "type": "string",
        "description": "Unique identifier for this validation session"
      },
      "validated_milestones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of milestone IDs that passed validation"
      },
      "pending_milestones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of milestone IDs requiring additional observation"
      },
      "rejected_milestones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of milestone IDs that did not meet validation criteria"
      },
      "validation_summary": {
        "type": "string",
        "description": "Summary of validation results and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Development Timeline Generator",
    "tool_description": "Creates chronological timeline visualizations of milestone achievements across all developmental domains with progress tracking and trend analysis.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "start_date": {
        "type": "string",
        "required": false,
        "description": "Start date for timeline in ISO 8601 format",
        "format": "date-time",
        "default": "None"
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "End date for timeline in ISO 8601 format",
        "format": "date-time",
        "default": "None"
      },
      "domains_included": {
        "type": "array",
        "required": false,
        "description": "Developmental domains to include in timeline",
        "items": {
          "type": "string"
        },
        "maxItems": 4,
        "default": "None"
      },
      "timeline_granularity": {
        "type": "string",
        "required": false,
        "description": "Timeline detail level (monthly, quarterly, yearly)",
        "default": "monthly"
      }
    },
    "error_messages": [
      "Invalid child_id: Child profile not found in system.",
      "Invalid date range: start_date must be before end_date, both in valid ISO 8601 format.",
      "Invalid domains: Use combinations of 'physical', 'cognitive', 'social', 'emotional'.",
      "Invalid granularity: Use 'monthly', 'quarterly', or 'yearly'.",
      "Insufficient data: Not enough milestone data available for the specified time period.",
      "Timeline too broad: Reduce date range or increase granularity for better visualization."
    ],
    "usage": "Provide child_id as required. Optionally specify start_date and end_date for custom time ranges, domains_included for specific developmental areas, and timeline_granularity for detail level. Generates comprehensive development timeline.",
    "output_details": {
      "timeline_id": {
        "type": "string",
        "description": "Unique identifier for generated timeline"
      },
      "milestone_count": {
        "type": "integer",
        "description": "Total number of milestones included in timeline"
      },
      "time_periods": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of time period labels in the timeline"
      },
      "development_trends": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified development trends and patterns"
      },
      "timeline_url": {
        "type": "string",
        "description": "URL or reference to generated timeline visualization"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Progress Report Builder",
    "tool_description": "Generates comprehensive developmental progress reports combining milestone achievements, assessments, and recommendations for parents, caregivers, or healthcare providers.",
    "parameters": {
      "child_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the child"
      },
      "report_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date for report period in ISO 8601 format",
        "format": "date-time"
      },
      "report_period_end": {
        "type": "string",
        "required": true,
        "description": "End date for report period in ISO 8601 format",
        "format": "date-time"
      },
      "report_type": {
        "type": "string",
        "required": false,
        "description": "Type of report (summary, detailed, clinical, parent_friendly)",
        "default": "summary"
      },
      "include_recommendations": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include development recommendations",
        "default": true
      },
      "include_comparisons": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include age-norm comparisons",
        "default": true
      },
      "target_audience": {
        "type": "string",
        "required": false,
        "description": "Intende
