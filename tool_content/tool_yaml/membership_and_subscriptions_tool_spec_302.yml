field_name: membership_and_subscriptions
subfield: Subscription Plan Management
task: Create and configure new subscription plans with pricing tiers and feature sets
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task has medium difficulty. It involves moderate complexity in designing pricing structures, managing feature hierarchies, and ensuring consistent plan configurations. The main challenges include handling multiple interdependent parameters (pricing, features, billing cycles), validating business rule constraints, and maintaining data consistency across different plan tiers.

  **STEP 2 — Set a tool budget**

  Given the medium complexity, I'll target 12 tools within the 10-15 range. This allows for comprehensive coverage of plan creation, feature management, pricing configuration, validation, and deployment workflows.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Plan Template Creator** - Consumes: plan specifications → Produces: base plan structure
  2. **Feature Bundle Manager** - Consumes: feature lists → Produces: organized feature sets
  3. **Pricing Tier Calculator** - Consumes: base prices, discounts → Produces: tier pricing structures
  4. **Billing Cycle Configurator** - Consumes: cycle preferences → Produces: billing schedules
  5. **Plan Validator** - Consumes: complete plan configs → Produces: validation results
  6. **Feature Compatibility Checker** - Consumes: feature combinations → Produces: compatibility status
  7. **Pricing Strategy Optimizer** - Consumes: market data, costs → Produces: optimal pricing recommendations
  8. **Plan Comparison Generator** - Consumes: multiple plans → Produces: comparison matrices
  9. **Access Control Mapper** - Consumes: features, permissions → Produces: access control rules
  10. **Trial Period Configurator** - Consumes: trial parameters → Produces: trial configurations
  11. **Plan Migration Planner** - Consumes: old/new plans → Produces: migration strategies
  12. **Subscription Plan Deployer** - Consumes: validated plans → Produces: deployment confirmations

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Plan Creation**: Plan Template Creator → Pricing Tier Calculator → Plan Validator → Subscription Plan Deployer
  2. **Feature Set Management**: Feature Bundle Manager → Feature Compatibility Checker → Access Control Mapper

  **Medium Plans:**
  1. **Complete Plan Development**: Plan Template Creator → Feature Bundle Manager → Pricing Tier Calculator → Billing Cycle Configurator → Plan Validator → Subscription Plan Deployer
  2. **Pricing Optimization**: Pricing Strategy Optimizer → Pricing Tier Calculator → Plan Comparison Generator → Plan Validator

  **Complex Plans:**
  1. **Enterprise Plan Launch**: Plan Template Creator → Feature Bundle Manager → Pricing Strategy Optimizer → Pricing Tier Calculator → Billing Cycle Configurator → Trial Period Configurator → Access Control Mapper → Feature Compatibility Checker → Plan Validator → Plan Comparison Generator → Plan Migration Planner → Subscription Plan Deployer
  2. **Plan Portfolio Redesign**: Feature Bundle Manager → Pricing Strategy Optimizer → Plan Comparison Generator → Plan Migration Planner → Plan Validator → Subscription Plan Deployer

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Plan Template Creator",
    "tool_description": "Creates a base subscription plan template with essential metadata and structural components that can be further configured with features and pricing.",
    "parameters": {
      "plan_name": {
        "type": "string",
        "required": true,
        "description": "Name of the subscription plan"
      },
      "plan_description": {
        "type": "string",
        "required": true,
        "description": "Detailed description of what the plan offers"
      },
      "target_audience": {
        "type": "string",
        "required": true,
        "description": "Target customer segment (individual, small_business, enterprise, custom)"
      },
      "plan_category": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Plan category type (basic, standard, premium, enterprise)"
      }
    },
    "error_messages": [
      "Invalid plan name: Plan name must be 3-50 characters long and contain only alphanumeric characters, spaces, and hyphens.",
      "Invalid target audience: Must be one of [individual, small_business, enterprise, custom].",
      "Invalid plan category: Must be one of [basic, standard, premium, enterprise].",
      "Plan name already exists: Choose a unique plan name that doesn't conflict with existing plans."
    ],
    "usage": "Provide plan_name, plan_description, and target_audience to create a base plan template. Optionally specify plan_category to set the tier level.",
    "output_details": {
      "plan_id": {
        "type": "string",
        "description": "Unique identifier for the created plan template"
      },
      "plan_name": {
        "type": "string",
        "description": "Name of the subscription plan"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "When the plan template was created in ISO 8601 format"
      },
      "status": {
        "type": "string",
        "description": "Current status of the plan template (draft, configured, active)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Feature Bundle Manager",
    "tool_description": "Organizes and manages feature sets for subscription plans, allowing grouping of features into logical bundles with usage limits and restrictions.",
    "parameters": {
      "bundle_name": {
        "type": "string",
        "required": true,
        "description": "Name for the feature bundle"
      },
      "included_features": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50,
        "description": "List of feature identifiers to include in the bundle"
      },
      "usage_limits": {
        "type": "array",
        "required": false,
        "items": {"type": "integer"},
        "default": null,
        "description": "Usage limits corresponding to each feature (null for unlimited)"
      },
      "feature_restrictions": {
        "type": "array",
        "required": false,
        "items": {"type": "string"},
        "default": null,
        "description": "List of restriction rules applied to features"
      },
      "bundle_priority": {
        "type": "integer",
        "required": false,
        "default": 1,
        "description": "Priority level for feature access (1-10, higher numbers = higher priority)"
      }
    },
    "error_messages": [
      "Invalid bundle name: Bundle name must be 2-30 characters and contain only letters, numbers, and underscores.",
      "Feature not found: One or more features in included_features do not exist in the feature catalog.",
      "Usage limits mismatch: If provided, usage_limits array must have same length as included_features array.",
      "Invalid priority level: Bundle priority must be an integer between 1 and 10.",
      "Duplicate features: The included_features array contains duplicate feature identifiers."
    ],
    "usage": "Specify bundle_name and included_features array. Optionally add usage_limits, feature_restrictions, and bundle_priority to control feature access and behavior.",
    "output_details": {
      "bundle_id": {
        "type": "string",
        "description": "Unique identifier for the created feature bundle"
      },
      "total_features": {
        "type": "integer",
        "description": "Number of features included in the bundle"
      },
      "estimated_value": {
        "type": "number",
        "description": "Estimated monetary value of the feature bundle"
      },
      "compatibility_score": {
        "type": "number",
        "description": "Score indicating internal feature compatibility (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Pricing Tier Calculator",
    "tool_description": "Calculates pricing structures across different tiers and billing cycles, applying discounts and promotional pricing strategies.",
    "parameters": {
      "base_price": {
        "type": "number",
        "required": true,
        "description": "Base monthly price for the subscription plan"
      },
      "billing_cycles": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 6,
        "description": "Supported billing cycles (monthly, quarterly, semi_annual, annual, biennial, triennial)"
      },
      "discount_rates": {
        "type": "array",
        "required": false,
        "items": {"type": "number"},
        "default": null,
        "description": "Discount rates for each billing cycle (0-50 percentage)"
      },
      "currency": {
        "type": "string",
        "required": false,
        "default": "USD",
        "description": "Currency code for pricing (USD, EUR, GBP, etc.)"
      },
      "promotional_discount": {
        "type": "number",
        "required": false,
        "default": 0,
        "description": "Additional promotional discount percentage (0-75)"
      }
    },
    "error_messages": [
      "Invalid base price: Base price must be a positive number greater than 0.",
      "Invalid billing cycle: Supported cycles are [monthly, quarterly, semi_annual, annual, biennial, triennial].",
      "Discount rates mismatch: If provided, discount_rates array must match billing_cycles array length.",
      "Invalid discount rate: Each discount rate must be between 0 and 50.",
      "Invalid promotional discount: Promotional discount must be between 0 and 75.",
      "Unsupported currency: Currency code must be a valid 3-letter ISO currency code."
    ],
    "usage": "Provide base_price and billing_cycles array. Optionally specify discount_rates for each cycle, currency code, and promotional_discount for special offers.",
    "output_details": {
      "pricing_tiers": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of pricing tier descriptions with calculated amounts"
      },
      "total_discount_applied": {
        "type": "number",
        "description": "Total discount percentage applied across all factors"
      },
      "annual_savings": {
        "type": "number",
        "description": "Annual savings amount compared to monthly billing"
      },
      "price_competitiveness": {
        "type": "string",
        "description": "Market competitiveness rating (low, moderate, high, premium)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Billing Cycle Configurator",
    "tool_description": "Configures billing schedules, payment timing, and cycle-specific settings for subscription plans including grace periods and retry policies.",
    "parameters": {
      "primary_cycle": {
        "type": "string",
        "required": true,
        "description": "Primary billing cycle (monthly, quarterly, semi_annual, annual)"
      },
      "payment_timing": {
        "type": "string",
        "required": true,
        "description": "When payments are collected (prepaid, postpaid, split)"
      },
      "grace_period_days": {
        "type": "integer",
        "required": false,
        "default": 3,
        "description": "Days after failed payment before service suspension (0-30)"
      },
      "retry_attempts": {
        "type": "integer",
        "required": false,
        "default": 3,
        "description": "Number of automatic payment retry attempts (1-10)"
      },
      "retry_intervals": {
        "type": "array",
        "required": false,
        "items": {"type": "integer"},
        "default": [1, 3, 7],
        "description": "Days between retry attempts"
      },
      "proration_enabled": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to prorate charges for mid-cycle changes"
      },
      "auto_renewal": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether subscription auto-renews at cycle end"
      }
    },
    "error_messages": [
      "Invalid primary cycle: Must be one of [monthly, quarterly, semi_annual, annual].",
      "Invalid payment timing: Must be one of [prepaid, postpaid, split].",
      "Invalid grace period: Grace period must be between 0 and 30 days.",
      "Invalid retry attempts: Number of retry attempts must be between 1 and 10.",
      "Invalid retry intervals: Retry intervals must be positive integers, maximum 30 days each.",
      "Retry configuration mismatch: Number of retry intervals must match number of retry attempts."
    ],
    "usage": "Specify primary_cycle and payment_timing. Configure grace_period_days, retry_attempts, and retry_intervals for payment failure handling. Set proration_enabled and auto_renewal for subscription behavior.",
    "output_details": {
      "billing_schedule_id": {
        "type": "string",
        "description": "Unique identifier for the billing configuration"
      },
      "next_billing_date": {
        "type": "string",
        "description": "Calculated next billing date in ISO 8601 format"
      },
      "total_retry_period": {
        "type": "integer",
        "description": "Total days covered by all retry attempts"
      },
      "configuration_summary": {
        "type": "string",
        "description": "Human-readable summary of billing configuration"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Plan Validator",
    "tool_description": "Validates complete subscription plan configurations for business rule compliance, pricing consistency, and feature compatibility before deployment.",
    "parameters": {
      "plan_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the plan to validate"
      },
      "validation_scope": {
        "type": "string",
        "required": false,
        "default": "full",
        "description": "Validation scope (basic, standard, full, comprehensive)"
      },
      "check_market_compliance": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to validate against market regulations"
      },
      "region_codes": {
        "type": "array",
        "required": false,
        "items": {"type": "string"},
        "default": null,
        "description": "Regional compliance codes to validate against"
      }
    },
    "error_messages": [
      "Plan not found: The specified plan_id does not exist.",
      "Invalid validation scope: Must be one of [basic, standard, full, comprehensive].",
      "Incomplete plan configuration: Plan is missing required components for validation.",
      "Invalid region codes: One or more region codes are not supported.",
      "Market compliance check failed: Plan configuration violates regional regulations."
    ],
    "usage": "Provide plan_id to validate. Optionally set validation_scope for thoroughness level, enable check_market_compliance, and specify region_codes for regulatory validation.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result (passed, failed, warning)"
      },
      "error_count": {
        "type": "integer",
        "description": "Number of validation errors found"
      },
      "warning_count": {
        "type": "integer",
        "description": "Number of validation warnings found"
      },
      "validation_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of specific validation error messages"
      },
      "validation_warnings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of validation warning messages"
      },
      "compliance_score": {
        "type": "number",
        "description": "Overall compliance score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Feature Compatibility Checker",
    "tool_description": "Analyzes feature combinations within subscription plans to identify conflicts, dependencies, and optimization opportunities for feature sets.",
    "parameters": {
      "primary_features": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20,
        "description": "List of primary feature identifiers to check"
      },
      "secondary_features": {
        "type": "array",
        "required": false,
        "items": {"type": "string"},
        "default": null,
        "description": "List of secondary/optional features to analyze"
      }
    },
    "error_messages": [
      "Invalid feature identifiers: One or more features do not exist in the feature catalog.",
      "Insufficient features: At least one primary feature must be specified.",
      "Feature limit exceeded: Maximum 20 primary features can be checked simultaneously.",
      "Duplicate features: The same feature appears in both primary and secondary lists."
    ],
    "usage": "Provide primary_features array with core features to check. Optionally add secondary_features for comprehensive compatibility analysis across feature combinations.",
    "output_details": {
      "compatibility_status": {
        "type": "string",
        "description": "Overall compatibility assessment (compatible, conflicts_found, optimization_needed)"
      },
      "conflict_pairs": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of feature pairs that have conflicts"
      },
      "dependency_chains": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array describing feature dependency relationships"
      },
      "optimization_suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommendations for improving feature combinations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Pricing Strategy Optimizer",
    "tool_description": "Analyzes market conditions, competitor pricing, and cost structures to recommend optimal pricing strategies for subscription plans across multiple market segments.",
    "parameters": {
      "target_market": {
        "type": "string",
        "required": true,
        "description": "Primary target market segment (consumer, small_business, mid_market, enterprise)"
      },
      "competitor_prices": {
        "type": "array",
        "required": true,
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 10,
        "description": "Array of competitor pricing data points"
      },
      "cost_base": {
        "type": "number",
        "required": true,
        "description": "Base cost to deliver the service per subscriber"
      },
      "target_margin": {
        "type": "number",
        "required": true,
        "description": "Desired profit margin percentage (5-80)"
      },
      "market_conditions": {
        "type": "string",
        "required": false,
        "default": "stable",
        "description": "Current market conditions (growth, stable, declining, volatile)"
      },
      "customer_sensitivity": {
        "type": "string",
        "required": false,
        "default": "medium",
        "description": "Price sensitivity level of target customers (low, medium, high)"
      },
      "business_model": {
        "type": "string",
        "required": false,
        "default": "subscription",
        "description": "Revenue model type (subscription, usage_based, freemium, tiered)"
      },
      "geographic_region": {
        "type": "string",
        "required": false,
        "default": "north_america",
        "description": "Geographic market region for localized optimization"
      },
      "seasonal_factors": {
        "type": "array",
        "required": false,
        "items": {"type": "number"},
        "default": null,
        "description": "Monthly seasonal adjustment factors (12 values, 0.5-2.0 range)"
      },
      "promotional_budget": {
        "type": "number",
        "required": false,
        "default": 0,
        "description": "Available budget for promotional pricing initiatives"
      }
    },
    "error_messages": [
      "Invalid target market: Must be one of [consumer, small_business, mid_market, enterprise].",
      "Invalid competitor prices: All prices must be positive numbers greater than 0.",
      "Invalid cost base: Cost base must be a positive number.",
      "Invalid target margin: Target margin must be between 5 and 80 percent.",
      "Invalid market conditions: Must be one of [growth, stable, declining, volatile].",
      "Invalid customer sensitivity: Must be one of [low, medium, high].",
      "Invalid business model: Must be one of [subscription, usage_based, freemium, tiered].",
      "Invalid seasonal factors: Must provide exactly 12 factors between 0.5 and 2.0.",
      "Insufficient competitor data: At least one competitor price point is required."
    ],
    "usage": "Provide target_market, competitor_prices array, cost_base, and target_margin. Optionally specify market_conditions, customer_sensitivity, business_model, geographic_region, seasonal_factors, and promotional_budget for more precise optimization.",
    "output_details": {
      "recommended_price": {
        "type": "number",
        "description": "Optimized price recommendation based on analysis"
      },
      "price_range_min": {
        "type": "number",
        "description": "Minimum viable price point"
      },
      "price_range_max": {
        "type": "number",
        "description": "Maximum market-acceptable price point"
      },
      "competitive_position": {
        "type": "string",
        "description": "Position relative to competitors (below_market, market_rate, premium)"
      },
      "revenue_projection": {
        "type": "number",
        "description": "Projected monthly revenue per subscriber"
      },
      "market_penetration_score": {
        "type": "number",
        "description": "Expected market penetration potential (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Plan Comparison Generator",
    "tool_description": "Creates detailed comparison matrices and analysis reports between multiple subscription plans, highlighting differentiators and value propositions for marketing and sales teams.",
    "parameters": {
      "plan_ids": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 8,
        "description": "Array of plan identifiers to compare"
      },
      "comparison_dimensions": {
        "type": "array",
        "required": false,
        "items": {"type": "string"},
        "default": ["features", "pricing", "limits"],
        "description": "Aspects to compare (features, pricing, limits, support, billing, trial)"
      },
      "output_format": {
        "type": "string",
        "required": false,
        "default": "detailed",
        "description": "Comparison detail level (summary, detailed, comprehensive)"
      },
      "target_audience": {
        "type": "string",
        "required": false,
        "default": "general",
        "description": "Intended audience for comparison (sales, marketing, customers, internal)"
      },
      "highlight_differences": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to emphasize key differences between plans"
      }
    },
    "error_messages": [
      "Invalid plan count: Must compare between 2 and 8 plans simultaneously.",
      "Plan not found: One or more specified plan_ids do not exist.",
      "Invalid comparison dimension: Supported dimensions are [features, pricing, limits, support, billing, trial].",
      "Invalid output format: Must be one of [summary, detailed, comprehensive].",
      "Invalid target audience: Must be one of [sales, marketing, customers, internal].",
      "Plans not comparable: Plans have incompatible structures for meaningful comparison."
    ],
    "usage": "Provide plan_ids array with 2-8 plans to compare. Optionally specify comparison_dimensions, output_format, target_audience, and enable highlight_differences for customized comparison output.",
    "output_details": {
      "comparison_matrix": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Structured comparison data in matrix format"
      },
      "key_differentiators": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Most significant differences between compared plans"
      },
      "value_analysis": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Value proposition analysis for each plan"
      },
      "recommendation_summary": {
        "type": "string",
        "description": "High-level recommendations based on comparison"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Access Control Mapper",
    "tool_description": "Maps subscription plan features to specific access control rules, permissions, and user role assignments for system implementation and security enforcement.",
    "parameters": {
      "plan_id": {
        "type": "string",
        "required": true,
        "description": "Subscription plan identifier to map access controls for"
      },
      "permission_model": {
        "type": "string",
        "required": true,
        "description": "Access control model type (rbac, abac, simple, custom)"
      },
      "default_role": {
        "type": "string",
        "required": false,
        "default": "subscriber",
        "description": "Default role assigned to plan subscribers"
      }
    },
    "error_messages": [
      "Plan not found: The specified plan_id does not exist or is not accessible.",
      "Invalid permission model: Must be one of [rbac, abac, simple, custom].",
      "Invalid default role: The specified default role is not recognized in the system.",
      "Missing plan features: Plan must have configured features before mapping access controls."
    ],
    "usage": "Provide plan_id and permission_model to generate access control mappings. Optionally specify default_role for subscriber assignments. The tool creates comprehensive permission mappings for system implementation.",
    "output_details": {
      "access_rules": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of access control rules mapped to plan features"
      },
      "permission_matrix": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed permission matrix for feature access"
      },
      "role_assignments": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Role-based assignments for different user types"
      },
      "security_level": {
        "type": "string",
        "description": "Overall security level classification (basic, standard, high, enterprise)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Trial Period Configurator",
    "tool_description": "Configures trial period settings, limitations, and conversion strategies for subscription plans including trial length, feature restrictions, and post-trial actions.",
    "parameters": {
      "trial_duration_days": {
        "type": "integer",
        "required": true,
        "description": "Length of trial period in days (1-365)"
      },
      "trial_type": {
        "type": "string",
        "required": true,
        "description": "Type of trial offering (free, paid, freemium, limited_feature)"
      },
      "feature_limitations": {
        "type": "array",
        "required": false,
        "items": {"type": "string"},
        "default": null,
        "description": "List of features to restrict during trial period"
      },
      "usage_caps": {
        "type": "array",
        "required": false,
        "items": {"type": "integer"},
        "default": null,
        "description": "Usage limits for trial users (corresponding to features)"
      },
      "credit_card_required": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether credit card is required to start trial"
      },
      "auto_conversion": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether trial automatically converts to paid subscription"
      },
      "conversion_discount": {
        "type": "number",
        "required": false,
        "default": 0,
        "description": "Discount percentage for trial-to-paid conversion (0-50)"
      }
    },
    "error_messages": [
      "Invalid trial duration: Trial period must be between 1 and 365 days.",
      "Invalid trial type: Must be one of [free, paid, freemium, limited_feature].",
      "Usage caps mismatch: If provided, usage_caps array must match feature_limitations array length.",
      "Invalid conversion discount: Discount must be between 0 and 50 percent.",
      "Invalid usage cap values: All usage caps must be positive integers."
    ],
    "usage": "Specify trial_duration_days and trial_type. Optionally configure feature_limitations, usage_caps, credit_card_required, auto_conversion, and conversion_discount for comprehensive trial management.",
    "output_details": {
      "trial_config_id": {
        "type": "string",
        "description": "Unique identifier for the trial configuration"
      },
      "trial_end_date": {
        "type": "string",
        "description": "Calculated trial end date in ISO 8601 format"
      },
      "conversion_strategy": {
        "type": "string",
        "description": "Recommended conversion strategy based on configuration"
      },
      "estimated_conversion_rate": {
        "type": "number",
        "description": "Projected trial-to-paid conversion rate percentage"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Plan Migration Planner",
    "tool_description": "Plans and analyzes customer migration paths between subscription plans, identifying upgrade/downgrade scenarios, pricing impacts, and transition strategies to minimize churn.",
    "parameters": {
      "source_plan_id": {
        "type": "string",
        "required": true,
        "description": "Current subscription plan identifier"
      },
      "target_plan_id": {
        "type": "string",
        "required": true,
        "description": "Destination subscription plan identifier"
      },
      "migration_type": {
        "type": "string",
        "required": true,
        "description": "Type of migration (upgrade, downgrade, lateral, forced)"
      },
      "effective_date": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "When migration should take effect (ISO 8601 format)"
      },
      "proration_method": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "How to handle billing proration (none, standard, credit, refund)"
      },
      "grandfathering_enabled": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to preserve certain benefits from old plan"
      }
    },
    "error_messages": [
      "Source plan not found: The specified source_plan_id does not exist.",
      "Target plan not found: The specified target_plan_id does not exist.",
      "Invalid migration type: Must be one of [upgrade, downgrade, lateral, forced].",
      "Invalid effective date: Date must be in valid ISO 8601 format and not in the past.",
      "Invalid proration method: Must be one of
