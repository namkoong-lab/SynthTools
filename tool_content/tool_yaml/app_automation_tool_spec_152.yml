field_name: app_automation
subfield: mobile_app_testing
task: Device and environment management for testing across different mobile platforms and configurations
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to the complex coordination required across multiple mobile platforms (iOS, Android), various device configurations, OS versions, network conditions, and cloud/physical infrastructure. It involves significant dependencies between device provisioning, environment setup, test orchestration, and resource management, with high impact of errors on testing reliability and substantial infrastructure requirements.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'll target **17 tools** within the 15-20 range to cover device provisioning, environment configuration, test execution coordination, monitoring, and cleanup across diverse mobile testing scenarios.

  **STEP 3 — List all tool names and dependencies**

  1. **Device Pool Manager** - Consumes: device requirements → Produces: available device inventory
  2. **Device Provisioner** - Consumes: device specifications → Produces: provisioned device instances
  3. **OS Configuration Manager** - Consumes: OS requirements → Produces: configured OS environments
  4. **App Package Installer** - Consumes: app binaries, device targets → Produces: installed app instances
  5. **Network Environment Simulator** - Consumes: network profiles → Produces: simulated network conditions
  6. **Test Environment Builder** - Consumes: test specifications → Produces: complete test environments
  7. **Device Health Monitor** - Consumes: device instances → Produces: health metrics and alerts
  8. **Test Session Orchestrator** - Consumes: test plans, devices → Produces: coordinated test executions
  9. **Configuration Validator** - Consumes: setup parameters → Produces: validation results
  10. **Resource Allocation Manager** - Consumes: resource requests → Produces: allocated resources
  11. **Device State Snapshot** - Consumes: device instances → Produces: device state backups
  12. **Environment Cleanup Manager** - Consumes: session data → Produces: cleaned environments
  13. **Cross Platform Synchronizer** - Consumes: multi-platform requirements → Produces: synchronized environments
  14. **Test Data Seeder** - Consumes: test data specifications → Produces: seeded test data
  15. **Performance Baseline Tracker** - Consumes: performance metrics → Produces: baseline comparisons
  16. **Device Farm Controller** - Consumes: farm configurations → Produces: managed device farms
  17. **Environment Status Reporter** - Consumes: environment states → Produces: status reports

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  1. Basic device setup: Device Pool Manager → Device Provisioner → App Package Installer
  2. Environment validation: Configuration Validator → Device Health Monitor → Environment Status Reporter

  **Medium plans:**
  1. Multi-device test prep: Resource Allocation Manager → Device Provisioner → OS Configuration Manager → App Package Installer → Test Environment Builder
  2. Performance testing setup: Device Provisioner → Network Environment Simulator → Test Data Seeder → Performance Baseline Tracker → Test Session Orchestrator

  **Complex plans:**
  1. Full cross-platform test environment: Device Pool Manager → Resource Allocation Manager → Cross Platform Synchronizer → Device Provisioner → OS Configuration Manager → Network Environment Simulator → App Package Installer → Test Data Seeder → Test Environment Builder → Device Health Monitor → Test Session Orchestrator
  2. Enterprise testing pipeline: Device Farm Controller → Device Pool Manager → Resource Allocation Manager → Device Provisioner → OS Configuration Manager → Device State Snapshot → App Package Installer → Configuration Validator → Test Environment Builder → Performance Baseline Tracker → Environment Cleanup Manager

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Device Pool Manager",
    "tool_description": "Manages inventory and availability of mobile devices across different platforms, OS versions, and form factors for testing allocation.",
    "parameters": {
      "platform": {
        "type": "string",
        "required": true,
        "description": "Target platform: ios, android, or both"
      },
      "min_os_version": {
        "type": "string",
        "required": false,
        "description": "Minimum OS version required",
        "default": "None"
      },
      "max_os_version": {
        "type": "string",
        "required": false,
        "description": "Maximum OS version required",
        "default": "None"
      },
      "device_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific device models or types",
        "default": "None"
      },
      "required_count": {
        "type": "integer",
        "required": true,
        "description": "Number of devices needed"
      }
    },
    "error_messages": [
      "Invalid platform: Must be 'ios', 'android', or 'both'",
      "Insufficient devices: Not enough devices available matching the criteria",
      "Invalid OS version format: Use semantic versioning (e.g., 14.0, 11.0)",
      "Invalid device count: required_count must be greater than 0"
    ],
    "usage": "Specify platform and required_count, optionally filter by OS versions and device types to get available device inventory.",
    "output_details": {
      "available_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of available device identifiers"
      },
      "total_count": {
        "type": "integer",
        "description": "Total number of available devices"
      },
      "reservation_id": {
        "type": "string",
        "description": "Unique identifier for this device reservation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Device Provisioner",
    "tool_description": "Provisions and initializes mobile devices with specified configurations, preparing them for test execution.",
    "parameters": {
      "device_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of device identifiers to provision"
      },
      "provision_type": {
        "type": "string",
        "required": true,
        "description": "Type of provisioning: physical, simulator, or cloud"
      },
      "boot_timeout": {
        "type": "integer",
        "required": false,
        "description": "Maximum time to wait for device boot (seconds)",
        "default": 120
      }
    },
    "error_messages": [
      "Device provisioning failed: One or more devices could not be initialized",
      "Invalid provision type: Must be 'physical', 'simulator', or 'cloud'",
      "Boot timeout exceeded: Device failed to boot within specified timeout",
      "Device not found: One or more device IDs are invalid"
    ],
    "usage": "Provide device_ids and provision_type to initialize devices for testing, optionally set boot_timeout for custom wait times.",
    "output_details": {
      "provisioned_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of successfully provisioned device identifiers"
      },
      "provision_status": {
        "type": "string",
        "description": "Overall provisioning status"
      },
      "session_id": {
        "type": "string",
        "description": "Unique session identifier for this provisioning"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "OS Configuration Manager",
    "tool_description": "Configures operating system settings, permissions, and system-level parameters on provisioned mobile devices for consistent testing environments.",
    "parameters": {
      "device_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of device identifiers to configure"
      },
      "language_code": {
        "type": "string",
        "required": false,
        "description": "Device language (ISO 639-1 code)",
        "default": "en"
      },
      "region_code": {
        "type": "string",
        "required": false,
        "description": "Device region (ISO 3166-1 alpha-2 code)",
        "default": "US"
      },
      "timezone": {
        "type": "string",
        "required": false,
        "description": "Device timezone (IANA timezone identifier)",
        "default": "America/New_York"
      },
      "disable_animations": {
        "type": "boolean",
        "required": false,
        "description": "Whether to disable UI animations for faster testing",
        "default": true
      },
      "enable_developer_mode": {
        "type": "boolean",
        "required": false,
        "description": "Enable developer/debug mode",
        "default": true
      },
      "location_services": {
        "type": "boolean",
        "required": false,
        "description": "Enable location services",
        "default": false
      },
      "push_notifications": {
        "type": "boolean",
        "required": false,
        "description": "Enable push notifications",
        "default": false
      },
      "auto_lock_timeout": {
        "type": "integer",
        "required": false,
        "description": "Screen auto-lock timeout in seconds (0 for never)",
        "default": 0
      },
      "wifi_ssid": {
        "type": "string",
        "required": false,
        "description": "WiFi network SSID to connect to",
        "default": "None"
      },
      "wifi_password": {
        "type": "string",
        "required": false,
        "description": "WiFi network password",
        "default": "None"
      }
    },
    "error_messages": [
      "Configuration failed: Unable to apply OS settings to one or more devices",
      "Invalid language code: Use ISO 639-1 format (e.g., 'en', 'es', 'fr')",
      "Invalid region code: Use ISO 3166-1 alpha-2 format (e.g., 'US', 'UK', 'DE')",
      "Invalid timezone: Use IANA timezone identifier (e.g., 'America/New_York')",
      "WiFi connection failed: Unable to connect to specified network",
      "Permission denied: Insufficient privileges to modify system settings"
    ],
    "usage": "Provide device_ids and customize OS settings like language, region, timezone, and system preferences to create consistent testing environments.",
    "output_details": {
      "configured_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of successfully configured device identifiers"
      },
      "configuration_status": {
        "type": "string",
        "description": "Overall configuration status"
      },
      "applied_settings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of settings that were successfully applied"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "App Package Installer",
    "tool_description": "Installs and configures mobile applications on target devices, handling platform-specific installation procedures and app permissions.",
    "parameters": {
      "device_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of device identifiers for app installation"
      },
      "app_package_path": {
        "type": "string",
        "required": true,
        "description": "Path to the application package file (APK/IPA)"
      },
      "replace_existing": {
        "type": "boolean",
        "required": false,
        "description": "Whether to replace existing installation",
        "default": true
      },
      "grant_permissions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of permissions to auto-grant",
        "default": "None"
      },
      "install_timeout": {
        "type": "integer",
        "required": false,
        "description": "Installation timeout in seconds",
        "default": 300
      }
    },
    "error_messages": [
      "Package not found: The specified app package path does not exist",
      "Installation failed: App could not be installed on one or more devices",
      "Invalid package format: Package is not a valid APK or IPA file",
      "Installation timeout: Installation exceeded the specified timeout",
      "Insufficient storage: Device does not have enough storage space",
      "Permission grant failed: Unable to grant specified permissions"
    ],
    "usage": "Provide device_ids and app_package_path to install applications, optionally configure replacement behavior, permissions, and timeout settings.",
    "output_details": {
      "installed_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of devices where app was successfully installed"
      },
      "app_package_id": {
        "type": "string",
        "description": "Installed application package identifier"
      },
      "installation_status": {
        "type": "string",
        "description": "Overall installation status"
      },
      "granted_permissions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of permissions successfully granted"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Network Environment Simulator",
    "tool_description": "Simulates various network conditions and connectivity scenarios on mobile devices to test app behavior under different network constraints.",
    "parameters": {
      "device_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of device identifiers to apply network simulation"
      },
      "network_profile": {
        "type": "string",
        "required": true,
        "description": "Network condition profile: 5g, 4g, 3g, 2g, wifi, slow_wifi, offline"
      },
      "bandwidth_limit_kbps": {
        "type": "integer",
        "required": false,
        "description": "Custom bandwidth limit in kilobits per second",
        "default": "None"
      },
      "latency_ms": {
        "type": "integer",
        "required": false,
        "description": "Network latency in milliseconds",
        "default": "None"
      },
      "packet_loss_percent": {
        "type": "number",
        "required": false,
        "description": "Packet loss percentage (0-100)",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid network profile: Must be one of [5g, 4g, 3g, 2g, wifi, slow_wifi, offline]",
      "Network simulation failed: Unable to apply network conditions to one or more devices",
      "Invalid bandwidth limit: Must be a positive integer",
      "Invalid latency value: Must be a non-negative integer",
      "Invalid packet loss: Must be between 0 and 100"
    ],
    "usage": "Specify device_ids and network_profile to simulate network conditions, optionally customize bandwidth, latency, and packet loss parameters.",
    "output_details": {
      "simulated_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of devices with successfully applied network simulation"
      },
      "active_profile": {
        "type": "string",
        "description": "Currently active network profile"
      },
      "simulation_status": {
        "type": "string",
        "description": "Network simulation status"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Test Environment Builder",
    "tool_description": "Creates comprehensive test environments by coordinating device setup, app installation, data seeding, and configuration validation for test execution.",
    "parameters": {
      "environment_name": {
        "type": "string",
        "required": true,
        "description": "Unique name for the test environment"
      },
      "device_session_id": {
        "type": "string",
        "required": true,
        "description": "Device provisioning session identifier"
      },
      "app_package_id": {
        "type": "string",
        "required": false,
        "description": "Installed application package identifier",
        "default": "None"
      },
      "test_data_config": {
        "type": "string",
        "required": false,
        "description": "Test data configuration profile",
        "default": "default"
      },
      "parallel_setup": {
        "type": "boolean",
        "required": false,
        "description": "Whether to setup devices in parallel",
        "default": true
      }
    },
    "error_messages": [
      "Environment build failed: Unable to create complete test environment",
      "Invalid session ID: Device session not found or expired",
      "Missing dependencies: Required components not available for environment setup",
      "Environment name conflict: An environment with this name already exists"
    ],
    "usage": "Provide environment_name and device_session_id to build a complete test environment, optionally specify app and data configurations.",
    "output_details": {
      "environment_id": {
        "type": "string",
        "description": "Unique identifier for the created environment"
      },
      "ready_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of devices ready for testing"
      },
      "build_status": {
        "type": "string",
        "description": "Environment build status"
      },
      "environment_url": {
        "type": "string",
        "description": "Access URL for the test environment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Device Health Monitor",
    "tool_description": "Continuously monitors mobile device health metrics including CPU, memory, battery, temperature, and connectivity status during testing.",
    "parameters": {
      "device_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of device identifiers to monitor"
      },
      "monitoring_interval": {
        "type": "integer",
        "required": false,
        "description": "Monitoring interval in seconds",
        "default": 30
      },
      "alert_thresholds": {
        "type": "string",
        "required": false,
        "description": "Alert threshold profile: low, medium, high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Monitoring setup failed: Unable to initialize monitoring for one or more devices",
      "Invalid monitoring interval: Must be between 5 and 300 seconds",
      "Invalid threshold profile: Must be 'low', 'medium', or 'high'",
      "Device access denied: Insufficient permissions to monitor device metrics"
    ],
    "usage": "Provide device_ids to start monitoring, optionally configure monitoring_interval and alert_thresholds for customized monitoring behavior.",
    "output_details": {
      "monitoring_session_id": {
        "type": "string",
        "description": "Unique identifier for this monitoring session"
      },
      "monitored_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of devices successfully under monitoring"
      },
      "health_summary": {
        "type": "string",
        "description": "Current overall health status of monitored devices"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Test Session Orchestrator",
    "tool_description": "Orchestrates and coordinates test execution across multiple devices and environments, managing test scheduling, parallel execution, and result aggregation.",
    "parameters": {
      "environment_id": {
        "type": "string",
        "required": true,
        "description": "Test environment identifier"
      },
      "test_suite_path": {
        "type": "string",
        "required": true,
        "description": "Path to test suite configuration or test files"
      },
      "execution_strategy": {
        "type": "string",
        "required": true,
        "description": "Test execution strategy: parallel, sequential, or distributed"
      },
      "max_concurrent_tests": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of concurrent test executions",
        "default": 5
      },
      "test_timeout": {
        "type": "integer",
        "required": false,
        "description": "Individual test timeout in seconds",
        "default": 600
      },
      "retry_failed_tests": {
        "type": "boolean",
        "required": false,
        "description": "Whether to retry failed tests",
        "default": true
      },
      "max_retries": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of retries for failed tests",
        "default": 2
      }
    },
    "error_messages": [
      "Environment not ready: Test environment is not available or not properly configured",
      "Test suite not found: The specified test suite path does not exist",
      "Invalid execution strategy: Must be 'parallel', 'sequential', or 'distributed'",
      "Orchestration failed: Unable to coordinate test execution across devices",
      "Test timeout exceeded: One or more tests exceeded the specified timeout"
    ],
    "usage": "Provide environment_id, test_suite_path, and execution_strategy to orchestrate test execution, optionally configure concurrency, timeouts, and retry behavior.",
    "output_details": {
      "orchestration_id": {
        "type": "string",
        "description": "Unique identifier for this test orchestration session"
      },
      "scheduled_tests": {
        "type": "integer",
        "description": "Total number of tests scheduled for execution"
      },
      "execution_status": {
        "type": "string",
        "description": "Current orchestration status"
      },
      "start_time": {
        "type": "string",
        "description": "Test execution start timestamp"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Configuration Validator",
    "tool_description": "Validates test environment configurations, device compatibility, and setup parameters to ensure proper test execution conditions.",
    "parameters": {
      "validation_scope": {
        "type": "string",
        "required": true,
        "description": "Scope of validation: device, environment, app, or full"
      },
      "target_identifiers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of identifiers to validate (device IDs, environment IDs, etc.)"
      }
    },
    "error_messages": [
      "Invalid validation scope: Must be 'device', 'environment', 'app', or 'full'",
      "Validation failed: One or more configurations are invalid or incomplete",
      "Target not found: One or more specified identifiers are not valid",
      "Compatibility check failed: Configuration incompatibility detected"
    ],
    "usage": "Specify validation_scope and target_identifiers to validate configurations and ensure test readiness.",
    "output_details": {
      "validation_results": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of validation results for each target"
      },
      "overall_status": {
        "type": "string",
        "description": "Overall validation status"
      },
      "issues_found": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of issues or warnings found during validation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Resource Allocation Manager",
    "tool_description": "Manages allocation and scheduling of testing resources including devices, compute capacity, and infrastructure components to optimize test execution efficiency.",
    "parameters": {
      "resource_type": {
        "type": "string",
        "required": true,
        "description": "Type of resource to allocate: devices, compute, storage, or network"
      },
      "priority_level": {
        "type": "string",
        "required": true,
        "description": "Allocation priority: low, medium, high, or critical"
      },
      "duration_minutes": {
        "type": "integer",
        "required": true,
        "description": "Expected resource usage duration in minutes"
      },
      "resource_requirements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Specific resource requirements or constraints"
      },
      "schedule_start": {
        "type": "string",
        "required": false,
        "description": "Preferred start time for resource allocation",
        "format": "date-time",
        "default": "None"
      },
      "allow_preemption": {
        "type": "boolean",
        "required": false,
        "description": "Whether lower priority tasks can be preempted",
        "default": false
      },
      "resource_tags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Tags for resource filtering and organization",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid resource type: Must be 'devices', 'compute', 'storage', or 'network'",
      "Invalid priority level: Must be 'low', 'medium', 'high', or 'critical'",
      "Resource unavailable: Requested resources are not available for the specified duration",
      "Allocation conflict: Resource allocation conflicts with existing reservations",
      "Invalid duration: Duration must be between 1 and 1440 minutes (24 hours)"
    ],
    "usage": "Specify resource_type, priority_level, duration_minutes, and resource_requirements to allocate testing resources, optionally set scheduling and tagging preferences.",
    "output_details": {
      "allocation_id": {
        "type": "string",
        "description": "Unique identifier for this resource allocation"
      },
      "allocated_resources": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of allocated resource identifiers"
      },
      "allocation_status": {
        "type": "string",
        "description": "Current allocation status"
      },
      "estimated_start": {
        "type": "string",
        "description": "Estimated start time for resource availability"
      },
      "expiry_time": {
        "type": "string",
        "description": "Resource allocation expiry timestamp"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Device State Snapshot",
    "tool_description": "Creates and manages snapshots of device states, allowing for quick restoration and baseline comparisons during testing.",
    "parameters": {
      "device_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of device identifiers to snapshot"
      },
      "snapshot_name": {
        "type": "string",
        "required": true,
        "description": "Unique name for the snapshot"
      },
      "include_app_data": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include application data in snapshot",
        "default": true
      },
      "include_system_logs": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include system logs in snapshot",
        "default": false
      }
    },
    "error_messages": [
      "Snapshot creation failed: Unable to create snapshot for one or more devices",
      "Snapshot name conflict: A snapshot with this name already exists",
      "Insufficient storage: Not enough storage space for snapshot creation",
      "Device access error: Unable to access device for snapshot creation"
    ],
    "usage": "Provide device_ids and snapshot_name to create device state snapshots, optionally configure data inclusion preferences.",
    "output_details": {
      "snapshot_id": {
        "type": "string",
        "description": "Unique identifier for the created snapshot"
      },
      "snapshot_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of devices included in the snapshot"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "Snapshot creation timestamp"
      },
      "snapshot_size": {
        "type": "integer",
        "description": "Total size of snapshot in bytes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Environment Cleanup Manager",
    "tool_description": "Handles cleanup and teardown of test environments, releasing resources, removing temporary data, and restoring devices to clean states.",
    "parameters": {
      "cleanup_scope": {
        "type": "string",
        "required": true,
        "description": "Scope of cleanup: session, environment, device, or full"
      },
      "target_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of identifiers to clean up (session IDs, environment IDs, device IDs)"
      },
      "preserve_logs": {
        "type": "boolean",
        "required": false,
        "description": "Whether to preserve logs during cleanup",
        "default": true
      },
      "force_cleanup": {
        "type": "boolean",
        "required": false,
        "description": "Force cleanup even if resources are in use",
        "default": false
      },
      "cleanup_timeout": {
        "type": "integer",
        "required": false,
        "description": "Maximum time to spend on cleanup in seconds",
        "default": 300
      }
    },
    "error_messages": [
      "Invalid cleanup scope: Must be 'session', 'environment', 'device', or 'full'",
      "Cleanup failed: Unable to complete cleanup for one or more targets",
      "Resource in use: Cannot cleanup resources that are currently active (use force_cleanup if needed)",
      "Cleanup timeout: Cleanup operation exceeded the specified timeout"
    ],
    "usage": "Specify cleanup_scope and target_ids to clean up test environments and resources, optionally configure preservation and timeout settings.",
    "output_details": {
      "cleanup_summary": {
        "type": "string",
        "description": "Summary of cleanup operations performed"
      },
      "cleaned_targets": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of successfully cleaned up targets"
      },
      "cleanup_status": {
        "type": "string",
        "description": "Overall cleanup status"
      },
      "resources_released": {
        "type": "integer",
        "description": "Number of resources released during cleanup"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross Platform Synchronizer",
    "tool_description": "Synchronizes configurations and test execution across different mobile platforms (iOS/Android) to ensure consistent cross-platform testing.",
    "parameters": {
      "platform_configs": {
        "type": "array",
        "items": {
          "type": "string"
