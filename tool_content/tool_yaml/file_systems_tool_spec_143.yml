field_name: file_systems
subfield: Directory Structure Management
task: Search and locate files across directory trees using various criteria and filters
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task involves searching and locating files across directory trees with various criteria and filters. The difficulty is **medium** because it requires handling diverse search criteria (name patterns, size, dates, content), managing different file system structures, dealing with permissions and access issues, and coordinating multiple filtering operations efficiently.\n\n## STEP 2 — Set a tool budget\n\nGiven the medium complexity, I'll target **12 tools** to cover the breadth of file search operations while maintaining focused, composable functionality.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tool names with dependencies:**\n1. **Basic File Finder** - Consumes: path, patterns → Produces: file lists\n2. **Size Filter** - Consumes: file lists, size criteria → Produces: filtered file lists  \n3. **Date Filter** - Consumes: file lists, date criteria → Produces: filtered file lists\n4. **Content Searcher** - Consumes: file lists, search terms → Produces: matching files with context\n5. **Permission Analyzer** - Consumes: file lists → Produces: permission metadata\n6. **File Type Classifier** - Consumes: file lists → Produces: categorized file lists\n7. **Path Validator** - Consumes: directory paths → Produces: validation status\n8. **Search Result Sorter** - Consumes: file lists, sort criteria → Produces: sorted file lists\n9. **Duplicate Detector** - Consumes: file lists → Produces: duplicate file groups\n10. **Metadata Extractor** - Consumes: file lists → Produces: detailed file metadata\n11. **Search Statistics Generator** - Consumes: search results → Produces: summary statistics\n12. **Result Exporter** - Consumes: search results, format specs → Produces: exported data\n\n## STEP 4 — Multi-tool plans\n\n**Simple plans:**\n- Basic search: Path Validator → Basic File Finder → Search Result Sorter\n- Size-based filtering: Basic File Finder → Size Filter → Result Exporter\n\n**Medium plans:**  \n- Content search with metadata: Path Validator → Basic File Finder → Content Searcher → Metadata Extractor → Search Result Sorter\n- Filtered search with stats: Basic File Finder → Date Filter → File Type Classifier → Search Statistics Generator\n\n**Complex plans:**\n- Comprehensive file audit: Path Validator → Basic File Finder → Size Filter → Date Filter → Permission Analyzer → File Type Classifier → Duplicate Detector → Metadata Extractor → Search Result Sorter → Search Statistics Generator → Result Exporter\n- Advanced content analysis: Basic File Finder → Content Searcher → File Type Classifier → Permission Analyzer → Metadata Extractor → Search Result Sorter → Result Exporter\n\n## STEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"Basic File Finder\",\n  \"tool_description\": \"Searches for files and directories within a specified path using name patterns, with options for recursive traversal and case sensitivity.\",\n  \"parameters\": {\n    \"search_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Root directory path to start the search from\"\n    },\n    \"name_patterns\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"File name patterns to match (supports wildcards like *.txt, test_*)\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"recursive\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to search subdirectories recursively\",\n      \"default\": true\n    },\n    \"case_sensitive\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether pattern matching is case sensitive\",\n      \"default\": false\n    },\n    \"include_directories\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include directories in results\",\n      \"default\": false\n    },\n    \"max_depth\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\":\
  \ \"Maximum directory depth to search (1-50)\",\n      \"default\": 10\n    }\n  },\n  \"error_messages\": [\n    \"Invalid search path: Ensure the provided path exists and is accessible.\",\n    \"Empty name patterns: At least one name pattern must be provided.\",\n    \"Invalid max depth: Value must be between 1 and 50.\",\n    \"Permission denied: Insufficient permissions to access the specified directory.\",\n    \"Path too long: The search path exceeds system limits.\"\n  ],\n  \"usage\": \"Provide search_path and name_patterns array. Optionally configure recursive search, case sensitivity, directory inclusion, and maximum depth. Returns a list of matching file paths.\",\n  \"output_details\": {\n    \"total_files\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of files found\"\n    },\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of absolute file paths that match the search criteria\"\n    },\n    \"search_duration\": {\n      \"type\": \"number\",\n      \"description\": \"Time taken to complete the search in seconds\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Size Filter\",\n  \"tool_description\": \"Filters a list of file paths based on file size criteria, supporting minimum and maximum size bounds with various units.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to filter by size\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10000\n    },\n    \"min_size\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum file size (must be >= 0)\",\n      \"default\": 0\n    },\n    \"max_size\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Maximum file size (must be > min_size)\",\n      \"default\": null\n    },\n    \"size_unit\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Size unit: bytes, KB, MB, GB, TB\",\n      \"default\": \"bytes\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path to filter.\",\n    \"Invalid size range: max_size must be greater than min_size.\",\n    \"Invalid size unit: Use one of [bytes, KB, MB, GB, TB].\",\n    \"File access error: One or more files cannot be accessed for size information.\",\n    \"Invalid size values: min_size must be >= 0 and max_size must be positive if specified.\"\n  ],\n  \"usage\": \"Provide an array of file_paths and optionally set min_size, max_size, and size_unit. Files within the specified size range will be returned.\",\n  \"output_details\": {\n    \"filtered_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths that match the size criteria\"\n    },\n    \"files_removed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of files excluded by the size filter\"\n    },\n    \"avg_file_size\": {\n      \"type\": \"number\",\n      \"description\": \"Average size of filtered files in specified unit\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Date Filter\",\n  \"tool_description\": \"Filters files based on creation, modification, or access dates within specified time ranges.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to filter by date\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10000\n    },\n    \"date_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of date to filter by: created, modified, or accessed\"\n    },\n    \"start_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Start of date range (ISO 8601 format)\",\n      \"format\": \"date-time\"\
  ,\n      \"default\": null\n    },\n    \"end_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"End of date range (ISO 8601 format)\",\n      \"format\": \"date-time\",\n      \"default\": null\n    },\n    \"days_ago\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Filter files from N days ago to present (1-3650)\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path to filter.\",\n    \"Invalid date type: Use one of [created, modified, accessed].\",\n    \"Invalid date format: Dates must be in ISO 8601 format.\",\n    \"Invalid date range: start_date must be before end_date.\",\n    \"Invalid days_ago: Value must be between 1 and 3650.\",\n    \"Conflicting parameters: Use either date range (start_date/end_date) or days_ago, not both.\",\n    \"File timestamp error: Cannot retrieve date information for one or more files.\"\n  ],\n  \"usage\": \"Provide file_paths array and date_type. Specify either a date range with start_date/end_date or use days_ago for recent files. Returns files matching the date criteria.\",\n  \"output_details\": {\n    \"filtered_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths that match the date criteria\"\n    },\n    \"files_removed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of files excluded by the date filter\"\n    },\n    \"date_range_used\": {\n      \"type\": \"string\",\n      \"description\": \"Actual date range applied for filtering\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Content Searcher\",\n  \"tool_description\": \"Searches for specific text content within files, supporting multiple search terms, regex patterns, and context extraction around matches.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to search within\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 5000\n    },\n    \"search_terms\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Terms or patterns to search for within files\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"use_regex\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether search terms are regular expressions\",\n      \"default\": false\n    },\n    \"case_sensitive\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether search is case sensitive\",\n      \"default\": false\n    },\n    \"context_lines\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of lines before/after match to include (0-10)\",\n      \"default\": 2\n    },\n    \"match_all_terms\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether all search terms must be found in a file (AND vs OR)\",\n      \"default\": false\n    },\n    \"file_types\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"File extensions to search in (e.g., txt, py, java)\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"maxItems\": 20,\n      \"default\": null\n    },\n    \"max_file_size_mb\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Maximum file size to search in MB (1-100)\",\n      \"default\": 50\n    },\n    \"encoding\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Text encoding to use: utf-8, ascii, latin-1\",\n      \"default\": \"utf-8\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path to search.\",\n    \"Empty search terms: Provide at least one search term.\",\n    \"Invalid regex pattern: One or more search\
  \ terms contain invalid regex syntax.\",\n    \"Invalid context lines: Value must be between 0 and 10.\",\n    \"Invalid file size limit: max_file_size_mb must be between 1 and 100.\",\n    \"Invalid encoding: Use one of [utf-8, ascii, latin-1].\",\n    \"File read error: Cannot read one or more files due to permissions or encoding issues.\",\n    \"Binary file detected: File appears to be binary and cannot be searched as text.\"\n  ],\n  \"usage\": \"Provide file_paths and search_terms arrays. Configure regex usage, case sensitivity, context extraction, and other search options. Returns files containing matches with highlighted context.\",\n  \"output_details\": {\n    \"matching_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths containing matching content\"\n    },\n    \"total_matches\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of matches found across all files\"\n    },\n    \"files_searched\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of files that were successfully searched\"\n    },\n    \"search_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of search results and match distribution\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Permission Analyzer\",\n  \"tool_description\": \"Analyzes file and directory permissions, ownership, and access rights for a given list of paths.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file or directory paths to analyze\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10000\n    },\n    \"check_readable\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Check if files are readable by current user\",\n      \"default\": true\n    },\n    \"check_writable\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Check if files are writable by current user\",\n      \"default\": true\n    },\n    \"check_executable\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Check if files are executable by current user\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path to analyze.\",\n    \"Path does not exist: One or more specified paths do not exist.\",\n    \"Permission denied: Cannot access permission information for one or more files.\",\n    \"System error: Unable to retrieve permission data due to system limitations.\"\n  ],\n  \"usage\": \"Provide an array of file_paths to analyze. Optionally specify which permission types to check. Returns detailed permission information for each file.\",\n  \"output_details\": {\n    \"analyzed_files\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of files successfully analyzed\"\n    },\n    \"readable_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths that are readable\"\n    },\n    \"writable_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths that are writable\"\n    },\n    \"executable_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths that are executable\"\n    },\n    \"permission_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of permission analysis results\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"File Type Classifier\",\n  \"tool_description\": \"Classifies files into categories based on extensions, MIME types, and content analysis, organizing them into logical groups.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array\
  \ of file paths to classify\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10000\n    },\n    \"classification_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Method to use: extension, content, or both\",\n      \"default\": \"extension\"\n    },\n    \"custom_categories\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Custom category names to include in classification\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"maxItems\": 10,\n      \"default\": null\n    },\n    \"include_unknown\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include files with unknown/unrecognized types\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path to classify.\",\n    \"Invalid classification method: Use one of [extension, content, both].\",\n    \"File access error: Cannot access one or more files for classification.\",\n    \"Content analysis failed: Unable to determine content type for some files.\"\n  ],\n  \"usage\": \"Provide file_paths array and optionally specify classification_method and custom_categories. Files will be categorized into standard or custom groups based on their type.\",\n  \"output_details\": {\n    \"document_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of document file paths (pdf, doc, txt, etc.)\"\n    },\n    \"image_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of image file paths (jpg, png, gif, etc.)\"\n    },\n    \"audio_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of audio file paths (mp3, wav, flac, etc.)\"\n    },\n    \"video_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of video file paths (mp4, avi, mkv, etc.)\"\n    },\n    \"code_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of source code file paths (py, java, cpp, etc.)\"\n    },\n    \"archive_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of archive file paths (zip, tar, rar, etc.)\"\n    },\n    \"unknown_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of files with unknown or unrecognized types\"\n    },\n    \"classification_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of file classification results by category\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Path Validator\",\n  \"tool_description\": \"Validates directory and file paths for existence, accessibility, and correctness before performing search operations.\",\n  \"parameters\": {\n    \"paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file or directory paths to validate\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 100\n    },\n    \"check_permissions\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check read permissions on paths\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Empty path list: Provide at least one path to validate.\",\n    \"Invalid path format: One or more paths contain invalid characters or format.\",\n    \"Path length exceeded: One or more paths exceed maximum system length.\"\n  ],\n  \"usage\": \"Provide an array of paths to validate. Optionally enable permission checking. Returns validation status for each path and overall summary.\",\n  \"output_details\": {\n\
  \    \"valid_paths\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of paths that exist and are accessible\"\n    },\n    \"invalid_paths\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of paths that do not exist or are inaccessible\"\n    },\n    \"validation_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of path validation results\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Search Result Sorter\",\n  \"tool_description\": \"Sorts file search results based on various criteria such as name, size, date, or path depth with ascending/descending options.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to sort\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 50000\n    },\n    \"sort_by\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Sorting criteria: name, size, modified_date, created_date, path_depth, extension\"\n    },\n    \"ascending\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Sort in ascending order (true) or descending (false)\",\n      \"default\": true\n    },\n    \"secondary_sort\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Secondary sort criteria for tie-breaking\",\n      \"default\": null\n    },\n    \"limit\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum number of results to return (1-10000)\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path to sort.\",\n    \"Invalid sort criteria: Use one of [name, size, modified_date, created_date, path_depth, extension].\",\n    \"Invalid limit: Value must be between 1 and 10000.\",\n    \"File access error: Cannot access file information needed for sorting.\",\n    \"Sort operation failed: Unable to complete sorting due to system error.\"\n  ],\n  \"usage\": \"Provide file_paths array and sort_by criteria. Optionally set ascending order, secondary sort, and result limit. Returns sorted file list based on specified criteria.\",\n  \"output_details\": {\n    \"sorted_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of file paths sorted according to specified criteria\"\n    },\n    \"total_files\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of files in the sorted result\"\n    },\n    \"sort_criteria_used\": {\n      \"type\": \"string\",\n      \"description\": \"Description of the sorting criteria applied\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Duplicate Detector\",\n  \"tool_description\": \"Identifies duplicate files based on content hash comparison, file size, or name patterns, grouping duplicates together for review.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to check for duplicates\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 2,\n      \"maxItems\": 10000\n    },\n    \"detection_method\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Method to detect duplicates: hash, size, name, size_and_name\"\n    },\n    \"hash_algorithm\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Hash algorithm for content comparison: md5, sha1, sha256\",\n      \"default\": \"md5\"\n    },\n    \"ignore_extensions\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to ignore file extensions when comparing names\",\n      \"default\": false\n    },\n    \"min_file_size\": {\n      \"type\": \"number\",\n      \"required\"\
  : false,\n      \"description\": \"Minimum file size in bytes to include in duplicate detection\",\n      \"default\": 0\n    },\n    \"case_sensitive_names\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether name comparison is case sensitive\",\n      \"default\": false\n    },\n    \"exclude_empty_files\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to exclude zero-byte files from duplicate detection\",\n      \"default\": true\n    },\n    \"max_file_size_mb\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Maximum file size in MB to process (1-1000)\",\n      \"default\": 100\n    },\n    \"quick_scan\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Use quick scanning (size + partial hash) for large files\",\n      \"default\": false\n    },\n    \"group_by_directory\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Group duplicate results by parent directory\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Insufficient files: At least 2 files are required for duplicate detection.\",\n    \"Invalid detection method: Use one of [hash, size, name, size_and_name].\",\n    \"Invalid hash algorithm: Use one of [md5, sha1, sha256].\",\n    \"Invalid file size limits: min_file_size must be >= 0, max_file_size_mb must be between 1 and 1000.\",\n    \"File access error: Cannot read one or more files for duplicate detection.\",\n    \"Hash calculation failed: Unable to calculate hash for one or more files.\",\n    \"Memory limit exceeded: Too many large files for duplicate detection.\"\n  ],\n  \"usage\": \"Provide file_paths array and detection_method. Configure hash algorithm, size limits, name comparison options, and performance settings. Returns groups of duplicate files found.\",\n  \"output_details\": {\n    \"duplicate_groups\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of duplicate file group identifiers with file paths\"\n    },\n    \"total_duplicates\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of duplicate files found\"\n    },\n    \"unique_files\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of files with no duplicates\"\n    },\n    \"space_wasted\": {\n      \"type\": \"number\",\n      \"description\": \"Total disk space consumed by duplicate files in bytes\"\n    },\n    \"detection_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of duplicate detection results and method used\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Metadata Extractor\",\n  \"tool_description\": \"Extracts comprehensive metadata from files including size, dates, permissions, ownership, and file-type specific properties.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to extract metadata from\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 5000\n    },\n    \"include_extended\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include extended metadata (EXIF, ID3, document properties)\",\n      \"default\": false\n    },\n    \"include_checksums\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to calculate and include file checksums\",\n      \"default\": false\n    },\n    \"checksum_algorithm\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Checksum algorithm to use: md5, sha1, sha256\",\n      \"default\": \"md5\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path for metadata extraction.\",\n    \"Invalid checksum algorithm: Use one of [md5, sha1, sha256].\",\n    \"File access error: Cannot access one or more\
  \ files for metadata extraction.\",\n    \"Metadata extraction failed: Unable to extract metadata from one or more files.\",\n    \"Extended metadata unavailable: Extended metadata extraction failed for some file types.\"\n  ],\n  \"usage\": \"Provide file_paths array and optionally enable extended metadata and checksum calculation. Returns comprehensive metadata information for each file.\",\n  \"output_details\": {\n    \"files_processed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of files successfully processed\"\n    },\n    \"metadata_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of metadata extraction results\"\n    },\n    \"total_size\": {\n      \"type\": \"number\",\n      \"description\": \"Combined size of all processed files in bytes\"\n    },\n    \"file_types_found\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of unique file types discovered\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Search Statistics Generator\",\n  \"tool_description\": \"Generates comprehensive statistics and summary reports from file search results including counts, sizes, distributions, and trends.\",\n  \"parameters\": {\n    \"file_paths\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of file paths to generate statistics from\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 50000\n    },\n    \"include_size_distribution\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include file size distribution analysis\",\n      \"default\": true\n    },\n    \"include_date_analysis\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include date-based analysis and trends\",\n      \"default\": true\n    },\n    \"include_type_breakdown\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include file type breakdown statistics\",\n      \"default\": true\n    },\n    \"group_by_directory\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to group statistics by parent directory\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Empty file list: Provide at least one file path for statistics generation.\",\n    \"File access error: Cannot access file information needed for statistics.\",\n    \"Statistics calculation failed: Unable to generate statistics due to data issues.\",\n    \"Insufficient data:"
