field_name: customer_support
subfield: customer_feedback_analysis
task: Collect and aggregate customer feedback from multiple channels and platforms
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task has medium difficulty. It involves coordinating data collection across multiple disparate platforms (each with different APIs, formats, and authentication), handling diverse data formats and schemas, managing API rate limits and failures, and ensuring data consistency during aggregation. The scope is broad with moderate technical complexity but manageable risk if errors occur.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty, I'm targeting 12 tools within the 10-15 range. This allows for comprehensive coverage of different feedback channels, data processing steps, and aggregation workflows while maintaining tool composability.

  ## STEP 3 — List all tool names and dependencies

  1. **Social Media Feedback Collector** - Consumes: platform credentials, search terms → Produces: raw social media posts
  2. **Survey Response Fetcher** - Consumes: survey platform config → Produces: structured survey responses
  3. **Email Feedback Parser** - Consumes: email credentials, filters → Produces: parsed feedback emails
  4. **Review Site Scraper** - Consumes: review site URLs, product IDs → Produces: customer reviews
  5. **Chat Log Extractor** - Consumes: chat platform credentials, date ranges → Produces: chat transcripts
  6. **Feedback Data Normalizer** - Consumes: raw feedback from any source → Produces: standardized feedback format
  7. **Sentiment Analyzer** - Consumes: normalized text feedback → Produces: sentiment scores
  8. **Topic Classifier** - Consumes: normalized feedback → Produces: categorized topics
  9. **Duplicate Detector** - Consumes: multiple feedback records → Produces: deduplicated dataset
  10. **Feedback Aggregator** - Consumes: processed feedback from multiple sources → Produces: aggregated metrics
  11. **Trend Analyzer** - Consumes: time-series feedback data → Produces: trend insights
  12. **Report Generator** - Consumes: aggregated data, trends → Produces: comprehensive feedback report

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. Basic Social Media Analysis: Social Media Feedback Collector → Feedback Data Normalizer → Sentiment Analyzer → Report Generator
  2. Survey Analysis: Survey Response Fetcher → Topic Classifier → Report Generator

  **Medium Plans:**
  1. Multi-Channel Collection: Email Feedback Parser + Review Site Scraper → Feedback Data Normalizer → Duplicate Detector → Sentiment Analyzer → Feedback Aggregator → Report Generator
  2. Comprehensive Review Analysis: Review Site Scraper → Feedback Data Normalizer → Sentiment Analyzer → Topic Classifier → Trend Analyzer → Report Generator

  **Complex Plans:**
  1. Full Multi-Channel Analysis: Social Media Feedback Collector + Survey Response Fetcher + Email Feedback Parser + Chat Log Extractor → Feedback Data Normalizer → Duplicate Detector → Sentiment Analyzer → Topic Classifier → Feedback Aggregator → Trend Analyzer → Report Generator
  2. Enterprise Feedback Pipeline: Review Site Scraper + Email Feedback Parser + Chat Log Extractor → Feedback Data Normalizer → Duplicate Detector → Sentiment Analyzer → Topic Classifier → Feedback Aggregator → Trend Analyzer → Report Generator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Social Media Feedback Collector",
    "tool_description": "Collects customer feedback from social media platforms using search terms and hashtags within specified time ranges.",
    "parameters": {
      "platform": {
        "type": "string",
        "required": true,
        "description": "Social media platform to collect from (twitter, facebook, instagram, linkedin)"
      },
      "search_terms": {
        "type": "array",
        "required": true,
        "description": "Keywords or phrases to search for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for feedback collection",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for feedback collection",
        "format": "date-time"
      },
      "max_results": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of posts to collect (1-1000)",
        "default": 100
      }
    },
    "error_messages": [
      "Invalid platform: Platform must be one of [twitter, facebook, instagram, linkedin]",
      "Invalid date range: start_date must be before end_date and both must be valid ISO 8601 timestamps",
      "Empty search terms: At least one search term must be provided",
      "Invalid max_results: Value must be between 1 and 1000",
      "API authentication failed: Check platform credentials and permissions"
    ],
    "usage": "Specify the social media platform, search terms, date range, and optionally the maximum number of results. The tool will return collected posts with metadata.",
    "output_details": {
      "total_collected": {
        "type": "integer",
        "description": "Number of posts successfully collected"
      },
      "posts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of post content text"
      },
      "timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of post timestamps in ISO 8601 format"
      },
      "user_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of anonymized user identifiers"
      },
      "engagement_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of engagement metrics (likes, shares, comments combined)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Survey Response Fetcher",
    "tool_description": "Retrieves customer feedback responses from survey platforms with filtering and pagination support.",
    "parameters": {
      "survey_platform": {
        "type": "string",
        "required": true,
        "description": "Survey platform name (surveymonkey, typeform, google_forms, qualtrics)"
      },
      "survey_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the survey"
      },
      "api_key": {
        "type": "string",
        "required": true,
        "description": "API key for platform authentication"
      }
    },
    "error_messages": [
      "Unsupported platform: Platform must be one of [surveymonkey, typeform, google_forms, qualtrics]",
      "Invalid survey_id: Survey ID not found or inaccessible",
      "Authentication failed: Invalid or expired API key",
      "Rate limit exceeded: Too many requests, wait before retrying"
    ],
    "usage": "Provide the survey platform, survey ID, and valid API key to retrieve all responses from the specified survey.",
    "output_details": {
      "response_count": {
        "type": "integer",
        "description": "Total number of survey responses retrieved"
      },
      "responses": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of complete survey response text"
      },
      "completion_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of response completion timestamps"
      },
      "response_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of unique response identifiers"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Email Feedback Parser",
    "tool_description": "Extracts and parses customer feedback from email inboxes using filters and keyword matching to identify relevant messages.",
    "parameters": {
      "email_provider": {
        "type": "string",
        "required": true,
        "description": "Email service provider (gmail, outlook, imap)"
      },
      "username": {
        "type": "string",
        "required": true,
        "description": "Email account username"
      },
      "password": {
        "type": "string",
        "required": true,
        "description": "Email account password or app-specific password"
      },
      "folder_name": {
        "type": "string",
        "required": false,
        "description": "Specific email folder to search",
        "default": "inbox"
      },
      "subject_keywords": {
        "type": "array",
        "required": false,
        "description": "Keywords to filter email subjects",
        "items": {"type": "string"},
        "default": "None"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for email search",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for email search",
        "format": "date-time"
      },
      "max_emails": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of emails to process (1-500)",
        "default": 100
      }
    },
    "error_messages": [
      "Unsupported email provider: Must be one of [gmail, outlook, imap]",
      "Authentication failed: Invalid username or password credentials",
      "Invalid date range: start_date must be before end_date",
      "Folder not found: Specified email folder does not exist",
      "Connection timeout: Unable to connect to email server, check network settings",
      "Invalid max_emails: Value must be between 1 and 500"
    ],
    "usage": "Configure email provider credentials, specify date range and filtering criteria. The tool will extract feedback content from matching emails.",
    "output_details": {
      "emails_processed": {
        "type": "integer",
        "description": "Number of emails successfully processed"
      },
      "feedback_content": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of extracted feedback text from email bodies"
      },
      "email_subjects": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of email subject lines"
      },
      "sender_domains": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of sender email domains"
      },
      "received_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of email received timestamps"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Site Scraper",
    "tool_description": "Scrapes customer reviews from popular review websites for specified products or services.",
    "parameters": {
      "site_name": {
        "type": "string",
        "required": true,
        "description": "Review website to scrape (yelp, google_reviews, amazon, trustpilot, glassdoor)"
      },
      "product_identifier": {
        "type": "string",
        "required": true,
        "description": "Product ID, business name, or URL identifier for the item to review"
      },
      "max_reviews": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of reviews to scrape (1-200)",
        "default": 50
      },
      "min_rating": {
        "type": "integer",
        "required": false,
        "description": "Minimum star rating to include (1-5)",
        "default": 1
      }
    },
    "error_messages": [
      "Unsupported review site: Must be one of [yelp, google_reviews, amazon, trustpilot, glassdoor]",
      "Product not found: Unable to locate product with given identifier",
      "Scraping blocked: Website has blocked automated access, try again later",
      "Invalid max_reviews: Value must be between 1 and 200",
      "Invalid min_rating: Value must be between 1 and 5"
    ],
    "usage": "Specify the review site and product identifier, optionally set limits on number of reviews and minimum rating. The tool returns scraped review data.",
    "output_details": {
      "reviews_collected": {
        "type": "integer",
        "description": "Number of reviews successfully scraped"
      },
      "review_text": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of review content text"
      },
      "ratings": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Array of star ratings (1-5)"
      },
      "review_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of review posting dates"
      },
      "reviewer_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of anonymized reviewer identifiers"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Chat Log Extractor",
    "tool_description": "Extracts customer feedback from chat logs and support ticket systems within specified time ranges.",
    "parameters": {
      "chat_platform": {
        "type": "string",
        "required": true,
        "description": "Chat platform or support system (zendesk, intercom, slack, teams, freshchat)"
      },
      "api_token": {
        "type": "string",
        "required": true,
        "description": "API authentication token for the platform"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for chat log extraction",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for chat log extraction",
        "format": "date-time"
      },
      "extract_customer_only": {
        "type": "boolean",
        "required": false,
        "description": "If true, extract only customer messages, not agent responses",
        "default": true
      }
    },
    "error_messages": [
      "Unsupported platform: Must be one of [zendesk, intercom, slack, teams, freshchat]",
      "Invalid API token: Authentication failed with provided token",
      "Invalid date range: start_date must be before end_date",
      "No chat data found: No conversations exist in the specified time range",
      "Rate limit exceeded: API quota reached, wait before making more requests"
    ],
    "usage": "Configure chat platform credentials and specify the date range. Set extract_customer_only to focus on customer messages versus full conversations.",
    "output_details": {
      "conversations_processed": {
        "type": "integer",
        "description": "Number of chat conversations processed"
      },
      "messages": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of customer message content"
      },
      "conversation_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of conversation identifiers"
      },
      "message_timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of message timestamps"
      },
      "customer_satisfaction_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of satisfaction ratings if available"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Feedback Data Normalizer",
    "tool_description": "Standardizes feedback data from multiple sources into a consistent format with unified schema and cleaned text content.",
    "parameters": {
      "feedback_data": {
        "type": "array",
        "required": true,
        "description": "Array of raw feedback text content",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "source_type": {
        "type": "string",
        "required": true,
        "description": "Type of feedback source (social_media, survey, email, reviews, chat)"
      },
      "timestamps": {
        "type": "array",
        "required": false,
        "description": "Array of timestamps corresponding to feedback items",
        "items": {"type": "string"},
        "default": "None"
      },
      "metadata": {
        "type": "array",
        "required": false,
        "description": "Additional metadata for each feedback item",
        "items": {"type": "string"},
        "default": "None"
      },
      "language": {
        "type": "string",
        "required": false,
        "description": "Primary language of the feedback text",
        "default": "en"
      },
      "remove_pii": {
        "type": "boolean",
        "required": false,
        "description": "Whether to remove personally identifiable information",
        "default": true
      }
    },
    "error_messages": [
      "Invalid source_type: Must be one of [social_media, survey, email, reviews, chat]",
      "Empty feedback_data: At least one feedback item must be provided",
      "Mismatched array lengths: timestamps and metadata arrays must match feedback_data length if provided",
      "Unsupported language: Language code not supported for text processing",
      "Processing failed: Unable to normalize feedback data due to format issues"
    ],
    "usage": "Provide raw feedback data array with source type, optionally include timestamps and metadata. The tool will clean and standardize the data format.",
    "output_details": {
      "normalized_feedback": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of cleaned and standardized feedback text"
      },
      "standardized_timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of normalized timestamps in ISO 8601 format"
      },
      "feedback_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of unique identifiers assigned to each feedback item"
      },
      "processing_summary": {
        "type": "string",
        "description": "Summary of normalization operations performed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sentiment Analyzer",
    "tool_description": "Analyzes sentiment polarity and intensity of customer feedback text using natural language processing techniques.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "required": true,
        "description": "Array of feedback text to analyze",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "analysis_model": {
        "type": "string",
        "required": false,
        "description": "Sentiment analysis model to use (basic, advanced, domain_specific)",
        "default": "basic"
      }
    },
    "error_messages": [
      "Empty feedback text: At least one text item must be provided for analysis",
      "Invalid analysis model: Must be one of [basic, advanced, domain_specific]",
      "Text too long: Individual feedback items must be under 1000 characters",
      "Analysis failed: Unable to process text due to encoding or format issues"
    ],
    "usage": "Provide an array of feedback text and optionally specify the analysis model. The tool returns sentiment scores and classifications.",
    "output_details": {
      "sentiment_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of sentiment scores from -1 (negative) to 1 (positive)"
      },
      "sentiment_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of sentiment classifications (positive, negative, neutral)"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of confidence scores for sentiment predictions (0-1)"
      },
      "overall_sentiment": {
        "type": "string",
        "description": "Overall sentiment trend across all feedback"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Topic Classifier",
    "tool_description": "Classifies customer feedback into predefined or automatically discovered topic categories using machine learning techniques.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "required": true,
        "description": "Array of feedback text to classify",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "classification_mode": {
        "type": "string",
        "required": false,
        "description": "Classification approach (predefined, auto_discover, hybrid)",
        "default": "auto_discover"
      },
      "predefined_topics": {
        "type": "array",
        "required": false,
        "description": "List of predefined topic categories",
        "items": {"type": "string"},
        "default": "None"
      },
      "max_topics": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of topics to discover (2-20)",
        "default": 10
      }
    },
    "error_messages": [
      "Empty feedback text: At least one text item must be provided",
      "Invalid classification mode: Must be one of [predefined, auto_discover, hybrid]",
      "Invalid max_topics: Value must be between 2 and 20",
      "Insufficient data: Need at least 10 feedback items for topic discovery",
      "Classification failed: Unable to categorize feedback due to processing errors"
    ],
    "usage": "Provide feedback text array and choose classification mode. For predefined mode, supply topic list. The tool assigns topics to each feedback item.",
    "output_details": {
      "assigned_topics": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of topic assignments for each feedback item"
      },
      "topic_confidence": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of confidence scores for topic assignments (0-1)"
      },
      "discovered_topics": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of all topics found or used in classification"
      },
      "topic_distribution": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of topic frequency percentages"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Duplicate Detector",
    "tool_description": "Identifies and removes duplicate or near-duplicate feedback entries from combined datasets using text similarity algorithms.",
    "parameters": {
      "feedback_records": {
        "type": "array",
        "required": true,
        "description": "Array of feedback text records to check for duplicates",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 1000
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Similarity threshold for duplicate detection (0.1-1.0)",
        "default": 0.85
      },
      "record_ids": {
        "type": "array",
        "required": false,
        "description": "Array of unique identifiers for each feedback record",
        "items": {"type": "string"},
        "default": "None"
      },
      "detection_method": {
        "type": "string",
        "required": false,
        "description": "Method for similarity calculation (exact, fuzzy, semantic)",
        "default": "fuzzy"
      },
      "preserve_original": {
        "type": "boolean",
        "required": false,
        "description": "Whether to keep the first occurrence of duplicates",
        "default": true
      }
    },
    "error_messages": [
      "Insufficient records: Need at least 2 feedback records for duplicate detection",
      "Invalid similarity threshold: Value must be between 0.1 and 1.0",
      "Invalid detection method: Must be one of [exact, fuzzy, semantic]",
      "Mismatched array lengths: record_ids array must match feedback_records length if provided",
      "Detection failed: Unable to process records due to format or encoding issues"
    ],
    "usage": "Provide feedback records array and optionally adjust similarity threshold and detection method. The tool returns deduplicated records with duplicate information.",
    "output_details": {
      "unique_records": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of unique feedback records after duplicate removal"
      },
      "duplicate_count": {
        "type": "integer",
        "description": "Number of duplicate records identified and removed"
      },
      "duplicate_groups": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array indicating which records were duplicates of each other"
      },
      "deduplication_summary": {
        "type": "string",
        "description": "Summary of the deduplication process and results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Feedback Aggregator",
    "tool_description": "Aggregates processed feedback data from multiple sources and generates comprehensive metrics, statistics, and insights across different dimensions.",
    "parameters": {
      "feedback_sources": {
        "type": "array",
        "required": true,
        "description": "Array identifying the source of each feedback item",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "sentiment_scores": {
        "type": "array",
        "required": true,
        "description": "Array of sentiment scores for each feedback item",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 1000
      },
      "topic_assignments": {
        "type": "array",
        "required": true,
        "description": "Array of topic categories for each feedback item",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "timestamps": {
        "type": "array",
        "required": true,
        "description": "Array of timestamps for each feedback item",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "ratings": {
        "type": "array",
        "required": false,
        "description": "Array of numerical ratings if available",
        "items": {"type": "number"},
        "default": "None"
      },
      "aggregation_period": {
        "type": "string",
        "required": false,
        "description": "Time period for aggregation (daily, weekly, monthly)",
        "default": "weekly"
      },
      "include_source_breakdown": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include per-source analytics",
        "default": true
      },
      "include_topic_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include topic-based analysis",
        "default": true
      },
      "include_temporal_trends": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include time-based trend analysis",
        "default": true
      },
      "minimum_sample_size": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of feedback items required per aggregation bucket (1-50)",
        "default": 5
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Statistical confidence level for metrics (0.8-0.99)",
        "default": 0.95
      }
    },
    "error_messages": [
      "Mismatched array lengths: All input arrays must have the same length",
      "Empty input data: At least one feedback item must be provided",
      "Invalid aggregation period: Must be one of [daily, weekly, monthly]",
      "Invalid confidence level: Value must be between 0.8 and 0.99",
      "Invalid minimum sample size: Value must be between 1 and 50",
      "Insufficient data: Not enough feedback items to generate reliable aggregated metrics",
      "Invalid timestamp format: All timestamps must be valid ISO 8601 date-time strings"
    ],
    "usage": "Provide arrays of feedback sources, sentiment scores, topic assignments, and timestamps. Optionally include ratings and configure aggregation settings. The tool generates comprehensive aggregated analytics.",
    "output_details": {
      "total_feedback_count": {
        "type": "integer",
        "description": "Total number of feedback items processed"
      },
      "overall_sentiment_score": {
        "type": "number",
        "description": "Average sentiment score across all feedback"
      },
      "source_distribution": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Breakdown of feedback volume by source"
      },
      "top_topics": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Most frequently mentioned topics in order of prevalence"
      },
      "sentiment_by_source": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Average sentiment scores for each feedback source"
      },
      "temporal_trends": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Time-based trend analysis results"
      },
      "aggregation_summary": {
        "type": "string",
        "description": "Executive summary of aggregated feedback insights"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Trend Analyzer",
    "tool_description": "Analyzes temporal trends in customer feedback data to identify patterns, seasonal variations, and significant changes over time.",
    "parameters": {
      "feedback_data": {
        "type": "array",
        "required": true,
        "description": "Array of feedback text or metrics",
        "items": {"type": "string"},
        "minItems": 10,
        "maxItems": 1000
      },
      "timestamps": {
        "type": "array",
        "required": true,
        "description": "Array of timestamps corresponding to feedback data",
        "items": {"type": "string"},
        "minItems": 10,
        "maxItems": 1000
      },
      "metrics": {
        "type": "array",
        "required": true,
        "description": "Array of numerical metrics to analyze trends for",
        "items": {"type": "number"},
        "minItems": 10,
        "maxItems": 1000
      },
      "analysis_window": {
        "type": "string",
        "required": false,
        "description": "Time window for trend analysis (daily, weekly, monthly, quarterly)",
        "default": "weekly"
      },
      "detect_anomalies": {
        "type": "boolean",
        "required": false,
        "description": "Whether to identify unusual spikes or drops in feedback",
        "default": true
      }
    },
    "error_messages": [
