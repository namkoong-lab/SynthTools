field_name: device_repair_and_troubleshooting
subfield: smartphone_and_tablet_repair
task: Device diagnostic and problem identification
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves medium complexity due to the breadth of potential hardware and software issues, the need for systematic diagnostic workflows, and the coordination between different diagnostic approaches. While individual diagnostic steps may be straightforward, accurately identifying root causes requires methodical analysis and can have significant impact if misdiagnosed.

  **STEP 2 — Set a tool budget**

  Given the medium complexity, I'll target 12 tools to cover the comprehensive diagnostic workflow for smartphone and tablet repair.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  1. Device Info Extractor → produces device specifications for other tools
  2. Hardware Component Tester → consumes device info, produces component status
  3. Battery Health Analyzer → consumes device info, produces battery metrics
  4. Screen Diagnostic Tool → produces display analysis
  5. Audio System Checker → produces audio component status
  6. Camera Function Tester → produces camera diagnostic results
  7. Connectivity Diagnostics → produces network/bluetooth status
  8. Software Issue Scanner → consumes device info, produces software analysis
  9. Storage Health Checker → produces storage diagnostics
  10. Sensor Calibration Tester → produces sensor status data
  11. Thermal Analysis Tool → produces temperature readings
  12. Diagnostic Report Generator → consumes outputs from all tools, produces final report

  **STEP 4 — Multi-tool plans**

  Simple plans:
  - Basic battery check: Device Info Extractor → Battery Health Analyzer → Diagnostic Report Generator
  - Screen issue diagnosis: Device Info Extractor → Screen Diagnostic Tool → Diagnostic Report Generator

  Medium plans:
  - Audio/video troubleshooting: Device Info Extractor → Audio System Checker → Camera Function Tester → Screen Diagnostic Tool → Diagnostic Report Generator
  - Performance issues: Device Info Extractor → Software Issue Scanner → Storage Health Checker → Thermal Analysis Tool → Diagnostic Report Generator

  Complex plans:
  - Complete hardware diagnostic: Device Info Extractor → Hardware Component Tester → Battery Health Analyzer → Screen Diagnostic Tool → Audio System Checker → Camera Function Tester → Connectivity Diagnostics → Sensor Calibration Tester → Thermal Analysis Tool → Diagnostic Report Generator
  - Full device assessment: All 12 tools in sequence for comprehensive analysis before repair

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Device Info Extractor",
    "tool_description": "Extracts basic device information including model, operating system, hardware specifications, and current status to establish baseline for diagnostics.",
    "parameters": {
      "device_model": {
        "type": "string",
        "required": true,
        "description": "The exact model name or number of the device being diagnosed"
      },
      "operating_system": {
        "type": "string",
        "required": true,
        "description": "Current operating system (e.g., iOS 17.1, Android 14, iPadOS 17)"
      },
      "imei_serial": {
        "type": "string",
        "required": false,
        "description": "IMEI or serial number for device identification",
        "default": "None"
      }
    },
    "error_messages": [
      "Unknown device model: The specified device model is not recognized in the database.",
      "Invalid operating system format: Use format like 'iOS 17.1' or 'Android 14'.",
      "Device database connection failed: Cannot retrieve device specifications from internal database."
    ],
    "usage": "Provide the device_model and operating_system to extract comprehensive device specifications and establish diagnostic baseline. Optional IMEI/serial helps with specific device history lookup.",
    "output_details": {
      "device_id": {
        "type": "string",
        "description": "Unique identifier for this diagnostic session"
      },
      "manufacturer": {
        "type": "string",
        "description": "Device manufacturer name"
      },
      "model_year": {
        "type": "integer",
        "description": "Year the device model was released"
      },
      "processor_type": {
        "type": "string",
        "description": "CPU/chipset information"
      },
      "storage_capacity": {
        "type": "integer",
        "description": "Total storage capacity in GB"
      },
      "ram_size": {
        "type": "integer",
        "description": "RAM size in GB"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Hardware Component Tester",
    "tool_description": "Performs comprehensive hardware component testing including motherboard, ports, buttons, and internal connections to identify faulty components.",
    "parameters": {
      "device_id": {
        "type": "string",
        "required": true,
        "description": "Device identifier from Device Info Extractor"
      },
      "test_motherboard": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test motherboard functionality",
        "default": true
      },
      "test_charging_port": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test charging port connectivity",
        "default": true
      },
      "test_headphone_jack": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test headphone jack if present",
        "default": true
      },
      "test_physical_buttons": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test all physical buttons",
        "default": true
      },
      "test_sim_tray": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test SIM card tray mechanism",
        "default": true
      },
      "test_internal_connections": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test internal component connections",
        "default": false
      },
      "voltage_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum acceptable voltage level for components",
        "default": 3.0
      }
    },
    "error_messages": [
      "Invalid device_id: The provided device identifier is not recognized from previous extraction.",
      "Hardware access denied: Cannot establish connection to hardware testing interface.",
      "Voltage threshold out of range: Threshold must be between 1.0 and 5.0 volts.",
      "Component test timeout: Hardware component did not respond within expected timeframe."
    ],
    "usage": "Use device_id from Device Info Extractor and configure which hardware components to test. Set voltage_threshold based on device specifications. Results indicate pass/fail status for each tested component.",
    "output_details": {
      "motherboard_status": {
        "type": "string",
        "description": "Pass/Fail status of motherboard test"
      },
      "charging_port_status": {
        "type": "string",
        "description": "Pass/Fail status of charging port"
      },
      "button_test_results": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of button names and their test results"
      },
      "voltage_readings": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Voltage measurements from tested components"
      },
      "failed_components": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of components that failed testing"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Battery Health Analyzer",
    "tool_description": "Analyzes battery health, capacity, charging cycles, and performance to determine if battery replacement is needed.",
    "parameters": {
      "device_id": {
        "type": "string",
        "required": true,
        "description": "Device identifier from Device Info Extractor"
      },
      "full_discharge_test": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform complete discharge test",
        "default": false
      },
      "charging_speed_test": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test charging speed performance",
        "default": true
      }
    },
    "error_messages": [
      "Battery not detected: Cannot establish communication with battery management system.",
      "Invalid device_id: The provided device identifier is not recognized.",
      "Battery critically low: Cannot perform tests with battery below 5% charge.",
      "Charging system error: Unable to access charging diagnostics."
    ],
    "usage": "Provide device_id from Device Info Extractor. Enable full_discharge_test only if safe to completely drain battery. Results show battery health percentage and replacement recommendations.",
    "output_details": {
      "battery_health_percentage": {
        "type": "number",
        "description": "Current battery health as percentage of original capacity"
      },
      "cycle_count": {
        "type": "integer",
        "description": "Number of complete charge cycles"
      },
      "current_capacity_mah": {
        "type": "integer",
        "description": "Current maximum capacity in mAh"
      },
      "original_capacity_mah": {
        "type": "integer",
        "description": "Original design capacity in mAh"
      },
      "replacement_recommended": {
        "type": "boolean",
        "description": "Whether battery replacement is recommended"
      },
      "charging_speed_normal": {
        "type": "boolean",
        "description": "Whether charging speed is within normal range"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Screen Diagnostic Tool",
    "tool_description": "Tests display functionality including touch response, dead pixels, color accuracy, brightness levels, and screen rotation to identify display issues.",
    "parameters": {
      "test_touch_sensitivity": {
        "type": "boolean",
        "required": true,
        "description": "Whether to test touch screen responsiveness"
      },
      "test_dead_pixels": {
        "type": "boolean",
        "required": true,
        "description": "Whether to scan for dead or stuck pixels"
      },
      "test_color_accuracy": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test color display accuracy",
        "default": true
      },
      "brightness_levels": {
        "type": "array",
        "required": false,
        "description": "Array of brightness levels to test (0-100)",
        "items": {
          "type": "integer"
        },
        "default": [0, 25, 50, 75, 100]
      },
      "touch_pressure_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum pressure threshold for touch detection",
        "default": 0.1
      }
    },
    "error_messages": [
      "Screen not responding: Cannot establish communication with display controller.",
      "Touch sensor malfunction: Touch sensitivity test failed to initialize.",
      "Invalid brightness levels: All values must be integers between 0 and 100.",
      "Pressure threshold out of range: Value must be between 0.01 and 1.0.",
      "Display driver error: Cannot access display hardware for testing."
    ],
    "usage": "Configure which display tests to perform. Set brightness_levels array for specific brightness testing. Results indicate screen health and specific issues found.",
    "output_details": {
      "touch_response_score": {
        "type": "number",
        "description": "Touch sensitivity score from 0-100"
      },
      "dead_pixel_count": {
        "type": "integer",
        "description": "Number of dead pixels detected"
      },
      "color_accuracy_score": {
        "type": "number",
        "description": "Color accuracy score from 0-100"
      },
      "brightness_test_results": {
        "type": "array",
        "items": {
          "type": "boolean"
        },
        "description": "Pass/fail results for each tested brightness level"
      },
      "screen_issues_found": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of identified screen problems"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audio System Checker",
    "tool_description": "Tests all audio components including speakers, microphones, and audio processing to identify sound-related issues.",
    "parameters": {
      "test_speakers": {
        "type": "boolean",
        "required": true,
        "description": "Whether to test speaker functionality"
      },
      "test_microphones": {
        "type": "boolean",
        "required": true,
        "description": "Whether to test microphone functionality"
      },
      "audio_frequency_range": {
        "type": "array",
        "required": false,
        "description": "Frequency range to test in Hz [min, max]",
        "items": {
          "type": "integer"
        },
        "default": [20, 20000]
      },
      "volume_levels": {
        "type": "array",
        "required": false,
        "description": "Volume levels to test (0-100)",
        "items": {
          "type": "integer"
        },
        "default": [25, 50, 75, 100]
      }
    },
    "error_messages": [
      "Audio hardware not detected: Cannot access audio system components.",
      "Invalid frequency range: Min frequency must be less than max, both must be positive integers.",
      "Volume levels out of range: All volume levels must be integers between 0 and 100.",
      "Microphone access denied: Cannot test microphone due to system permissions.",
      "Speaker malfunction detected: Hardware failure in audio output system."
    ],
    "usage": "Enable speaker and microphone testing as needed. Configure frequency range and volume levels for comprehensive audio testing. Results show audio component health and specific issues.",
    "output_details": {
      "speaker_test_passed": {
        "type": "boolean",
        "description": "Whether speaker test passed"
      },
      "microphone_test_passed": {
        "type": "boolean",
        "description": "Whether microphone test passed"
      },
      "audio_quality_score": {
        "type": "number",
        "description": "Overall audio quality score from 0-100"
      },
      "frequency_response_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of frequency ranges with issues"
      },
      "volume_inconsistencies": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Volume levels that showed inconsistent behavior"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Camera Function Tester",
    "tool_description": "Tests camera functionality including focus, image quality, flash, and video recording capabilities for both front and rear cameras.",
    "parameters": {
      "test_rear_camera": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test rear camera functionality",
        "default": true
      },
      "test_front_camera": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test front camera functionality",
        "default": true
      },
      "test_flash": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test camera flash",
        "default": true
      }
    },
    "error_messages": [
      "Camera hardware not detected: Cannot access camera system.",
      "Camera permission denied: Insufficient permissions to test camera functionality.",
      "Flash unit malfunction: Cannot control camera flash for testing.",
      "Image processing error: Camera sensor responding but image processing failed."
    ],
    "usage": "Configure which cameras and features to test. All tests are optional but at least one camera should be selected. Results indicate camera system health and image quality metrics.",
    "output_details": {
      "rear_camera_functional": {
        "type": "boolean",
        "description": "Whether rear camera is functioning properly"
      },
      "front_camera_functional": {
        "type": "boolean",
        "description": "Whether front camera is functioning properly"
      },
      "flash_working": {
        "type": "boolean",
        "description": "Whether camera flash is operational"
      },
      "focus_accuracy_score": {
        "type": "number",
        "description": "Camera focus accuracy score from 0-100"
      },
      "image_quality_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of identified image quality problems"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Connectivity Diagnostics",
    "tool_description": "Tests wireless connectivity including WiFi, Bluetooth, cellular, and NFC functionality to identify networking issues.",
    "parameters": {
      "test_wifi": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test WiFi connectivity",
        "default": true
      },
      "test_bluetooth": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test Bluetooth functionality",
        "default": true
      },
      "test_cellular": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test cellular connectivity",
        "default": true
      },
      "test_nfc": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test NFC functionality",
        "default": false
      },
      "wifi_networks": {
        "type": "array",
        "required": false,
        "description": "List of WiFi network names to test connection with",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Connectivity hardware not found: Cannot detect wireless communication modules.",
      "Network interface error: Unable to initialize network testing interface.",
      "SIM card not detected: Cellular testing requires active SIM card.",
      "NFC hardware missing: Device does not support NFC functionality.",
      "WiFi scan timeout: Unable to scan for available networks within timeout period."
    ],
    "usage": "Select which connectivity features to test based on device capabilities. Provide wifi_networks array if testing specific network connections. Results show connectivity status and signal strength.",
    "output_details": {
      "wifi_functional": {
        "type": "boolean",
        "description": "Whether WiFi is working properly"
      },
      "bluetooth_functional": {
        "type": "boolean",
        "description": "Whether Bluetooth is working properly"
      },
      "cellular_functional": {
        "type": "boolean",
        "description": "Whether cellular connectivity is working"
      },
      "nfc_functional": {
        "type": "boolean",
        "description": "Whether NFC is working properly"
      },
      "signal_strengths": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Signal strength measurements for tested connections"
      },
      "connectivity_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of identified connectivity problems"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Software Issue Scanner",
    "tool_description": "Scans for software-related problems including corrupted files, malware, app conflicts, and system errors that could affect device performance.",
    "parameters": {
      "device_id": {
        "type": "string",
        "required": true,
        "description": "Device identifier from Device Info Extractor"
      },
      "scan_system_files": {
        "type": "boolean",
        "required": false,
        "description": "Whether to scan system files for corruption",
        "default": true
      },
      "scan_installed_apps": {
        "type": "boolean",
        "required": false,
        "description": "Whether to scan installed applications",
        "default": true
      },
      "malware_scan": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform malware detection scan",
        "default": true
      },
      "performance_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze system performance metrics",
        "default": true
      },
      "deep_scan": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform comprehensive deep scan",
        "default": false
      },
      "scan_timeout_minutes": {
        "type": "integer",
        "required": false,
        "description": "Maximum time allowed for scan in minutes",
        "default": 30
      },
      "excluded_directories": {
        "type": "array",
        "required": false,
        "description": "Directory paths to exclude from scanning",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid device_id: The provided device identifier is not recognized.",
      "Insufficient system access: Cannot access system files for scanning.",
      "Scan timeout exceeded: Software scan took longer than specified timeout period.",
      "Malware database outdated: Cannot perform malware scan with outdated definitions.",
      "Storage access denied: Cannot scan applications due to permission restrictions.",
      "Deep scan failed: Comprehensive scan encountered system errors.",
      "Invalid timeout value: Scan timeout must be between 5 and 120 minutes."
    ],
    "usage": "Provide device_id from Device Info Extractor and configure scanning options. Enable deep_scan for thorough analysis but expect longer execution time. Results identify software issues and performance problems.",
    "output_details": {
      "system_files_healthy": {
        "type": "boolean",
        "description": "Whether system files passed integrity check"
      },
      "malware_detected": {
        "type": "boolean",
        "description": "Whether malware was found during scan"
      },
      "performance_score": {
        "type": "number",
        "description": "Overall system performance score from 0-100"
      },
      "corrupted_files_count": {
        "type": "integer",
        "description": "Number of corrupted files detected"
      },
      "problematic_apps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of applications causing issues"
      },
      "system_errors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of system errors found"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of recommended actions to resolve issues"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Storage Health Checker",
    "tool_description": "Analyzes internal storage health, available space, file system integrity, and identifies storage-related performance issues.",
    "parameters": {
      "check_filesystem": {
        "type": "boolean",
        "required": false,
        "description": "Whether to check file system integrity",
        "default": true
      },
      "analyze_storage_speed": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test storage read/write speed",
        "default": true
      },
      "minimum_free_space_gb": {
        "type": "number",
        "required": false,
        "description": "Minimum free space threshold in GB for warnings",
        "default": 2.0
      }
    },
    "error_messages": [
      "Storage device not accessible: Cannot read storage device information.",
      "File system corruption detected: Critical file system errors found that prevent analysis.",
      "Invalid free space threshold: Minimum free space must be greater than 0.",
      "Storage speed test failed: Unable to perform read/write speed analysis."
    ],
    "usage": "Configure storage analysis options including file system check and speed testing. Set minimum_free_space_gb threshold for storage warnings. Results show storage health and performance metrics.",
    "output_details": {
      "total_capacity_gb": {
        "type": "number",
        "description": "Total storage capacity in GB"
      },
      "available_space_gb": {
        "type": "number",
        "description": "Currently available free space in GB"
      },
      "filesystem_healthy": {
        "type": "boolean",
        "description": "Whether file system passed integrity check"
      },
      "read_speed_mbps": {
        "type": "number",
        "description": "Storage read speed in MB/s"
      },
      "write_speed_mbps": {
        "type": "number",
        "description": "Storage write speed in MB/s"
      },
      "storage_warnings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of storage-related warnings or issues"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sensor Calibration Tester",
    "tool_description": "Tests and calibrates device sensors including accelerometer, gyroscope, magnetometer, and proximity sensors for proper functionality.",
    "parameters": {
      "test_accelerometer": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test accelerometer sensor",
        "default": true
      },
      "test_gyroscope": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test gyroscope sensor",
        "default": true
      },
      "test_magnetometer": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test magnetometer/compass",
        "default": true
      },
      "test_proximity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to test proximity sensor",
        "default": true
      },
      "calibration_tolerance": {
        "type": "number",
        "required": false,
        "description": "Acceptable calibration tolerance percentage",
        "default": 5.0
      }
    },
    "error_messages": [
      "Sensor hardware not found: One or more sensors are not detected on this device.",
      "Calibration failed: Unable to calibrate sensors within acceptable tolerance.",
      "Invalid tolerance value: Calibration tolerance must be between 0.1 and 20.0 percent.",
      "Sensor communication error: Cannot establish communication with sensor hardware."
    ],
    "usage": "Select which sensors to test based on device capabilities. Set calibration_tolerance for acceptable accuracy ranges. Results show sensor functionality and calibration status.",
    "output_details": {
      "accelerometer_working": {
        "type": "boolean",
        "description": "Whether accelerometer is functioning properly"
      },
      "gyroscope_working": {
        "type": "boolean",
        "description": "Whether gyroscope is functioning properly"
      },
      "magnetometer_working": {
        "type": "boolean",
        "description": "Whether magnetometer is functioning properly"
      },
      "proximity_working": {
        "type": "boolean",
        "description": "Whether proximity sensor is functioning properly"
      },
      "calibration_results": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Calibration status for each tested sensor"
      },
      "sensor_accuracy_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Accuracy scores for each sensor from 0-100"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Thermal Analysis Tool",
    "tool_description": "Monitors device temperature across components and identifies overheating issues or thermal management problems during operation.",
    "parameters": {
      "monitoring_duration_minutes": {
        "type": "integer",
        "required": false,
        "description": "How long to monitor temperatures in minutes",
        "default": 10
      },
      "stress_test": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform CPU stress test during monitoring",
        "default": false
      }
    },
    "error_messages": [
      "Temperature sensors not found: Cannot access thermal monitoring hardware.",
      "Invalid monitoring duration: Duration must be between 1 and 60 minutes.",
      "Thermal monitoring failed: Unable to read temperature data from sensors.",
      "Critical temperature detected: Device temperature exceeded safe operating limits."
    ],
    "usage": "Set monitoring_duration_minutes for temperature observation period. Enable stress_test to check thermal performance under load. Results show temperature readings and thermal health status.",
    "output_details": {
      "average_temperature_c": {
        "type": "number",
        "description": "Average temperature in Celsius during monitoring"
      },
      "max_temperature_c": {
        "type": "number",
        "description": "Maximum temperature reached in Celsius"
      },
      "thermal_throttling_detected": {
        "type": "boolean",
        "description": "Whether thermal throttling was observed"
      },
      "temperature_readings": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Array of temperature measurements over time"
      },
      "overheating_risk": {
        "type": "string",
        "description": "Risk level: Low, Medium, High, or Critical"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Diagnostic Report Generator",
    "tool_description": "Compiles results from all diagnostic tools into a comprehensive report with problem prioritization, repair recommendations, and cost estimates.",
    "parameters": {
      "device_id": {
        "type": "string",
        "required": true,
        "description": "Device identifier from Device Info Extractor"
      },
      "hardware_results": {
        "type": "array",
        "required": false,
        "description": "Results from hardware diagnostic tools",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "software_results": {
        "type": "array",
        "required": false,
        "description": "Results from software diagnostic tools",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "battery_results": {
        "type": "string",
        "required": false,
        "description": "Battery health analysis results",
        "default": "None"
      },
      "screen_results": {
        "type": "string",
        "required": false,
        "description": "Screen diagnostic results",
        "default": "None"
      },
      "audio_results": {
        "type": "string",
        "required": false,
        "description": "Audio system test results",
        "default": "None"
      },
      "camera_results": {
        "type": "string",
        "required": false,
        "description": "Camera function test results",
        "default": "None"
      },
      "connectivity_results": {
        "type": "string",
        "required": false,
        "description": "Connectivity diagnostic results",
        "default": "None"
      },
      "storage_results": {
        "type": "string",
        "required": false,
        "description": "Storage health check results",
        "default": "None"
