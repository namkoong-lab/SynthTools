field_name: ecommerce_and_retail
subfield: Customer Reviews and Ratings
task: Detect and flag fake or spam reviews using authenticity verification
tool_description: |-
  **STEP 1 — Rate task difficulty**
  This task has medium complexity due to the sophisticated pattern recognition required to identify fake reviews, the need to balance false positives/negatives, and the requirement for multi-dimensional analysis including linguistic patterns, behavioral signals, and metadata verification.

  **STEP 2 — Set a tool budget**
  Given the medium complexity, I'll target 12 tools to cover the various aspects of fake review detection including data preprocessing, linguistic analysis, behavioral pattern detection, metadata verification, and scoring/flagging systems.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Review Data Extractor** - Consumes: raw review data sources → Produces: structured review datasets
  2. **Text Preprocessor** - Consumes: raw review text → Produces: cleaned, normalized text
  3. **Linguistic Pattern Analyzer** - Consumes: preprocessed text → Produces: linguistic features and anomaly scores
  4. **Sentiment Authenticity Checker** - Consumes: review text, ratings → Produces: sentiment consistency scores
  5. **Reviewer Profile Analyzer** - Consumes: reviewer metadata → Produces: profile authenticity metrics
  6. **Review Timing Analyzer** - Consumes: timestamp data → Produces: temporal pattern anomalies
  7. **Content Similarity Detector** - Consumes: multiple review texts → Produces: similarity clusters and duplicate flags
  8. **Rating Distribution Analyzer** - Consumes: rating data, product info → Produces: rating pattern anomalies
  9. **Network Behavior Detector** - Consumes: reviewer relationships, posting patterns → Produces: coordinated behavior flags
  10. **Authenticity Score Calculator** - Consumes: multiple feature scores → Produces: composite authenticity scores
  11. **Review Flagging Engine** - Consumes: authenticity scores, thresholds → Produces: flagged review lists
  12. **Fake Review Report Generator** - Consumes: flagged reviews, analysis results → Produces: comprehensive reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Text Analysis**: Review Data Extractor → Text Preprocessor → Linguistic Pattern Analyzer → Review Flagging Engine (identifies obvious spam through text patterns)
  2. **Rating Consistency Check**: Review Data Extractor → Rating Distribution Analyzer → Review Flagging Engine (flags unusual rating distributions)

  **Medium Plans:**
  1. **Content Authenticity Pipeline**: Review Data Extractor → Text Preprocessor → Content Similarity Detector → Sentiment Authenticity Checker → Authenticity Score Calculator → Review Flagging Engine (comprehensive content analysis)
  2. **Behavioral Analysis Flow**: Review Data Extractor → Reviewer Profile Analyzer → Review Timing Analyzer → Network Behavior Detector → Authenticity Score Calculator → Review Flagging Engine (focuses on reviewer behavior patterns)

  **Complex Plans:**
  1. **Full Authenticity Verification**: All 12 tools in sequence for comprehensive fake review detection with multi-dimensional analysis
  2. **Investigation and Reporting Pipeline**: Review Data Extractor → Text Preprocessor → Linguistic Pattern Analyzer → Content Similarity Detector → Reviewer Profile Analyzer → Network Behavior Detector → Authenticity Score Calculator → Review Flagging Engine → Fake Review Report Generator (complete investigation workflow with detailed reporting)

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Review Data Extractor",
    "tool_description": "Extracts and structures review data from various sources including e-commerce platforms, databases, or CSV files, preparing it for authenticity analysis.",
    "parameters": {
      "data_source": {
        "type": "string",
        "required": true,
        "description": "Source of review data (csv_file, database, api_endpoint)"
      },
      "source_path": {
        "type": "string",
        "required": true,
        "description": "Path or URL to the data source"
      },
      "date_range_start": {
        "type": "string",
        "required": false,
        "description": "Start date for review extraction",
        "format": "date-time",
        "default": "None"
      },
      "date_range_end": {
        "type": "string",
        "required": false,
        "description": "End date for review extraction",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid data source: Use one of [csv_file, database, api_endpoint]",
      "Source path not accessible: Ensure the provided path/URL is valid and accessible",
      "Invalid date format: Use ISO 8601 date-time format for date ranges",
      "Empty dataset: No reviews found in the specified source or date range"
    ],
    "usage": "Specify the data_source type and source_path. Optionally filter by date range. The tool returns structured review data ready for analysis.",
    "output_details": {
      "total_reviews": {
        "type": "integer",
        "description": "Number of reviews extracted"
      },
      "review_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of unique review identifiers"
      },
      "extraction_status": {
        "type": "string",
        "description": "Status of the extraction process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Text Preprocessor",
    "tool_description": "Cleans and normalizes review text data by removing noise, standardizing formatting, and preparing text for linguistic analysis.",
    "parameters": {
      "review_text": {
        "type": "string",
        "required": true,
        "description": "Raw review text to preprocess"
      },
      "remove_stopwords": {
        "type": "boolean",
        "required": false,
        "description": "Whether to remove common stopwords",
        "default": false
      },
      "normalize_case": {
        "type": "boolean",
        "required": false,
        "description": "Whether to convert text to lowercase",
        "default": true
      },
      "remove_special_chars": {
        "type": "boolean",
        "required": false,
        "description": "Whether to remove special characters and symbols",
        "default": true
      }
    },
    "error_messages": [
      "Empty text input: Review text cannot be empty or null",
      "Text too long: Review text exceeds maximum length of 10000 characters",
      "Invalid encoding: Text contains unsupported character encoding"
    ],
    "usage": "Provide the raw review_text and specify preprocessing options. The tool returns cleaned text ready for analysis.",
    "output_details": {
      "cleaned_text": {
        "type": "string",
        "description": "Preprocessed and cleaned review text"
      },
      "original_length": {
        "type": "integer",
        "description": "Character count of original text"
      },
      "cleaned_length": {
        "type": "integer",
        "description": "Character count of cleaned text"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Linguistic Pattern Analyzer",
    "tool_description": "Analyzes text patterns, grammar, vocabulary complexity, and linguistic anomalies that may indicate fake or spam reviews.",
    "parameters": {
      "review_text": {
        "type": "string",
        "required": true,
        "description": "Preprocessed review text to analyze"
      },
      "language": {
        "type": "string",
        "required": false,
        "description": "Expected language of the review",
        "default": "en"
      },
      "check_grammar": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform grammar analysis",
        "default": true
      },
      "check_vocabulary": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze vocabulary complexity",
        "default": true
      },
      "check_templates": {
        "type": "boolean",
        "required": false,
        "description": "Whether to detect template-based writing",
        "default": true
      }
    },
    "error_messages": [
      "Empty text input: Review text cannot be empty for analysis",
      "Unsupported language: Language code not supported for analysis",
      "Text too short: Need at least 10 characters for meaningful analysis",
      "Analysis failed: Unable to process text due to formatting issues"
    ],
    "usage": "Provide preprocessed review_text and specify analysis parameters. The tool returns linguistic feature scores and anomaly indicators.",
    "output_details": {
      "grammar_score": {
        "type": "number",
        "description": "Grammar correctness score (0-100)"
      },
      "vocabulary_complexity": {
        "type": "number",
        "description": "Vocabulary sophistication score (0-100)"
      },
      "template_likelihood": {
        "type": "number",
        "description": "Probability of template-based content (0-100)"
      },
      "anomaly_flags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of detected linguistic anomalies"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sentiment Authenticity Checker",
    "tool_description": "Verifies consistency between review sentiment, rating, and content to identify artificially generated or mismatched reviews.",
    "parameters": {
      "review_text": {
        "type": "string",
        "required": true,
        "description": "Review text to analyze for sentiment"
      },
      "review_rating": {
        "type": "number",
        "required": true,
        "description": "Numerical rating given (typically 1-5 scale)"
      },
      "sentiment_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold for sentiment-rating mismatch detection (0-1)",
        "default": 0.3
      }
    },
    "error_messages": [
      "Invalid rating: Rating must be a number between 1 and 5",
      "Empty review text: Cannot analyze sentiment of empty text",
      "Invalid threshold: Sentiment threshold must be between 0 and 1",
      "Sentiment analysis failed: Unable to determine sentiment from text"
    ],
    "usage": "Provide review_text and corresponding review_rating. Optionally set sentiment_threshold. Returns sentiment consistency analysis.",
    "output_details": {
      "detected_sentiment": {
        "type": "string",
        "description": "Detected sentiment category (positive, negative, neutral)"
      },
      "sentiment_score": {
        "type": "number",
        "description": "Sentiment intensity score (-1 to 1)"
      },
      "consistency_score": {
        "type": "number",
        "description": "Rating-sentiment consistency score (0-100)"
      },
      "mismatch_detected": {
        "type": "boolean",
        "description": "Whether significant sentiment-rating mismatch exists"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Reviewer Profile Analyzer",
    "tool_description": "Analyzes reviewer account characteristics, history, and metadata patterns to identify potentially fake or suspicious reviewer profiles.",
    "parameters": {
      "reviewer_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the reviewer"
      },
      "account_age_days": {
        "type": "integer",
        "required": true,
        "description": "Age of reviewer account in days"
      },
      "total_reviews": {
        "type": "integer",
        "required": true,
        "description": "Total number of reviews by this reviewer"
      },
      "average_rating": {
        "type": "number",
        "required": true,
        "description": "Average rating given by reviewer (1-5 scale)"
      },
      "profile_completion": {
        "type": "number",
        "required": true,
        "description": "Profile completeness percentage (0-100)"
      },
      "verified_purchase_ratio": {
        "type": "number",
        "required": false,
        "description": "Ratio of verified purchases (0-1)",
        "default": "None"
      },
      "review_frequency": {
        "type": "number",
        "required": false,
        "description": "Average reviews per day",
        "default": "None"
      },
      "photo_reviews_ratio": {
        "type": "number",
        "required": false,
        "description": "Ratio of reviews with photos (0-1)",
        "default": 0.0
      }
    },
    "error_messages": [
      "Invalid account age: Account age must be a non-negative integer",
      "Invalid review count: Total reviews must be a non-negative integer",
      "Invalid rating: Average rating must be between 1 and 5",
      "Invalid percentage: Profile completion must be between 0 and 100",
      "Invalid ratio: Ratios must be between 0 and 1",
      "Missing reviewer ID: Reviewer identifier cannot be empty"
    ],
    "usage": "Provide reviewer metrics including account_age_days, total_reviews, average_rating, and profile_completion. Optional parameters help improve analysis accuracy.",
    "output_details": {
      "profile_authenticity_score": {
        "type": "number",
        "description": "Overall profile authenticity score (0-100)"
      },
      "suspicious_flags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of detected suspicious patterns"
      },
      "risk_level": {
        "type": "string",
        "description": "Risk assessment (low, medium, high)"
      },
      "account_type_prediction": {
        "type": "string",
        "description": "Predicted account type (genuine, suspicious, likely_fake)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Timing Analyzer",
    "tool_description": "Analyzes temporal patterns in review posting to detect coordinated campaigns, burst activities, and unnatural timing patterns.",
    "parameters": {
      "review_timestamps": {
        "type": "array",
        "required": true,
        "description": "Array of review posting timestamps",
        "items": {"type": "string"},
        "minItems": 1
      },
      "product_id": {
        "type": "string",
        "required": true,
        "description": "Product identifier for the reviews"
      },
      "detection_window_hours": {
        "type": "integer",
        "required": false,
        "description": "Time window for burst detection in hours",
        "default": 24
      }
    },
    "error_messages": [
      "Empty timestamp array: At least one timestamp is required",
      "Invalid timestamp format: Use ISO 8601 date-time format",
      "Invalid detection window: Window must be between 1 and 168 hours",
      "Missing product ID: Product identifier cannot be empty"
    ],
    "usage": "Provide array of review_timestamps for a specific product_id. Optionally adjust detection_window_hours for burst detection sensitivity.",
    "output_details": {
      "burst_detected": {
        "type": "boolean",
        "description": "Whether review burst activity was detected"
      },
      "temporal_anomaly_score": {
        "type": "number",
        "description": "Temporal pattern anomaly score (0-100)"
      },
      "review_clusters": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified time clusters of reviews"
      },
      "posting_pattern": {
        "type": "string",
        "description": "Detected posting pattern (natural, suspicious, coordinated)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Similarity Detector",
    "tool_description": "Identifies duplicate, near-duplicate, and template-based reviews by analyzing content similarity and detecting copied text patterns.",
    "parameters": {
      "review_texts": {
        "type": "array",
        "required": true,
        "description": "Array of review texts to compare for similarity",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 1000
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum similarity score to flag as duplicate (0-1)",
        "default": 0.8
      },
      "check_semantic_similarity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform semantic similarity analysis",
        "default": true
      }
    },
    "error_messages": [
      "Insufficient reviews: Need at least 2 review texts for comparison",
      "Too many reviews: Maximum 1000 reviews can be processed at once",
      "Invalid similarity threshold: Threshold must be between 0 and 1",
      "Empty review text: All review texts must be non-empty strings"
    ],
    "usage": "Provide array of review_texts to analyze for similarity patterns. Adjust similarity_threshold and enable semantic analysis as needed.",
    "output_details": {
      "duplicate_clusters": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Groups of similar reviews identified"
      },
      "similarity_matrix": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Pairwise similarity scores between reviews"
      },
      "duplicate_count": {
        "type": "integer",
        "description": "Number of potential duplicate reviews found"
      },
      "template_detected": {
        "type": "boolean",
        "description": "Whether template-based reviews were detected"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Rating Distribution Analyzer",
    "tool_description": "Analyzes rating patterns and distributions to identify artificial manipulation, unusual clustering, and suspicious rating behaviors.",
    "parameters": {
      "product_ratings": {
        "type": "array",
        "required": true,
        "description": "Array of numerical ratings for a product",
        "items": {"type": "number"},
        "minItems": 5
      },
      "product_category": {
        "type": "string",
        "required": true,
        "description": "Product category for baseline comparison"
      },
      "competitor_ratings": {
        "type": "array",
        "required": false,
        "description": "Competitor product ratings for comparison",
        "items": {"type": "number"},
        "default": "None"
      }
    },
    "error_messages": [
      "Insufficient ratings: Need at least 5 ratings for statistical analysis",
      "Invalid ratings: All ratings must be numbers between 1 and 5",
      "Missing product category: Product category is required for analysis",
      "Invalid competitor data: Competitor ratings must be numbers between 1 and 5"
    ],
    "usage": "Provide array of product_ratings and product_category. Optionally include competitor_ratings for comparative analysis.",
    "output_details": {
      "distribution_anomaly_score": {
        "type": "number",
        "description": "Rating distribution anomaly score (0-100)"
      },
      "manipulation_indicators": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of detected manipulation patterns"
      },
      "statistical_significance": {
        "type": "number",
        "description": "Statistical significance of anomaly (0-1)"
      },
      "expected_vs_actual": {
        "type": "string",
        "description": "Comparison summary of expected vs actual distribution"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Network Behavior Detector",
    "tool_description": "Identifies coordinated reviewer networks, sock puppet accounts, and organized fake review campaigns through behavioral pattern analysis.",
    "parameters": {
      "reviewer_ids": {
        "type": "array",
        "required": true,
        "description": "Array of reviewer identifiers to analyze",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 500
      },
      "review_products": {
        "type": "array",
        "required": true,
        "description": "Products reviewed by each reviewer",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 500
      },
      "review_timestamps": {
        "type": "array",
        "required": true,
        "description": "Timestamps for each review",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 500
      },
      "coordination_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold for detecting coordinated behavior (0-1)",
        "default": 0.6
      }
    },
    "error_messages": [
      "Array length mismatch: reviewer_ids, review_products, and review_timestamps must have the same length",
      "Insufficient data: Need at least 2 reviewers for network analysis",
      "Too many reviewers: Maximum 500 reviewers can be analyzed at once",
      "Invalid coordination threshold: Threshold must be between 0 and 1",
      "Invalid timestamp format: Use ISO 8601 date-time format"
    ],
    "usage": "Provide matching arrays of reviewer_ids, review_products, and review_timestamps. Adjust coordination_threshold to tune detection sensitivity.",
    "output_details": {
      "network_detected": {
        "type": "boolean",
        "description": "Whether coordinated network behavior was detected"
      },
      "coordination_score": {
        "type": "number",
        "description": "Overall coordination strength score (0-100)"
      },
      "suspicious_clusters": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Groups of potentially coordinated reviewers"
      },
      "behavioral_patterns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of detected suspicious behavioral patterns"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Authenticity Score Calculator",
    "tool_description": "Combines multiple analysis results into a comprehensive authenticity score using weighted scoring algorithms and machine learning models.",
    "parameters": {
      "linguistic_score": {
        "type": "number",
        "required": true,
        "description": "Score from linguistic pattern analysis (0-100)"
      },
      "sentiment_score": {
        "type": "number",
        "required": true,
        "description": "Score from sentiment authenticity check (0-100)"
      },
      "profile_score": {
        "type": "number",
        "required": true,
        "description": "Score from reviewer profile analysis (0-100)"
      },
      "timing_score": {
        "type": "number",
        "required": true,
        "description": "Score from timing pattern analysis (0-100)"
      },
      "similarity_score": {
        "type": "number",
        "required": true,
        "description": "Score from content similarity detection (0-100)"
      },
      "rating_score": {
        "type": "number",
        "required": true,
        "description": "Score from rating distribution analysis (0-100)"
      },
      "network_score": {
        "type": "number",
        "required": true,
        "description": "Score from network behavior detection (0-100)"
      },
      "weighting_strategy": {
        "type": "string",
        "required": false,
        "description": "Scoring strategy (equal, content_focused, behavior_focused, balanced)",
        "default": "balanced"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence level for final score (0-1)",
        "default": 0.7
      }
    },
    "error_messages": [
      "Invalid score range: All input scores must be between 0 and 100",
      "Missing required scores: All seven component scores are required",
      "Invalid weighting strategy: Use one of [equal, content_focused, behavior_focused, balanced]",
      "Invalid confidence threshold: Threshold must be between 0 and 1"
    ],
    "usage": "Provide all component scores from previous analysis tools. Select appropriate weighting_strategy and confidence_threshold for your use case.",
    "output_details": {
      "final_authenticity_score": {
        "type": "number",
        "description": "Composite authenticity score (0-100)"
      },
      "confidence_level": {
        "type": "number",
        "description": "Confidence in the authenticity assessment (0-1)"
      },
      "risk_classification": {
        "type": "string",
        "description": "Risk level classification (low, medium, high, critical)"
      },
      "contributing_factors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Primary factors influencing the authenticity score"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Flagging Engine",
    "tool_description": "Flags reviews as potentially fake based on authenticity scores and configurable thresholds, with support for different flagging strategies.",
    "parameters": {
      "review_ids": {
        "type": "array",
        "required": true,
        "description": "Array of review identifiers to evaluate",
        "items": {"type": "string"},
        "minItems": 1
      },
      "authenticity_scores": {
        "type": "array",
        "required": true,
        "description": "Corresponding authenticity scores for each review (0-100)",
        "items": {"type": "number"},
        "minItems": 1
      },
      "flagging_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold below which reviews are flagged (0-100)",
        "default": 50
      },
      "action_type": {
        "type": "string",
        "required": false,
        "description": "Type of action to take (flag, hide, remove, review)",
        "default": "flag"
      }
    },
    "error_messages": [
      "Array length mismatch: review_ids and authenticity_scores arrays must have the same length",
      "Empty input arrays: At least one review must be provided",
      "Invalid authenticity scores: All scores must be between 0 and 100",
      "Invalid flagging threshold: Threshold must be between 0 and 100",
      "Invalid action type: Use one of [flag, hide, remove, review]"
    ],
    "usage": "Provide review_ids with corresponding authenticity_scores. Set flagging_threshold and action_type based on your platform's policy.",
    "output_details": {
      "flagged_reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of review IDs flagged as potentially fake"
      },
      "flagged_count": {
        "type": "integer",
        "description": "Total number of reviews flagged"
      },
      "action_summary": {
        "type": "string",
        "description": "Summary of actions taken on flagged reviews"
      },
      "false_positive_estimate": {
        "type": "number",
        "description": "Estimated false positive rate (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Fake Review Report Generator",
    "tool_description": "Generates comprehensive reports summarizing fake review detection results, patterns found, and recommended actions for stakeholders.",
    "parameters": {
      "analysis_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date of analysis period",
        "format": "date-time"
      },
      "analysis_period_end": {
        "type": "string",
        "required": true,
        "description": "End date of analysis period",
        "format": "date-time"
      },
      "total_reviews_analyzed": {
        "type": "integer",
        "required": true,
        "description": "Total number of reviews in the analysis"
      },
      "flagged_review_ids": {
        "type": "array",
        "required": true,
        "description": "Array of flagged review identifiers",
        "items": {"type": "string"}
      },
      "detection_patterns": {
        "type": "array",
        "required": true,
        "description": "Array of detected fake review patterns",
        "items": {"type": "string"}
      },
      "product_categories": {
        "type": "array",
        "required": true,
        "description": "Product categories affected by fake reviews",
        "items": {"type": "string"}
      },
      "report_format": {
        "type": "string",
        "required": false,
        "description": "Output format for the report (summary, detailed, executive)",
        "default": "detailed"
      },
      "include_recommendations": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include actionable recommendations",
        "default": true
      },
      "include_visualizations": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include data visualization descriptions",
        "default": false
      }
    },
    "error_messages": [
      "Invalid date format: Use ISO 8601 date-time format for analysis period",
      "Invalid date range: End date must be after start date",
      "Invalid review count: Total reviews analyzed must be a positive integer",
      "Empty required arrays: flagged_review_ids, detection_patterns, and product_categories cannot be empty",
      "Invalid report format: Use one of [summary, detailed, executive]"
    ],
    "usage": "Provide analysis period, review counts, flagged reviews, and detected patterns. Configure report_format and optional features as needed.",
    "output_details": {
      "report_summary": {
        "type": "string",
        "description": "Executive summary of findings and key metrics"
      },
      "fake_review_rate": {
        "type": "number",
        "description": "Percentage of reviews identified as potentially fake"
      },
      "top_risk_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Product categories with highest fake review rates"
      },
      "recommended_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of recommended actions to address fake reviews"
      },
      "report_generated_at": {
        "type": "string",
        "description": "Timestamp when report was generated",
        "format": "date-time"
      }
    }
  }
  ```
