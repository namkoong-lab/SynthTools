field_name: telecommunications_networks
subfield: Network Planning and Design
task: Network topology design and architecture planning
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves **hard** complexity due to the broad scope of network components (physical, logical, routing), significant interdependencies between topology choices and performance outcomes, high coordination requirements across multiple network layers, and substantial risk of errors that could lead to network failures or inefficient resource utilization.

  ## STEP 2 — Set a tool budget

  Given the hard complexity rating, I'm targeting **17 tools** within the 15–20 range to cover the diverse aspects of network topology design and architecture planning comprehensively.

  ## STEP 3 — List all tool names and dependencies

  **Tools and Dependencies:**
  1. **Site Survey Analyzer** - Consumes: geographic data, requirements → Produces: site feasibility reports
  2. **Traffic Pattern Predictor** - Consumes: historical data, growth projections → Produces: traffic forecasts
  3. **Network Requirements Validator** - Consumes: business requirements → Produces: validated technical specs
  4. **Topology Generator** - Consumes: site data, requirements → Produces: topology candidates
  5. **Link Capacity Calculator** - Consumes: traffic demands, QoS requirements → Produces: bandwidth specifications
  6. **Routing Protocol Optimizer** - Consumes: topology, traffic patterns → Produces: routing configurations
  7. **Redundancy Path Analyzer** - Consumes: topology design → Produces: failover analysis
  8. **Network Equipment Selector** - Consumes: capacity requirements, specifications → Produces: equipment recommendations
  9. **Cost Estimation Engine** - Consumes: equipment list, topology → Produces: cost projections
  10. **Performance Simulator** - Consumes: complete design → Produces: performance metrics
  11. **Security Architecture Designer** - Consumes: topology, security requirements → Produces: security framework
  12. **Scalability Assessor** - Consumes: current design, growth projections → Produces: scalability analysis
  13. **Compliance Checker** - Consumes: design specifications → Produces: compliance reports
  14. **Network Address Planner** - Consumes: topology, addressing requirements → Produces: IP allocation schemes
  15. **QoS Policy Designer** - Consumes: service requirements, topology → Produces: QoS policies
  16. **Design Documentation Generator** - Consumes: all design artifacts → Produces: comprehensive documentation
  17. **Architecture Validator** - Consumes: complete design → Produces: validation reports

  ## STEP 4 — Multi-tool plans

  **Simple Plans (2-4 tools):**
  - Basic Site Assessment: Site Survey Analyzer → Network Requirements Validator → Cost Estimation Engine
  - Quick Capacity Planning: Traffic Pattern Predictor → Link Capacity Calculator → Equipment Selector

  **Medium Plans (5-8 tools):**
  - Core Network Design: Requirements Validator → Topology Generator → Link Capacity Calculator → Routing Protocol Optimizer → Performance Simulator → Documentation Generator
  - Security-Focused Planning: Topology Generator → Security Architecture Designer → Compliance Checker → QoS Policy Designer → Architecture Validator

  **Complex Plans (9+ tools):**
  - Complete Enterprise Network Design: All tools in sequence for comprehensive planning
  - Full Redundant Network Architecture: Requirements Validator → Site Survey Analyzer → Traffic Predictor → Topology Generator → Redundancy Analyzer → Equipment Selector → Performance Simulator → Scalability Assessor → Cost Engine → Documentation Generator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Site Survey Analyzer",
    "tool_description": "Analyzes geographic and physical site data to determine network infrastructure feasibility, including terrain analysis, existing infrastructure assessment, and environmental constraints evaluation.",
    "parameters": {
      "site_coordinates": {
        "type": "array",
        "required": true,
        "description": "Array of latitude/longitude pairs for all potential sites",
        "items": {"type": "number"}
      },
      "terrain_type": {
        "type": "string",
        "required": true,
        "description": "Primary terrain classification: urban, suburban, rural, mountainous, coastal"
      },
      "existing_infrastructure": {
        "type": "boolean",
        "required": true,
        "description": "Whether existing telecommunications infrastructure is present"
      },
      "environmental_constraints": {
        "type": "array",
        "required": false,
        "description": "Environmental factors affecting installation",
        "items": {"type": "string"},
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid coordinates: Latitude must be between -90 and 90, longitude between -180 and 180.",
      "Unsupported terrain type: Use one of [urban, suburban, rural, mountainous, coastal].",
      "Coordinate array length mismatch: Must provide pairs of latitude/longitude values (even number of elements)."
    ],
    "usage": "Provide site coordinates as [lat1, lon1, lat2, lon2, ...], terrain type, existing infrastructure status, and optional environmental constraints. Returns feasibility assessment for each site location.",
    "output_details": {
      "feasibility_score": {
        "type": "number",
        "description": "Overall site feasibility rating from 0-100"
      },
      "site_assessments": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Individual assessment report for each site"
      },
      "recommended_sites": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of most suitable site identifiers"
      },
      "infrastructure_gaps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified infrastructure requirements per site"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Traffic Pattern Predictor",
    "tool_description": "Forecasts network traffic patterns based on historical data, user growth projections, and service demand trends to support capacity planning decisions.",
    "parameters": {
      "historical_data_period": {
        "type": "integer",
        "required": true,
        "description": "Number of months of historical traffic data to analyze (minimum 6)"
      },
      "prediction_horizon": {
        "type": "integer",
        "required": true,
        "description": "Forecast period in months (1-60)"
      },
      "growth_rate": {
        "type": "number",
        "required": true,
        "description": "Expected annual traffic growth rate as percentage (0-500)"
      },
      "service_types": {
        "type": "array",
        "required": true,
        "description": "Types of network services to model",
        "items": {"type": "string"}
      },
      "peak_hour_ratio": {
        "type": "number",
        "required": false,
        "description": "Ratio of peak to average traffic (1.5-10.0)",
        "default": "3.0"
      },
      "seasonal_variation": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include seasonal traffic variations",
        "default": "true"
      }
    },
    "error_messages": [
      "Invalid historical period: Must be at least 6 months for reliable predictions.",
      "Prediction horizon out of range: Must be between 1 and 60 months.",
      "Invalid growth rate: Must be between 0 and 500 percent.",
      "Peak hour ratio out of bounds: Must be between 1.5 and 10.0.",
      "Empty service types array: Must specify at least one service type."
    ],
    "usage": "Specify historical data period, prediction horizon, growth rate, and service types. Optionally adjust peak hour ratio and seasonal variation settings. Returns detailed traffic forecasts and capacity recommendations.",
    "output_details": {
      "forecast_summary": {
        "type": "string",
        "description": "Executive summary of traffic predictions"
      },
      "monthly_predictions": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Predicted monthly traffic volumes in Gbps"
      },
      "peak_traffic_times": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified peak traffic periods"
      },
      "service_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Traffic distribution by service type"
      },
      "capacity_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended capacity upgrades and timing"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Network Requirements Validator",
    "tool_description": "Validates and transforms business requirements into technical network specifications, ensuring completeness and feasibility of stated objectives.",
    "parameters": {
      "business_requirements": {
        "type": "array",
        "required": true,
        "description": "List of business-level network requirements",
        "items": {"type": "string"}
      },
      "performance_targets": {
        "type": "array",
        "required": true,
        "description": "Required performance metrics and thresholds",
        "items": {"type": "string"}
      },
      "budget_constraint": {
        "type": "number",
        "required": false,
        "description": "Maximum budget allocation in thousands USD",
        "default": "None"
      }
    },
    "error_messages": [
      "Empty requirements list: Must provide at least one business requirement.",
      "Missing performance targets: Must specify measurable performance objectives.",
      "Invalid budget constraint: Budget must be positive number if specified.",
      "Conflicting requirements: Some requirements are mutually exclusive and need resolution."
    ],
    "usage": "Input business requirements and performance targets. Optionally specify budget constraints. The tool validates requirement feasibility and produces technical specifications.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: passed, failed, or requires_clarification"
      },
      "technical_specifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Translated technical requirements"
      },
      "requirement_conflicts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified conflicting or unclear requirements"
      },
      "feasibility_assessment": {
        "type": "string",
        "description": "Assessment of requirement achievability"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Topology Generator",
    "tool_description": "Creates multiple network topology candidates based on site locations, connectivity requirements, and architectural constraints, generating both physical and logical network designs.",
    "parameters": {
      "site_locations": {
        "type": "array",
        "required": true,
        "description": "Approved site identifiers and locations",
        "items": {"type": "string"}
      },
      "topology_type": {
        "type": "string",
        "required": true,
        "description": "Primary topology architecture: star, mesh, ring, tree, hybrid"
      },
      "redundancy_level": {
        "type": "string",
        "required": true,
        "description": "Required redundancy: none, single, dual, full"
      },
      "max_hop_count": {
        "type": "integer",
        "required": true,
        "description": "Maximum allowed network hops between endpoints (1-10)"
      },
      "connectivity_matrix": {
        "type": "array",
        "required": true,
        "description": "Required connectivity between sites (site pairs)",
        "items": {"type": "string"}
      },
      "link_technologies": {
        "type": "array",
        "required": true,
        "description": "Available link technologies: fiber, microwave, satellite, cellular",
        "items": {"type": "string"}
      },
      "core_sites": {
        "type": "array",
        "required": false,
        "description": "Designated core/hub site identifiers",
        "items": {"type": "string"},
        "default": "None"
      },
      "geographic_constraints": {
        "type": "array",
        "required": false,
        "description": "Geographic limitations affecting topology",
        "items": {"type": "string"},
        "default": "None"
      },
      "scalability_factor": {
        "type": "number",
        "required": false,
        "description": "Design scalability multiplier (1.0-5.0)",
        "default": "2.0"
      },
      "cost_optimization": {
        "type": "boolean",
        "required": false,
        "description": "Whether to optimize for minimum cost",
        "default": "true"
      }
    },
    "error_messages": [
      "Invalid topology type: Use one of [star, mesh, ring, tree, hybrid].",
      "Invalid redundancy level: Use one of [none, single, dual, full].",
      "Hop count out of range: Must be between 1 and 10.",
      "Empty site locations: Must provide at least 2 site locations.",
      "Invalid link technology: Use combinations of [fiber, microwave, satellite, cellular].",
      "Scalability factor out of range: Must be between 1.0 and 5.0.",
      "Insufficient connectivity matrix: Must specify required site interconnections."
    ],
    "usage": "Provide site locations, topology type, redundancy requirements, and connectivity specifications. The tool generates multiple topology candidates with detailed design parameters and recommendations.",
    "output_details": {
      "topology_candidates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Generated topology design options with descriptions"
      },
      "recommended_topology": {
        "type": "string",
        "description": "Best topology candidate based on requirements"
      },
      "link_specifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed specifications for each network link"
      },
      "topology_metrics": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Performance and reliability metrics for each candidate"
      },
      "implementation_complexity": {
        "type": "string",
        "description": "Assessment of deployment complexity: low, medium, high"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Link Capacity Calculator",
    "tool_description": "Calculates required link capacities based on traffic demands, QoS requirements, and growth projections, providing bandwidth specifications for network links.",
    "parameters": {
      "traffic_matrix": {
        "type": "array",
        "required": true,
        "description": "Traffic demands between network nodes in Mbps",
        "items": {"type": "number"}
      },
      "qos_classes": {
        "type": "array",
        "required": true,
        "description": "Quality of service classes requiring guaranteed bandwidth",
        "items": {"type": "string"}
      },
      "oversubscription_ratio": {
        "type": "number",
        "required": true,
        "description": "Acceptable oversubscription ratio (1.0-10.0)"
      },
      "growth_buffer": {
        "type": "number",
        "required": false,
        "description": "Additional capacity buffer as percentage (10-200)",
        "default": "50"
      },
      "link_utilization_target": {
        "type": "number",
        "required": false,
        "description": "Target maximum link utilization percentage (30-90)",
        "default": "70"
      }
    },
    "error_messages": [
      "Invalid traffic matrix: Must contain positive values representing Mbps demands.",
      "Empty QoS classes: Must specify at least one QoS class.",
      "Oversubscription ratio out of range: Must be between 1.0 and 10.0.",
      "Growth buffer out of range: Must be between 10 and 200 percent.",
      "Link utilization target out of range: Must be between 30 and 90 percent."
    ],
    "usage": "Input traffic matrix, QoS classes, and oversubscription ratio. Optionally adjust growth buffer and utilization targets. Returns calculated link capacities and bandwidth recommendations.",
    "output_details": {
      "link_capacities": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Required capacity for each network link in Mbps"
      },
      "bandwidth_summary": {
        "type": "string",
        "description": "Summary of total bandwidth requirements"
      },
      "qos_allocations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Bandwidth allocation per QoS class"
      },
      "capacity_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended link types and speeds"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Routing Protocol Optimizer",
    "tool_description": "Selects and configures optimal routing protocols for the network topology, considering convergence time, scalability, and traffic engineering requirements.",
    "parameters": {
      "network_topology": {
        "type": "string",
        "required": true,
        "description": "Network topology description from topology generator"
      },
      "network_size": {
        "type": "integer",
        "required": true,
        "description": "Number of network nodes (5-10000)"
      },
      "convergence_requirement": {
        "type": "string",
        "required": true,
        "description": "Required convergence speed: fast, medium, slow"
      },
      "routing_protocols": {
        "type": "array",
        "required": true,
        "description": "Available routing protocol options",
        "items": {"type": "string"}
      },
      "traffic_engineering": {
        "type": "boolean",
        "required": false,
        "description": "Whether traffic engineering is required",
        "default": "false"
      }
    },
    "error_messages": [
      "Invalid convergence requirement: Use one of [fast, medium, slow].",
      "Network size out of range: Must be between 5 and 10000 nodes.",
      "Empty routing protocols list: Must specify available protocol options.",
      "Unsupported protocol combination: Some protocol combinations are incompatible."
    ],
    "usage": "Provide network topology, size, convergence requirements, and available protocols. Returns optimized routing configuration with protocol recommendations.",
    "output_details": {
      "recommended_protocols": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Optimal routing protocol selection"
      },
      "protocol_configurations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed configuration parameters for each protocol"
      },
      "convergence_analysis": {
        "type": "string",
        "description": "Expected convergence performance characteristics"
      },
      "scalability_assessment": {
        "type": "string",
        "description": "Protocol scalability evaluation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Redundancy Path Analyzer",
    "tool_description": "Analyzes network topology for redundant paths, single points of failure, and failover capabilities to ensure network resilience and availability.",
    "parameters": {
      "topology_design": {
        "type": "string",
        "required": true,
        "description": "Complete network topology specification"
      },
      "availability_target": {
        "type": "number",
        "required": true,
        "description": "Required network availability percentage (95.0-99.999)"
      },
      "failure_scenarios": {
        "type": "array",
        "required": true,
        "description": "Types of failures to analyze: link, node, site, regional",
        "items": {"type": "string"}
      },
      "recovery_time_objective": {
        "type": "integer",
        "required": false,
        "description": "Maximum acceptable recovery time in seconds (1-3600)",
        "default": "30"
      }
    },
    "error_messages": [
      "Invalid availability target: Must be between 95.0 and 99.999 percent.",
      "Empty failure scenarios: Must specify at least one failure type to analyze.",
      "Recovery time out of range: Must be between 1 and 3600 seconds.",
      "Unsupported failure scenario: Use combinations of [link, node, site, regional]."
    ],
    "usage": "Input topology design, availability target, and failure scenarios to analyze. Returns comprehensive redundancy analysis and recommendations for improving network resilience.",
    "output_details": {
      "redundancy_assessment": {
        "type": "string",
        "description": "Overall network redundancy evaluation"
      },
      "single_points_of_failure": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified critical failure points"
      },
      "alternate_paths": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Available redundant path options"
      },
      "availability_calculation": {
        "type": "number",
        "description": "Calculated network availability percentage"
      },
      "resilience_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggestions for improving network resilience"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Network Equipment Selector",
    "tool_description": "Recommends specific network equipment models based on capacity requirements, technical specifications, and budget constraints.",
    "parameters": {
      "equipment_categories": {
        "type": "array",
        "required": true,
        "description": "Types of equipment needed: router, switch, firewall, load_balancer, optical",
        "items": {"type": "string"}
      },
      "capacity_requirements": {
        "type": "array",
        "required": true,
        "description": "Required capacity specifications per equipment type",
        "items": {"type": "string"}
      },
      "vendor_preferences": {
        "type": "array",
        "required": false,
        "description": "Preferred equipment vendors",
        "items": {"type": "string"},
        "default": "None"
      },
      "budget_per_category": {
        "type": "array",
        "required": false,
        "description": "Budget allocation per equipment category in thousands USD",
        "items": {"type": "number"},
        "default": "None"
      }
    },
    "error_messages": [
      "Empty equipment categories: Must specify at least one equipment type.",
      "Mismatched arrays: Equipment categories and capacity requirements must have same length.",
      "Invalid equipment category: Use combinations of [router, switch, firewall, load_balancer, optical].",
      "Negative budget values: Budget allocations must be positive numbers."
    ],
    "usage": "Specify required equipment categories and capacity requirements. Optionally provide vendor preferences and budget constraints. Returns recommended equipment models with specifications and pricing.",
    "output_details": {
      "equipment_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended equipment models and specifications"
      },
      "cost_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed cost analysis per equipment category"
      },
      "alternative_options": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Alternative equipment choices with trade-offs"
      },
      "total_equipment_cost": {
        "type": "number",
        "description": "Total estimated equipment cost in thousands USD"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cost Estimation Engine",
    "tool_description": "Calculates comprehensive network deployment and operational costs including equipment, installation, maintenance, and ongoing operational expenses.",
    "parameters": {
      "equipment_list": {
        "type": "array",
        "required": true,
        "description": "List of selected network equipment with quantities",
        "items": {"type": "string"}
      },
      "site_count": {
        "type": "integer",
        "required": true,
        "description": "Number of sites requiring installation (1-1000)"
      },
      "installation_complexity": {
        "type": "string",
        "required": true,
        "description": "Installation difficulty level: simple, moderate, complex"
      },
      "operational_years": {
        "type": "integer",
        "required": true,
        "description": "Cost projection period in years (1-20)"
      },
      "labor_rates": {
        "type": "array",
        "required": true,
        "description": "Regional labor cost rates per hour",
        "items": {"type": "number"}
      },
      "maintenance_level": {
        "type": "string",
        "required": false,
        "description": "Maintenance service level: basic, standard, premium",
        "default": "standard"
      },
      "inflation_rate": {
        "type": "number",
        "required": false,
        "description": "Annual inflation rate percentage (0-20)",
        "default": "3.0"
      },
      "contingency_percentage": {
        "type": "number",
        "required": false,
        "description": "Project contingency buffer percentage (5-50)",
        "default": "15"
      }
    },
    "error_messages": [
      "Empty equipment list: Must provide at least one equipment item.",
      "Site count out of range: Must be between 1 and 1000 sites.",
      "Invalid installation complexity: Use one of [simple, moderate, complex].",
      "Operational years out of range: Must be between 1 and 20 years.",
      "Invalid maintenance level: Use one of [basic, standard, premium].",
      "Inflation rate out of range: Must be between 0 and 20 percent.",
      "Contingency percentage out of range: Must be between 5 and 50 percent.",
      "Negative labor rates: All labor rates must be positive values."
    ],
    "usage": "Input equipment list, site count, installation complexity, operational years, and labor rates. Optionally adjust maintenance level, inflation rate, and contingency percentage. Returns detailed cost breakdown and projections.",
    "output_details": {
      "total_project_cost": {
        "type": "number",
        "description": "Total project cost in thousands USD"
      },
      "capital_expenditure": {
        "type": "number",
        "description": "One-time capital costs in thousands USD"
      },
      "operational_expenditure": {
        "type": "number",
        "description": "Annual operational costs in thousands USD"
      },
      "cost_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed cost breakdown by category"
      },
      "yearly_projections": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Cost projections for each operational year"
      },
      "roi_analysis": {
        "type": "string",
        "description": "Return on investment analysis summary"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Simulator",
    "tool_description": "Simulates network performance under various traffic loads and conditions to validate design adequacy and identify potential bottlenecks.",
    "parameters": {
      "network_design": {
        "type": "string",
        "required": true,
        "description": "Complete network design specification"
      },
      "simulation_duration": {
        "type": "integer",
        "required": true,
        "description": "Simulation time period in hours (1-168)"
      },
      "traffic_scenarios": {
        "type": "array",
        "required": true,
        "description": "Traffic load scenarios to simulate: normal, peak, burst, failure",
        "items": {"type": "string"}
      },
      "performance_metrics": {
        "type": "array",
        "required": true,
        "description": "Metrics to measure: latency, throughput, packet_loss, jitter, availability",
        "items": {"type": "string"}
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Statistical confidence level percentage (90-99)",
        "default": "95"
      }
    },
    "error_messages": [
      "Invalid simulation duration: Must be between 1 and 168 hours.",
      "Empty traffic scenarios: Must specify at least one scenario to simulate.",
      "Empty performance metrics: Must specify at least one metric to measure.",
      "Invalid traffic scenario: Use combinations of [normal, peak, burst, failure].",
      "Invalid performance metric: Use combinations of [latency, throughput, packet_loss, jitter, availability].",
      "Confidence level out of range: Must be between 90 and 99 percent."
    ],
    "usage": "Provide network design, simulation duration, traffic scenarios, and performance metrics. Returns detailed simulation results with performance analysis and recommendations.",
    "output_details": {
      "simulation_summary": {
        "type": "string",
        "description": "Executive summary of simulation results"
      },
      "performance_results": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed performance measurements per scenario"
      },
      "bottleneck_analysis": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified network bottlenecks and constraints"
      },
      "sla_compliance": {
        "type": "boolean",
        "description": "Whether design meets service level requirements"
      },
      "optimization_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggested design improvements"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Security Architecture Designer",
    "tool_description": "Designs comprehensive network security architecture including firewall placement, access controls, encryption requirements, and security policy frameworks.",
    "parameters": {
      "network_topology": {
        "type": "string",
        "required": true,
        "description": "Base network topology for security overlay design"
      },
      "security_zones": {
        "type": "array",
        "required": true,
        "description": "Required security zones: dmz, internal, external, management",
        "items": {"type": "string"}
      },
      "threat_model": {
        "type": "array",
        "required": true,
        "description": "Identified security threats to address",
        "items": {"type": "string"}
      },
      "compliance_standards": {
        "type": "array",
        "required": true,
        "description": "Applicable compliance frameworks: iso27001, nist, pci_dss, hipaa",
        "items": {"type": "string"}
      },
      "encryption_requirements": {
        "type": "boolean",
        "required": false,
        "description": "Whether end-to-end encryption is required",
        "default": "true"
      },
      "access_control_model": {
        "type": "string",
        "required": false,
        "description": "Access control approach: rbac, abac, mandatory, discretionary",
        "default": "rbac"
      }
    },
    "error_messages": [
      "Empty security zones: Must specify at least one security zone.",
      "Empty threat model: Must identify at least one security threat.",
      "Empty compliance standards: Must specify applicable compliance requirements.",
      "Invalid security zone: Use combinations of [dmz, internal, external, management].",
      "Invalid compliance standard: Use combinations of [iso27001, nist, pci_dss, hipaa].",
      "
