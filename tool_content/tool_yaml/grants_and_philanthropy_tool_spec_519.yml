field_name: grants_and_philanthropy
subfield: Donor Relationship Management
task: Donor prospecting and research to identify potential major gift candidates
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **hard** due to the extensive scope requiring multi-source data integration, significant ambiguity in defining "major gift potential," complex coordination between research workflows and relationship mapping, high risk of privacy violations or inaccurate assessments, and substantial data infrastructure requirements for managing diverse prospect information.

  ## STEP 2 — Set a tool budget

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to cover the comprehensive workflows needed for donor prospecting and research.

  ## STEP 3 — List all tool names and dependencies

  **Tools and their data flows:**
  1. **Prospect Database Search** → produces prospect lists
  2. **Wealth Screening Tool** → consumes prospect data, produces wealth indicators
  3. **Biographical Research Compiler** → consumes prospect identifiers, produces personal/professional profiles
  4. **Corporate Affiliation Tracker** → consumes prospect data, produces employment/board connections
  5. **Philanthropic History Analyzer** → consumes donor names, produces giving patterns
  6. **Real Estate Holdings Finder** → consumes prospect identifiers, produces property valuations
  7. **Social Network Mapper** → consumes prospect data, produces relationship networks
  8. **Capacity Rating Calculator** → consumes financial data, produces giving capacity scores
  9. **Interest Alignment Scorer** → consumes prospect profiles + org priorities, produces alignment ratings
  10. **Contact Information Validator** → consumes contact data, produces verified contact details
  11. **Prospect Scoring Engine** → consumes multiple research inputs, produces composite prospect scores
  12. **Research Report Generator** → consumes all research data, produces formatted reports
  13. **Cultivation Strategy Planner** → consumes prospect profiles, produces engagement recommendations
  14. **Portfolio Assignment Tool** → consumes prospect scores + staff data, produces assignments
  15. **Research Task Scheduler** → consumes prospect lists, produces research workflows
  16. **Data Privacy Auditor** → consumes research parameters, produces compliance assessments
  17. **ROI Projection Calculator** → consumes capacity/alignment data, produces expected return estimates

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Prospect Identification:** Prospect Database Search → Contact Information Validator → Prospect Scoring Engine (identifies and validates new prospects)
  2. **Quick Wealth Assessment:** Wealth Screening Tool → Capacity Rating Calculator → ROI Projection Calculator (estimates giving potential)

  **Medium Plans:**
  1. **Comprehensive Individual Research:** Biographical Research Compiler → Corporate Affiliation Tracker → Philanthropic History Analyzer → Real Estate Holdings Finder → Research Report Generator (creates detailed prospect profiles)
  2. **Strategic Portfolio Building:** Prospect Database Search → Wealth Screening Tool → Interest Alignment Scorer → Portfolio Assignment Tool → Cultivation Strategy Planner (builds assigned prospect portfolios)

  **Complex Plans:**
  1. **Full Prospect Pipeline:** Prospect Database Search → Wealth Screening Tool → Biographical Research Compiler → Philanthropic History Analyzer → Social Network Mapper → Capacity Rating Calculator → Interest Alignment Scorer → Prospect Scoring Engine → Research Report Generator (complete prospect evaluation)
  2. **Compliant Major Gift Campaign:** Data Privacy Auditor → Research Task Scheduler → [multiple research tools] → Portfolio Assignment Tool → Cultivation Strategy Planner → ROI Projection Calculator (manages large-scale compliant prospecting operation)

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Prospect Database Search",
    "tool_description": "Searches prospect databases and public records to identify potential donors based on demographic, geographic, and interest criteria, returning prospect lists with basic contact information.",
    "parameters": {
      "search_criteria": {
        "type": "string",
        "required": true,
        "description": "Primary search criteria such as geographic location, age range, or interest areas"
      },
      "income_threshold": {
        "type": "integer",
        "required": true,
        "description": "Minimum annual income threshold in USD for prospects"
      },
      "geographic_radius": {
        "type": "integer",
        "required": false,
        "description": "Search radius in miles from organization location",
        "default": 50
      },
      "exclude_current_donors": {
        "type": "boolean",
        "required": false,
        "description": "Whether to exclude existing donors from results",
        "default": false
      }
    },
    "error_messages": [
      "Invalid search criteria: Provide specific demographic, geographic, or interest-based search terms.",
      "Income threshold too low: Minimum income threshold must be at least $50,000.",
      "Geographic radius invalid: Radius must be between 1 and 500 miles.",
      "Database connection failed: Unable to access prospect databases, try again later."
    ],
    "usage": "Specify search_criteria and income_threshold to find prospects matching your criteria. Optionally set geographic_radius and exclude_current_donors to refine results.",
    "output_details": {
      "prospect_count": {
        "type": "integer",
        "description": "Total number of prospects found"
      },
      "prospect_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Unique identifiers for each prospect found"
      },
      "search_summary": {
        "type": "string",
        "description": "Summary of search parameters and results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Wealth Screening Tool",
    "tool_description": "Analyzes financial indicators including stock holdings, business ownership, real estate values, and public compensation data to assess prospect wealth levels.",
    "parameters": {
      "prospect_ids": {
        "type": "array",
        "required": true,
        "description": "List of prospect identifiers to screen",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "screening_depth": {
        "type": "string",
        "required": true,
        "description": "Level of screening detail: basic, standard, or comprehensive"
      },
      "include_business_assets": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include business ownership and valuations",
        "default": true
      },
      "include_stock_holdings": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze public stock holdings and insider transactions",
        "default": true
      },
      "include_real_estate": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include real estate property valuations",
        "default": true
      },
      "wealth_percentile_minimum": {
        "type": "integer",
        "required": false,
        "description": "Minimum wealth percentile to include in results (1-99)",
        "default": 90
      }
    },
    "error_messages": [
      "Invalid prospect IDs: Provide valid prospect identifiers from previous searches.",
      "Invalid screening depth: Use 'basic', 'standard', or 'comprehensive'.",
      "Wealth percentile out of range: Value must be between 1 and 99.",
      "Too many prospects: Maximum 100 prospects can be screened at once.",
      "Screening service unavailable: External wealth screening services are temporarily unavailable."
    ],
    "usage": "Provide prospect_ids and screening_depth to analyze wealth indicators. Use boolean parameters to control which asset types to include and set wealth_percentile_minimum to filter results.",
    "output_details": {
      "screened_prospects": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of prospect IDs that completed screening"
      },
      "wealth_scores": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Wealth percentile scores for each screened prospect"
      },
      "estimated_net_worth": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Estimated net worth in USD for each prospect"
      },
      "screening_summary": {
        "type": "string",
        "description": "Summary of screening results and methodology"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Biographical Research Compiler",
    "tool_description": "Compiles comprehensive biographical profiles from public sources including education, career history, family information, and notable achievements.",
    "parameters": {
      "prospect_name": {
        "type": "string",
        "required": true,
        "description": "Full name of the prospect to research"
      },
      "known_location": {
        "type": "string",
        "required": false,
        "description": "City and state where prospect is known to reside",
        "default": null
      },
      "include_family": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include spouse and family member information",
        "default": true
      }
    },
    "error_messages": [
      "Name too generic: Provide additional identifying information for common names.",
      "No biographical data found: Unable to locate sufficient public information for this prospect.",
      "Research sources unavailable: External biographical databases are temporarily inaccessible."
    ],
    "usage": "Provide prospect_name and optionally known_location to compile biographical information. Set include_family to control whether family member details are included.",
    "output_details": {
      "education_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Educational institutions and degrees"
      },
      "career_highlights": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Major career positions and achievements"
      },
      "family_information": {
        "type": "string",
        "description": "Spouse and family member details if available"
      },
      "notable_achievements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Awards, recognitions, and notable accomplishments"
      },
      "research_confidence": {
        "type": "string",
        "description": "Assessment of information reliability: high, medium, or low"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Corporate Affiliation Tracker",
    "tool_description": "Identifies current and past corporate board memberships, executive positions, and business affiliations to understand professional networks and influence.",
    "parameters": {
      "prospect_name": {
        "type": "string",
        "required": true,
        "description": "Full name of the prospect to research"
      },
      "company_focus": {
        "type": "string",
        "required": false,
        "description": "Specific company or industry to focus research on",
        "default": null
      },
      "include_nonprofit_boards": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include nonprofit board memberships",
        "default": true
      },
      "years_back": {
        "type": "integer",
        "required": false,
        "description": "Number of years of historical data to include (1-20)",
        "default": 10
      }
    },
    "error_messages": [
      "Name not found in corporate records: No corporate affiliations found for this prospect name.",
      "Invalid years_back value: Must be between 1 and 20 years.",
      "Corporate database error: Unable to access corporate affiliation databases."
    ],
    "usage": "Provide prospect_name to identify corporate affiliations. Optionally specify company_focus, include_nonprofit_boards, and years_back to customize the search scope.",
    "output_details": {
      "current_positions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Current executive positions and board memberships"
      },
      "past_positions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Historical corporate positions and affiliations"
      },
      "nonprofit_boards": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Current and past nonprofit board memberships"
      },
      "influence_score": {
        "type": "integer",
        "description": "Assessed influence level based on positions held (1-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Philanthropic History Analyzer",
    "tool_description": "Analyzes past charitable giving patterns, donation amounts, recipient organizations, and giving trends to understand philanthropic behavior and preferences.",
    "parameters": {
      "donor_name": {
        "type": "string",
        "required": true,
        "description": "Name of donor to analyze philanthropic history"
      },
      "organization_name": {
        "type": "string",
        "required": false,
        "description": "Specific organization name if researching gifts to particular charity",
        "default": null
      },
      "minimum_gift_amount": {
        "type": "integer",
        "required": false,
        "description": "Minimum gift amount in USD to include in analysis",
        "default": 1000
      },
      "years_to_analyze": {
        "type": "integer",
        "required": false,
        "description": "Number of years of giving history to analyze (1-15)",
        "default": 5
      },
      "include_political_giving": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include political contributions in analysis",
        "default": false
      },
      "cause_categories": {
        "type": "array",
        "required": false,
        "description": "Specific cause areas to focus analysis on",
        "items": {
          "type": "string"
        },
        "default": null
      }
    },
    "error_messages": [
      "No giving history found: Unable to locate charitable giving records for this donor.",
      "Invalid gift amount: Minimum gift amount must be at least $100.",
      "Invalid years range: Years to analyze must be between 1 and 15.",
      "Giving database unavailable: Philanthropic databases are temporarily inaccessible."
    ],
    "usage": "Provide donor_name to analyze giving patterns. Use optional parameters to focus on specific organizations, gift amounts, time periods, or cause areas.",
    "output_details": {
      "total_giving": {
        "type": "integer",
        "description": "Total documented charitable giving amount in USD"
      },
      "average_gift_size": {
        "type": "integer",
        "description": "Average gift amount across all donations"
      },
      "preferred_causes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most supported cause areas based on giving history"
      },
      "giving_frequency": {
        "type": "string",
        "description": "Giving pattern: annual, sporadic, major gifts, or sustained"
      },
      "largest_gifts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Details of largest documented gifts"
      },
      "giving_trend": {
        "type": "string",
        "description": "Whether giving is increasing, decreasing, or stable"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Real Estate Holdings Finder",
    "tool_description": "Identifies and values real estate properties owned by prospects including primary residences, vacation homes, commercial properties, and investment real estate.",
    "parameters": {
      "owner_name": {
        "type": "string",
        "required": true,
        "description": "Name of property owner to research"
      },
      "search_states": {
        "type": "array",
        "required": true,
        "description": "List of state abbreviations to search for properties",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "property_value_minimum": {
        "type": "integer",
        "required": false,
        "description": "Minimum property value in USD to include in results",
        "default": 250000
      }
    },
    "error_messages": [
      "Invalid state codes: Provide valid two-letter state abbreviations.",
      "No properties found: No real estate holdings found for this owner in specified states.",
      "Property value minimum too low: Minimum value must be at least $100,000.",
      "Too many states selected: Maximum 10 states can be searched at once.",
      "Property database error: Real estate databases are temporarily unavailable."
    ],
    "usage": "Provide owner_name and search_states to find real estate holdings. Set property_value_minimum to filter results by property value threshold.",
    "output_details": {
      "properties_found": {
        "type": "integer",
        "description": "Number of properties identified"
      },
      "total_property_value": {
        "type": "integer",
        "description": "Combined estimated value of all properties in USD"
      },
      "property_details": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Address and estimated value for each property"
      },
      "property_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Types of properties owned: residential, commercial, land, etc."
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Social Network Mapper",
    "tool_description": "Maps social and professional connections between prospects and current donors, board members, volunteers, or other influential supporters to identify warm introduction pathways.",
    "parameters": {
      "target_prospect": {
        "type": "string",
        "required": true,
        "description": "Name of prospect to map connections for"
      },
      "organization_contacts": {
        "type": "array",
        "required": true,
        "description": "List of organization-connected individuals to check for mutual connections",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "connection_types": {
        "type": "array",
        "required": false,
        "description": "Types of connections to map: professional, social, educational, family",
        "items": {
          "type": "string"
        },
        "default": ["professional", "social", "educational"]
      },
      "connection_strength": {
        "type": "string",
        "required": false,
        "description": "Minimum connection strength to include: weak, moderate, or strong",
        "default": "moderate"
      }
    },
    "error_messages": [
      "Target prospect not found: Unable to locate social network data for this prospect.",
      "Invalid connection types: Use 'professional', 'social', 'educational', or 'family'.",
      "Invalid connection strength: Use 'weak', 'moderate', or 'strong'.",
      "Too many organization contacts: Maximum 50 contacts can be checked at once.",
      "Network mapping service unavailable: Social network databases are temporarily inaccessible."
    ],
    "usage": "Provide target_prospect and organization_contacts to map mutual connections. Specify connection_types and connection_strength to control the scope and quality of mapped relationships.",
    "output_details": {
      "mutual_connections": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of shared connections between prospect and organization contacts"
      },
      "connection_strengths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Assessed strength of each mutual connection"
      },
      "introduction_pathways": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended paths for warm introductions"
      },
      "network_influence_score": {
        "type": "integer",
        "description": "Overall network connectivity score (1-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Capacity Rating Calculator",
    "tool_description": "Calculates giving capacity scores based on wealth indicators, past giving history, and standard philanthropic capacity formulas used in major gift fundraising.",
    "parameters": {
      "estimated_net_worth": {
        "type": "integer",
        "required": true,
        "description": "Estimated net worth of prospect in USD"
      },
      "annual_income": {
        "type": "integer",
        "required": true,
        "description": "Estimated annual income in USD"
      },
      "past_largest_gift": {
        "type": "integer",
        "required": false,
        "description": "Largest documented charitable gift in USD",
        "default": 0
      },
      "annual_giving_total": {
        "type": "integer",
        "required": false,
        "description": "Total annual charitable giving in USD",
        "default": 0
      },
      "age": {
        "type": "integer",
        "required": false,
        "description": "Prospect age for lifecycle giving calculations",
        "default": null
      }
    },
    "error_messages": [
      "Invalid net worth: Net worth must be a positive number greater than $100,000.",
      "Invalid income: Annual income must be a positive number.",
      "Age out of range: If provided, age must be between 25 and 100.",
      "Inconsistent financial data: Past giving appears disproportionate to reported wealth levels."
    ],
    "usage": "Provide estimated_net_worth and annual_income to calculate basic capacity. Include past_largest_gift, annual_giving_total, and age for more accurate capacity estimates.",
    "output_details": {
      "capacity_rating": {
        "type": "string",
        "description": "Capacity rating category: low, moderate, high, or major"
      },
      "suggested_ask_amount": {
        "type": "integer",
        "description": "Recommended initial ask amount in USD"
      },
      "annual_capacity": {
        "type": "integer",
        "description": "Estimated annual giving capacity in USD"
      },
      "major_gift_capacity": {
        "type": "integer",
        "description": "Estimated capacity for one-time major gift in USD"
      },
      "confidence_level": {
        "type": "string",
        "description": "Confidence in capacity calculation: low, medium, or high"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Interest Alignment Scorer",
    "tool_description": "Analyzes prospect interests, values, and past giving patterns against organizational priorities to score mission alignment and program interest matches.",
    "parameters": {
      "prospect_interests": {
        "type": "array",
        "required": true,
        "description": "List of prospect's known interests and cause areas",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "prospect_giving_history": {
        "type": "array",
        "required": true,
        "description": "List of organizations or causes the prospect has supported",
        "items": {
          "type": "string"
        },
        "minItems": 0,
        "maxItems": 30
      },
      "organization_mission": {
        "type": "string",
        "required": true,
        "description": "Organization's primary mission statement"
      },
      "program_priorities": {
        "type": "array",
        "required": true,
        "description": "List of organization's current program priorities and initiatives",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 15
      },
      "funding_needs": {
        "type": "array",
        "required": true,
        "description": "Specific funding needs and projects seeking support",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "geographic_focus": {
        "type": "string",
        "required": false,
        "description": "Geographic area of organization's work if relevant",
        "default": null
      },
      "prospect_location": {
        "type": "string",
        "required": false,
        "description": "Prospect's primary location for geographic alignment analysis",
        "default": null
      }
    },
    "error_messages": [
      "Insufficient prospect data: Provide at least one interest area for the prospect.",
      "Missing organization priorities: Include at least one program priority.",
      "Too many interests listed: Maximum 20 prospect interests can be analyzed.",
      "Missing mission statement: Organization mission is required for alignment scoring.",
      "Alignment analysis failed: Unable to process interest alignment due to data format issues."
    ],
    "usage": "Provide prospect_interests, prospect_giving_history, organization_mission, program_priorities, and funding_needs to calculate alignment scores. Include geographic information for location-based matching.",
    "output_details": {
      "overall_alignment_score": {
        "type": "integer",
        "description": "Overall mission alignment score from 1-100"
      },
      "program_matches": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific programs that match prospect interests"
      },
      "funding_opportunity_matches": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Funding needs that align with prospect's giving patterns"
      },
      "alignment_rationale": {
        "type": "string",
        "description": "Explanation of why prospect aligns or doesn't align with organization"
      },
      "engagement_recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific recommendations for engaging this prospect"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Contact Information Validator",
    "tool_description": "Verifies and updates prospect contact information including addresses, phone numbers, and email addresses using multiple data sources.",
    "parameters": {
      "prospect_name": {
        "type": "string",
        "required": true,
        "description": "Full name of prospect to validate contact information for"
      },
      "current_address": {
        "type": "string",
        "required": false,
        "description": "Known address to verify",
        "default": null
      },
      "phone_number": {
        "type": "string",
        "required": false,
        "description": "Known phone number to verify",
        "default": null
      },
      "email_address": {
        "type": "string",
        "required": false,
        "description": "Known email address to verify",
        "default": null
      }
    },
    "error_messages": [
      "Name too common: Provide additional identifying information for validation.",
      "No contact information found: Unable to locate current contact details for this prospect.",
      "Invalid contact format: Provided contact information is not in valid format.",
      "Validation service unavailable: Contact verification services are temporarily down."
    ],
    "usage": "Provide prospect_name and any known contact information to verify and update contact details. The tool will validate existing information and attempt to find missing contact data.",
    "output_details": {
      "validated_address": {
        "type": "string",
        "description": "Current validated mailing address"
      },
      "validated_phone": {
        "type": "string",
        "description": "Current validated phone number"
      },
      "validated_email": {
        "type": "string",
        "description": "Current validated email address"
      },
      "confidence_scores": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Confidence scores for each piece of contact information (1-100)"
      },
      "last_updated": {
        "type": "string",
        "description": "Date when contact information was last verified",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Prospect Scoring Engine",
    "tool_description": "Combines multiple prospect research inputs to generate composite prospect scores, priority rankings, and readiness assessments for cultivation and solicitation.",
    "parameters": {
      "prospect_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the prospect being scored"
      },
      "capacity_score": {
        "type": "integer",
        "required": true,
        "description": "Capacity rating score from 1-100"
      },
      "alignment_score": {
        "type": "integer",
        "required": true,
        "description": "Interest alignment score from 1-100"
      },
      "connection_score": {
        "type": "integer",
        "required": true,
        "description": "Network connection strength score from 1-100"
      },
      "research_completeness": {
        "type": "integer",
        "required": true,
        "description": "Percentage of research completed (0-100)"
      },
      "wealth_indicators": {
        "type": "array",
        "required": false,
        "description": "List of identified wealth indicators",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "engagement_history": {
        "type": "string",
        "required": false,
        "description": "Past engagement with organization: none, minimal, moderate, or extensive",
        "default": "none"
      },
      "urgency_factors": {
        "type": "array",
        "required": false,
        "description": "Factors affecting cultivation urgency",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "error_messages": [
      "Invalid score ranges: All scores must be between 1 and 100.",
      "Missing required scores: Capacity, alignment, and connection scores are required.",
      "Invalid engagement history: Use 'none', 'minimal', 'moderate', or 'extensive'.",
      "Research completeness invalid: Must be a percentage between 0 and 100.",
      "Scoring calculation failed: Unable to process prospect scoring due to data inconsistencies."
    ],
    "usage": "Provide prospect_id and required scores (capacity, alignment, connection, research_completeness) to generate composite prospect score. Include optional parameters for more detailed scoring.",
    "output_details": {
      "composite_score": {
        "type": "integer",
        "description": "Overall prospect score from 1-100"
      },
      "priority_tier": {
        "type": "string",
        "description": "Priority classification: tier_1, tier_2, tier_3, or monitor"
      },
      "recommended_next_steps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended actions for prospect development"
      },
      "cultivation_timeline": {
        "type": "string",
        "description": "Suggested cultivation timeline: immediate, short_term, medium_term, or long_term"
      },
      "score_breakdown": {
        "type": "string",
        "description": "Explanation of how composite score was calculated"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Research Report Generator",
    "tool_description": "Compiles all prospect research data into formatted reports
