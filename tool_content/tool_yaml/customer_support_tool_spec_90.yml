field_name: customer_support
subfield: knowledge_base_management
task: Update and revise existing knowledge base articles based on new information or feedback
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task has medium complexity. It involves managing structured content updates across multiple articles, requires coordination between content review and publication workflows, and demands careful version control to maintain knowledge base integrity without breaking user experience.

  **STEP 2 — Set a tool budget**

  Based on the medium difficulty assessment, I'll target 12 tools to cover the breadth of knowledge base management operations including content analysis, revision workflows, validation, and publication processes.

  **STEP 3 — List all tool names and dependencies**

  1. **Article Content Analyzer** - Consumes: article IDs, analysis criteria → Produces: content metrics, readability scores
  2. **Feedback Aggregator** - Consumes: article IDs, feedback sources → Produces: consolidated feedback reports
  3. **Content Gap Identifier** - Consumes: article content, reference materials → Produces: gap analysis reports
  4. **Article Version Manager** - Consumes: article IDs, version operations → Produces: version histories, rollback capabilities
  5. **Content Editor** - Consumes: article content, revision instructions → Produces: updated content drafts
  6. **Link Validator** - Consumes: article content → Produces: broken link reports, validation status
  7. **Content Reviewer** - Consumes: draft content, review criteria → Produces: approval status, review feedback
  8. **Search Impact Analyzer** - Consumes: article changes, search queries → Produces: search performance predictions
  9. **Publication Scheduler** - Consumes: approved content, scheduling parameters → Produces: publication timelines
  10. **Article Publisher** - Consumes: approved content, publication settings → Produces: publication status, live URLs
  11. **Change Notifier** - Consumes: publication events, notification settings → Produces: notification confirmations
  12. **Performance Monitor** - Consumes: published articles, metrics timeframes → Produces: usage analytics, performance reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Quick Content Fix** (3 tools): Content Editor → Content Reviewer → Article Publisher - Fix minor typos or factual errors in existing articles
  2. **Broken Link Repair** (3 tools): Link Validator → Content Editor → Article Publisher - Identify and fix broken links across knowledge base

  **Medium Plans:**
  1. **Feedback-Driven Update** (6 tools): Feedback Aggregator → Content Gap Identifier → Content Editor → Content Reviewer → Publication Scheduler → Article Publisher - Update articles based on user feedback
  2. **Scheduled Content Refresh** (5 tools): Article Content Analyzer → Content Editor → Link Validator → Publication Scheduler → Change Notifier - Regularly refresh outdated content

  **Complex Plans:**
  1. **Comprehensive Article Overhaul** (9 tools): Article Content Analyzer → Feedback Aggregator → Content Gap Identifier → Article Version Manager → Content Editor → Link Validator → Content Reviewer → Search Impact Analyzer → Article Publisher - Complete revision of major articles
  2. **Knowledge Base Optimization** (8 tools): Performance Monitor → Article Content Analyzer → Content Gap Identifier → Content Editor → Search Impact Analyzer → Publication Scheduler → Article Publisher → Change Notifier - Data-driven optimization of underperforming content

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Article Content Analyzer",
    "tool_description": "Analyzes existing knowledge base articles to assess content quality, readability, completeness, and identifies areas needing updates based on various metrics and criteria.",
    "parameters": {
      "article_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of knowledge base article IDs to analyze",
        "minItems": 1,
        "maxItems": 50
      },
      "analysis_type": {
        "type": "string",
        "required": true,
        "description": "Type of analysis to perform: readability, completeness, freshness, or comprehensive"
      },
      "include_metrics": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific metrics to include in analysis",
        "default": ["word_count", "readability_score", "last_updated"]
      }
    },
    "error_messages": [
      "Invalid article IDs: One or more article IDs do not exist in the knowledge base.",
      "Unsupported analysis type: Use one of [readability, completeness, freshness, comprehensive].",
      "Analysis limit exceeded: Maximum 50 articles can be analyzed in a single request.",
      "Invalid metrics requested: Check that all requested metrics are supported."
    ],
    "usage": "Provide article_ids and analysis_type to assess content quality. Optionally specify include_metrics for targeted analysis. Results help identify which articles need updates or revisions.",
    "output_details": {
      "analysis_summary": {
        "type": "string",
        "description": "Overall summary of the content analysis results"
      },
      "article_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Quality scores for each analyzed article (0-100 scale)"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific improvement recommendations for each article"
      },
      "priority_articles": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Article IDs that require immediate attention"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Feedback Aggregator",
    "tool_description": "Collects and consolidates user feedback, ratings, and comments from multiple sources for specific knowledge base articles to inform content updates and improvements.",
    "parameters": {
      "article_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of article IDs to collect feedback for",
        "minItems": 1,
        "maxItems": 25
      },
      "feedback_sources": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Sources to collect feedback from",
        "minItems": 1
      },
      "time_range_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to look back for feedback (1-365)",
        "default": 30
      },
      "min_rating_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum rating to include in analysis (1-5 scale)",
        "default": 1
      },
      "include_comments": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include text comments in feedback analysis",
        "default": true
      }
    },
    "error_messages": [
      "Invalid article IDs: One or more specified article IDs do not exist.",
      "No feedback sources specified: At least one feedback source must be provided.",
      "Invalid time range: time_range_days must be between 1 and 365.",
      "Invalid rating threshold: min_rating_threshold must be between 1 and 5.",
      "Feedback source unavailable: One or more specified feedback sources are not accessible."
    ],
    "usage": "Specify article_ids and feedback_sources to aggregate user feedback. Set time_range_days, min_rating_threshold, and include_comments to filter results. Use aggregated feedback to identify content improvement opportunities.",
    "output_details": {
      "feedback_summary": {
        "type": "string",
        "description": "Summary of aggregated feedback across all articles"
      },
      "average_ratings": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Average rating for each article (1-5 scale)"
      },
      "common_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most frequently mentioned problems or suggestions"
      },
      "total_feedback_count": {
        "type": "integer",
        "description": "Total number of feedback items collected"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Gap Identifier",
    "tool_description": "Identifies missing information, outdated content, and gaps in knowledge base articles by comparing current content against reference materials, competitor content, or updated requirements.",
    "parameters": {
      "article_id": {
        "type": "string",
        "required": true,
        "description": "ID of the article to analyze for content gaps"
      },
      "reference_sources": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Reference materials or sources to compare against",
        "minItems": 1,
        "maxItems": 10
      },
      "gap_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Types of gaps to identify",
        "default": ["missing_information", "outdated_content", "incomplete_procedures"]
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Priority level for gap analysis: low, medium, or high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Article not found: The specified article_id does not exist in the knowledge base.",
      "Invalid reference sources: One or more reference sources are not accessible or invalid.",
      "Unsupported gap type: Use supported gap types [missing_information, outdated_content, incomplete_procedures, factual_errors].",
      "Invalid priority level: Use one of [low, medium, high].",
      "Reference source limit exceeded: Maximum 10 reference sources allowed per analysis."
    ],
    "usage": "Provide article_id and reference_sources to identify content gaps. Specify gap_types and priority_level to focus the analysis. Results highlight specific areas needing content updates or additions.",
    "output_details": {
      "gap_analysis_summary": {
        "type": "string",
        "description": "Overview of identified content gaps and issues"
      },
      "identified_gaps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific content gaps found in the article"
      },
      "severity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Severity rating for each identified gap (1-10 scale)"
      },
      "recommended_actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific actions recommended to address each gap"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Article Version Manager",
    "tool_description": "Manages version control for knowledge base articles, creating snapshots, tracking changes, enabling rollbacks, and maintaining version history for content management and audit purposes.",
    "parameters": {
      "article_id": {
        "type": "string",
        "required": true,
        "description": "ID of the article to manage versions for"
      },
      "operation": {
        "type": "string",
        "required": true,
        "description": "Version operation to perform: create_snapshot, rollback, view_history, or compare_versions"
      },
      "version_notes": {
        "type": "string",
        "required": false,
        "description": "Notes describing the changes or reason for version operation",
        "default": ""
      },
      "target_version": {
        "type": "string",
        "required": false,
        "description": "Target version for rollback or comparison operations",
        "default": null
      },
      "compare_with_version": {
        "type": "string",
        "required": false,
        "description": "Version to compare with when using compare_versions operation",
        "default": null
      },
      "max_versions_to_keep": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of versions to retain (5-50)",
        "default": 20
      }
    },
    "error_messages": [
      "Article not found: The specified article_id does not exist.",
      "Invalid operation: Use one of [create_snapshot, rollback, view_history, compare_versions].",
      "Version not found: The specified target_version or compare_with_version does not exist.",
      "Invalid version limit: max_versions_to_keep must be between 5 and 50.",
      "Rollback failed: Cannot rollback to the specified version due to conflicts.",
      "Insufficient permissions: User does not have permission to perform this version operation."
    ],
    "usage": "Specify article_id and operation to manage article versions. Use version_notes for documentation, target_version for rollbacks, and compare_with_version for comparisons. Set max_versions_to_keep to control version retention.",
    "output_details": {
      "operation_status": {
        "type": "string",
        "description": "Status of the version management operation"
      },
      "current_version": {
        "type": "string",
        "description": "Current active version of the article"
      },
      "version_list": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of available versions for the article"
      },
      "changes_summary": {
        "type": "string",
        "description": "Summary of changes made or differences found"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Editor",
    "tool_description": "Edits and revises knowledge base article content based on specific instructions, incorporating new information, fixing errors, improving clarity, and updating outdated sections while preserving formatting and structure.",
    "parameters": {
      "article_id": {
        "type": "string",
        "required": true,
        "description": "ID of the article to edit"
      },
      "edit_instructions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Specific editing instructions or changes to make",
        "minItems": 1,
        "maxItems": 20
      },
      "new_information": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "New information to incorporate into the article",
        "default": []
      },
      "sections_to_update": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific sections of the article to focus edits on",
        "default": []
      },
      "preserve_formatting": {
        "type": "boolean",
        "required": false,
        "description": "Whether to maintain existing formatting and structure",
        "default": true
      },
      "edit_type": {
        "type": "string",
        "required": false,
        "description": "Type of editing to perform: minor_fixes, content_update, major_revision, or restructure",
        "default": "content_update"
      },
      "target_word_count": {
        "type": "integer",
        "required": false,
        "description": "Target word count for the edited article (100-5000)",
        "default": null
      },
      "tone": {
        "type": "string",
        "required": false,
        "description": "Desired tone for the content: professional, friendly, technical, or conversational",
        "default": "professional"
      },
      "include_examples": {
        "type": "boolean",
        "required": false,
        "description": "Whether to add practical examples where appropriate",
        "default": false
      },
      "update_timestamps": {
        "type": "boolean",
        "required": false,
        "description": "Whether to update last modified timestamps",
        "default": true
      },
      "language_style": {
        "type": "string",
        "required": false,
        "description": "Language style to maintain: formal, casual, or technical",
        "default": "formal"
      }
    },
    "error_messages": [
      "Article not found: The specified article_id does not exist in the knowledge base.",
      "Invalid edit instructions: At least one edit instruction must be provided and maximum 20 allowed.",
      "Invalid edit type: Use one of [minor_fixes, content_update, major_revision, restructure].",
      "Invalid word count target: target_word_count must be between 100 and 5000 if specified.",
      "Invalid tone: Use one of [professional, friendly, technical, conversational].",
      "Invalid language style: Use one of [formal, casual, technical].",
      "Edit conflict: Another user is currently editing this article.",
      "Content too large: The edited content exceeds maximum allowed size."
    ],
    "usage": "Provide article_id and edit_instructions to revise article content. Use new_information and sections_to_update to focus changes. Set preserve_formatting, edit_type, and other parameters to control editing behavior. The tool creates a draft version with applied changes.",
    "output_details": {
      "edit_status": {
        "type": "string",
        "description": "Status of the editing operation"
      },
      "draft_version_id": {
        "type": "string",
        "description": "ID of the created draft version"
      },
      "changes_made": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Summary of specific changes applied to the content"
      },
      "word_count_change": {
        "type": "integer",
        "description": "Difference in word count from original to edited version"
      },
      "sections_modified": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of article sections that were modified"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Link Validator",
    "tool_description": "Validates all internal and external links within knowledge base articles, identifies broken links, redirects, and outdated references, and provides recommendations for link maintenance.",
    "parameters": {
      "article_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of article IDs to validate links for",
        "minItems": 1,
        "maxItems": 100
      },
      "link_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Types of links to validate",
        "default": ["internal", "external"]
      },
      "check_redirects": {
        "type": "boolean",
        "required": false,
        "description": "Whether to check for and report redirect chains",
        "default": true
      }
    },
    "error_messages": [
      "Invalid article IDs: One or more article IDs do not exist in the knowledge base.",
      "Article limit exceeded: Maximum 100 articles can be processed in a single validation request.",
      "Invalid link type: Use supported link types [internal, external, images, downloads].",
      "Network error: Unable to validate external links due to connectivity issues.",
      "Timeout error: Link validation timed out for some URLs."
    ],
    "usage": "Specify article_ids to validate all links within those articles. Set link_types to focus on specific link categories and check_redirects to identify redirect issues. Results help maintain link integrity across the knowledge base.",
    "output_details": {
      "validation_summary": {
        "type": "string",
        "description": "Overall summary of link validation results"
      },
      "broken_links": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of broken or invalid links found"
      },
      "redirect_chains": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Links that go through multiple redirects"
      },
      "total_links_checked": {
        "type": "integer",
        "description": "Total number of links validated"
      },
      "articles_with_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Article IDs that contain broken or problematic links"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Reviewer",
    "tool_description": "Reviews draft content changes for accuracy, completeness, style consistency, and compliance with knowledge base standards before approval for publication.",
    "parameters": {
      "draft_version_id": {
        "type": "string",
        "required": true,
        "description": "ID of the draft version to review"
      },
      "review_criteria": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Specific criteria to evaluate during review",
        "minItems": 1,
        "maxItems": 10
      },
      "reviewer_id": {
        "type": "string",
        "required": true,
        "description": "ID of the person conducting the review"
      },
      "review_type": {
        "type": "string",
        "required": false,
        "description": "Type of review to perform: quick, standard, or comprehensive",
        "default": "standard"
      },
      "urgency_level": {
        "type": "string",
        "required": false,
        "description": "Review urgency: low, normal, or high",
        "default": "normal"
      }
    },
    "error_messages": [
      "Draft version not found: The specified draft_version_id does not exist.",
      "Invalid reviewer ID: The reviewer_id is not valid or does not have review permissions.",
      "Invalid review criteria: At least one review criterion must be specified, maximum 10 allowed.",
      "Invalid review type: Use one of [quick, standard, comprehensive].",
      "Invalid urgency level: Use one of [low, normal, high].",
      "Draft already reviewed: This draft version has already been reviewed and cannot be reviewed again."
    ],
    "usage": "Provide draft_version_id, review_criteria, and reviewer_id to conduct content review. Set review_type and urgency_level to control review depth and priority. The tool evaluates content against specified criteria and provides approval recommendations.",
    "output_details": {
      "review_status": {
        "type": "string",
        "description": "Overall review status: approved, rejected, or needs_revision"
      },
      "review_score": {
        "type": "number",
        "description": "Overall quality score for the reviewed content (0-100)"
      },
      "criteria_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Individual scores for each review criterion"
      },
      "feedback_comments": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific feedback and suggestions for improvement"
      },
      "approval_timestamp": {
        "type": "string",
        "description": "Timestamp when review was completed",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Search Impact Analyzer",
    "tool_description": "Analyzes how proposed content changes will impact search performance, keyword rankings, and discoverability of knowledge base articles.",
    "parameters": {
      "article_id": {
        "type": "string",
        "required": true,
        "description": "ID of the article to analyze search impact for"
      },
      "proposed_changes": {
        "type": "string",
        "required": true,
        "description": "Description of proposed content changes"
      }
    },
    "error_messages": [
      "Article not found: The specified article_id does not exist.",
      "Invalid proposed changes: Description of proposed changes cannot be empty.",
      "Search data unavailable: Cannot analyze search impact due to insufficient search data."
    ],
    "usage": "Provide article_id and proposed_changes to analyze search performance impact. The tool evaluates how changes will affect keyword rankings and article discoverability to help make informed content decisions.",
    "output_details": {
      "impact_summary": {
        "type": "string",
        "description": "Overall assessment of search impact from proposed changes"
      },
      "keyword_impact_score": {
        "type": "number",
        "description": "Predicted impact on keyword performance (-100 to +100 scale)"
      },
      "search_ranking_prediction": {
        "type": "string",
        "description": "Predicted change in search rankings: improved, unchanged, or declined"
      },
      "affected_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Keywords that will be most affected by the changes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Publication Scheduler",
    "tool_description": "Schedules approved content updates for publication at specific times, manages publication queues, and coordinates rollout timing across multiple articles.",
    "parameters": {
      "draft_version_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of approved draft version IDs to schedule for publication",
        "minItems": 1,
        "maxItems": 50
      },
      "publication_time": {
        "type": "string",
        "required": true,
        "description": "Scheduled publication time (UTC, ISO 8601)",
        "format": "date-time"
      },
      "publication_priority": {
        "type": "string",
        "required": false,
        "description": "Publication priority: low, normal, or high",
        "default": "normal"
      },
      "rollback_plan": {
        "type": "boolean",
        "required": false,
        "description": "Whether to create an automatic rollback plan",
        "default": false
      },
      "notification_groups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Groups to notify about the scheduled publication",
        "default": []
      },
      "batch_publication": {
        "type": "boolean",
        "required": false,
        "description": "Whether to publish all articles simultaneously or in sequence",
        "default": false
      },
      "maintenance_window": {
        "type": "boolean",
        "required": false,
        "description": "Whether to schedule during maintenance window",
        "default": false
      },
      "dependencies": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Other articles or resources that must be published first",
        "default": []
      }
    },
    "error_messages": [
      "Invalid draft version IDs: One or more draft version IDs do not exist or are not approved.",
      "Invalid publication time: publication_time must be a future timestamp in ISO 8601 format.",
      "Invalid priority level: Use one of [low, normal, high].",
      "Schedule conflict: The requested publication time conflicts with other scheduled updates.",
      "Draft limit exceeded: Maximum 50 draft versions can be scheduled in a single request.",
      "Dependency error: One or more specified dependencies cannot be resolved.",
      "Permission denied: User does not have permission to schedule publications."
    ],
    "usage": "Provide draft_version_ids and publication_time to schedule content updates. Set publication_priority, rollback_plan, and notification_groups as needed. Use batch_publication and maintenance_window to control rollout timing.",
    "output_details": {
      "schedule_id": {
        "type": "string",
        "description": "Unique identifier for the publication schedule"
      },
      "scheduled_articles_count": {
        "type": "integer",
        "description": "Number of articles successfully scheduled"
      },
      "estimated_duration": {
        "type": "integer",
        "description": "Estimated time in minutes for complete publication"
      },
      "next_publication_slot": {
        "type": "string",
        "description": "Next available publication time slot",
        "format": "date-time"
      },
      "scheduling_status": {
        "type": "string",
        "description": "Status of the scheduling operation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Article Publisher",
    "tool_description": "Publishes approved article content to the live knowledge base, handles the deployment process, and manages the transition from draft to published status.",
    "parameters": {
      "draft_version_id": {
        "type": "string",
        "required": true,
        "description": "ID of the approved draft version to publish"
      },
      "publication_mode": {
        "type": "string",
        "required": false,
        "description": "Publication mode: immediate, scheduled, or staged",
        "default": "immediate"
      },
      "backup_current": {
        "type": "boolean",
        "required": false,
        "description": "Whether to create a backup of the current live version",
        "default": true
      }
    },
    "error_messages": [
      "Draft version not found: The specified draft_version_id does not exist.",
      "Draft not approved: The draft version has not been approved for publication.",
      "Invalid publication mode: Use one of [immediate, scheduled, staged].",
      "Publication failed: Unable to publish due to system error.",
      "Permission denied: User does not have permission to publish articles."
    ],
    "usage": "Provide draft_version_id to publish approved content. Set publication_mode to control when and how the content goes live. Use backup_current to preserve the previous version for potential rollback.",
    "output_details": {
      "publication_status": {
        "type": "string",
        "description": "Status of the publication operation: success, failed, or in_progress"
      },
      "live_article_url": {
        "type": "string",
        "description": "URL of the published article"
      },
      "publication_timestamp": {
        "type": "string",
        "description": "Timestamp when the article was published",
        "format": "date-time"
      },
      "backup_version_id": {
        "type": "string",
        "description": "ID of the backup version created before publication"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Change Notifier",
    "tool_description": "Sends notifications about knowledge base updates to relevant stakeholders, teams, and user groups when articles are published or significantly modified.",
    "parameters": {
      "article_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of article IDs that were updated",
        "minItems": 1,
        "maxItems": 25
      },
      "notification_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Types of notifications to send",
        "minItems": 1
      },
