field_name: ecommerce_and_retail
subfield: Product Catalog Management
task: Product Quality Assurance and Content Validation
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves medium complexity due to the need to validate diverse product attributes (text, images, pricing, inventory), coordinate multiple validation workflows, handle various data sources and formats, and ensure compliance with different quality standards across product categories.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty, I'll target 12 tools to cover the various validation workflows, data processing, and quality assurance checks needed for comprehensive product catalog management.

  ## STEP 3 — List all tool names and dependencies

  **Tools and their flows:**
  1. **Product Data Extractor** → Consumes: product identifiers | Produces: raw product data
  2. **Content Validator** → Consumes: text content | Produces: validation results
  3. **Image Quality Analyzer** → Consumes: image URLs/paths | Produces: image quality metrics
  4. **Price Validator** → Consumes: pricing data | Produces: price validation results
  5. **Inventory Status Checker** → Consumes: product IDs, inventory data | Produces: stock status
  6. **Duplicate Detector** → Consumes: product datasets | Produces: duplicate matches
  7. **Category Classifier** → Consumes: product descriptions | Produces: category assignments
  8. **Compliance Checker** → Consumes: product attributes | Produces: compliance status
  9. **SEO Content Optimizer** → Consumes: product content | Produces: SEO recommendations
  10. **Review Sentiment Analyzer** → Consumes: review text | Produces: sentiment scores
  11. **Quality Score Calculator** → Consumes: validation results | Produces: quality scores
  12. **Report Generator** → Consumes: analysis results | Produces: formatted reports

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  - Basic validation: Product Data Extractor → Content Validator → Quality Score Calculator
  - Image check: Product Data Extractor → Image Quality Analyzer → Report Generator

  **Medium Plans:**
  - Content audit: Product Data Extractor → Content Validator → SEO Content Optimizer → Category Classifier → Quality Score Calculator → Report Generator
  - Duplicate cleanup: Product Data Extractor → Duplicate Detector → Content Validator → Report Generator

  **Complex Plans:**
  - Full quality assurance: Product Data Extractor → Content Validator → Image Quality Analyzer → Price Validator → Inventory Status Checker → Duplicate Detector → Category Classifier → Compliance Checker → Quality Score Calculator → Report Generator
  - Comprehensive optimization: Product Data Extractor → Content Validator → SEO Content Optimizer → Review Sentiment Analyzer → Category Classifier → Compliance Checker → Quality Score Calculator → Report Generator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Product Data Extractor",
    "tool_description": "Extracts comprehensive product information from various data sources including databases, APIs, and file formats for quality assurance processing.",
    "parameters": {
      "product_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of product identifiers to extract data for",
        "minItems": 1,
        "maxItems": 1000
      },
      "data_source": {
        "type": "string",
        "required": true,
        "description": "Source of product data: database, api, csv, json, xml"
      },
      "include_images": {
        "type": "boolean",
        "required": false,
        "description": "Whether to extract image URLs and metadata",
        "default": true
      }
    },
    "error_messages": [
      "Invalid product IDs: One or more product identifiers could not be found in the specified data source.",
      "Unsupported data source: Use one of [database, api, csv, json, xml].",
      "Data source connection failed: Unable to connect to the specified data source. Check connectivity and permissions.",
      "Product limit exceeded: Maximum 1000 products can be processed in a single request."
    ],
    "usage": "Provide an array of product_ids and specify the data_source. Optionally set include_images to control image data extraction. Returns structured product data for downstream validation tools.",
    "output_details": {
      "extracted_count": {
        "type": "integer",
        "description": "Number of products successfully extracted"
      },
      "product_data": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of JSON strings containing product information"
      },
      "extraction_timestamp": {
        "type": "string",
        "description": "When the extraction was performed",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Validator",
    "tool_description": "Validates product content including titles, descriptions, specifications for completeness, accuracy, formatting, and adherence to content guidelines.",
    "parameters": {
      "product_title": {
        "type": "string",
        "required": true,
        "description": "Product title to validate"
      },
      "product_description": {
        "type": "string",
        "required": true,
        "description": "Product description text to validate"
      },
      "specifications": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Product specifications to validate",
        "default": []
      },
      "required_fields": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "List of fields that must be present",
        "default": ["title", "description"]
      },
      "min_title_length": {
        "type": "integer",
        "required": false,
        "description": "Minimum character count for titles",
        "default": 10
      },
      "min_description_length": {
        "type": "integer",
        "required": false,
        "description": "Minimum character count for descriptions",
        "default": 50
      },
      "language": {
        "type": "string",
        "required": false,
        "description": "Expected content language code (e.g., en, es, fr)",
        "default": "en"
      },
      "check_grammar": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform grammar and spelling checks",
        "default": true
      }
    },
    "error_messages": [
      "Content too short: Title or description does not meet minimum length requirements.",
      "Missing required fields: One or more required fields are empty or missing.",
      "Language mismatch: Content language does not match the specified language parameter.",
      "Grammar errors detected: Content contains grammatical or spelling errors that need correction.",
      "Invalid specification format: Specifications should be provided as key-value pairs."
    ],
    "usage": "Provide product_title and product_description as required parameters. Optionally include specifications array and validation criteria. Returns detailed validation results with specific issues identified.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the content passes all validation checks"
      },
      "validation_score": {
        "type": "number",
        "description": "Overall validation score from 0 to 100"
      },
      "issues_found": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of specific validation issues identified"
      },
      "suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended improvements for the content"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Image Quality Analyzer",
    "tool_description": "Analyzes product images for quality metrics including resolution, composition, lighting, background, and technical specifications to ensure catalog standards.",
    "parameters": {
      "image_urls": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "URLs or file paths of images to analyze",
        "minItems": 1,
        "maxItems": 20
      },
      "min_resolution": {
        "type": "integer",
        "required": false,
        "description": "Minimum required resolution in pixels",
        "default": 800
      },
      "check_background": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze background cleanliness",
        "default": true
      }
    },
    "error_messages": [
      "Image not accessible: One or more image URLs could not be accessed or loaded.",
      "Unsupported image format: Images must be in JPEG, PNG, or WebP format.",
      "Image resolution too low: Image resolution is below the specified minimum requirement.",
      "Image processing failed: Technical error occurred while analyzing image quality."
    ],
    "usage": "Provide an array of image_urls to analyze. Optionally set min_resolution and background checking preferences. Returns comprehensive quality analysis for each image.",
    "output_details": {
      "overall_score": {
        "type": "number",
        "description": "Overall image quality score from 0 to 100"
      },
      "image_analyses": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Individual analysis results for each image"
      },
      "quality_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified quality problems across all images"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggestions for improving image quality"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Price Validator",
    "tool_description": "Validates product pricing information including price ranges, currency formatting, discount calculations, and competitive pricing analysis.",
    "parameters": {
      "base_price": {
        "type": "number",
        "required": true,
        "description": "Base product price to validate"
      },
      "currency": {
        "type": "string",
        "required": true,
        "description": "Currency code (e.g., USD, EUR, GBP)"
      },
      "sale_price": {
        "type": "number",
        "required": false,
        "description": "Sale or discounted price if applicable",
        "default": null
      },
      "category": {
        "type": "string",
        "required": false,
        "description": "Product category for pricing context",
        "default": "general"
      },
      "competitor_prices": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Array of competitor prices for comparison",
        "default": []
      },
      "min_profit_margin": {
        "type": "number",
        "required": false,
        "description": "Minimum required profit margin percentage",
        "default": 10
      }
    },
    "error_messages": [
      "Invalid price format: Price must be a positive number greater than 0.",
      "Unsupported currency: Currency code not recognized or supported.",
      "Sale price error: Sale price cannot be higher than base price.",
      "Margin too low: Price does not meet minimum profit margin requirements.",
      "Pricing inconsistency: Detected significant pricing anomalies compared to category averages."
    ],
    "usage": "Provide base_price and currency as required parameters. Include sale_price for discount validation and competitor_prices for market analysis. Returns comprehensive pricing validation results.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether pricing passes validation checks"
      },
      "price_score": {
        "type": "number",
        "description": "Price competitiveness score from 0 to 100"
      },
      "pricing_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified pricing problems"
      },
      "market_position": {
        "type": "string",
        "description": "Price position relative to competitors (low/medium/high)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Status Checker",
    "tool_description": "Validates inventory levels, stock status accuracy, and availability information across different channels and warehouses.",
    "parameters": {
      "product_id": {
        "type": "string",
        "required": true,
        "description": "Product identifier to check inventory for"
      },
      "warehouses": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "List of warehouse locations to check",
        "default": ["main"]
      },
      "channels": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Sales channels to verify availability",
        "default": ["online"]
      }
    },
    "error_messages": [
      "Product not found: Product ID does not exist in inventory system.",
      "Warehouse not accessible: One or more specified warehouses could not be accessed.",
      "Channel integration error: Unable to connect to one or more sales channels.",
      "Inventory data inconsistency: Stock levels differ significantly between systems."
    ],
    "usage": "Provide product_id to check inventory status. Optionally specify warehouses and channels for multi-location validation. Returns current inventory status and availability information.",
    "output_details": {
      "total_stock": {
        "type": "integer",
        "description": "Total available inventory across all locations"
      },
      "availability_status": {
        "type": "string",
        "description": "Overall availability status (in_stock/low_stock/out_of_stock)"
      },
      "warehouse_levels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Stock levels for each warehouse"
      },
      "last_updated": {
        "type": "string",
        "description": "When inventory was last updated",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Duplicate Detector",
    "tool_description": "Identifies duplicate or near-duplicate products in the catalog based on various similarity metrics including titles, descriptions, specifications, and images.",
    "parameters": {
      "primary_product_id": {
        "type": "string",
        "required": true,
        "description": "Product ID to check for duplicates against"
      },
      "search_scope": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Product IDs to search within for duplicates",
        "default": []
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum similarity score to consider as duplicate (0-1)",
        "default": 0.8
      },
      "check_titles": {
        "type": "boolean",
        "required": false,
        "description": "Include title similarity in duplicate detection",
        "default": true
      },
      "check_descriptions": {
        "type": "boolean",
        "required": false,
        "description": "Include description similarity in duplicate detection",
        "default": true
      },
      "check_specifications": {
        "type": "boolean",
        "required": false,
        "description": "Include specification similarity in duplicate detection",
        "default": true
      },
      "check_images": {
        "type": "boolean",
        "required": false,
        "description": "Include image similarity in duplicate detection",
        "default": false
      },
      "category_filter": {
        "type": "string",
        "required": false,
        "description": "Limit search to specific product category",
        "default": null
      },
      "brand_filter": {
        "type": "string",
        "required": false,
        "description": "Limit search to specific brand",
        "default": null
      },
      "max_results": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of duplicate matches to return",
        "default": 50
      }
    },
    "error_messages": [
      "Primary product not found: The specified primary_product_id does not exist in the catalog.",
      "Invalid similarity threshold: Threshold must be between 0 and 1.",
      "Search scope too large: Maximum 10000 products can be searched in a single operation.",
      "No comparison methods selected: At least one of check_titles, check_descriptions, check_specifications, or check_images must be true.",
      "Category or brand filter not found: Specified filter values do not exist in the catalog."
    ],
    "usage": "Provide primary_product_id to find duplicates for. Configure similarity_threshold and comparison methods. Optionally use filters to narrow search scope. Returns ranked list of potential duplicates with similarity scores.",
    "output_details": {
      "duplicates_found": {
        "type": "integer",
        "description": "Number of potential duplicates identified"
      },
      "duplicate_matches": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of product IDs and similarity scores for duplicates"
      },
      "similarity_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed similarity analysis for each match"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggested actions for handling duplicates"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Category Classifier",
    "tool_description": "Automatically classifies products into appropriate categories and subcategories based on product content, specifications, and machine learning models.",
    "parameters": {
      "product_title": {
        "type": "string",
        "required": true,
        "description": "Product title for classification"
      },
      "product_description": {
        "type": "string",
        "required": true,
        "description": "Product description for classification"
      },
      "specifications": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Product specifications for enhanced classification",
        "default": []
      },
      "brand": {
        "type": "string",
        "required": false,
        "description": "Product brand for classification context",
        "default": null
      },
      "current_category": {
        "type": "string",
        "required": false,
        "description": "Current assigned category for validation",
        "default": null
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence score for category assignment (0-1)",
        "default": 0.7
      }
    },
    "error_messages": [
      "Insufficient product information: Title and description are too short for reliable classification.",
      "Classification confidence too low: Unable to classify product with sufficient confidence.",
      "Invalid confidence threshold: Threshold must be between 0 and 1.",
      "Category taxonomy error: Current category does not exist in the category hierarchy."
    ],
    "usage": "Provide product_title and product_description. Include specifications and brand for better accuracy. Set confidence_threshold to control classification strictness. Returns suggested categories with confidence scores.",
    "output_details": {
      "primary_category": {
        "type": "string",
        "description": "Main category assignment"
      },
      "subcategory": {
        "type": "string",
        "description": "Subcategory assignment"
      },
      "confidence_score": {
        "type": "number",
        "description": "Confidence in classification (0-1)"
      },
      "alternative_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Other possible category assignments with scores"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Checker",
    "tool_description": "Validates product information against regulatory requirements, platform policies, and industry standards for legal and marketplace compliance.",
    "parameters": {
      "product_category": {
        "type": "string",
        "required": true,
        "description": "Product category to check compliance rules for"
      },
      "product_title": {
        "type": "string",
        "required": true,
        "description": "Product title to validate for compliance"
      },
      "product_description": {
        "type": "string",
        "required": true,
        "description": "Product description to validate for compliance"
      },
      "product_images": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Product image URLs for visual compliance checking",
        "default": []
      },
      "target_markets": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Geographic markets for regulatory compliance (e.g., US, EU, UK)",
        "default": ["US"]
      },
      "age_restrictions": {
        "type": "boolean",
        "required": false,
        "description": "Whether product has age restrictions",
        "default": false
      },
      "hazardous_materials": {
        "type": "boolean",
        "required": false,
        "description": "Whether product contains hazardous materials",
        "default": false
      },
      "prescription_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether product requires prescription",
        "default": false
      },
      "platform_policies": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Specific platform policies to check against",
        "default": ["general"]
      },
      "industry_standards": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Industry standards to validate compliance with",
        "default": []
      }
    },
    "error_messages": [
      "Category compliance rules not found: No compliance rules defined for the specified product category.",
      "Regulatory violation detected: Product information violates regulations for one or more target markets.",
      "Platform policy violation: Content violates platform-specific policies and guidelines.",
      "Missing required disclosures: Product requires additional legal disclosures or warnings.",
      "Age restriction compliance failure: Product marketing does not comply with age restriction requirements.",
      "Hazardous material documentation missing: Hazardous products require additional safety documentation.",
      "Prescription product compliance error: Prescription products require special handling and documentation."
    ],
    "usage": "Provide product_category, product_title, and product_description. Specify target_markets for regulatory compliance. Set boolean flags for special product types. Include platform_policies and industry_standards for comprehensive compliance checking.",
    "output_details": {
      "is_compliant": {
        "type": "boolean",
        "description": "Whether product passes all compliance checks"
      },
      "compliance_score": {
        "type": "number",
        "description": "Overall compliance score from 0 to 100"
      },
      "violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of compliance violations found"
      },
      "required_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Actions needed to achieve compliance"
      },
      "warnings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Compliance warnings and recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "SEO Content Optimizer",
    "tool_description": "Analyzes and optimizes product content for search engine visibility including keyword optimization, meta descriptions, and content structure recommendations.",
    "parameters": {
      "product_title": {
        "type": "string",
        "required": true,
        "description": "Product title to optimize for SEO"
      },
      "product_description": {
        "type": "string",
        "required": true,
        "description": "Product description to optimize for SEO"
      },
      "target_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "description": "Primary keywords to optimize for",
        "default": []
      },
      "category": {
        "type": "string",
        "required": false,
        "description": "Product category for SEO context",
        "default": "general"
      },
      "brand": {
        "type": "string",
        "required": false,
        "description": "Product brand for SEO optimization",
        "default": null
      }
    },
    "error_messages": [
      "Content too short for optimization: Title or description needs more content for effective SEO optimization.",
      "Keyword stuffing detected: Content contains excessive keyword repetition that may harm SEO performance.",
      "Missing critical SEO elements: Content lacks important SEO components like product benefits or features.",
      "Category mismatch: SEO recommendations don't align with the specified product category."
    ],
    "usage": "Provide product_title and product_description for SEO analysis. Include target_keywords for focused optimization. Specify category and brand for contextual recommendations. Returns optimization suggestions and SEO scores.",
    "output_details": {
      "seo_score": {
        "type": "number",
        "description": "Overall SEO score from 0 to 100"
      },
      "keyword_density": {
        "type": "number",
        "description": "Target keyword density percentage"
      },
      "optimization_suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific SEO improvement recommendations"
      },
      "suggested_keywords": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Additional keywords to consider targeting"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Sentiment Analyzer",
    "tool_description": "Analyzes customer reviews and feedback to extract sentiment scores, identify key themes, and provide insights for product quality assessment.",
    "parameters": {
      "reviews": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Array of customer review texts to analyze",
        "minItems": 1,
        "maxItems": 500
      },
      "language": {
        "type": "string",
        "required": false,
        "description": "Language of the reviews (e.g., en, es, fr)",
        "default": "en"
      }
    },
    "error_messages": [
      "No reviews provided: At least one review is required for sentiment analysis.",
      "Review limit exceeded: Maximum 500 reviews can be analyzed in a single request.",
      "Language not supported: The specified language is not supported for sentiment analysis.",
      "Review content too short: Reviews must contain sufficient text for meaningful sentiment analysis."
    ],
    "usage": "Provide an array of customer review texts. Specify language if reviews are not in English. Returns comprehensive sentiment analysis including scores, themes, and quality insights.",
    "output_details": {
      "overall_sentiment": {
        "type": "string",
        "description": "Overall sentiment classification (positive/negative/neutral)"
      },
      "sentiment_score": {
        "type": "number",
        "description": "Numerical sentiment score from -1 (negative) to 1 (positive)"
      },
      "positive_themes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Most mentioned positive aspects"
      },
      "negative_themes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Most mentioned negative aspects"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Quality Score Calculator",
    "tool_description": "Calculates comprehensive quality scores for products based on multiple validation results, content analysis, and quality metrics from other tools.",
    "parameters": {
      "content_score": {
        "type": "number",
        "required": true,
        "description": "Content validation score from Content Validator (0-100)"
      },
      "image_score": {
        "type": "number",
        "required": false,
        "description": "Image quality score from Image Quality Analyzer (0-100)",
        "default": null
      },
      "price_score": {
        "type": "number",
        "required": false,
        "description": "Price validation score from Price Validator (0-100)",
        "default": null
      },
      "seo_score": {
        "type": "number",
        "required": false,
        "description": "SEO optimization score from SEO Content Optimizer (0-100)",
        "default": null
      },
      "compliance_score": {
        "type": "number",
        "required": false,
        "description": "Compliance score from Compliance Checker (0-100)",
        "default": null
      },
      "has_duplicates": {
        "type": "boolean",
        "required": false,
        "description": "Whether duplicates were detected by Duplicate Detector",
        "default": false
      },
      "inventory_available": {
        "type": "boolean",
        "required": false,
        "description": "Whether product is in stock from Inventory Status Checker",
        "default": true
      }
    },
    "error_messages": [
      "Invalid score values: All score parameters must be between 0 and 100.",
      "Missing required content score: Content validation score is required for quality calculation.",
      "Insufficient data for quality scoring: At least two validation scores are needed for meaningful quality assessment."
    ],
    "usage": "Provide content_score as the minimum requirement. Include additional scores from other validation tools for comprehensive quality assessment. Boolean flags help adjust the final quality calculation.",
    "output_details": {
      "overall_quality_score": {
        "type": "number",
        "description": "Comprehensive quality score from 0 to 100"
      },
      "quality_grade": {
        "type": "string",
        "description": "Quality grade classification (A/B/C/D/F)"
      },
      "score_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Individual component scores and their weights"
      },
      "improvement_priorities": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Areas needing the most improvement ranked by impact"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Report Generator",
    "tool_description": "Generates comprehensive quality assurance reports combining results from multiple validation tools into formatted documents for stakeholders.",
    "parameters": {
      "product_id": {
        "type": "string",
        "required": true,
        "description": "Product identifier for the report"
      },
      "report_type": {
        "type": "string",
        "required": true,
        "description": "Type of report to generate: summary, detailed, executive, technical"
      },
      "validation_results": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "JSON strings of results from various validation tools",
        "minItems": 1,
        "maxItems": 50
      },
      "include_recommendations": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include improvement recommendations",
        "default": true
      },
      "include_charts": {
        "type": "boolean",
        "required": false,
        "description": "
