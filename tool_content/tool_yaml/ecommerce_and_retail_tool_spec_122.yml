field_name: ecommerce_and_retail
subfield: Return and Refund Processing
task: Handle return disputes and escalate complex cases
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task has medium-to-hard difficulty due to multiple interconnected subproblems including dispute classification, evidence analysis, policy compliance checking, escalation routing, and fraud detection. The task involves moderate ambiguity in interpreting customer complaints and determining appropriate resolutions, requires coordination between multiple stakeholders (customers, merchants, support agents, legal teams), and has moderate-to-high risk since incorrect decisions can result in financial losses or customer dissatisfaction.

  **STEP 2 — Set a tool budget**

  Given the medium-hard complexity, I'll target 16 tools to cover the comprehensive workflow from initial dispute intake through final resolution and reporting.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  1. **Dispute Case Validator** → validates dispute data format
  2. **Return Policy Checker** → consumes product/policy data, produces compliance status
  3. **Customer History Analyzer** → consumes customer ID, produces behavior insights
  4. **Evidence Collector** → consumes dispute ID, produces evidence package
  5. **Fraud Detection Scanner** → consumes dispute data, produces risk scores
  6. **Dispute Classifier** → consumes dispute details, produces category/priority
  7. **Financial Impact Calculator** → consumes dispute data, produces cost analysis
  8. **Automated Resolution Engine** → consumes dispute data, produces resolution recommendations
  9. **Escalation Router** → consumes dispute classification, produces routing decisions
  10. **Case Documentation Generator** → consumes all dispute data, produces formal documentation
  11. **Stakeholder Notifier** → consumes case updates, produces notifications
  12. **Settlement Processor** → consumes resolution data, produces settlement instructions
  13. **Appeal Handler** → consumes appeal requests, produces review workflows
  14. **Compliance Auditor** → consumes case data, produces compliance reports
  15. **Performance Metrics Tracker** → consumes resolution data, produces analytics
  16. **Case Status Monitor** → consumes case updates, produces status dashboards

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic dispute validation: Dispute Case Validator → Return Policy Checker → Automated Resolution Engine
  - Standard notification flow: Case Documentation Generator → Stakeholder Notifier → Case Status Monitor

  **Medium Plans:**
  - Standard dispute processing: Dispute Case Validator → Customer History Analyzer → Dispute Classifier → Financial Impact Calculator → Automated Resolution Engine → Settlement Processor
  - Compliance workflow: Evidence Collector → Compliance Auditor → Case Documentation Generator → Performance Metrics Tracker

  **Complex Plans:**
  - Full escalation workflow: Dispute Case Validator → Customer History Analyzer → Evidence Collector → Fraud Detection Scanner → Dispute Classifier → Financial Impact Calculator → Escalation Router → Case Documentation Generator → Stakeholder Notifier → Appeal Handler → Settlement Processor
  - Comprehensive audit trail: All tools integrated for complex disputes requiring legal review, fraud investigation, and multi-stakeholder coordination

  **STEP 5 — Tools**

  ```json
  {
    "tool_name": "Dispute Case Validator",
    "tool_description": "Validates incoming dispute case data for completeness and format compliance before processing.",
    "parameters": {
      "dispute_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the dispute case"
      },
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier associated with the dispute"
      },
      "order_id": {
        "type": "string",
        "required": true,
        "description": "Order identifier for the disputed transaction"
      },
      "dispute_reason": {
        "type": "string",
        "required": true,
        "description": "Primary reason for the dispute"
      },
      "dispute_amount": {
        "type": "number",
        "required": true,
        "description": "Monetary amount being disputed"
      }
    },
    "error_messages": [
      "Invalid dispute_id format: Dispute ID must be alphanumeric and between 6-20 characters",
      "Missing required field: All parameters (dispute_id, customer_id, order_id, dispute_reason, dispute_amount) must be provided",
      "Invalid amount: Dispute amount must be greater than 0",
      "Duplicate dispute_id: This dispute ID already exists in the system"
    ],
    "usage": "Provide all required dispute case information to validate data integrity before further processing. Use this tool as the first step in any dispute handling workflow.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Status of validation (VALID, INVALID, WARNING)"
      },
      "validation_errors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of validation errors or warnings found"
      },
      "validated_dispute_id": {
        "type": "string",
        "description": "Confirmed dispute ID for downstream processing"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Return Policy Checker",
    "tool_description": "Evaluates whether a return request complies with applicable return policies and terms of service.",
    "parameters": {
      "product_category": {
        "type": "string",
        "required": true,
        "description": "Category of the product being returned"
      },
      "purchase_date": {
        "type": "string",
        "required": true,
        "description": "Date of original purchase",
        "format": "date-time"
      },
      "return_request_date": {
        "type": "string",
        "required": true,
        "description": "Date return was requested",
        "format": "date-time"
      },
      "product_condition": {
        "type": "string",
        "required": true,
        "description": "Current condition of the product (NEW, USED, DAMAGED, DEFECTIVE)"
      },
      "return_reason": {
        "type": "string",
        "required": true,
        "description": "Reason for return request"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the selling merchant"
      },
      "policy_override": {
        "type": "boolean",
        "required": false,
        "description": "Whether to check for possible policy overrides",
        "default": false
      }
    },
    "error_messages": [
      "Invalid date format: Purchase date and return request date must be in ISO 8601 format",
      "Invalid product condition: Must be one of NEW, USED, DAMAGED, DEFECTIVE",
      "Return window exceeded: Return request is outside the allowed return window for this product category",
      "Policy not found: No return policy found for the specified merchant and product category",
      "Invalid merchant_id: Merchant identifier not found in system"
    ],
    "usage": "Provide product and transaction details to verify compliance with return policies. Check policy_override for special circumstances that might warrant exceptions.",
    "output_details": {
      "policy_compliant": {
        "type": "boolean",
        "description": "Whether the return request complies with policy"
      },
      "applicable_policy": {
        "type": "string",
        "description": "Name of the return policy that applies"
      },
      "compliance_details": {
        "type": "string",
        "description": "Detailed explanation of policy compliance status"
      },
      "override_eligible": {
        "type": "boolean",
        "description": "Whether the case is eligible for policy override"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Customer History Analyzer",
    "tool_description": "Analyzes customer's historical behavior including past returns, disputes, and account status to inform dispute resolution.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Unique customer identifier"
      },
      "analysis_period_months": {
        "type": "integer",
        "required": false,
        "description": "Number of months of history to analyze (1-36)",
        "default": 12
      },
      "include_financial_data": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include financial history in analysis",
        "default": true
      }
    },
    "error_messages": [
      "Customer not found: The specified customer_id does not exist in the system",
      "Invalid analysis period: analysis_period_months must be between 1 and 36",
      "Insufficient data: Customer has insufficient historical data for meaningful analysis",
      "Access denied: Current user does not have permission to access customer financial data"
    ],
    "usage": "Provide customer_id to generate insights about customer behavior patterns. Use analysis_period_months to focus on recent behavior and include_financial_data for comprehensive analysis.",
    "output_details": {
      "customer_tier": {
        "type": "string",
        "description": "Customer value tier (BRONZE, SILVER, GOLD, PLATINUM)"
      },
      "total_orders": {
        "type": "integer",
        "description": "Total number of orders in analysis period"
      },
      "return_rate": {
        "type": "number",
        "description": "Percentage of orders that were returned"
      },
      "dispute_history_count": {
        "type": "integer",
        "description": "Number of previous disputes"
      },
      "account_standing": {
        "type": "string",
        "description": "Current account status (GOOD, WARNING, SUSPENDED)"
      },
      "risk_score": {
        "type": "number",
        "description": "Customer risk score from 0-100"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Evidence Collector",
    "tool_description": "Gathers and organizes all relevant evidence for a dispute case including photos, communications, transaction records, and documentation.",
    "parameters": {
      "dispute_id": {
        "type": "string",
        "required": true,
        "description": "Dispute case identifier"
      },
      "evidence_types": {
        "type": "array",
        "required": true,
        "description": "Types of evidence to collect",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "include_communications": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include customer communications",
        "default": true
      },
      "evidence_retention_days": {
        "type": "integer",
        "required": false,
        "description": "How long to retain collected evidence (30-365 days)",
        "default": 90
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Collection priority (LOW, MEDIUM, HIGH, URGENT)",
        "default": "MEDIUM"
      },
      "external_sources": {
        "type": "array",
        "required": false,
        "description": "External sources to check for evidence",
        "items": {
          "type": "string"
        },
        "maxItems": 5,
        "default": null
      },
      "evidence_format": {
        "type": "string",
        "required": false,
        "description": "Preferred format for evidence package (JSON, PDF, XML)",
        "default": "JSON"
      },
      "include_metadata": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include file metadata in evidence",
        "default": true
      },
      "verification_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether evidence needs verification before inclusion",
        "default": false
      },
      "anonymize_data": {
        "type": "boolean",
        "required": false,
        "description": "Whether to anonymize personal information in evidence",
        "default": false
      }
    },
    "error_messages": [
      "Dispute not found: The specified dispute_id does not exist",
      "Invalid evidence types: Must specify valid evidence types from supported list",
      "Collection failed: Unable to collect evidence from specified sources",
      "Invalid retention period: evidence_retention_days must be between 30-365",
      "Invalid priority level: Must be one of LOW, MEDIUM, HIGH, URGENT",
      "Access denied: Insufficient permissions to collect requested evidence types",
      "External source unavailable: One or more external sources are currently inaccessible",
      "Invalid format: evidence_format must be JSON, PDF, or XML"
    ],
    "usage": "Provide dispute_id and evidence_types array to collect relevant evidence. Configure retention, priority, and format options based on case requirements and legal needs.",
    "output_details": {
      "collection_status": {
        "type": "string",
        "description": "Status of evidence collection (COMPLETE, PARTIAL, FAILED)"
      },
      "evidence_count": {
        "type": "integer",
        "description": "Number of evidence items collected"
      },
      "evidence_package_id": {
        "type": "string",
        "description": "Unique identifier for the evidence package"
      },
      "collection_timestamp": {
        "type": "string",
        "description": "When evidence collection was completed"
      },
      "evidence_summary": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Summary of collected evidence items"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Fraud Detection Scanner",
    "tool_description": "Analyzes dispute patterns and transaction data to identify potential fraudulent activity using machine learning algorithms.",
    "parameters": {
      "dispute_id": {
        "type": "string",
        "required": true,
        "description": "Unique dispute identifier to analyze"
      },
      "scan_depth": {
        "type": "string",
        "required": false,
        "description": "Level of analysis (BASIC, STANDARD, DEEP)",
        "default": "STANDARD"
      },
      "include_behavioral_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include customer behavior pattern analysis",
        "default": true
      },
      "check_network_patterns": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze network-based fraud patterns",
        "default": false
      }
    },
    "error_messages": [
      "Dispute not found: The specified dispute_id does not exist in the system",
      "Invalid scan depth: scan_depth must be one of BASIC, STANDARD, DEEP",
      "Insufficient data: Not enough transaction history for meaningful fraud analysis",
      "Analysis timeout: Fraud detection analysis took too long and was terminated",
      "Service unavailable: Fraud detection service is currently unavailable"
    ],
    "usage": "Provide dispute_id to analyze for fraud indicators. Use scan_depth to control analysis thoroughness and enable behavioral/network analysis for comprehensive fraud detection.",
    "output_details": {
      "fraud_risk_score": {
        "type": "number",
        "description": "Fraud risk score from 0-100"
      },
      "risk_level": {
        "type": "string",
        "description": "Risk assessment (LOW, MEDIUM, HIGH, CRITICAL)"
      },
      "fraud_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of identified fraud risk indicators"
      },
      "recommended_actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended actions based on fraud analysis"
      },
      "confidence_level": {
        "type": "number",
        "description": "Confidence in fraud assessment (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Dispute Classifier",
    "tool_description": "Automatically classifies disputes by type, priority, and complexity to determine appropriate handling workflows.",
    "parameters": {
      "dispute_description": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the dispute"
      },
      "dispute_amount": {
        "type": "number",
        "required": true,
        "description": "Monetary amount involved in dispute"
      },
      "customer_tier": {
        "type": "string",
        "required": false,
        "description": "Customer value tier",
        "default": "STANDARD"
      },
      "urgency_indicators": {
        "type": "array",
        "required": false,
        "description": "Any urgency indicators present",
        "items": {
          "type": "string"
        },
        "default": null
      }
    },
    "error_messages": [
      "Missing dispute description: dispute_description cannot be empty",
      "Invalid amount: dispute_amount must be a positive number",
      "Classification failed: Unable to classify dispute based on provided information",
      "Invalid customer tier: customer_tier must be a recognized tier level"
    ],
    "usage": "Provide dispute details to automatically classify and prioritize the case. Include customer tier and urgency indicators for more accurate classification.",
    "output_details": {
      "dispute_category": {
        "type": "string",
        "description": "Primary category of the dispute"
      },
      "priority_level": {
        "type": "string",
        "description": "Assigned priority (LOW, MEDIUM, HIGH, URGENT)"
      },
      "complexity_score": {
        "type": "integer",
        "description": "Complexity rating from 1-10"
      },
      "estimated_resolution_time": {
        "type": "string",
        "description": "Estimated time to resolve"
      },
      "recommended_handler": {
        "type": "string",
        "description": "Recommended handler type or department"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Financial Impact Calculator",
    "tool_description": "Calculates the comprehensive financial impact of dispute resolutions including direct costs, fees, and business implications.",
    "parameters": {
      "dispute_amount": {
        "type": "number",
        "required": true,
        "description": "Base dispute amount"
      },
      "resolution_type": {
        "type": "string",
        "required": true,
        "description": "Type of resolution being considered"
      },
      "processing_costs": {
        "type": "number",
        "required": false,
        "description": "Additional processing costs",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid dispute amount: Amount must be greater than 0",
      "Unknown resolution type: Resolution type must be from supported list",
      "Calculation error: Unable to complete financial impact calculation"
    ],
    "usage": "Provide dispute amount and resolution type to calculate total financial impact. Include processing costs for comprehensive analysis.",
    "output_details": {
      "total_impact": {
        "type": "number",
        "description": "Total financial impact of the resolution"
      },
      "cost_breakdown": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed breakdown of costs"
      },
      "profitability_impact": {
        "type": "string",
        "description": "Impact on overall profitability"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Automated Resolution Engine",
    "tool_description": "Generates automated resolution recommendations based on dispute analysis, policies, and business rules.",
    "parameters": {
      "dispute_id": {
        "type": "string",
        "required": true,
        "description": "Dispute case identifier"
      },
      "policy_compliance": {
        "type": "boolean",
        "required": true,
        "description": "Whether the case is policy compliant"
      },
      "fraud_risk_score": {
        "type": "number",
        "required": true,
        "description": "Fraud risk score (0-100)"
      },
      "customer_tier": {
        "type": "string",
        "required": true,
        "description": "Customer value tier"
      },
      "financial_impact": {
        "type": "number",
        "required": true,
        "description": "Calculated financial impact"
      }
    },
    "error_messages": [
      "Invalid fraud risk score: Score must be between 0-100",
      "Dispute not found: The specified dispute_id does not exist",
      "Missing required parameters: All parameters must be provided for resolution generation",
      "Resolution generation failed: Unable to generate appropriate resolution recommendation"
    ],
    "usage": "Provide all dispute analysis results to generate automated resolution recommendations. Ensure all input parameters are from validated analysis tools.",
    "output_details": {
      "recommended_resolution": {
        "type": "string",
        "description": "Primary recommended resolution action"
      },
      "resolution_confidence": {
        "type": "number",
        "description": "Confidence level in recommendation (0-100)"
      },
      "alternative_options": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Alternative resolution options"
      },
      "justification": {
        "type": "string",
        "description": "Explanation for the recommended resolution"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Escalation Router",
    "tool_description": "Routes complex disputes to appropriate departments or specialists based on case characteristics and business rules.",
    "parameters": {
      "dispute_complexity": {
        "type": "integer",
        "required": true,
        "description": "Complexity score (1-10)"
      },
      "dispute_category": {
        "type": "string",
        "required": true,
        "description": "Primary dispute category"
      },
      "escalation_triggers": {
        "type": "array",
        "required": true,
        "description": "Factors requiring escalation",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "priority_level": {
        "type": "string",
        "required": true,
        "description": "Case priority level"
      },
      "specialized_skills_needed": {
        "type": "array",
        "required": false,
        "description": "Any specialized skills required",
        "items": {
          "type": "string"
        },
        "default": null
      },
      "geographic_region": {
        "type": "string",
        "required": false,
        "description": "Geographic region for case",
        "default": "GLOBAL"
      },
      "language_requirement": {
        "type": "string",
        "required": false,
        "description": "Required language for case handling",
        "default": "ENGLISH"
      },
      "legal_review_needed": {
        "type": "boolean",
        "required": false,
        "description": "Whether legal review is required",
        "default": false
      },
      "executive_attention": {
        "type": "boolean",
        "required": false,
        "description": "Whether case needs executive attention",
        "default": false
      },
      "regulatory_compliance": {
        "type": "boolean",
        "required": false,
        "description": "Whether regulatory compliance review is needed",
        "default": false
      },
      "customer_relationship_risk": {
        "type": "string",
        "required": false,
        "description": "Risk level to customer relationship (LOW, MEDIUM, HIGH)",
        "default": "MEDIUM"
      }
    },
    "error_messages": [
      "Invalid complexity score: Score must be between 1-10",
      "Missing escalation triggers: At least one escalation trigger must be provided",
      "Invalid priority level: Priority must be from approved list",
      "No available handlers: No qualified handlers available for the specified requirements",
      "Invalid geographic region: Region must be from supported regions list",
      "Invalid language requirement: Language must be from supported languages list",
      "Routing failed: Unable to determine appropriate escalation path",
      "Invalid customer relationship risk: Must be LOW, MEDIUM, or HIGH"
    ],
    "usage": "Provide dispute characteristics and requirements to determine optimal escalation routing. Include specialized requirements for accurate handler assignment.",
    "output_details": {
      "assigned_department": {
        "type": "string",
        "description": "Department assigned to handle the escalation"
      },
      "handler_type": {
        "type": "string",
        "description": "Type of specialist or handler assigned"
      },
      "estimated_queue_time": {
        "type": "string",
        "description": "Estimated time until case assignment"
      },
      "escalation_path": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Complete escalation routing path"
      },
      "special_instructions": {
        "type": "string",
        "description": "Any special handling instructions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Case Documentation Generator",
    "tool_description": "Creates comprehensive case documentation including summaries, timelines, and formal reports for dispute resolution records.",
    "parameters": {
      "dispute_id": {
        "type": "string",
        "required": true,
        "description": "Dispute case identifier"
      },
      "document_type": {
        "type": "string",
        "required": true,
        "description": "Type of document to generate (SUMMARY, TIMELINE, FULL_REPORT, LEGAL_BRIEF)"
      },
      "include_evidence": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include evidence references",
        "default": true
      },
      "confidentiality_level": {
        "type": "string",
        "required": false,
        "description": "Document confidentiality level (PUBLIC, INTERNAL, CONFIDENTIAL)",
        "default": "INTERNAL"
      }
    },
    "error_messages": [
      "Dispute not found: The specified dispute_id does not exist",
      "Invalid document type: Must be one of SUMMARY, TIMELINE, FULL_REPORT, LEGAL_BRIEF",
      "Insufficient data: Not enough case data to generate requested document type",
      "Invalid confidentiality level: Must be PUBLIC, INTERNAL, or CONFIDENTIAL",
      "Documentation generation failed: Unable to create document due to system error"
    ],
    "usage": "Provide dispute_id and document_type to generate appropriate case documentation. Configure evidence inclusion and confidentiality level based on intended use.",
    "output_details": {
      "document_id": {
        "type": "string",
        "description": "Unique identifier for generated document"
      },
      "document_content": {
        "type": "string",
        "description": "Generated document content"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "When document was generated"
      },
      "document_status": {
        "type": "string",
        "description": "Status of document generation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stakeholder Notifier",
    "tool_description": "Sends notifications to relevant stakeholders about case updates, resolutions, and status changes.",
    "parameters": {
      "notification_type": {
        "type": "string",
        "required": true,
        "description": "Type of notification to send"
      },
      "recipients": {
        "type": "array",
        "required": true,
        "description": "List of notification recipients",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "message_content": {
        "type": "string",
        "required": true,
        "description": "Content of the notification message"
      },
      "priority": {
        "type": "string",
        "required": false,
        "description": "Notification priority (LOW, NORMAL, HIGH, URGENT)",
        "default": "NORMAL"
      },
      "delivery_method": {
        "type": "array",
        "required": false,
        "description": "Preferred delivery methods",
        "items": {
          "type": "string"
        },
        "default": ["EMAIL"]
      }
    },
    "error_messages": [
      "Invalid notification type: Type must be from supported notification types list",
      "Empty recipients list: At least one recipient must be specified",
      "Message content required: Notification message cannot be empty",
      "Invalid priority level: Priority must be LOW, NORMAL, HIGH, or URGENT",
      "Invalid delivery method: All delivery methods must be from supported list",
      "Notification failed: Unable to send notification to one or more recipients"
    ],
    "usage": "Specify notification type, recipients, and message to send stakeholder updates. Configure priority and delivery methods based on urgency and recipient preferences.",
    "output_details": {
      "notification_id": {
        "type": "string",
        "description": "Unique identifier for the notification"
      },
      "delivery_status": {
        "type": "string",
        "description": "Overall delivery status of notification"
      },
      "successful_deliveries": {
        "type": "integer",
        "description": "Number of successful deliveries"
      },
      "failed_deliveries": {
        "type": "integer",
        "description": "Number of failed deliveries"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Settlement Processor",
    "tool_description": "Processes financial settlements and refunds based on dispute resolution decisions.",
    "parameters": {
      "settlement_type": {
        "type": "string",
        "required": true,
        "description": "Type of settlement (FULL_REFUND, PARTIAL_REFUND, CREDIT, EXCHANGE)"
      },
      "settlement_amount": {
        "type": "number",
        "required": true,
        "description": "Amount to be settled"
      },
      "payment_method": {
        "type": "string",
        "required": true,
        "description": "Method for settlement payment"
      }
    },
    "error_messages": [
      "Invalid settlement type: Must be FULL_REFUND, PARTIAL_REFUND, CREDIT, or EXCHANGE",
      "Invalid settlement amount: Amount must be greater than 0",
      "Unsupported payment method: Payment method not supported for settlements",
      "Processing failed: Unable to process settlement due to payment system error"
    ],
    "usage": "Provide settlement details to process financial resolution. Ensure settlement type and amount align with dispute resolution decision.",
    "output_details": {
      "settlement_id": {
        "type": "string",
        "description": "Unique identifier for the settlement transaction"
      },
      "processing_status": {
        "type": "string",
        "description": "Status of settlement processing"
      },
      "expected_completion": {
        "type": "string",
        "description": "Expected completion date for settlement"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Appeal Handler",
    "tool_description": "Manages appeal processes for disputed resolution decisions, including appeal validation and review workflow setup.",
    "parameters": {
      "original_dispute_id": {
        "type": "string",
        "required": true,
        "description": "ID of the original dispute being appealed"
      },
      "appeal_reason": {
        "type": "string",
        "required": true,
        "description": "Reason for the appeal"
      },
      "appeal_evidence": {
