field_name: smart_home
subfield: Climate Control and HVAC Management
task: Monitor and analyze indoor air quality metrics including temperature, humidity, CO2 levels, and pollutants
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task is medium difficulty. It involves coordinating multiple sensor types with different data formats and sampling rates, requires real-time processing capabilities, and demands sophisticated analysis to correlate various air quality metrics. The complexity comes from handling diverse data streams, implementing alerting systems, and providing actionable insights for HVAC optimization.\n\n**STEP 2 — Set a tool budget**\n\nGiven the medium difficulty, I'll target 12 tools to cover sensor data collection, processing, analysis, alerting, and reporting functions while maintaining modularity and composability.\n\n**STEP 3 — List all tool names and dependencies**\n\nTools and their data flow:\n- Sensor Data Collector → Raw sensor readings\n- Data Validator → Validated sensor data  \n- Metric Aggregator → Statistical summaries (consumes validated data)\n- Threshold Monitor → Alert triggers (consumes aggregated data)\n- Trend Analyzer → Historical patterns (consumes validated data)\n- Air Quality Scorer → Overall quality ratings (consumes validated data)\n- Alert Generator → Notifications (consumes threshold violations)\n- HVAC Recommender → Control suggestions (consumes scores and trends)\n- Report Generator → Formatted reports (consumes all processed data)\n- Historical Archiver → Long-term storage (consumes validated data)\n- Calibration Checker → Sensor accuracy status (consumes raw data)\n- Anomaly Detector → Unusual pattern identification (consumes validated data)\n\n**STEP 4 — Multi-tool plans**\n\nSimple plans:\n1. Basic monitoring: Sensor Data Collector → Data Validator → Threshold Monitor → Alert Generator\n2. Quick assessment: Sensor Data Collector → Data Validator → Air Quality Scorer\n\nMedium plans:\n1. Daily analysis: Sensor Data Collector → Data Validator → Metric Aggregator → Trend Analyzer → Report Generator\n2. HVAC optimization: Sensor Data Collector → Data Validator → Air Quality Scorer → HVAC Recommender → Alert Generator\n\nComplex plans:\n1. Complete monitoring system: Sensor Data Collector → Data Validator → Historical Archiver → Metric Aggregator → Trend Analyzer → Air Quality Scorer → HVAC Recommender → Report Generator\n2. Comprehensive analysis: Sensor Data Collector → Calibration Checker → Data Validator → Anomaly Detector → Metric Aggregator → Threshold Monitor → Alert Generator → Report Generator\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Sensor Data Collector\",\n  \"tool_description\": \"Collects real-time indoor air quality sensor data from multiple device types and formats it for processing.\",\n  \"parameters\": {\n    \"device_ids\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of sensor device identifiers to collect data from\",\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"metrics\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Air quality metrics to collect: temperature, humidity, co2, pm25, pm10, voc, formaldehyde\",\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"duration_minutes\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Data collection duration in minutes (1-1440)\"\n    },\n    \"sampling_interval\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Sampling interval in seconds (10-3600)\",\n      \"default\": 60\n    }\n  },\n  \"error_messages\": [\n    \"Device not found: One or more device_ids are not recognized or offline. Check device connectivity.\",\n    \"Invalid metric type: Use supported metrics [temperature, humidity, co2, pm25, pm10, voc, formaldehyde].\",\n    \"Invalid duration: duration_minutes must be between 1 and 1440.\",\n    \"Invalid sampling interval: sampling_interval must be between 10 and 3600 seconds.\",\n    \"Collection timeout: Unable to collect data within specified timeframe. Check sensor responsiveness.\"\
  \n  ],\n  \"usage\": \"Provide device_ids array and metrics array, set duration_minutes for collection period. Optionally adjust sampling_interval for data frequency.\",\n  \"output_details\": {\n    \"collection_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for this data collection session\"\n    },\n    \"timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of ISO 8601 datetime strings when readings were taken\"\n    },\n    \"sensor_readings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Raw sensor values corresponding to timestamps\"\n    },\n    \"device_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of devices successfully polled\"\n    },\n    \"total_readings\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of data points collected\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Validator\",\n  \"tool_description\": \"Validates sensor data for accuracy, removes outliers, and flags potentially erroneous readings based on physical constraints.\",\n  \"parameters\": {\n    \"raw_readings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Array of raw sensor readings to validate\"\n    },\n    \"metric_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of metric being validated: temperature, humidity, co2, pm25, pm10, voc, formaldehyde\"\n    },\n    \"outlier_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Standard deviation threshold for outlier detection (1.0-5.0)\",\n      \"default\": 2.5\n    }\n  },\n  \"error_messages\": [\n    \"Empty data array: raw_readings cannot be empty.\",\n    \"Invalid metric type: Use one of [temperature, humidity, co2, pm25, pm10, voc, formaldehyde].\",\n    \"Invalid threshold: outlier_threshold must be between 1.0 and 5.0.\",\n    \"Insufficient data: Need at least 3 readings for validation analysis.\"\n  ],\n  \"usage\": \"Provide raw_readings array and specify metric_type for proper validation rules. Adjust outlier_threshold to control sensitivity to anomalous values.\",\n  \"output_details\": {\n    \"validated_readings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Cleaned sensor readings with outliers removed\"\n    },\n    \"outliers_removed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of outlier readings removed\"\n    },\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Overall validation result: passed, warning, failed\"\n    },\n    \"quality_score\": {\n      \"type\": \"number\",\n      \"description\": \"Data quality score from 0-100\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Metric Aggregator\",\n  \"tool_description\": \"Computes statistical aggregations of air quality metrics over specified time windows including averages, min/max, and percentiles.\",\n  \"parameters\": {\n    \"validated_data\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Array of validated sensor readings\"\n    },\n    \"timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of ISO 8601 timestamps corresponding to readings\"\n    },\n    \"aggregation_window\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Time window for aggregation: hourly, daily, weekly\"\n    },\n    \"statistics\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Statistics to compute: mean, median, min, max, std, p25, p75, p95\",\n      \"default\": [\"mean\", \"min\", \"max\"]\n    },\n    \"metric_name\": {\n      \"type\": \"string\"\
  ,\n      \"required\": true,\n      \"description\": \"Name of the metric being aggregated\"\n    }\n  },\n  \"error_messages\": [\n    \"Data length mismatch: validated_data and timestamps arrays must have same length.\",\n    \"Invalid aggregation window: Use hourly, daily, or weekly.\",\n    \"Invalid statistic: Use combinations of [mean, median, min, max, std, p25, p75, p95].\",\n    \"Insufficient data: Need at least 2 data points for aggregation.\",\n    \"Invalid timestamp format: All timestamps must be valid ISO 8601 format.\"\n  ],\n  \"usage\": \"Provide validated_data with corresponding timestamps, specify aggregation_window and metric_name. Optionally select which statistics to compute.\",\n  \"output_details\": {\n    \"window_start\": {\n      \"type\": \"string\",\n      \"description\": \"Start timestamp of aggregation window\"\n    },\n    \"window_end\": {\n      \"type\": \"string\",\n      \"description\": \"End timestamp of aggregation window\"\n    },\n    \"computed_stats\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Array of computed statistics in order requested\"\n    },\n    \"stat_names\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Names of statistics corresponding to computed values\"\n    },\n    \"sample_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data points used in aggregation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Threshold Monitor\",\n  \"tool_description\": \"Monitors air quality metrics against configurable thresholds and generates violation alerts when limits are exceeded.\",\n  \"parameters\": {\n    \"current_value\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Current metric value to check against thresholds\"\n    },\n    \"metric_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of metric: temperature, humidity, co2, pm25, pm10, voc, formaldehyde\"\n    },\n    \"warning_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Warning level threshold\",\n      \"default\": null\n    },\n    \"critical_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Critical level threshold\",\n      \"default\": null\n    },\n    \"check_direction\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Threshold direction: above, below, both\",\n      \"default\": \"above\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid metric type: Use one of [temperature, humidity, co2, pm25, pm10, voc, formaldehyde].\",\n    \"Invalid threshold values: warning_threshold and critical_threshold must be valid numbers when provided.\",\n    \"Invalid direction: check_direction must be 'above', 'below', or 'both'.\",\n    \"Threshold logic error: critical_threshold should be more extreme than warning_threshold.\"\n  ],\n  \"usage\": \"Provide current_value and metric_type, optionally set warning_threshold and critical_threshold with appropriate check_direction.\",\n  \"output_details\": {\n    \"status\": {\n      \"type\": \"string\",\n      \"description\": \"Current status: normal, warning, critical\"\n    },\n    \"violation_type\": {\n      \"type\": \"string\",\n      \"description\": \"Type of violation if any: none, warning_exceeded, critical_exceeded\"\n    },\n    \"threshold_crossed\": {\n      \"type\": \"number\",\n      \"description\": \"Value of threshold that was crossed, if any\"\n    },\n    \"requires_action\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether immediate action is recommended\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Trend Analyzer\",\n  \"tool_description\": \"Analyzes historical air quality trends to identify patterns, seasonal variations, and long-term changes in indoor air metrics.\",\n  \"parameters\": {\n    \"historical_data\": {\n      \"type\": \"array\",\n      \"items\"\
  : {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Array of historical metric values for trend analysis\",\n      \"minItems\": 10,\n      \"maxItems\": 10000\n    },\n    \"timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of ISO 8601 timestamps corresponding to historical data\"\n    },\n    \"analysis_period\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Time period for analysis: week, month, quarter, year\"\n    },\n    \"trend_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Analysis method: linear, polynomial, moving_average\",\n      \"default\": \"linear\"\n    },\n    \"detect_seasonality\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to detect seasonal patterns\",\n      \"default\": true\n    },\n    \"confidence_level\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Statistical confidence level for trend detection (0.8-0.99)\",\n      \"default\": 0.95\n    }\n  },\n  \"error_messages\": [\n    \"Data length mismatch: historical_data and timestamps must have equal length.\",\n    \"Insufficient data: Need at least 10 data points for trend analysis.\",\n    \"Invalid analysis period: Use week, month, quarter, or year.\",\n    \"Invalid trend method: Use linear, polynomial, or moving_average.\",\n    \"Invalid confidence level: Must be between 0.8 and 0.99.\",\n    \"Invalid timestamp format: All timestamps must be valid ISO 8601 format.\",\n    \"Data too sparse: Time gaps too large for reliable trend analysis.\"\n  ],\n  \"usage\": \"Provide historical_data with timestamps, specify analysis_period and optionally configure trend_method, detect_seasonality, and confidence_level for detailed analysis.\",\n  \"output_details\": {\n    \"trend_direction\": {\n      \"type\": \"string\",\n      \"description\": \"Overall trend direction: increasing, decreasing, stable\"\n    },\n    \"trend_strength\": {\n      \"type\": \"number\",\n      \"description\": \"Strength of trend from 0-1\"\n    },\n    \"seasonal_pattern\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether seasonal patterns were detected\"\n    },\n    \"prediction_next_week\": {\n      \"type\": \"number\",\n      \"description\": \"Predicted average value for next week\"\n    },\n    \"confidence_interval\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Lower and upper bounds of prediction confidence interval\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Air Quality Scorer\",\n  \"tool_description\": \"Calculates comprehensive air quality scores based on multiple metrics using weighted algorithms and health-based standards.\",\n  \"parameters\": {\n    \"temperature\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Temperature in Celsius\",\n      \"default\": null\n    },\n    \"humidity\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Relative humidity percentage (0-100)\",\n      \"default\": null\n    },\n    \"co2_ppm\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"CO2 concentration in parts per million\",\n      \"default\": null\n    },\n    \"pm25\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"PM2.5 concentration in µg/m³\",\n      \"default\": null\n    },\n    \"pm10\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"PM10 concentration in µg/m³\",\n      \"default\": null\n    },\n    \"voc_ppb\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Volatile organic compounds in parts per billion\",\n      \"default\": null\n    },\n    \"formaldehyde_ppb\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Formaldehyde\
  \ concentration in parts per billion\",\n      \"default\": null\n    },\n    \"scoring_standard\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Air quality standard to use: who, epa, custom\",\n      \"default\": \"who\"\n    },\n    \"weighting_profile\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Metric weighting profile: balanced, health_focused, comfort_focused\",\n      \"default\": \"balanced\"\n    }\n  },\n  \"error_messages\": [\n    \"No valid metrics: At least one air quality metric must be provided.\",\n    \"Invalid metric ranges: Check that all provided metrics are within reasonable ranges for indoor air.\",\n    \"Invalid scoring standard: Use who, epa, or custom.\",\n    \"Invalid weighting profile: Use balanced, health_focused, or comfort_focused.\",\n    \"Negative values: Air quality metrics cannot be negative.\"\n  ],\n  \"usage\": \"Provide one or more air quality metrics (temperature, humidity, co2_ppm, pm25, pm10, voc_ppb, formaldehyde_ppb) and optionally specify scoring_standard and weighting_profile.\",\n  \"output_details\": {\n    \"overall_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall air quality score from 0-100 (100 being excellent)\"\n    },\n    \"quality_category\": {\n      \"type\": \"string\",\n      \"description\": \"Quality category: excellent, good, moderate, poor, hazardous\"\n    },\n    \"individual_scores\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Individual scores for each provided metric\"\n    },\n    \"primary_concern\": {\n      \"type\": \"string\",\n      \"description\": \"Metric with lowest score requiring attention\"\n    },\n    \"health_impact\": {\n      \"type\": \"string\",\n      \"description\": \"Potential health impact level: minimal, low, moderate, high\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Alert Generator\",\n  \"tool_description\": \"Generates formatted alerts and notifications for air quality violations, system issues, and maintenance recommendations.\",\n  \"parameters\": {\n    \"alert_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of alert: threshold_violation, system_error, maintenance_due, trend_warning\"\n    },\n    \"severity\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Alert severity level: info, warning, critical, emergency\"\n    },\n    \"metric_name\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Name of affected metric\",\n      \"default\": null\n    },\n    \"current_value\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Current value that triggered alert\",\n      \"default\": null\n    },\n    \"threshold_value\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Threshold that was exceeded\",\n      \"default\": null\n    },\n    \"location\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Location or zone where alert occurred\",\n      \"default\": \"main\"\n    },\n    \"custom_message\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Custom alert message\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid alert type: Use threshold_violation, system_error, maintenance_due, or trend_warning.\",\n    \"Invalid severity: Use info, warning, critical, or emergency.\",\n    \"Missing required data: threshold_violation alerts require metric_name, current_value, and threshold_value.\",\n    \"Invalid value ranges: current_value and threshold_value must be valid numbers when provided.\"\n  ],\n  \"usage\": \"Specify alert_type and severity, provide relevant context like metric_name and values for threshold violations, optionally include location and custom_message.\",\n  \"output_details\": {\n    \"alert_id\": {\n      \"type\": \"string\",\n      \"description\"\
  : \"Unique identifier for this alert\"\n    },\n    \"formatted_message\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable alert message\"\n    },\n    \"timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"Alert generation timestamp in ISO 8601 format\"\n    },\n    \"priority_score\": {\n      \"type\": \"integer\",\n      \"description\": \"Numeric priority score for alert handling (1-10)\"\n    },\n    \"recommended_actions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of recommended actions to address the alert\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"HVAC Recommender\",\n  \"tool_description\": \"Provides HVAC system control recommendations based on air quality analysis to optimize indoor environment conditions.\",\n  \"parameters\": {\n    \"current_temperature\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Current indoor temperature in Celsius\"\n    },\n    \"current_humidity\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Current relative humidity percentage\"\n    },\n    \"air_quality_score\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Overall air quality score (0-100)\"\n    },\n    \"target_temperature\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Desired temperature in Celsius\",\n      \"default\": 22\n    },\n    \"target_humidity\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Desired humidity percentage (30-70)\",\n      \"default\": 45\n    },\n    \"energy_efficiency_mode\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to prioritize energy efficiency\",\n      \"default\": false\n    },\n    \"outdoor_temperature\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Outdoor temperature in Celsius\",\n      \"default\": null\n    },\n    \"occupancy_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Current occupancy: low, medium, high\",\n      \"default\": \"medium\"\n    },\n    \"hvac_capabilities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Available HVAC functions: heating, cooling, ventilation, humidification, dehumidification, filtration\",\n      \"default\": [\"heating\", \"cooling\", \"ventilation\"]\n    }\n  },\n  \"error_messages\": [\n    \"Invalid temperature values: Temperatures must be reasonable for indoor environments (-10 to 50°C).\",\n    \"Invalid humidity range: Humidity must be between 0-100%.\",\n    \"Invalid air quality score: Score must be between 0-100.\",\n    \"Invalid target humidity: target_humidity must be between 30-70%.\",\n    \"Invalid occupancy level: Use low, medium, or high.\",\n    \"Invalid HVAC capability: Use combinations of [heating, cooling, ventilation, humidification, dehumidification, filtration].\"\n  ],\n  \"usage\": \"Provide current_temperature, current_humidity, and air_quality_score. Optionally specify targets, energy_efficiency_mode, outdoor_temperature, occupancy_level, and hvac_capabilities.\",\n  \"output_details\": {\n    \"temperature_action\": {\n      \"type\": \"string\",\n      \"description\": \"Temperature control recommendation: increase, decrease, maintain\"\n    },\n    \"humidity_action\": {\n      \"type\": \"string\",\n      \"description\": \"Humidity control recommendation: humidify, dehumidify, maintain\"\n    },\n    \"ventilation_recommendation\": {\n      \"type\": \"string\",\n      \"description\": \"Ventilation setting: increase, decrease, maintain\"\n    },\n    \"filtration_level\": {\n      \"type\": \"string\",\n      \"description\": \"Air filtration intensity: low, medium, high\"\n    },\n    \"estimated_energy_impact\": {\n      \"type\": \"string\",\n      \"description\": \"Expected energy usage\
  \ impact: low, medium, high\"\n    },\n    \"priority_actions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of prioritized HVAC actions\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Report Generator\",\n  \"tool_description\": \"Creates comprehensive air quality reports with charts, summaries, and recommendations for specified time periods.\",\n  \"parameters\": {\n    \"report_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of report: daily_summary, weekly_trend, monthly_analysis, custom\"\n    },\n    \"start_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Report start date in ISO 8601 format\"\n    },\n    \"end_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Report end date in ISO 8601 format\"\n    },\n    \"metrics_included\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Metrics to include in report\",\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"include_charts\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include data visualization charts\",\n      \"default\": true\n    },\n    \"include_recommendations\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include improvement recommendations\",\n      \"default\": true\n    },\n    \"format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Report format: summary, detailed, executive\",\n      \"default\": \"detailed\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid report type: Use daily_summary, weekly_trend, monthly_analysis, or custom.\",\n    \"Invalid date range: start_date must be before end_date and both must be valid ISO 8601 format.\",\n    \"Date range too large: Maximum report period is 1 year.\",\n    \"Empty metrics list: At least one metric must be specified.\",\n    \"Invalid format: Use summary, detailed, or executive.\"\n  ],\n  \"usage\": \"Specify report_type, start_date, end_date, and metrics_included. Optionally configure include_charts, include_recommendations, and format for customized output.\",\n  \"output_details\": {\n    \"report_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for generated report\"\n    },\n    \"generation_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"Report creation timestamp\"\n    },\n    \"executive_summary\": {\n      \"type\": \"string\",\n      \"description\": \"High-level summary of air quality findings\"\n    },\n    \"key_findings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of important insights from the analysis\"\n    },\n    \"recommendation_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of recommendations provided\"\n    },\n    \"report_size_kb\": {\n      \"type\": \"number\",\n      \"description\": \"Estimated report size in kilobytes\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Historical Archiver\",\n  \"tool_description\": \"Archives validated air quality data to long-term storage with compression and metadata for future analysis and compliance reporting.\",\n  \"parameters\": {\n    \"data_to_archive\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Array of validated sensor readings to archive\",\n      \"minItems\": 1,\n      \"maxItems\": 100000\n    },\n    \"timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Corresponding timestamps for archived data\"\n    },\n    \"metric_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of metric being archived\"\n    },\n    \"device_id\": {\n      \"\
  type\": \"string\",\n      \"required\": true,\n      \"description\": \"Source device identifier\"\n    },\n    \"retention_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Data retention period in days (30-3650)\",\n      \"default\": 365\n    },\n    \"compression_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Compression level: none, low, medium, high\",\n      \"default\": \"medium\"\n    }\n  },\n  \"error_messages\": [\n    \"Data mismatch: data_to_archive and timestamps arrays must have equal length.\",\n    \"Invalid retention period: retention_days must be between 30 and 3650.\",\n    \"Invalid compression level: Use none, low, medium, or high.\",\n    \"Archive capacity exceeded: Data volume exceeds available storage space.\",\n    \"Invalid timestamp format: All timestamps must be valid ISO 8601 format.\"\n  ],\n  \"usage\": \"Provide data_to_archive with corresponding timestamps, specify metric_type and device_id. Optionally set retention_days and compression_level for storage optimization.\",\n  \"output_details\": {\n    \"archive_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for archived dataset\"\n    },\n    \"records_archived\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data points successfully archived\"\n    },\n    \"storage_size_mb\": {\n      \"type\": \"number\",\n      \"description\": \"Storage space used in megabytes\"\n    },\n    \"compression_ratio\": {\n      \"type\": \"number\",\n      \"description\": \"Achieved compression ratio\"\n    },\n    \"expiration_date\": {\n      \"type\": \"string\",\n      \"description\": \"Date when data will be automatically deleted\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Calibration Checker\",\n  \"tool_description\": \"Verifies sensor calibration accuracy by comparing readings against reference values and detecting drift over time.\",\n  \"parameters\": {\n    \"sensor_readings\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Recent sensor readings for calibration check\",\n      \"minItems\": 5,\n      \"maxItems\": 1000\n    },\n    \"reference_values\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Known reference values for comparison\"\n    },\n    \"sensor_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of sensor being checked\"\n    },\n    \"tolerance_percentage\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Acceptable deviation percentage (1-20)\",\n      \"default\": 5\n    },\n    \"last_calibration_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Date of last calib"
