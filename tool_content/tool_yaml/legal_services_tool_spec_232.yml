field_name: legal_services
subfield: contract_drafting_and_review
task: Contract template selection and customization based on contract type and jurisdiction
tool_description: |-
  STEP 1 — Rate task difficulty

  This task is of **medium** difficulty. It involves managing complex legal requirements across multiple jurisdictions, ensuring compliance with varying regulations, and customizing detailed contract provisions. While the core workflow is structured, the complexity arises from the need to handle diverse legal frameworks, validate clause compatibility, and maintain legal accuracy across different contract types and jurisdictions.

  STEP 2 — Set a tool budget

  For a medium complexity task, I'll target **12 tools** to handle the various aspects of contract template selection, legal research, customization, validation, and finalization.

  STEP 3 — List all tool names and dependencies

  1. **Contract Type Classifier** - Consumes: contract description → Produces: classified contract type
  2. **Jurisdiction Legal Validator** - Consumes: jurisdiction, contract type → Produces: legal requirements
  3. **Template Repository Search** - Consumes: contract type, jurisdiction → Produces: available templates
  4. **Template Content Analyzer** - Consumes: template ID → Produces: clause breakdown, metadata
  5. **Clause Library Manager** - Consumes: contract type, jurisdiction → Produces: available clauses
  6. **Contract Customizer** - Consumes: template, custom provisions → Produces: customized contract
  7. **Legal Compliance Checker** - Consumes: contract content, jurisdiction → Produces: compliance status
  8. **Clause Compatibility Validator** - Consumes: selected clauses → Produces: compatibility analysis
  9. **Risk Assessment Tool** - Consumes: contract content → Produces: risk analysis
  10. **Version Control Manager** - Consumes: contract versions → Produces: version tracking
  11. **Document Formatter** - Consumes: contract content, format preferences → Produces: formatted document
  12. **Final Review Generator** - Consumes: finalized contract → Produces: review summary

  STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. Basic template selection: Contract Type Classifier → Template Repository Search → Template Content Analyzer
  2. Quick customization: Contract Customizer → Document Formatter → Final Review Generator

  **Medium Plans:**
  1. Standard contract development: Contract Type Classifier → Jurisdiction Legal Validator → Template Repository Search → Contract Customizer → Legal Compliance Checker → Document Formatter
  2. Clause-based customization: Clause Library Manager → Clause Compatibility Validator → Contract Customizer → Risk Assessment Tool

  **Complex Plans:**
  1. Full contract development: Contract Type Classifier → Jurisdiction Legal Validator → Template Repository Search → Template Content Analyzer → Clause Library Manager → Clause Compatibility Validator → Contract Customizer → Legal Compliance Checker → Risk Assessment Tool → Version Control Manager → Document Formatter → Final Review Generator
  2. Multi-jurisdiction analysis: Contract Type Classifier → [Multiple] Jurisdiction Legal Validator → Template Repository Search → Contract Customizer → [Multiple] Legal Compliance Checker → Risk Assessment Tool → Final Review Generator

  STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Contract Type Classifier",
    "tool_description": "Analyzes contract descriptions and requirements to classify the contract type and determine appropriate legal category.",
    "parameters": {
      "contract_description": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the contract purpose and scope"
      },
      "business_context": {
        "type": "string",
        "required": true,
        "description": "Business context or industry for the contract"
      },
      "party_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Types of parties involved (e.g., individual, corporation, government)"
      }
    },
    "error_messages": [
      "Invalid contract description: Provide a detailed description with at least 10 words.",
      "Unrecognized business context: Provide a valid business context or industry.",
      "Invalid party types: Specify at least one valid party type from the supported list."
    ],
    "usage": "Provide contract_description, business_context, and party_types. The tool will analyze the information and return the most appropriate contract type classification.",
    "output_details": {
      "contract_type": {
        "type": "string",
        "description": "Primary contract type classification"
      },
      "contract_subtype": {
        "type": "string",
        "description": "Specific subtype or variant of the contract"
      },
      "confidence_score": {
        "type": "number",
        "description": "Confidence level of the classification (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Jurisdiction Legal Validator",
    "tool_description": "Validates legal requirements and identifies mandatory provisions for contracts based on jurisdiction and contract type.",
    "parameters": {
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction (country, state, or region)"
      },
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of contract being validated"
      },
      "governing_law": {
        "type": "string",
        "required": false,
        "description": "Specific governing law if different from jurisdiction",
        "default": "None"
      },
      "party_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Types of contracting parties"
      },
      "contract_value": {
        "type": "number",
        "required": false,
        "description": "Estimated contract value for threshold-based requirements",
        "default": "None"
      }
    },
    "error_messages": [
      "Unsupported jurisdiction: The specified jurisdiction is not in our legal database.",
      "Invalid contract type: Provide a recognized contract type for legal validation.",
      "Conflicting governing law: The specified governing law conflicts with jurisdiction requirements.",
      "Invalid contract value: Contract value must be a positive number if specified."
    ],
    "usage": "Specify jurisdiction, contract_type, and party_types. Optionally include governing_law and contract_value for more specific validation. Returns legal requirements and mandatory clauses.",
    "output_details": {
      "mandatory_clauses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of legally required clause types"
      },
      "prohibited_terms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Terms or provisions that are prohibited"
      },
      "compliance_notes": {
        "type": "string",
        "description": "Additional compliance requirements and notes"
      },
      "legal_risks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Potential legal risks to consider"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Template Repository Search",
    "tool_description": "Searches and retrieves contract templates from the repository based on contract type, jurisdiction, and other criteria.",
    "parameters": {
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Primary contract type to search for"
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Target jurisdiction for the contract"
      },
      "complexity_level": {
        "type": "string",
        "required": false,
        "description": "Template complexity level: basic, standard, comprehensive",
        "default": "standard"
      },
      "industry_specific": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include industry-specific templates",
        "default": false
      }
    },
    "error_messages": [
      "No templates found: No templates match the specified criteria. Try broadening search parameters.",
      "Invalid complexity level: Use basic, standard, or comprehensive.",
      "Unsupported contract type: The specified contract type is not available in the repository."
    ],
    "usage": "Provide contract_type and jurisdiction as minimum requirements. Set complexity_level and industry_specific for refined results. Returns ranked list of matching templates.",
    "output_details": {
      "template_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Unique identifiers for matching templates"
      },
      "template_names": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Human-readable names of the templates"
      },
      "match_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Relevance scores for each template (0-100)"
      },
      "template_descriptions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Brief descriptions of each template's purpose"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Template Content Analyzer",
    "tool_description": "Analyzes the structure and content of a contract template, breaking down clauses and identifying customizable sections.",
    "parameters": {
      "template_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the template to analyze"
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "description": "Level of analysis: summary, detailed, comprehensive",
        "default": "detailed"
      },
      "include_metadata": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include template metadata in analysis",
        "default": true
      },
      "clause_categorization": {
        "type": "boolean",
        "required": false,
        "description": "Whether to categorize clauses by type and purpose",
        "default": true
      },
      "identify_variables": {
        "type": "boolean",
        "required": false,
        "description": "Whether to identify customizable variables and placeholders",
        "default": true
      },
      "risk_assessment": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include preliminary risk assessment of clauses",
        "default": false
      },
      "language_complexity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze language complexity and readability",
        "default": false
      }
    },
    "error_messages": [
      "Template not found: The specified template_id does not exist in the repository.",
      "Invalid analysis depth: Use summary, detailed, or comprehensive.",
      "Template access error: Unable to access template content due to permissions or corruption.",
      "Analysis failed: Template format is incompatible with analysis engine."
    ],
    "usage": "Provide template_id and configure analysis options through boolean parameters. The tool will return structured analysis of the template content including clauses, variables, and metadata.",
    "output_details": {
      "clause_count": {
        "type": "integer",
        "description": "Total number of clauses in the template"
      },
      "clause_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Categories of clauses present in the template"
      },
      "customizable_fields": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of fields that can be customized"
      },
      "template_structure": {
        "type": "string",
        "description": "Overall structure and organization of the template"
      },
      "complexity_score": {
        "type": "number",
        "description": "Template complexity rating (0-100)"
      },
      "recommended_modifications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Suggested modifications for common use cases"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clause Library Manager",
    "tool_description": "Manages and retrieves standard legal clauses from the clause library based on contract requirements and jurisdiction.",
    "parameters": {
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of contract for which clauses are needed"
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction for clause compliance"
      },
      "clause_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific categories of clauses to retrieve",
        "default": "None"
      },
      "risk_profile": {
        "type": "string",
        "required": false,
        "description": "Risk tolerance level: conservative, balanced, aggressive",
        "default": "balanced"
      }
    },
    "error_messages": [
      "Invalid contract type: Specify a recognized contract type for clause retrieval.",
      "Unsupported jurisdiction: The jurisdiction is not supported in the clause library.",
      "Invalid risk profile: Use conservative, balanced, or aggressive.",
      "No clauses available: No clauses found matching the specified criteria."
    ],
    "usage": "Provide contract_type and jurisdiction. Optionally specify clause_categories and risk_profile for targeted results. Returns available clauses with metadata.",
    "output_details": {
      "available_clauses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of available clause identifiers"
      },
      "clause_descriptions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Descriptions of what each clause covers"
      },
      "mandatory_status": {
        "type": "array",
        "items": {
          "type": "boolean"
        },
        "description": "Whether each clause is mandatory for the jurisdiction"
      },
      "risk_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Risk level associated with each clause"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Contract Customizer",
    "tool_description": "Customizes contract templates by incorporating specific provisions, terms, and party details to create tailored contract documents.",
    "parameters": {
      "template_id": {
        "type": "string",
        "required": true,
        "description": "Base template identifier to customize"
      },
      "party_names": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Names of all contracting parties"
      },
      "party_addresses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Addresses of all contracting parties"
      },
      "contract_value": {
        "type": "number",
        "required": false,
        "description": "Total contract value if applicable",
        "default": "None"
      },
      "contract_duration": {
        "type": "string",
        "required": false,
        "description": "Contract duration or term",
        "default": "None"
      },
      "custom_clauses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Additional custom clause IDs to include",
        "default": "None"
      },
      "special_terms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Special terms or conditions to incorporate",
        "default": "None"
      },
      "payment_terms": {
        "type": "string",
        "required": false,
        "description": "Payment schedule and terms",
        "default": "None"
      },
      "termination_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific termination conditions",
        "default": "None"
      },
      "liability_caps": {
        "type": "number",
        "required": false,
        "description": "Liability limitation amount",
        "default": "None"
      },
      "governing_law": {
        "type": "string",
        "required": false,
        "description": "Governing law specification",
        "default": "None"
      },
      "dispute_resolution": {
        "type": "string",
        "required": false,
        "description": "Preferred dispute resolution method",
        "default": "None"
      }
    },
    "error_messages": [
      "Template not found: The specified template_id does not exist or is inaccessible.",
      "Insufficient party information: Provide equal numbers of party names and addresses.",
      "Invalid contract value: Contract value must be a positive number if specified.",
      "Incompatible custom clauses: Some custom clauses are not compatible with the base template.",
      "Invalid liability cap: Liability cap must be a positive number.",
      "Conflicting terms: Some specified terms conflict with template requirements or legal constraints."
    ],
    "usage": "Provide template_id, party_names, and party_addresses as minimum requirements. Add optional parameters to customize specific aspects of the contract. The tool generates a customized contract document.",
    "output_details": {
      "customized_content": {
        "type": "string",
        "description": "The fully customized contract text"
      },
      "modification_summary": {
        "type": "string",
        "description": "Summary of modifications made to the base template"
      },
      "warnings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Warnings about potential issues with customizations"
      },
      "completion_status": {
        "type": "string",
        "description": "Status of the customization process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Legal Compliance Checker",
    "tool_description": "Validates contract content against legal requirements and regulations for specified jurisdictions to ensure compliance.",
    "parameters": {
      "contract_content": {
        "type": "string",
        "required": true,
        "description": "Full text of the contract to be validated"
      },
      "primary_jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Primary legal jurisdiction for compliance checking"
      },
      "secondary_jurisdictions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Additional jurisdictions to check compliance against",
        "default": "None"
      },
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of contract being validated"
      },
      "check_level": {
        "type": "string",
        "required": false,
        "description": "Validation level: basic, standard, comprehensive",
        "default": "standard"
      }
    },
    "error_messages": [
      "Invalid contract content: Provide non-empty contract text for validation.",
      "Unsupported jurisdiction: One or more specified jurisdictions are not supported.",
      "Unknown contract type: Specify a recognized contract type for proper validation.",
      "Invalid check level: Use basic, standard, or comprehensive.",
      "Validation failed: Unable to complete compliance check due to content format issues."
    ],
    "usage": "Provide contract_content, primary_jurisdiction, and contract_type. Optionally add secondary_jurisdictions and adjust check_level. Returns detailed compliance analysis.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status: compliant, non-compliant, needs-review"
      },
      "compliance_score": {
        "type": "number",
        "description": "Compliance score from 0-100"
      },
      "violations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of compliance violations found"
      },
      "missing_clauses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Required clauses that are missing"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended changes to achieve compliance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clause Compatibility Validator",
    "tool_description": "Analyzes selected clauses for compatibility, conflicts, and coherence when combined in a single contract document.",
    "parameters": {
      "clause_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of clause identifiers to validate for compatibility"
      },
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of contract these clauses will be used in"
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction for the contract"
      }
    },
    "error_messages": [
      "Insufficient clauses: Provide at least two clauses for compatibility analysis.",
      "Invalid clause IDs: One or more clause identifiers are not recognized.",
      "Incompatible contract type: Some clauses are not suitable for the specified contract type.",
      "Unsupported jurisdiction: The specified jurisdiction is not supported for compatibility checking."
    ],
    "usage": "Provide clause_ids array, contract_type, and jurisdiction. The tool analyzes all clause combinations for conflicts and compatibility issues.",
    "output_details": {
      "compatibility_status": {
        "type": "string",
        "description": "Overall compatibility: compatible, minor-conflicts, major-conflicts"
      },
      "conflict_pairs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Pairs of conflicting clauses identified"
      },
      "conflict_descriptions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Descriptions of the conflicts found"
      },
      "resolution_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Suggested ways to resolve identified conflicts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Assessment Tool",
    "tool_description": "Evaluates potential legal and business risks associated with contract terms and provisions, providing risk ratings and mitigation strategies.",
    "parameters": {
      "contract_content": {
        "type": "string",
        "required": true,
        "description": "Complete contract text to assess for risks"
      },
      "party_perspective": {
        "type": "string",
        "required": true,
        "description": "Which party's perspective to assess risk from"
      },
      "risk_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific risk categories to focus on",
        "default": "None"
      },
      "business_context": {
        "type": "string",
        "required": false,
        "description": "Business context for risk evaluation",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid contract content: Provide complete contract text for accurate risk assessment.",
      "Invalid party perspective: Specify which contracting party's viewpoint to assess from.",
      "Unknown risk categories: One or more specified risk categories are not recognized.",
      "Assessment failed: Unable to complete risk analysis due to content complexity or format issues."
    ],
    "usage": "Provide contract_content and party_perspective. Optionally specify risk_categories and business_context for focused analysis. Returns comprehensive risk evaluation.",
    "output_details": {
      "overall_risk_score": {
        "type": "number",
        "description": "Overall risk rating from 0-100"
      },
      "risk_level": {
        "type": "string",
        "description": "Risk classification: low, medium, high, critical"
      },
      "identified_risks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific risks identified in the contract"
      },
      "risk_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Individual risk scores for each identified risk"
      },
      "mitigation_strategies": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended strategies to mitigate identified risks"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Version Control Manager",
    "tool_description": "Manages contract document versions, tracks changes, and maintains revision history throughout the drafting and review process.",
    "parameters": {
      "document_content": {
        "type": "string",
        "required": true,
        "description": "Current version of the contract document"
      },
      "version_action": {
        "type": "string",
        "required": true,
        "description": "Action to perform: create, update, compare, rollback"
      },
      "version_label": {
        "type": "string",
        "required": false,
        "description": "Label or description for this version",
        "default": "None"
      },
      "base_version_id": {
        "type": "string",
        "required": false,
        "description": "Base version ID for comparison or rollback operations",
        "default": "None"
      },
      "change_summary": {
        "type": "string",
        "required": false,
        "description": "Summary of changes made in this version",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid document content: Provide valid contract content for version management.",
      "Unrecognized action: Use create, update, compare, or rollback for version_action.",
      "Version not found: The specified base_version_id does not exist.",
      "Version conflict: Unable to perform the requested version operation due to conflicts.",
      "Storage failed: Unable to save version due to system constraints."
    ],
    "usage": "Provide document_content and version_action. Use version_label and change_summary for documentation. Specify base_version_id for compare and rollback operations.",
    "output_details": {
      "version_id": {
        "type": "string",
        "description": "Unique identifier for the current version"
      },
      "version_number": {
        "type": "integer",
        "description": "Sequential version number"
      },
      "timestamp": {
        "type": "string",
        "description": "Version creation timestamp"
      },
      "changes_detected": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of changes from previous version"
      },
      "version_status": {
        "type": "string",
        "description": "Status of the version operation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Document Formatter",
    "tool_description": "Formats contract documents according to specified style guidelines, legal standards, and presentation requirements.",
    "parameters": {
      "contract_content": {
        "type": "string",
        "required": true,
        "description": "Raw contract content to be formatted"
      },
      "format_style": {
        "type": "string",
        "required": false,
        "description": "Formatting style: legal-standard, corporate, simple, custom",
        "default": "legal-standard"
      },
      "output_format": {
        "type": "string",
        "required": false,
        "description": "Output format: text, html, pdf-ready",
        "default": "text"
      },
      "include_toc": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include table of contents",
        "default": true
      },
      "page_numbering": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include page numbers",
        "default": true
      }
    },
    "error_messages": [
      "Invalid contract content: Provide non-empty contract text for formatting.",
      "Unrecognized format style: Use legal-standard, corporate, simple, or custom.",
      "Unsupported output format: Use text, html, or pdf-ready.",
      "Formatting failed: Unable to format document due to content structure issues."
    ],
    "usage": "Provide contract_content and select formatting options. The tool applies professional formatting standards and returns the formatted document.",
    "output_details": {
      "formatted_content": {
        "type": "string",
        "description": "Professionally formatted contract document"
      },
      "format_applied": {
        "type": "string",
        "description": "Description of formatting style applied"
      },
      "word_count": {
        "type": "integer",
        "description": "Total word count of formatted document"
      },
      "page_count": {
        "type": "integer",
        "description": "Estimated page count for printing"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Final Review Generator",
    "tool_description": "Generates comprehensive review summaries and checklists for finalized contracts, highlighting key terms and potential issues.",
    "parameters": {
      "contract_content": {
        "type": "string",
        "required": true,
        "description": "Final contract document to review"
      },
      "review_focus": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific areas to focus review on",
        "default": "None"
      },
      "party_perspective": {
        "type": "string",
        "required": false,
        "description": "Which party's interests to prioritize in review",
        "default": "neutral"
      }
    },
    "error_messages": [
      "Invalid contract content: Provide complete contract document for review generation.",
      "Unrecognized review focus: Specify valid focus areas from the supported list.",
      "Review generation failed: Unable to complete review due to document complexity or format issues."
    ],
    "usage": "Provide contract_content and optionally specify review_focus areas and party_perspective. Generates comprehensive review summary with key findings.",
    "output_details": {
      "executive_summary": {
        "type": "string",
        "description": "High-level summary of the contract and key terms"
      },
      "key_obligations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Primary obligations for each party"
      },
      "important_dates": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Critical dates and dea
