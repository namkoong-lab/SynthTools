field_name: games_and_gamification
subfield: Player Analytics and Behavior Tracking
task: Player Engagement and Retention Analysis
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task is **medium** difficulty. It involves analyzing complex player behavior patterns, requires coordination between multiple data sources (gameplay events, user profiles, session data), has moderate ambiguity in defining engagement metrics, and requires sophisticated analytical techniques to extract meaningful insights from large datasets.\n\n**STEP 2 — Set a tool budget**\n\nGiven the medium complexity, I'll target **12 tools** within the 10-15 range. This allows for comprehensive coverage of data collection, preprocessing, analysis, segmentation, and reporting workflows while maintaining tool composability.\n\n**STEP 3 — List all tool names and dependencies**\n\n1. **Player Data Extractor** - Consumes: player IDs, time ranges → Produces: raw player activity data\n2. **Session Analytics Calculator** - Consumes: raw activity data → Produces: session metrics\n3. **Engagement Metrics Generator** - Consumes: activity data, custom parameters → Produces: engagement scores\n4. **Retention Rate Analyzer** - Consumes: player data, time cohorts → Produces: retention statistics  \n5. **Player Segmentation Tool** - Consumes: player metrics → Produces: player segments\n6. **Behavior Pattern Detector** - Consumes: session data, behavioral rules → Produces: pattern classifications\n7. **Churn Risk Predictor** - Consumes: player features, historical data → Produces: churn probabilities\n8. **A/B Test Analyzer** - Consumes: experiment data, player groups → Produces: statistical comparisons\n9. **Revenue Impact Calculator** - Consumes: engagement data, monetization events → Produces: revenue correlations\n10. **Funnel Analysis Tool** - Consumes: event sequences, funnel definitions → Produces: conversion rates\n11. **Cohort Comparison Engine** - Consumes: multiple cohorts, metrics → Produces: comparative analysis\n12. **Analytics Report Generator** - Consumes: all analysis outputs → Produces: formatted reports\n\n**STEP 4 — List multi-tool plans**\n\n**Simple Plans:**\n- Basic retention analysis: Player Data Extractor → Retention Rate Analyzer → Analytics Report Generator\n- Session quality assessment: Player Data Extractor → Session Analytics Calculator → Analytics Report Generator\n\n**Medium Plans:**  \n- Player segmentation analysis: Player Data Extractor → Engagement Metrics Generator → Player Segmentation Tool → Cohort Comparison Engine → Analytics Report Generator\n- Churn prediction workflow: Player Data Extractor → Session Analytics Calculator → Behavior Pattern Detector → Churn Risk Predictor → Analytics Report Generator\n\n**Complex Plans:**\n- Complete engagement optimization: Player Data Extractor → Session Analytics Calculator → Engagement Metrics Generator → Player Segmentation Tool → Behavior Pattern Detector → Churn Risk Predictor → Revenue Impact Calculator → Analytics Report Generator\n- Full A/B test evaluation: Player Data Extractor → Session Analytics Calculator → Engagement Metrics Generator → A/B Test Analyzer → Funnel Analysis Tool → Revenue Impact Calculator → Cohort Comparison Engine → Analytics Report Generator\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Player Data Extractor\",\n  \"tool_description\": \"Extracts comprehensive player activity data from game databases for specified players and time ranges, including gameplay events, session information, and user attributes.\",\n  \"parameters\": {\n    \"player_ids\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of unique player identifiers to extract data for\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1,\n      \"maxItems\": 10000\n    },\n    \"start_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Start date for data extraction (ISO 8601 format)\",\n      \"format\": \"date-time\"\n    },\n    \"end_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"End date for data extraction (ISO 8601 format)\",\n      \"format\": \"date-time\"\n\
  \    },\n    \"include_events\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include detailed gameplay events\",\n      \"default\": true\n    },\n    \"data_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Output format: raw, aggregated, or summary\",\n      \"default\": \"raw\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid date range: start_date must be earlier than end_date and both must be valid ISO 8601 timestamps.\",\n    \"Player ID limit exceeded: Maximum 10000 player IDs allowed per extraction.\",\n    \"Empty player list: At least one player ID must be provided.\",\n    \"Invalid data format: Must be one of [raw, aggregated, summary].\",\n    \"Database connection failed: Unable to access player data source.\"\n  ],\n  \"usage\": \"Provide player_ids array, start_date, and end_date. Optionally specify include_events and data_format. The tool returns structured player activity data for the specified time period.\",\n  \"output_details\": {\n    \"total_players\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of players with data extracted\"\n    },\n    \"data_points\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of data points collected\"\n    },\n    \"extraction_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of the extraction process and data quality\"\n    },\n    \"player_data\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of player data records in specified format\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Session Analytics Calculator\",\n  \"tool_description\": \"Calculates comprehensive session-level analytics including duration, frequency, depth metrics, and session quality scores from raw player activity data.\",\n  \"parameters\": {\n    \"player_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of player activity records\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"session_timeout\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Minutes of inactivity before considering a new session\",\n      \"default\": 30\n    },\n    \"quality_metrics\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Metrics to calculate for session quality\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": [\"duration\", \"actions\", \"progression\"]\n    }\n  },\n  \"error_messages\": [\n    \"Empty player data: At least one player data record must be provided.\",\n    \"Invalid session timeout: Must be a positive integer between 1 and 1440 minutes.\",\n    \"Invalid quality metrics: Must contain only supported metric names [duration, actions, progression, engagement, retention_indicators].\",\n    \"Malformed player data: Player data records must be in valid format.\"\n  ],\n  \"usage\": \"Provide player_data array from Player Data Extractor. Optionally set session_timeout and quality_metrics array. Returns detailed session analytics for all players.\",\n  \"output_details\": {\n    \"total_sessions\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of sessions analyzed\"\n    },\n    \"avg_session_duration\": {\n      \"type\": \"number\",\n      \"description\": \"Average session duration in minutes\"\n    },\n    \"session_quality_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall session quality score (0-100)\"\n    },\n    \"sessions_per_player\": {\n      \"type\": \"number\",\n      \"description\": \"Average number of sessions per player\"\n    },\n    \"detailed_metrics\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Detailed session metrics for each player\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Engagement Metrics Generator\",\n  \"tool_description\": \"Generates comprehensive player\
  \ engagement metrics including DAU/MAU ratios, feature usage, progression rates, and custom engagement scores based on configurable parameters.\",\n  \"parameters\": {\n    \"player_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player activity data records\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"metric_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Types of engagement metrics to calculate\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"time_window\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Analysis time window in days\",\n      \"default\": 30\n    },\n    \"custom_weights\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Custom weights for different engagement factors\",\n      \"items\": {\"type\": \"number\"},\n      \"default\": [1.0, 1.0, 1.0]\n    },\n    \"threshold_values\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Threshold values for engagement classification\",\n      \"items\": {\"type\": \"number\"},\n      \"default\": [0.3, 0.7]\n    },\n    \"feature_list\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Specific game features to analyze for engagement\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": [\"gameplay\", \"social\", \"progression\"]\n    },\n    \"normalization_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Method for normalizing engagement scores\",\n      \"default\": \"z_score\"\n    },\n    \"player_segments\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Player segments to analyze separately\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": [\"all\"]\n    },\n    \"include_trends\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include trend analysis\",\n      \"default\": true\n    },\n    \"comparison_period\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Days for period-over-period comparison\",\n      \"default\": 7\n    },\n    \"confidence_level\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Statistical confidence level for metrics\",\n      \"default\": 0.95\n    }\n  },\n  \"error_messages\": [\n    \"Empty player data: At least one player data record must be provided.\",\n    \"Invalid metric types: Must contain supported metric names [dau_mau, session_frequency, feature_usage, progression_rate, retention_score, custom_engagement].\",\n    \"Invalid time window: Must be between 1 and 365 days.\",\n    \"Mismatched weights array: custom_weights length must match number of engagement factors being weighted.\",\n    \"Invalid threshold values: Must be between 0 and 1, and in ascending order.\",\n    \"Invalid normalization method: Must be one of [z_score, min_max, percentile].\",\n    \"Invalid confidence level: Must be between 0.8 and 0.99.\"\n  ],\n  \"usage\": \"Provide player_data and metric_types arrays. Configure time_window, custom_weights, threshold_values, and other parameters as needed. Returns comprehensive engagement analysis with scores and classifications.\",\n  \"output_details\": {\n    \"engagement_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall engagement score (0-100)\"\n    },\n    \"player_classifications\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Engagement level classifications for each player\"\n    },\n    \"metric_breakdown\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Detailed breakdown of individual engagement metrics\"\n    },\n    \"trend_analysis\": {\n      \"type\": \"string\",\n      \"description\": \"Engagement trend analysis over specified\
  \ period\"\n    },\n    \"recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Actionable recommendations based on engagement analysis\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Retention Rate Analyzer\",\n  \"tool_description\": \"Analyzes player retention rates across different time periods and cohorts, calculating day-N retention, cohort analysis, and identifying retention patterns and drop-off points.\",\n  \"parameters\": {\n    \"player_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player activity data with timestamps\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"cohort_definition\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"How to define cohorts: registration_date, first_session, or custom\"\n    },\n    \"retention_periods\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Days to calculate retention for\",\n      \"items\": {\"type\": \"integer\"},\n      \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"analysis_type\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Type of retention analysis: classic, rolling, or bounded\",\n      \"default\": \"classic\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty player data: At least one player data record required for retention analysis.\",\n    \"Invalid cohort definition: Must be one of [registration_date, first_session, custom].\",\n    \"Invalid retention periods: Must contain integers between 1 and 365, maximum 20 periods allowed.\",\n    \"Invalid analysis type: Must be one of [classic, rolling, bounded].\",\n    \"Insufficient data: Need at least 7 days of data for meaningful retention analysis.\"\n  ],\n  \"usage\": \"Provide player_data, cohort_definition, and retention_periods. Optionally set analysis_type. Returns comprehensive retention analysis with rates, cohort breakdowns, and insights.\",\n  \"output_details\": {\n    \"overall_retention\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Overall retention rates for each specified period\"\n    },\n    \"cohort_analysis\": {\n      \"type\": \"string\",\n      \"description\": \"Detailed cohort-based retention analysis\"\n    },\n    \"retention_curve\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Retention curve data points for visualization\"\n    },\n    \"churn_insights\": {\n      \"type\": \"string\",\n      \"description\": \"Key insights about player churn patterns\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Player Segmentation Tool\",\n  \"tool_description\": \"Segments players into distinct groups based on behavior patterns, engagement levels, spending habits, and other configurable criteria using clustering and rule-based approaches.\",\n  \"parameters\": {\n    \"player_metrics\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player metrics data for segmentation\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"segmentation_method\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Segmentation approach: kmeans, hierarchical, rule_based, or hybrid\"\n    },\n    \"number_of_segments\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Desired number of player segments\",\n      \"default\": 5\n    },\n    \"feature_weights\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Weights for different features in segmentation\",\n      \"items\": {\"type\": \"number\"},\n      \"default\": [1.0, 1.0, 1.0]\n    }\n  },\n  \"error_messages\": [\n    \"Empty player metrics: At least one player metrics record required for segmentation.\",\n    \"Invalid segmentation method: Must be one of [kmeans, hierarchical, rule_based, hybrid].\",\n \
  \   \"Invalid number of segments: Must be between 2 and 20.\",\n    \"Feature weights mismatch: Number of weights must match number of features in player metrics.\",\n    \"Insufficient data diversity: Player data lacks sufficient variation for meaningful segmentation.\"\n  ],\n  \"usage\": \"Provide player_metrics from other analytics tools, specify segmentation_method, and optionally set number_of_segments and feature_weights. Returns player segments with characteristics and assignments.\",\n  \"output_details\": {\n    \"segment_assignments\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Segment assignment for each player\"\n    },\n    \"segment_profiles\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Detailed characteristics of each segment\"\n    },\n    \"segmentation_quality\": {\n      \"type\": \"number\",\n      \"description\": \"Quality score of the segmentation (0-1)\"\n    },\n    \"segment_sizes\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"description\": \"Number of players in each segment\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Behavior Pattern Detector\",\n  \"tool_description\": \"Detects and classifies player behavior patterns such as grinding, exploring, social play, competitive focus, and custom behavioral rules from session and activity data.\",\n  \"parameters\": {\n    \"session_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Session-level player activity data\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"pattern_rules\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Behavioral pattern definitions to detect\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"detection_sensitivity\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Sensitivity threshold for pattern detection (0-1)\",\n      \"default\": 0.7\n    },\n    \"minimum_sessions\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Minimum sessions required to establish a pattern\",\n      \"default\": 5\n    },\n    \"time_window\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Days to look back for pattern detection\",\n      \"default\": 14\n    }\n  },\n  \"error_messages\": [\n    \"Empty session data: At least one session data record required for pattern detection.\",\n    \"Invalid pattern rules: Must contain valid behavioral pattern definitions.\",\n    \"Invalid detection sensitivity: Must be between 0.1 and 1.0.\",\n    \"Invalid minimum sessions: Must be between 1 and 100.\",\n    \"Invalid time window: Must be between 1 and 90 days.\",\n    \"Insufficient session data: Not enough sessions to detect meaningful patterns.\"\n  ],\n  \"usage\": \"Provide session_data from Session Analytics Calculator and define pattern_rules to detect. Configure detection_sensitivity, minimum_sessions, and time_window as needed. Returns detected patterns and classifications.\",\n  \"output_details\": {\n    \"detected_patterns\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of detected behavior patterns per player\"\n    },\n    \"pattern_confidence\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Confidence scores for each detected pattern\"\n    },\n    \"behavior_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Overall summary of behavior patterns in the dataset\"\n    },\n    \"anomalies\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Unusual or anomalous behavior patterns detected\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Churn Risk Predictor\",\n  \"tool_description\": \"Predicts player churn risk using machine learning models based on\
  \ player features, engagement history, and behavioral indicators, providing risk scores and intervention recommendations.\",\n  \"parameters\": {\n    \"player_features\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player feature data for churn prediction\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"historical_churn_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Historical data of players who churned\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"prediction_model\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Model type: logistic_regression, random_forest, or neural_network\",\n      \"default\": \"random_forest\"\n    },\n    \"risk_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Threshold for high-risk classification (0-1)\",\n      \"default\": 0.7\n    },\n    \"feature_importance\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include feature importance analysis\",\n      \"default\": true\n    },\n    \"prediction_window\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Days ahead to predict churn risk\",\n      \"default\": 7\n    }\n  },\n  \"error_messages\": [\n    \"Empty player features: At least one player feature record required for prediction.\",\n    \"Empty historical data: Historical churn data required to train prediction model.\",\n    \"Invalid prediction model: Must be one of [logistic_regression, random_forest, neural_network].\",\n    \"Invalid risk threshold: Must be between 0.1 and 0.9.\",\n    \"Invalid prediction window: Must be between 1 and 30 days.\",\n    \"Insufficient training data: Need at least 100 historical churn examples for reliable predictions.\"\n  ],\n  \"usage\": \"Provide player_features and historical_churn_data. Select prediction_model and configure risk_threshold, feature_importance, and prediction_window. Returns churn risk scores and actionable insights.\",\n  \"output_details\": {\n    \"churn_probabilities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Churn probability for each player (0-1)\"\n    },\n    \"risk_classifications\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Risk level classifications (low, medium, high)\"\n    },\n    \"model_accuracy\": {\n      \"type\": \"number\",\n      \"description\": \"Accuracy score of the prediction model\"\n    },\n    \"intervention_recommendations\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Recommended interventions for high-risk players\"\n    },\n    \"feature_importance_scores\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Importance scores for each feature used in prediction\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"A/B Test Analyzer\",\n  \"tool_description\": \"Analyzes A/B test results for player engagement and retention experiments, calculating statistical significance, effect sizes, and providing recommendations for test conclusions.\",\n  \"parameters\": {\n    \"experiment_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"A/B test experiment data with control and treatment groups\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 2\n    },\n    \"control_group\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player IDs in the control group\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"treatment_groups\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player IDs in treatment groups\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"primary_metric\": {\n   \
  \   \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Primary metric for the A/B test analysis\"\n    },\n    \"secondary_metrics\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Additional metrics to analyze\",\n      \"items\": {\"type\": \"string\"},\n      \"default\": []\n    },\n    \"significance_level\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Statistical significance level for hypothesis testing\",\n      \"default\": 0.05\n    }\n  },\n  \"error_messages\": [\n    \"Insufficient experiment data: Need data for both control and treatment groups.\",\n    \"Empty control group: At least one player required in control group.\",\n    \"Empty treatment groups: At least one player required in treatment groups.\",\n    \"Invalid primary metric: Must specify a valid metric name for analysis.\",\n    \"Invalid significance level: Must be between 0.01 and 0.10.\",\n    \"Overlapping groups: Players cannot be in both control and treatment groups.\"\n  ],\n  \"usage\": \"Provide experiment_data, control_group, treatment_groups, and primary_metric. Optionally add secondary_metrics and set significance_level. Returns statistical analysis with significance tests and recommendations.\",\n  \"output_details\": {\n    \"statistical_significance\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether the test results are statistically significant\"\n    },\n    \"p_value\": {\n      \"type\": \"number\",\n      \"description\": \"P-value for the primary metric comparison\"\n    },\n    \"effect_size\": {\n      \"type\": \"number\",\n      \"description\": \"Effect size of the treatment\"\n    },\n    \"confidence_interval\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Confidence interval for the treatment effect\"\n    },\n    \"test_recommendation\": {\n      \"type\": \"string\",\n      \"description\": \"Recommendation based on test results\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Revenue Impact Calculator\",\n  \"tool_description\": \"Calculates the relationship between player engagement metrics and revenue generation, identifying high-value engagement patterns and monetization opportunities.\",\n  \"parameters\": {\n    \"engagement_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player engagement metrics data\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"monetization_events\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Revenue and monetization event data\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"analysis_period\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Days to analyze for revenue impact\",\n      \"default\": 30\n    }\n  },\n  \"error_messages\": [\n    \"Empty engagement data: Player engagement data required for revenue impact analysis.\",\n    \"Empty monetization events: Revenue data required to calculate impact correlations.\",\n    \"Invalid analysis period: Must be between 7 and 365 days.\",\n    \"Data mismatch: Engagement and revenue data must cover overlapping time periods.\"\n  ],\n  \"usage\": \"Provide engagement_data from engagement analysis and monetization_events data. Set analysis_period as needed. Returns revenue correlations, high-value segments, and monetization insights.\",\n  \"output_details\": {\n    \"revenue_correlation\": {\n      \"type\": \"number\",\n      \"description\": \"Correlation coefficient between engagement and revenue\"\n    },\n    \"high_value_segments\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Player segments with highest revenue potential\"\n    },\n    \"monetization_insights\": {\n      \"type\": \"string\",\n      \"description\": \"Key insights about revenue optimization opportunities\"\n    },\n    \"ltv_predictions\": {\n     \
  \ \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Lifetime value predictions based on engagement patterns\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Funnel Analysis Tool\",\n  \"tool_description\": \"Analyzes player progression through defined funnels such as onboarding, feature adoption, or monetization flows, identifying conversion rates and drop-off points.\",\n  \"parameters\": {\n    \"event_sequences\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Player event sequence data for funnel analysis\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    },\n    \"funnel_definition\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Ordered list of funnel steps to analyze\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 2,\n      \"maxItems\": 10\n    }\n  },\n  \"error_messages\": [\n    \"Empty event sequences: Player event data required for funnel analysis.\",\n    \"Invalid funnel definition: Must define 2-10 ordered funnel steps.\",\n    \"Insufficient event data: Need events covering all funnel steps for meaningful analysis.\",\n    \"Malformed event sequences: Event data must include timestamps and event types.\"\n  ],\n  \"usage\": \"Provide event_sequences data and define funnel_definition with ordered steps. Returns conversion rates, drop-off analysis, and optimization recommendations for each funnel stage.\",\n  \"output_details\": {\n    \"conversion_rates\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Conversion rate for each funnel step\"\n    },\n    \"drop_off_points\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Identification of major drop-off points in the funnel\"\n    },\n    \"funnel_efficiency\": {\n      \"type\": \"number\",\n      \"description\": \"Overall funnel efficiency score\"\n    },\n    \"optimization_suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Specific suggestions for improving funnel performance\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Cohort Comparison Engine\",\n  \"tool_description\": \"Compares multiple player cohorts across various metrics to identify differences in behavior, engagement, and retention patterns, providing statistical comparisons and insights.\",\n  \"parameters\": {\n    \"cohort_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Data for multiple cohorts to compare\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 2\n    },\n    \"comparison_metrics\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Metrics to compare across cohorts\",\n      \"items\": {\"type\": \"string\"},\n      \"minItems\": 1\n    }\n  },\n  \"error_messages\": [\n    \"Insufficient cohorts: Need at least 2 cohorts for comparison analysis.\",\n    \"Empty comparison metrics: At least one metric must be specified for comparison.\",\n    \"Inconsistent cohort data: All cohorts must have data for the specified comparison metrics.\",\n    \"Invalid metric names: Comparison metrics must match available data fields.\"\n  ],\n  \"usage\": \"Provide cohort_data for 2 or more cohorts and specify comparison_metrics to analyze. Returns statistical comparisons, significance tests, and insights about cohort differences.\",\n  \"output_details\": {\n    \"cohort_summaries\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Summary statistics for each cohort\"\n    },\n    \"statistical_tests\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Results of statistical tests comparing cohorts\"\n    },\n    \"significant_differences\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \""
