field_name: data_annotation_and_labeling
subfield: image_classification_labeling
task: Multi-class label taxonomy creation and management
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves creating and managing taxonomies for multi-class image classification, which requires systematic organization of hierarchical label structures, validation of label consistency, conflict resolution, and coordination across annotation teams. The complexity stems from managing semantic relationships, handling edge cases, and ensuring taxonomic coherence. This is a **medium** difficulty task due to moderate coordination requirements and the need for structured validation processes.

  **STEP 2 — Set a tool budget**

  Based on the medium difficulty assessment, I will target **12 tools** to cover taxonomy creation, validation, management, and quality assurance workflows.

  **STEP 3 — List all tool names and dependencies**

  1. **Taxonomy Structure Creator** - consumes: label definitions → produces: hierarchical taxonomy
  2. **Label Relationship Validator** - consumes: taxonomy structure → produces: validation report
  3. **Taxonomy Merger** - consumes: multiple taxonomies → produces: unified taxonomy
  4. **Label Conflict Resolver** - consumes: conflicting labels → produces: resolution recommendations
  5. **Taxonomy Statistics Analyzer** - consumes: taxonomy + annotations → produces: usage statistics
  6. **Label Semantic Checker** - consumes: label definitions → produces: semantic analysis
  7. **Taxonomy Version Manager** - consumes: taxonomy changes → produces: versioned taxonomy
  8. **Label Hierarchy Visualizer** - consumes: taxonomy structure → produces: visualization data
  9. **Taxonomy Quality Assessor** - consumes: taxonomy + sample data → produces: quality metrics
  10. **Label Annotation Mapper** - consumes: raw annotations + taxonomy → produces: mapped annotations
  11. **Taxonomy Export Formatter** - consumes: taxonomy → produces: formatted export
  12. **Label Usage Tracker** - consumes: annotation logs → produces: usage analytics

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  - Create basic taxonomy: Taxonomy Structure Creator → Label Relationship Validator
  - Export taxonomy: Taxonomy Version Manager → Taxonomy Export Formatter

  **Medium plans:**
  - Taxonomy quality check: Taxonomy Structure Creator → Label Semantic Checker → Taxonomy Quality Assessor → Label Hierarchy Visualizer
  - Merge taxonomies: Taxonomy Merger → Label Conflict Resolver → Label Relationship Validator → Taxonomy Version Manager

  **Complex plans:**
  - Full taxonomy lifecycle: Taxonomy Structure Creator → Label Semantic Checker → Label Relationship Validator → Taxonomy Quality Assessor → Label Conflict Resolver → Taxonomy Version Manager → Label Usage Tracker
  - Analytics and optimization: Taxonomy Statistics Analyzer → Label Usage Tracker → Label Annotation Mapper → Taxonomy Quality Assessor → Label Conflict Resolver → Taxonomy Export Formatter

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Taxonomy Structure Creator",
    "tool_description": "Creates hierarchical taxonomy structures for multi-class image classification with parent-child relationships and metadata.",
    "parameters": {
      "taxonomy_name": {
        "type": "string",
        "required": true,
        "description": "Name identifier for the taxonomy"
      },
      "label_definitions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of label definitions in format 'label_name:parent_label:description'",
        "minItems": 1,
        "maxItems": 1000
      },
      "max_depth": {
        "type": "integer",
        "required": false,
        "default": 5,
        "description": "Maximum hierarchy depth allowed"
      },
      "allow_multiple_parents": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether labels can have multiple parent categories"
      }
    },
    "error_messages": [
      "Invalid label format: Each label definition must follow 'label_name:parent_label:description' format.",
      "Circular dependency detected: Parent-child relationships create a cycle in the taxonomy.",
      "Maximum depth exceeded: Taxonomy depth exceeds the specified max_depth limit.",
      "Duplicate label names: Multiple labels with the same name are not allowed.",
      "Invalid parent reference: Referenced parent label does not exist in the definitions."
    ],
    "usage": "Provide taxonomy_name and label_definitions array with properly formatted label strings. Optionally set max_depth and allow_multiple_parents. The tool creates a hierarchical structure with validation.",
    "output_details": {
      "taxonomy_id": {
        "type": "string",
        "description": "Unique identifier for the created taxonomy"
      },
      "total_labels": {
        "type": "integer",
        "description": "Total number of labels in the taxonomy"
      },
      "hierarchy_depth": {
        "type": "integer",
        "description": "Maximum depth of the created hierarchy"
      },
      "root_labels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of top-level category names"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp of taxonomy creation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Label Relationship Validator",
    "tool_description": "Validates logical consistency and relationships within taxonomy structures to identify structural issues.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the taxonomy to validate"
      },
      "validation_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Validation strictness: basic, standard, or strict"
      },
      "check_semantic_consistency": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to perform semantic relationship checks"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Invalid validation level: Use 'basic', 'standard', or 'strict'.",
      "Empty taxonomy: Cannot validate taxonomy with no labels."
    ],
    "usage": "Provide taxonomy_id for validation. Optionally set validation_level and check_semantic_consistency. The tool returns detailed validation results with any issues found.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: passed, warnings, or failed"
      },
      "issues_found": {
        "type": "integer",
        "description": "Total number of validation issues detected"
      },
      "warnings_count": {
        "type": "integer",
        "description": "Number of non-critical warnings"
      },
      "critical_errors": {
        "type": "integer",
        "description": "Number of critical structural errors"
      },
      "issue_details": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed descriptions of each validation issue"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Taxonomy Merger",
    "tool_description": "Merges multiple taxonomy structures into a unified taxonomy while handling conflicts and maintaining consistency.",
    "parameters": {
      "primary_taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the primary taxonomy to merge into"
      },
      "secondary_taxonomy_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of taxonomy IDs to merge",
        "minItems": 1,
        "maxItems": 10
      },
      "merge_strategy": {
        "type": "string",
        "required": false,
        "default": "conservative",
        "description": "Merge approach: conservative, aggressive, or interactive"
      },
      "conflict_resolution": {
        "type": "string",
        "required": false,
        "default": "manual",
        "description": "How to handle conflicts: manual, primary_wins, or vote_based"
      },
      "preserve_hierarchy": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to maintain original hierarchical structures"
      }
    },
    "error_messages": [
      "Primary taxonomy not found: The specified primary_taxonomy_id does not exist.",
      "Secondary taxonomy not found: One or more secondary taxonomy IDs do not exist.",
      "Invalid merge strategy: Use 'conservative', 'aggressive', or 'interactive'.",
      "Invalid conflict resolution: Use 'manual', 'primary_wins', or 'vote_based'.",
      "Too many taxonomies: Maximum 10 taxonomies can be merged at once."
    ],
    "usage": "Provide primary_taxonomy_id and array of secondary_taxonomy_ids. Configure merge_strategy, conflict_resolution, and preserve_hierarchy as needed. The tool creates a merged taxonomy with conflict reporting.",
    "output_details": {
      "merged_taxonomy_id": {
        "type": "string",
        "description": "ID of the newly created merged taxonomy"
      },
      "merge_status": {
        "type": "string",
        "description": "Success status: completed, partial, or failed"
      },
      "conflicts_detected": {
        "type": "integer",
        "description": "Number of merge conflicts encountered"
      },
      "labels_added": {
        "type": "integer",
        "description": "Number of new labels added during merge"
      },
      "labels_modified": {
        "type": "integer",
        "description": "Number of existing labels modified"
      },
      "conflict_summary": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Summary of conflicts requiring manual resolution"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Label Conflict Resolver",
    "tool_description": "Identifies and provides resolution recommendations for conflicting labels and ambiguous classifications.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to analyze for conflicts"
      },
      "conflict_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "default": ["semantic", "hierarchical", "naming"],
        "description": "Types of conflicts to detect: semantic, hierarchical, naming, overlap"
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "default": 0.8,
        "description": "Similarity threshold for detecting duplicate labels (0.0-1.0)"
      },
      "auto_resolve": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to automatically resolve simple conflicts"
      },
      "resolution_preference": {
        "type": "string",
        "required": false,
        "default": "preserve_both",
        "description": "Default resolution strategy: preserve_both, merge, remove_duplicate"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Invalid conflict type: Supported types are semantic, hierarchical, naming, overlap.",
      "Invalid similarity threshold: Must be between 0.0 and 1.0.",
      "Invalid resolution preference: Use preserve_both, merge, or remove_duplicate.",
      "Empty taxonomy: Cannot resolve conflicts in empty taxonomy."
    ],
    "usage": "Provide taxonomy_id and optionally specify conflict_types to check. Set similarity_threshold for duplicate detection and configure auto_resolve behavior. Returns conflict analysis with resolution recommendations.",
    "output_details": {
      "total_conflicts": {
        "type": "integer",
        "description": "Total number of conflicts detected"
      },
      "auto_resolved": {
        "type": "integer",
        "description": "Number of conflicts automatically resolved"
      },
      "manual_resolution_needed": {
        "type": "integer",
        "description": "Number of conflicts requiring manual intervention"
      },
      "conflict_details": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed descriptions of each conflict and recommended actions"
      },
      "resolution_summary": {
        "type": "string",
        "description": "Overall summary of conflict resolution process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Taxonomy Statistics Analyzer",
    "tool_description": "Analyzes taxonomy usage patterns and generates comprehensive statistics about label distribution and annotation patterns.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to analyze"
      },
      "annotation_data_path": {
        "type": "string",
        "required": true,
        "description": "Path to annotation data file"
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "default": "full",
        "description": "Analysis scope: basic, standard, or full"
      },
      "time_period_start": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Start date for time-based analysis (ISO 8601)"
      },
      "time_period_end": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "End date for time-based analysis (ISO 8601)"
      },
      "include_unused_labels": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include labels with zero usage"
      },
      "group_by_hierarchy": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to group statistics by hierarchical level"
      },
      "calculate_confidence_metrics": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to calculate annotation confidence statistics"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Annotation data not found: Cannot access the specified annotation_data_path.",
      "Invalid analysis depth: Use 'basic', 'standard', or 'full'.",
      "Invalid time period: time_period_start must be before time_period_end.",
      "Insufficient data: Not enough annotation data for meaningful analysis.",
      "Data format mismatch: Annotation data format is incompatible with taxonomy structure."
    ],
    "usage": "Provide taxonomy_id and annotation_data_path. Configure analysis parameters like analysis_depth, time periods, and statistical options. The tool generates comprehensive usage statistics and patterns.",
    "output_details": {
      "total_annotations": {
        "type": "integer",
        "description": "Total number of annotations analyzed"
      },
      "labels_used": {
        "type": "integer",
        "description": "Number of taxonomy labels that have been used"
      },
      "labels_unused": {
        "type": "integer",
        "description": "Number of taxonomy labels never used"
      },
      "most_frequent_labels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Top 10 most frequently used labels"
      },
      "usage_distribution": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Usage frequency distribution across hierarchy levels"
      },
      "annotation_coverage": {
        "type": "number",
        "description": "Percentage of taxonomy labels actively used"
      },
      "analysis_summary": {
        "type": "string",
        "description": "Key insights and recommendations from the analysis"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Label Semantic Checker",
    "tool_description": "Analyzes semantic relationships and consistency of label definitions to ensure logical taxonomy structure.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to check semantically"
      },
      "check_synonyms": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to identify potential synonyms"
      },
      "check_antonyms": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to identify conflicting antonym relationships"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Insufficient label descriptions: Labels need textual descriptions for semantic analysis.",
      "Semantic analysis failed: Unable to process label semantic relationships."
    ],
    "usage": "Provide taxonomy_id and configure semantic checking options. The tool analyzes label meanings and relationships to identify semantic inconsistencies.",
    "output_details": {
      "semantic_consistency_score": {
        "type": "number",
        "description": "Overall semantic consistency rating (0.0-1.0)"
      },
      "potential_synonyms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Pairs of labels that may be synonymous"
      },
      "conflicting_labels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Labels with contradictory semantic meanings"
      },
      "semantic_gaps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Areas where semantic coverage might be incomplete"
      },
      "recommendations": {
        "type": "string",
        "description": "Suggestions for improving semantic consistency"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Taxonomy Version Manager",
    "tool_description": "Manages taxonomy versioning, tracks changes, and maintains version history with rollback capabilities.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to version"
      },
      "version_action": {
        "type": "string",
        "required": true,
        "description": "Action to perform: create_version, rollback, compare, list_versions"
      },
      "version_name": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Custom name for the new version"
      },
      "change_description": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Description of changes made in this version"
      },
      "target_version": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Target version for rollback or comparison operations"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Invalid version action: Use create_version, rollback, compare, or list_versions.",
      "Target version not found: The specified target_version does not exist.",
      "Rollback failed: Unable to rollback to the specified version.",
      "Version creation failed: Could not create new version due to validation errors."
    ],
    "usage": "Provide taxonomy_id and version_action. For create_version, optionally provide version_name and change_description. For rollback/compare, specify target_version. The tool manages version lifecycle.",
    "output_details": {
      "operation_status": {
        "type": "string",
        "description": "Status of the version operation: success, failed, or partial"
      },
      "current_version": {
        "type": "string",
        "description": "Current active version identifier"
      },
      "version_count": {
        "type": "integer",
        "description": "Total number of versions available"
      },
      "version_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of version identifiers with timestamps"
      },
      "change_summary": {
        "type": "string",
        "description": "Summary of changes in the current operation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Label Hierarchy Visualizer",
    "tool_description": "Generates visualization data for taxonomy hierarchies to enable graphical representation of label relationships.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to visualize"
      },
      "visualization_type": {
        "type": "string",
        "required": false,
        "default": "tree",
        "description": "Type of visualization: tree, network, or sunburst"
      },
      "max_display_depth": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Maximum hierarchy depth to include in visualization"
      },
      "include_usage_stats": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to include usage statistics in visualization data"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Invalid visualization type: Use 'tree', 'network', or 'sunburst'.",
      "Empty taxonomy: Cannot visualize taxonomy with no labels.",
      "Depth limit exceeded: max_display_depth must be positive if specified."
    ],
    "usage": "Provide taxonomy_id and select visualization_type. Optionally set max_display_depth and include_usage_stats. The tool returns structured data for creating hierarchy visualizations.",
    "output_details": {
      "visualization_data": {
        "type": "string",
        "description": "Structured data for visualization rendering (JSON format)"
      },
      "node_count": {
        "type": "integer",
        "description": "Total number of nodes in the visualization"
      },
      "edge_count": {
        "type": "integer",
        "description": "Total number of connections between nodes"
      },
      "max_depth_shown": {
        "type": "integer",
        "description": "Maximum depth level included in visualization"
      },
      "layout_recommendations": {
        "type": "string",
        "description": "Suggested layout parameters for optimal visualization"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Taxonomy Quality Assessor",
    "tool_description": "Evaluates overall taxonomy quality using multiple metrics including completeness, consistency, and usability scores.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to assess"
      },
      "sample_data_path": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Path to sample annotation data for quality assessment"
      },
      "quality_dimensions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "default": ["completeness", "consistency", "usability"],
        "description": "Quality dimensions to assess: completeness, consistency, usability, coverage"
      },
      "benchmark_taxonomy_id": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Reference taxonomy for comparative quality assessment"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Invalid quality dimension: Supported dimensions are completeness, consistency, usability, coverage.",
      "Sample data not accessible: Cannot read the specified sample_data_path.",
      "Benchmark taxonomy not found: The specified benchmark_taxonomy_id does not exist.",
      "Insufficient data for assessment: Need more data points for reliable quality metrics."
    ],
    "usage": "Provide taxonomy_id and optionally sample_data_path for annotation-based assessment. Configure quality_dimensions and benchmark_taxonomy_id as needed. Returns comprehensive quality metrics.",
    "output_details": {
      "overall_quality_score": {
        "type": "number",
        "description": "Composite quality score (0.0-1.0)"
      },
      "completeness_score": {
        "type": "number",
        "description": "Taxonomy completeness rating (0.0-1.0)"
      },
      "consistency_score": {
        "type": "number",
        "description": "Internal consistency rating (0.0-1.0)"
      },
      "usability_score": {
        "type": "number",
        "description": "Practical usability rating (0.0-1.0)"
      },
      "quality_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified quality issues with severity levels"
      },
      "improvement_suggestions": {
        "type": "string",
        "description": "Actionable recommendations for quality improvement"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Label Annotation Mapper",
    "tool_description": "Maps raw annotations to taxonomy labels and handles label transformations and standardization.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the target taxonomy for mapping"
      },
      "raw_annotations_path": {
        "type": "string",
        "required": true,
        "description": "Path to raw annotation data file"
      },
      "mapping_strategy": {
        "type": "string",
        "required": false,
        "default": "exact_match",
        "description": "Mapping approach: exact_match, fuzzy_match, or semantic_match"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "default": 0.7,
        "description": "Minimum confidence for automatic mapping (0.0-1.0)"
      },
      "handle_unmapped": {
        "type": "string",
        "required": false,
        "default": "flag",
        "description": "How to handle unmapped labels: flag, ignore, or suggest"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Raw annotations not found: Cannot access the specified raw_annotations_path.",
      "Invalid mapping strategy: Use exact_match, fuzzy_match, or semantic_match.",
      "Invalid confidence threshold: Must be between 0.0 and 1.0.",
      "Invalid unmapped handling: Use flag, ignore, or suggest.",
      "Data format error: Raw annotation format is not compatible with mapping process."
    ],
    "usage": "Provide taxonomy_id and raw_annotations_path. Configure mapping_strategy, confidence_threshold, and handle_unmapped options. The tool maps raw labels to taxonomy structure.",
    "output_details": {
      "total_annotations_processed": {
        "type": "integer",
        "description": "Number of raw annotations processed"
      },
      "successful_mappings": {
        "type": "integer",
        "description": "Number of annotations successfully mapped"
      },
      "unmapped_annotations": {
        "type": "integer",
        "description": "Number of annotations that could not be mapped"
      },
      "mapping_confidence_avg": {
        "type": "number",
        "description": "Average confidence score of successful mappings"
      },
      "mapped_data_path": {
        "type": "string",
        "description": "Path to the output file with mapped annotations"
      },
      "unmapped_labels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of raw labels that could not be mapped"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Taxonomy Export Formatter",
    "tool_description": "Exports taxonomy data in various standard formats for integration with annotation tools and machine learning frameworks.",
    "parameters": {
      "taxonomy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the taxonomy to export"
      },
      "export_format": {
        "type": "string",
        "required": true,
        "description": "Output format: json, xml, csv, yaml, or coco_format"
      },
      "output_path": {
        "type": "string",
        "required": true,
        "description": "Destination path for the exported file"
      },
      "include_metadata": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include taxonomy metadata in export"
      }
    },
    "error_messages": [
      "Taxonomy not found: The specified taxonomy_id does not exist.",
      "Invalid export format: Supported formats are json, xml, csv, yaml, coco_format.",
      "Output path not accessible: Cannot write to the specified output_path.",
      "Export failed: Unable to generate export in the requested format."
    ],
    "usage": "Provide taxonomy_id, export_format, and output_path. Optionally include_metadata in the export. The tool generates formatted taxonomy exports compatible with various tools.",
    "output_details": {
      "export_status": {
        "type": "string",
        "description": "Export operation status: success, failed, or partial"
      },
      "output_file_path": {
        "type": "string",
        "description": "Full path to the generated export file"
      },
      "file_size_bytes": {
        "type": "integer",
        "description": "Size of the exported file in bytes"
      },
      "exported_labels_count": {
        "type": "integer",
        "description": "Number of labels included in the export"
      },
      "export_summary": {
        "type": "string",
        "description": "Summary of the export operation and file contents"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Label Usage Tracker",
    "tool_description": "Tracks and analyzes label usage patterns over time to identify trends and optimization opportunities.",
    "parameters": {
      "annotation_logs_path": {
        "type": "string",
        "required": true,
        "description": "Path to annotation activity logs"
      },
      "tracking_period_days": {
        "type": "integer",
        "required": false,
        "default": 30,
        "description": "Number of days to analyze for usage patterns"
      },
      "group_by_annotator": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to group usage statistics by individual annotator"
      }
    },
    "error_messages": [
      "Log files not found: Cannot access the specified annotation_logs_path.",
      "Invalid tracking period: tracking_period_days must be greater than 0.",
      "Insufficient log data: Not enough data for the specified tracking period.",
      "Log format error: Annotation log format is not compatible with tracking analysis."
    ],
    "usage": "Provide annotation_logs_path and configure tracking_period_days. Optionally group_by_annotator for detailed analytics. The tool analyzes usage patterns and trends.",
    "output_details": {
      "tracking_summary": {
        "type": "string",
        "description": "Overview
