field_name: libraries_and_archives
subfield: Digital Collection Management
task: Cataloging and classification of digital materials using standardized schemas
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task has medium difficulty. It involves complex metadata schemas, standardized classification systems, quality control processes, and coordination between multiple cataloging standards. The scope includes handling diverse digital formats, ensuring data consistency, and maintaining interoperability across systems, but follows established library science practices.\n\n**STEP 2 — Set a tool budget**\n\nGiven the medium complexity, I'll target 12 tools to cover the various aspects of digital cataloging: metadata extraction, schema validation, classification assignment, quality control, batch processing, and standards compliance.\n\n**STEP 3 — List all tool names and dependencies**\n\nTools and their relationships:\n- Digital Asset Analyzer (consumes: file paths → produces: technical metadata)\n- Metadata Schema Validator (consumes: metadata records → produces: validation results)  \n- Classification Code Assignor (consumes: content descriptions → produces: classification codes)\n- MARC Record Generator (consumes: descriptive data → produces: MARC21 records)\n- Dublin Core Mapper (consumes: various metadata → produces: DC records)\n- Authority Control Checker (consumes: name/subject headings → produces: authorized forms)\n- Batch Cataloging Processor (consumes: multiple items → produces: batch results)\n- Quality Assurance Scanner (consumes: catalog records → produces: error reports)\n- Schema Crosswalk Converter (consumes: records in one format → produces: records in another)\n- Digital Rights Analyzer (consumes: content/licensing info → produces: rights statements)\n- Collection Hierarchy Builder (consumes: organizational data → produces: hierarchical structures)\n- Cataloging Workflow Manager (consumes: workflow parameters → produces: task assignments)\n\n**STEP 4 — Multi-tool plans**\n\nSimple plans:\n- Basic cataloging: Digital Asset Analyzer → Dublin Core Mapper → Quality Assurance Scanner\n- Rights assessment: Digital Asset Analyzer → Digital Rights Analyzer → Metadata Schema Validator\n\nMedium plans:  \n- Standard cataloging workflow: Digital Asset Analyzer → Classification Code Assignor → MARC Record Generator → Authority Control Checker → Quality Assurance Scanner\n- Format migration: Digital Asset Analyzer → Dublin Core Mapper → Schema Crosswalk Converter → Metadata Schema Validator\n\nComplex plans:\n- Full institutional workflow: Cataloging Workflow Manager → Batch Cataloging Processor → Digital Asset Analyzer → Classification Code Assignor → Authority Control Checker → MARC Record Generator → Dublin Core Mapper → Quality Assurance Scanner → Collection Hierarchy Builder\n- Multi-standard compliance: Digital Asset Analyzer → Dublin Core Mapper → MARC Record Generator → Schema Crosswalk Converter → Authority Control Checker → Digital Rights Analyzer → Quality Assurance Scanner → Collection Hierarchy Builder\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Digital Asset Analyzer\",\n  \"tool_description\": \"Extracts technical and descriptive metadata from digital files including format identification, file properties, embedded metadata, and content analysis for cataloging purposes.\",\n  \"parameters\": {\n    \"file_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Full path to the digital file to be analyzed\"\n    },\n    \"analysis_depth\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Level of analysis: basic, standard, or comprehensive\",\n      \"default\": \"standard\"\n    },\n    \"extract_embedded_metadata\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to extract embedded metadata from file headers\",\n      \"default\": true\n    },\n    \"content_analysis\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to perform OCR or content recognition analysis\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"File not found: Verify the file_path\
  \ exists and is accessible\",\n    \"Unsupported file format: The file format is not supported for analysis\",\n    \"File access denied: Check file permissions and system access rights\", \n    \"Invalid analysis depth: Use basic, standard, or comprehensive\",\n    \"Corrupted file: The file appears to be damaged or incomplete\"\n  ],\n  \"usage\": \"Provide file_path to analyze a digital asset. Set analysis_depth for thoroughness level, extract_embedded_metadata to include file headers, and content_analysis for text extraction. Returns comprehensive technical and descriptive metadata.\",\n  \"output_details\": {\n    \"file_format\": {\n      \"type\": \"string\", \n      \"description\": \"Identified file format and MIME type\"\n    },\n    \"file_size\": {\n      \"type\": \"integer\",\n      \"description\": \"File size in bytes\"\n    },\n    \"creation_date\": {\n      \"type\": \"string\",\n      \"description\": \"File creation timestamp\"\n    },\n    \"technical_metadata\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of technical metadata key-value pairs\"\n    },\n    \"embedded_metadata\": {\n      \"type\": \"array\", \n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of extracted embedded metadata elements\"\n    },\n    \"content_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Brief summary of file contents if analysis was performed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Metadata Schema Validator\",\n  \"tool_description\": \"Validates metadata records against specified library and archival standards including MARC21, Dublin Core, MODS, EAD, and custom institutional schemas.\",\n  \"parameters\": {\n    \"metadata_record\": {\n      \"type\": \"string\", \n      \"required\": true,\n      \"description\": \"The metadata record in XML, JSON, or delimited format\"\n    },\n    \"schema_type\": {\n      \"type\": \"string\",\n      \"required\": true, \n      \"description\": \"Target schema: MARC21, Dublin Core, MODS, EAD, or custom\"\n    },\n    \"validation_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Validation strictness: permissive, standard, or strict\",\n      \"default\": \"standard\"\n    },\n    \"custom_schema_url\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"URL to custom schema definition if schema_type is custom\",\n      \"default\": null\n    },\n    \"check_authority_control\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to validate against authority files\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid metadata format: Metadata record must be valid XML, JSON, or properly delimited text\",\n    \"Schema not found: The specified schema_type is not supported or custom_schema_url is invalid\", \n    \"Validation failed: Record does not conform to schema requirements - check specific field errors\",\n    \"Authority control error: One or more headings are not found in authority files\",\n    \"Missing required fields: Record is missing mandatory elements for the specified schema\"\n  ],\n  \"usage\": \"Provide metadata_record and schema_type to validate against standards. Set validation_level for strictness, provide custom_schema_url for custom schemas, and enable check_authority_control for heading validation.\",\n  \"output_details\": {\n    \"is_valid\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether the record passes validation\"\n    },\n    \"validation_errors\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of specific validation error messages\"\n    },\n    \"warnings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of non-critical warning messages\"\n    },\n    \"schema_version\": {\n     \
  \ \"type\": \"string\",\n      \"description\": \"Version of the schema used for validation\"\n    },\n    \"conformance_score\": {\n      \"type\": \"number\",\n      \"description\": \"Percentage score of record completeness and accuracy\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Classification Code Assignor\",\n  \"tool_description\": \"Assigns appropriate classification codes from standard systems like Dewey Decimal, Library of Congress, or custom taxonomies based on content analysis and subject matter.\",\n  \"parameters\": {\n    \"content_description\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Textual description of the item's content and subject matter\"\n    },\n    \"classification_system\": {\n      \"type\": \"string\", \n      \"required\": true,\n      \"description\": \"Target classification system: DDC, LCC, UDC, or custom\"\n    },\n    \"subject_headings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Array of existing subject headings to inform classification\",\n      \"default\": null\n    },\n    \"material_type\": {\n      \"type\": \"string\",\n      \"required\": false, \n      \"description\": \"Type of material: book, journal, manuscript, image, audio, video, dataset\",\n      \"default\": \"book\"\n    },\n    \"confidence_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum confidence score for classification assignment (0.1-1.0)\",\n      \"default\": 0.7\n    }\n  },\n  \"error_messages\": [\n    \"Insufficient content description: Provide more detailed description for accurate classification\",\n    \"Unsupported classification system: Use DDC, LCC, UDC, or provide custom system details\",\n    \"Invalid confidence threshold: Value must be between 0.1 and 1.0\",\n    \"Material type not recognized: Use book, journal, manuscript, image, audio, video, or dataset\",\n    \"Classification assignment failed: Unable to determine appropriate codes with sufficient confidence\"\n  ],\n  \"usage\": \"Provide content_description and classification_system to get appropriate classification codes. Include subject_headings for better accuracy, specify material_type for format-specific rules, and set confidence_threshold for result quality control.\",\n  \"output_details\": {\n    \"primary_classification\": {\n      \"type\": \"string\",\n      \"description\": \"Main classification code assigned to the item\"\n    },\n    \"secondary_classifications\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Additional relevant classification codes\"\n    },\n    \"confidence_scores\": {\n      \"type\": \"array\", \n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Confidence scores for each assigned classification\"\n    },\n    \"classification_labels\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Human-readable labels for the assigned codes\"\n    },\n    \"suggested_subjects\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\" \n      },\n      \"description\": \"Suggested subject headings based on classification analysis\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"MARC Record Generator\",\n  \"tool_description\": \"Creates complete MARC21 bibliographic records from descriptive metadata elements, following current cataloging standards and best practices for library systems.\",\n  \"parameters\": {\n    \"title\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Main title of the resource\"\n    },\n    \"creator\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Primary author or creator name\",\n      \"default\": null\n    },\n    \"publication_info\": {\n      \"type\": \"string\",\n      \"required\": false,\n     \
  \ \"description\": \"Publisher, place, and date information\",\n      \"default\": null\n    },\n    \"physical_description\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Physical extent, dimensions, and format details\",\n      \"default\": null\n    },\n    \"subject_headings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Array of Library of Congress Subject Headings\",\n      \"default\": null\n    },\n    \"classification_number\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Classification code (DDC or LCC)\",\n      \"default\": null\n    },\n    \"isbn_issn\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"ISBN, ISSN, or other standard identifier\",\n      \"default\": null\n    },\n    \"material_type\": {\n      \"type\": \"string\", \n      \"required\": false,\n      \"description\": \"Resource type: book, serial, map, music, visual, electronic, mixed\",\n      \"default\": \"book\"\n    },\n    \"encoding_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"MARC encoding level: full, less-than-full, abbreviated, core\",\n      \"default\": \"full\"\n    },\n    \"cataloging_source\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Institution or agency code for cataloging source\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Missing required title: Title field cannot be empty for MARC record creation\",\n    \"Invalid material type: Use book, serial, map, music, visual, electronic, or mixed\",\n    \"Invalid encoding level: Use full, less-than-full, abbreviated, or core\", \n    \"Malformed publication info: Check date and publisher format requirements\",\n    \"Invalid subject heading format: Ensure subject headings follow LCSH format\",\n    \"Classification number format error: Verify DDC or LCC number format\",\n    \"Invalid identifier format: Check ISBN/ISSN format and checksum\"\n  ],\n  \"usage\": \"Provide title as minimum requirement. Add creator, publication_info, subject_headings, and other elements for comprehensive records. Specify material_type for appropriate MARC format, encoding_level for detail level, and cataloging_source for provenance.\",\n  \"output_details\": {\n    \"marc_record\": {\n      \"type\": \"string\",\n      \"description\": \"Complete MARC21 record in ISO 2709 format\"\n    },\n    \"marc_xml\": {\n      \"type\": \"string\",\n      \"description\": \"MARC record in XML format for system compatibility\"\n    },\n    \"control_number\": {\n      \"type\": \"string\",\n      \"description\": \"Generated control number for the record\"\n    },\n    \"record_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of record creation and any quality indicators\"\n    },\n    \"field_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of MARC fields in the completed record\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Dublin Core Mapper\",\n  \"tool_description\": \"Maps descriptive metadata from various sources into Dublin Core format, supporting both Simple and Qualified Dublin Core with appropriate element refinements and encoding schemes.\",\n  \"parameters\": {\n    \"source_metadata\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Array of metadata key-value pairs in 'key:value' format\"\n    },\n    \"dc_profile\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Dublin Core profile: simple or qualified\",\n      \"default\": \"qualified\"\n    },\n    \"language_code\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"ISO 639 language code for metadata content\",\n      \"default\": \"en\"\n    }\n  },\n  \"error_messages\": [\n    \"\
  Empty source metadata: Provide at least one metadata element to map\",\n    \"Invalid DC profile: Use 'simple' or 'qualified'\",\n    \"Invalid language code: Provide valid ISO 639 language code\",\n    \"Malformed metadata pairs: Ensure key:value format for all source metadata elements\",\n    \"Mapping failed: Unable to map source elements to Dublin Core schema\"\n  ],\n  \"usage\": \"Provide source_metadata as key:value pairs to map to Dublin Core elements. Choose dc_profile for Simple or Qualified DC, and set language_code for content language. Returns structured Dublin Core record.\",\n  \"output_details\": {\n    \"dc_record\": {\n      \"type\": \"string\",\n      \"description\": \"Complete Dublin Core record in XML format\"\n    },\n    \"mapped_elements\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of successfully mapped Dublin Core elements\"\n    },\n    \"unmapped_elements\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of source elements that could not be mapped\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Authority Control Checker\",\n  \"tool_description\": \"Verifies and corrects name and subject headings against established authority files including LCNAF, LCSH, VIAF, and institutional authority databases.\",\n  \"parameters\": {\n    \"headings_to_check\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Array of name or subject headings to verify against authorities\"\n    },\n    \"authority_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Authority files to check: LCNAF, LCSH, VIAF, local\",\n      \"default\": [\"LCNAF\", \"LCSH\"]\n    },\n    \"auto_correct\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to automatically apply corrections for close matches\",\n      \"default\": false\n    },\n    \"match_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum similarity score for suggesting matches (0.1-1.0)\",\n      \"default\": 0.8\n    }\n  },\n  \"error_messages\": [\n    \"No headings provided: Supply at least one heading to check against authorities\",\n    \"Invalid authority file: Use LCNAF, LCSH, VIAF, or local\",\n    \"Authority service unavailable: Unable to connect to authority database\",\n    \"Invalid match threshold: Value must be between 0.1 and 1.0\",\n    \"Malformed heading format: Check heading syntax and punctuation\"\n  ],\n  \"usage\": \"Provide headings_to_check array with names or subjects to verify. Select authority_files to search, enable auto_correct for automatic fixes, and set match_threshold for suggestion sensitivity.\",\n  \"output_details\": {\n    \"verified_headings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of headings that match authority records exactly\"\n    },\n    \"corrected_headings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of headings with applied corrections\"\n    },\n    \"suggested_corrections\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of suggested corrections for unverified headings\"\n    },\n    \"authority_numbers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of authority record control numbers for verified headings\"\n    },\n    \"unverified_headings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of headings not found in any authority file\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\"\
  : \"Batch Cataloging Processor\",\n  \"tool_description\": \"Processes multiple digital items simultaneously for cataloging, applying consistent metadata extraction, classification, and record generation workflows to large collections.\",\n  \"parameters\": {\n    \"item_list\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Array of file paths or identifiers for items to be cataloged\",\n      \"minItems\": 2,\n      \"maxItems\": 1000\n    },\n    \"workflow_template\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Predefined workflow: basic, standard, comprehensive, or custom\"\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Desired output format: MARC, Dublin Core, MODS, or mixed\",\n      \"default\": \"MARC\"\n    },\n    \"parallel_processing\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to process items concurrently for faster completion\",\n      \"default\": true\n    },\n    \"error_handling\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Error handling strategy: skip, log, or stop\",\n      \"default\": \"log\"\n    },\n    \"quality_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum quality score for record acceptance (0.1-1.0)\",\n      \"default\": 0.6\n    },\n    \"progress_reporting\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to provide progress updates during processing\",\n      \"default\": true\n    },\n    \"collection_identifier\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Identifier for the collection being processed\",\n      \"default\": null\n    },\n    \"institutional_code\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Institution code for cataloging source attribution\",\n      \"default\": null\n    },\n    \"custom_fields\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Additional custom fields to include in all records\",\n      \"default\": null\n    },\n    \"batch_size\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of items to process in each batch (1-100)\",\n      \"default\": 25\n    }\n  },\n  \"error_messages\": [\n    \"Empty item list: Provide at least 2 items for batch processing\",\n    \"Invalid workflow template: Use basic, standard, comprehensive, or custom\",\n    \"Unsupported output format: Use MARC, Dublin Core, MODS, or mixed\",\n    \"Invalid error handling option: Use skip, log, or stop\", \n    \"Quality threshold out of range: Value must be between 0.1 and 1.0\",\n    \"Batch size exceeded: Maximum 100 items per batch, use multiple batches for larger collections\",\n    \"Invalid batch size: Batch size must be between 1 and 100\",\n    \"Processing failed: Critical error in batch processing workflow\",\n    \"Access denied: Insufficient permissions for one or more items in the batch\"\n  ],\n  \"usage\": \"Provide item_list array with file paths and workflow_template for processing approach. Configure output_format, enable parallel_processing for speed, set error_handling strategy, and specify quality_threshold for acceptance criteria. Use collection_identifier and institutional_code for batch attribution.\",\n  \"output_details\": {\n    \"total_processed\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of items successfully processed\"\n    },\n    \"successful_records\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of records meeting quality threshold\"\n    },\n    \"failed_items\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of items that failed processing\"\n    },\n    \"\
  processing_time\": {\n      \"type\": \"number\",\n      \"description\": \"Total processing time in minutes\"\n    },\n    \"output_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of generated output file paths\"\n    },\n    \"error_log\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of error messages and failed item details\"\n    },\n    \"quality_statistics\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Array of quality scores for successfully processed items\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Quality Assurance Scanner\",\n  \"tool_description\": \"Performs comprehensive quality control checks on catalog records, identifying inconsistencies, missing elements, formatting errors, and compliance issues with cataloging standards.\",\n  \"parameters\": {\n    \"catalog_record\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"The catalog record to be checked for quality issues\"\n    },\n    \"record_format\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Format of the input record: MARC, Dublin Core, MODS, or EAD\"\n    },\n    \"check_completeness\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to verify presence of required and recommended fields\",\n      \"default\": true\n    },\n    \"check_consistency\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check for internal consistency and logical relationships\",\n      \"default\": true\n    },\n    \"check_authorities\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to verify headings against authority files\",\n      \"default\": true\n    },\n    \"severity_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Minimum issue severity to report: info, warning, error, critical\",\n      \"default\": \"warning\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty catalog record: Provide a valid catalog record for quality checking\",\n    \"Unsupported record format: Use MARC, Dublin Core, MODS, or EAD\",\n    \"Invalid severity level: Use info, warning, error, or critical\",\n    \"Malformed record structure: Record does not conform to specified format\",\n    \"Quality check failed: Unable to complete quality assessment due to system error\"\n  ],\n  \"usage\": \"Provide catalog_record and record_format to perform quality checks. Enable check_completeness, check_consistency, and check_authorities as needed. Set severity_level to control detail of reported issues.\",\n  \"output_details\": {\n    \"overall_quality_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall quality score from 0.0 to 1.0\"\n    },\n    \"critical_issues\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of critical issues that must be resolved\"\n    },\n    \"errors\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of error-level issues\"\n    },\n    \"warnings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of warning-level issues\"\n    },\n    \"suggestions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of improvement suggestions\"\n    },\n    \"completeness_score\": {\n      \"type\": \"number\",\n      \"description\": \"Completeness score based on required and optional fields\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Schema Crosswalk Converter\",\n  \"tool_description\": \"Converts metadata records between different schemas and standards, maintaining\
  \ semantic integrity while adapting to target format requirements and field mappings.\",\n  \"parameters\": {\n    \"source_record\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"The metadata record to be converted\"\n    },\n    \"source_schema\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Source schema format: MARC, Dublin Core, MODS, EAD, or custom\"\n    },\n    \"target_schema\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target schema format: MARC, Dublin Core, MODS, EAD, or custom\"\n    },\n    \"mapping_profile\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Predefined mapping profile or 'default' for standard mappings\",\n      \"default\": \"default\"\n    },\n    \"preserve_extensions\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to attempt preserving schema extensions and custom fields\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Empty source record: Provide a valid metadata record for conversion\",\n    \"Unsupported schema combination: This source-to-target conversion is not supported\",\n    \"Invalid source schema: Use MARC, Dublin Core, MODS, EAD, or custom\",\n    \"Invalid target schema: Use MARC, Dublin Core, MODS, EAD, or custom\",\n    \"Mapping profile not found: Specified mapping profile does not exist\",\n    \"Conversion failed: Unable to complete schema conversion due to incompatible elements\"\n  ],\n  \"usage\": \"Provide source_record with its source_schema and specify target_schema for conversion. Use mapping_profile for specialized conversions and enable preserve_extensions to maintain custom elements when possible.\",\n  \"output_details\": {\n    \"converted_record\": {\n      \"type\": \"string\",\n      \"description\": \"The record converted to target schema format\"\n    },\n    \"conversion_success\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether conversion completed successfully\"\n    },\n    \"mapped_fields\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of fields successfully mapped to target schema\"\n    },\n    \"unmapped_fields\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of source fields that could not be mapped\"\n    },\n    \"data_loss_warnings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Warnings about potential data loss during conversion\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Digital Rights Analyzer\",\n  \"tool_description\": \"Analyzes digital content to determine copyright status, usage rights, and licensing requirements, generating appropriate rights statements for catalog records.\",\n  \"parameters\": {\n    \"content_metadata\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Array of content metadata including creator, date, source information\"\n    },\n    \"copyright_jurisdiction\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Legal jurisdiction for copyright analysis: US, UK, EU, or international\",\n      \"default\": \"US\"\n    },\n    \"institutional_policy\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Institution's rights policy framework to apply\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Insufficient metadata: Provide creator, date, and source information for rights analysis\",\n    \"Unsupported jurisdiction: Use US, UK, EU, or international\",\n    \"Policy framework not found: Specified institutional policy is not available\",\n    \"Rights determination failed: Unable to determine copyright status from provided information\""
