field_name: Location_services
subfield: Location-Based Marketing and Advertising
task: Geofence campaign creation and management
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves creating and managing location-based marketing campaigns with geofences, which requires coordinating multiple complex systems including geographic boundary definition, audience targeting, campaign scheduling, real-time monitoring, and performance analytics. The task has medium-high complexity due to the need to handle spatial data, integrate with multiple advertising platforms, manage campaign lifecycles, and provide actionable insights from location-based user interactions.

  ## STEP 2 — Set a tool budget

  Given the medium-high complexity involving geographic data processing, campaign management, audience targeting, and analytics, I'll target 14 tools within the medium range (10-15 tools).

  ## STEP 3 — List all tool names and dependencies

  **Tool Names and Flow:**
  1. **Geofence Boundary Creator** → produces geographic boundaries
  2. **Location Data Validator** → consumes coordinate data, produces validated locations
  3. **Audience Segment Builder** → consumes demographic/behavioral data, produces audience definitions
  4. **Campaign Template Generator** → consumes campaign parameters, produces campaign templates
  5. **Geofence Campaign Launcher** → consumes boundaries, audiences, templates, produces active campaigns
  6. **Campaign Status Monitor** → consumes campaign IDs, produces real-time status
  7. **Location Event Tracker** → consumes geofence interactions, produces event logs
  8. **Audience Analytics Processor** → consumes event data, produces audience insights
  9. **Campaign Performance Analyzer** → consumes campaign data, produces performance metrics
  10. **Geofence Boundary Optimizer** → consumes performance data, produces boundary recommendations
  11. **Campaign Budget Controller** → consumes spend data, produces budget adjustments
  12. **Multi-Platform Sync Manager** → consumes campaign data, produces cross-platform synchronization
  13. **Location Heatmap Generator** → consumes location events, produces visualization data
  14. **Campaign Report Exporter** → consumes all analytics, produces formatted reports

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  - **Basic Geofence Setup**: Geofence Boundary Creator → Location Data Validator → Geofence Campaign Launcher
  - **Quick Performance Check**: Campaign Status Monitor → Campaign Performance Analyzer

  **Medium Plans:**
  - **Targeted Campaign Launch**: Audience Segment Builder → Campaign Template Generator → Geofence Campaign Launcher → Campaign Status Monitor → Location Event Tracker
  - **Campaign Optimization**: Campaign Performance Analyzer → Geofence Boundary Optimizer → Campaign Budget Controller → Multi-Platform Sync Manager

  **Complex Plans:**
  - **Full Campaign Lifecycle**: Geofence Boundary Creator → Location Data Validator → Audience Segment Builder → Campaign Template Generator → Geofence Campaign Launcher → Location Event Tracker → Audience Analytics Processor → Campaign Performance Analyzer → Location Heatmap Generator → Campaign Report Exporter
  - **Advanced Campaign Management**: Campaign Status Monitor → Location Event Tracker → Audience Analytics Processor → Geofence Boundary Optimizer → Campaign Budget Controller → Multi-Platform Sync Manager → Campaign Report Exporter

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Geofence Boundary Creator",
    "tool_description": "Creates geographic boundaries for location-based marketing campaigns using coordinates, radius, or polygon definitions with validation and area calculations.",
    "parameters": {
      "boundary_name": {
        "type": "string",
        "required": true,
        "description": "Unique identifier name for the geofence boundary"
      },
      "boundary_type": {
        "type": "string",
        "required": true,
        "description": "Type of boundary: circle, rectangle, or polygon"
      },
      "center_latitude": {
        "type": "number",
        "required": false,
        "description": "Center latitude for circle boundaries (-90 to 90)",
        "default": null
      },
      "center_longitude": {
        "type": "number",
        "required": false,
        "description": "Center longitude for circle boundaries (-180 to 180)",
        "default": null
      },
      "radius_meters": {
        "type": "number",
        "required": false,
        "description": "Radius in meters for circle boundaries (10 to 100000)",
        "default": null
      },
      "polygon_coordinates": {
        "type": "array",
        "required": false,
        "description": "Array of coordinate pairs for polygon boundaries [lat1,lon1,lat2,lon2,...]",
        "items": {"type": "number"},
        "minItems": 6,
        "maxItems": 200,
        "default": null
      },
      "rectangle_bounds": {
        "type": "array",
        "required": false,
        "description": "Rectangle bounds as [north_lat, south_lat, east_lon, west_lon]",
        "items": {"type": "number"},
        "minItems": 4,
        "maxItems": 4,
        "default": null
      }
    },
    "error_messages": [
      "Invalid boundary_type: Must be one of 'circle', 'rectangle', or 'polygon'",
      "Missing required parameters for circle: center_latitude, center_longitude, and radius_meters must be provided for circle boundaries",
      "Invalid coordinate values: Latitude must be between -90 and 90, longitude between -180 and 180",
      "Invalid radius: radius_meters must be between 10 and 100000 meters",
      "Invalid polygon coordinates: Must provide at least 3 coordinate pairs (6 numbers) for polygon boundaries",
      "Invalid rectangle bounds: Must provide exactly 4 values [north_lat, south_lat, east_lon, west_lon]",
      "Duplicate boundary name: A boundary with this name already exists"
    ],
    "usage": "Specify boundary_name and boundary_type, then provide the required coordinates based on the type. For circles, use center coordinates and radius. For rectangles, use rectangle_bounds. For polygons, use polygon_coordinates array.",
    "output_details": {
      "boundary_id": {
        "type": "string",
        "description": "Unique identifier for the created boundary"
      },
      "boundary_name": {
        "type": "string",
        "description": "Name of the created boundary"
      },
      "boundary_type": {
        "type": "string",
        "description": "Type of boundary created"
      },
      "area_square_meters": {
        "type": "number",
        "description": "Calculated area of the boundary in square meters"
      },
      "center_point": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Center coordinates [latitude, longitude] of the boundary"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when boundary was created"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Location Data Validator",
    "tool_description": "Validates and cleanses location data including coordinates, addresses, and geographic references for accuracy and completeness.",
    "parameters": {
      "coordinates": {
        "type": "array",
        "required": true,
        "description": "Array of coordinate pairs to validate [lat1, lon1, lat2, lon2, ...]",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 1000
      },
      "validation_level": {
        "type": "string",
        "required": false,
        "description": "Validation strictness: basic, standard, or strict",
        "default": "standard"
      }
    },
    "error_messages": [
      "Invalid coordinates array: Must contain an even number of values representing lat/lon pairs",
      "Out of bounds coordinates: Latitude must be between -90 and 90, longitude between -180 and 180",
      "Invalid validation_level: Must be 'basic', 'standard', or 'strict'",
      "Too many coordinates: Maximum 500 coordinate pairs (1000 values) allowed per request"
    ],
    "usage": "Provide an array of coordinates as alternating latitude and longitude values. Set validation_level to control the strictness of validation checks.",
    "output_details": {
      "valid_coordinates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of validated coordinate pairs"
      },
      "invalid_coordinates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of coordinates that failed validation"
      },
      "validation_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of validation error messages"
      },
      "total_validated": {
        "type": "integer",
        "description": "Total number of coordinate pairs processed"
      },
      "success_rate": {
        "type": "number",
        "description": "Percentage of coordinates that passed validation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audience Segment Builder",
    "tool_description": "Creates targeted audience segments based on demographic, behavioral, and location-based criteria for geofence marketing campaigns.",
    "parameters": {
      "segment_name": {
        "type": "string",
        "required": true,
        "description": "Unique name for the audience segment"
      },
      "age_range": {
        "type": "array",
        "required": false,
        "description": "Age range as [min_age, max_age]",
        "items": {"type": "integer"},
        "minItems": 2,
        "maxItems": 2,
        "default": null
      },
      "gender": {
        "type": "string",
        "required": false,
        "description": "Target gender: male, female, or all",
        "default": "all"
      },
      "interests": {
        "type": "array",
        "required": false,
        "description": "Array of interest categories",
        "items": {"type": "string"},
        "maxItems": 20,
        "default": null
      },
      "income_range": {
        "type": "array",
        "required": false,
        "description": "Income range as [min_income, max_income] in USD",
        "items": {"type": "integer"},
        "minItems": 2,
        "maxItems": 2,
        "default": null
      },
      "device_types": {
        "type": "array",
        "required": false,
        "description": "Target device types: ios, android, web",
        "items": {"type": "string"},
        "maxItems": 3,
        "default": ["ios", "android"]
      },
      "behavioral_attributes": {
        "type": "array",
        "required": false,
        "description": "Behavioral targeting attributes",
        "items": {"type": "string"},
        "maxItems": 15,
        "default": null
      },
      "location_history": {
        "type": "string",
        "required": false,
        "description": "Location history requirement: frequent_visitor, occasional_visitor, or new_visitor",
        "default": "all"
      },
      "estimated_size_min": {
        "type": "integer",
        "required": false,
        "description": "Minimum required audience size",
        "default": 1000
      }
    },
    "error_messages": [
      "Invalid age_range: Must provide exactly 2 integers with min_age < max_age and both between 13 and 100",
      "Invalid gender: Must be 'male', 'female', or 'all'",
      "Invalid device_types: Must contain only 'ios', 'android', or 'web'",
      "Invalid income_range: Must provide exactly 2 positive integers with min_income < max_income",
      "Invalid location_history: Must be 'frequent_visitor', 'occasional_visitor', 'new_visitor', or 'all'",
      "Segment too narrow: Current criteria result in audience size below estimated_size_min",
      "Duplicate segment name: A segment with this name already exists"
    ],
    "usage": "Specify segment_name and configure targeting criteria such as age_range, interests, device_types, etc. The tool will create a targetable audience segment based on the provided criteria.",
    "output_details": {
      "segment_id": {
        "type": "string",
        "description": "Unique identifier for the created segment"
      },
      "segment_name": {
        "type": "string",
        "description": "Name of the created segment"
      },
      "estimated_audience_size": {
        "type": "integer",
        "description": "Estimated number of users in this segment"
      },
      "targeting_criteria": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Summary of applied targeting criteria"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when segment was created"
      },
      "reach_score": {
        "type": "number",
        "description": "Predicted reach effectiveness score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Campaign Template Generator",
    "tool_description": "Generates customizable campaign templates with messaging, timing, frequency, and creative specifications for geofence marketing campaigns.",
    "parameters": {
      "template_name": {
        "type": "string",
        "required": true,
        "description": "Unique name for the campaign template"
      },
      "campaign_objective": {
        "type": "string",
        "required": true,
        "description": "Primary objective: awareness, traffic, conversions, or retention"
      },
      "message_template": {
        "type": "string",
        "required": true,
        "description": "Template message with placeholders for personalization"
      },
      "trigger_event": {
        "type": "string",
        "required": true,
        "description": "Trigger condition: enter_geofence, exit_geofence, or dwell_time"
      },
      "frequency_cap": {
        "type": "integer",
        "required": false,
        "description": "Maximum messages per user per day (1-10)",
        "default": 3
      },
      "dwell_time_seconds": {
        "type": "integer",
        "required": false,
        "description": "Minimum dwell time before trigger (60-3600 seconds)",
        "default": 300
      }
    },
    "error_messages": [
      "Invalid campaign_objective: Must be 'awareness', 'traffic', 'conversions', or 'retention'",
      "Invalid trigger_event: Must be 'enter_geofence', 'exit_geofence', or 'dwell_time'",
      "Invalid frequency_cap: Must be an integer between 1 and 10",
      "Invalid dwell_time_seconds: Must be between 60 and 3600 seconds",
      "Empty message_template: Message template cannot be empty",
      "Duplicate template name: A template with this name already exists"
    ],
    "usage": "Provide template_name, campaign_objective, message_template, and trigger_event. Optionally configure frequency_cap and dwell_time_seconds. The tool creates a reusable campaign template.",
    "output_details": {
      "template_id": {
        "type": "string",
        "description": "Unique identifier for the created template"
      },
      "template_name": {
        "type": "string",
        "description": "Name of the created template"
      },
      "estimated_ctr": {
        "type": "number",
        "description": "Estimated click-through rate based on template configuration"
      },
      "recommended_budget": {
        "type": "number",
        "description": "Recommended daily budget in USD"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when template was created"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Geofence Campaign Launcher",
    "tool_description": "Launches active geofence marketing campaigns by combining boundaries, audience segments, and templates with budget and scheduling controls.",
    "parameters": {
      "campaign_name": {
        "type": "string",
        "required": true,
        "description": "Unique name for the campaign"
      },
      "boundary_ids": {
        "type": "array",
        "required": true,
        "description": "Array of geofence boundary IDs to use",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "segment_ids": {
        "type": "array",
        "required": true,
        "description": "Array of audience segment IDs to target",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "template_id": {
        "type": "string",
        "required": true,
        "description": "Campaign template ID to use"
      },
      "daily_budget": {
        "type": "number",
        "required": true,
        "description": "Daily budget in USD (minimum 10)"
      },
      "start_datetime": {
        "type": "string",
        "required": true,
        "description": "Campaign start date and time",
        "format": "date-time"
      },
      "end_datetime": {
        "type": "string",
        "required": true,
        "description": "Campaign end date and time",
        "format": "date-time"
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Campaign priority: low, medium, or high",
        "default": "medium"
      },
      "auto_optimize": {
        "type": "boolean",
        "required": false,
        "description": "Enable automatic campaign optimization",
        "default": true
      },
      "platforms": {
        "type": "array",
        "required": false,
        "description": "Target platforms: mobile_app, web, sms, email",
        "items": {"type": "string"},
        "maxItems": 4,
        "default": ["mobile_app"]
      },
      "conversion_tracking": {
        "type": "boolean",
        "required": false,
        "description": "Enable conversion tracking",
        "default": true
      },
      "attribution_window_hours": {
        "type": "integer",
        "required": false,
        "description": "Attribution window in hours (1-168)",
        "default": 24
      }
    },
    "error_messages": [
      "Invalid boundary_ids: One or more boundary IDs do not exist or are invalid",
      "Invalid segment_ids: One or more segment IDs do not exist or are invalid",
      "Invalid template_id: Template ID does not exist or is invalid",
      "Invalid budget: daily_budget must be at least 10 USD",
      "Invalid date range: start_datetime must be before end_datetime and both must be in the future",
      "Invalid priority_level: Must be 'low', 'medium', or 'high'",
      "Invalid platforms: Must contain only 'mobile_app', 'web', 'sms', or 'email'",
      "Invalid attribution_window_hours: Must be between 1 and 168 hours",
      "Campaign name conflict: A campaign with this name already exists"
    ],
    "usage": "Provide campaign_name, boundary_ids, segment_ids, template_id, daily_budget, and date range. Optionally configure priority_level, platforms, and tracking settings. The tool launches an active geofence campaign.",
    "output_details": {
      "campaign_id": {
        "type": "string",
        "description": "Unique identifier for the launched campaign"
      },
      "campaign_status": {
        "type": "string",
        "description": "Current campaign status"
      },
      "launch_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when campaign was launched"
      },
      "estimated_reach": {
        "type": "integer",
        "description": "Estimated number of users that may be reached"
      },
      "initial_budget_allocation": {
        "type": "number",
        "description": "Initial budget allocated in USD"
      },
      "geofence_count": {
        "type": "integer",
        "description": "Number of geofences activated"
      },
      "target_audience_size": {
        "type": "integer",
        "description": "Total size of targeted audience segments"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Campaign Status Monitor",
    "tool_description": "Monitors real-time status, performance metrics, and health indicators of active geofence campaigns with alert capabilities.",
    "parameters": {
      "campaign_ids": {
        "type": "array",
        "required": true,
        "description": "Array of campaign IDs to monitor",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "include_metrics": {
        "type": "boolean",
        "required": false,
        "description": "Include detailed performance metrics",
        "default": true
      }
    },
    "error_messages": [
      "Invalid campaign_ids: One or more campaign IDs do not exist or are invalid",
      "Too many campaigns: Maximum 20 campaigns can be monitored in a single request",
      "Access denied: You do not have permission to monitor one or more campaigns"
    ],
    "usage": "Provide an array of campaign_ids to monitor. Set include_metrics to true for detailed performance data. The tool returns current status and key metrics for each campaign.",
    "output_details": {
      "campaigns_monitored": {
        "type": "integer",
        "description": "Number of campaigns successfully monitored"
      },
      "campaign_statuses": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Current status of each monitored campaign"
      },
      "active_campaigns": {
        "type": "integer",
        "description": "Number of currently active campaigns"
      },
      "total_impressions": {
        "type": "integer",
        "description": "Total impressions across all monitored campaigns"
      },
      "total_clicks": {
        "type": "integer",
        "description": "Total clicks across all monitored campaigns"
      },
      "average_ctr": {
        "type": "number",
        "description": "Average click-through rate across campaigns"
      },
      "total_spend": {
        "type": "number",
        "description": "Total spend in USD across all campaigns"
      },
      "alerts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Any alerts or warnings for the monitored campaigns"
      },
      "last_updated": {
        "type": "string",
        "description": "ISO 8601 timestamp of last data update"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Location Event Tracker",
    "tool_description": "Tracks and logs user location events within geofences including entries, exits, dwell times, and interaction patterns for campaign analysis.",
    "parameters": {
      "campaign_id": {
        "type": "string",
        "required": true,
        "description": "Campaign ID to track events for"
      },
      "start_time": {
        "type": "string",
        "required": true,
        "description": "Start time for event tracking",
        "format": "date-time"
      },
      "end_time": {
        "type": "string",
        "required": true,
        "description": "End time for event tracking",
        "format": "date-time"
      },
      "event_types": {
        "type": "array",
        "required": false,
        "description": "Types of events to track",
        "items": {"type": "string"},
        "default": ["enter", "exit", "dwell"]
      }
    },
    "error_messages": [
      "Invalid campaign_id: Campaign ID does not exist or is not accessible",
      "Invalid time range: start_time must be before end_time",
      "Invalid event_types: Must contain only 'enter', 'exit', 'dwell', or 'interaction'",
      "Time range too large: Maximum tracking period is 30 days"
    ],
    "usage": "Provide campaign_id and time range (start_time to end_time). Optionally specify event_types to filter tracked events. The tool returns detailed location event data.",
    "output_details": {
      "total_events": {
        "type": "integer",
        "description": "Total number of location events tracked"
      },
      "enter_events": {
        "type": "integer",
        "description": "Number of geofence entry events"
      },
      "exit_events": {
        "type": "integer",
        "description": "Number of geofence exit events"
      },
      "dwell_events": {
        "type": "integer",
        "description": "Number of dwell time threshold events"
      },
      "unique_users": {
        "type": "integer",
        "description": "Number of unique users who triggered events"
      },
      "average_dwell_seconds": {
        "type": "number",
        "description": "Average dwell time in seconds"
      },
      "peak_activity_hour": {
        "type": "integer",
        "description": "Hour of day (0-23) with highest activity"
      },
      "event_timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of event timestamps in ISO 8601 format"
      },
      "tracking_period": {
        "type": "string",
        "description": "Duration of the tracking period"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audience Analytics Processor",
    "tool_description": "Processes location event data to generate audience behavior insights, segment performance analysis, and user journey patterns for campaign optimization.",
    "parameters": {
      "campaign_id": {
        "type": "string",
        "required": true,
        "description": "Campaign ID to analyze audience data for"
      },
      "analysis_period_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to analyze (1-90)"
      },
      "segment_breakdown": {
        "type": "boolean",
        "required": false,
        "description": "Include breakdown by audience segments",
        "default": true
      },
      "behavioral_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Include behavioral pattern analysis",
        "default": true
      },
      "geographic_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Include geographic distribution analysis",
        "default": false
      }
    },
    "error_messages": [
      "Invalid campaign_id: Campaign ID does not exist or is not accessible",
      "Invalid analysis_period_days: Must be between 1 and 90 days",
      "Insufficient data: Not enough data available for the specified analysis period"
    ],
    "usage": "Provide campaign_id and analysis_period_days. Enable optional analyses with segment_breakdown, behavioral_analysis, and geographic_analysis flags. The tool returns comprehensive audience insights.",
    "output_details": {
      "total_audience_interactions": {
        "type": "integer",
        "description": "Total number of audience interactions analyzed"
      },
      "unique_users_analyzed": {
        "type": "integer",
        "description": "Number of unique users in the analysis"
      },
      "segment_performance": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Performance summary for each audience segment"
      },
      "top_performing_segments": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Names of top performing audience segments"
      },
      "engagement_patterns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified user engagement patterns"
      },
      "conversion_rate": {
        "type": "number",
        "description": "Overall conversion rate for the analyzed period"
      },
      "average_session_duration": {
        "type": "number",
        "description": "Average session duration in seconds"
      },
      "retention_score": {
        "type": "number",
        "description": "Audience retention score (0-100)"
      },
      "analysis_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when analysis was completed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Campaign Performance Analyzer",
    "tool_description": "Analyzes comprehensive campaign performance metrics including ROI, conversion rates, cost efficiency, and comparative performance against benchmarks.",
    "parameters": {
      "campaign_id": {
        "type": "string",
        "required": true,
        "description": "Campaign ID to analyze performance for"
      },
      "analysis_period_days": {
        "type": "integer",
        "required": true,
        "description": "Number of days to analyze (1-365)"
      },
      "comparison_benchmark": {
        "type": "string",
        "required": false,
        "description": "Comparison benchmark: industry_average, previous_campaign, or custom",
        "default": "industry_average"
      },
      "include_roi_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Include return on investment calculations",
        "default": true
      }
    },
    "error_messages": [
      "Invalid campaign_id: Campaign ID does not exist or is not accessible",
      "Invalid analysis_period_days: Must be between 1 and 365 days",
      "Invalid comparison_benchmark: Must be 'industry_average', 'previous_campaign', or 'custom'",
      "Insufficient data: Campaign has insufficient data for meaningful analysis"
    ],
    "usage": "Provide campaign_id and analysis_period_days. Optionally set comparison_benchmark and include_roi_analysis. The tool returns comprehensive performance analysis with actionable insights.",
    "output_details": {
      "campaign_roi": {
        "type": "number",
        "description": "Return on investment as a percentage"
      },
      "total_impressions": {
        "type": "integer",
        "description": "Total number of impressions delivered"
      },
      "total_clicks": {
        "type": "integer",
        "description": "Total number of clicks received"
      },
      "click_through_rate": {
        "type": "number",
        "description": "Click-through rate as a percentage"
      },
      "conversion_rate": {
        "type": "number",
        "description": "Conversion rate as a percentage"
      },
      "cost_per_click": {
        "type": "number",
        "description": "Average cost per click in USD"
      },
      "cost_per_conversion": {
        "type": "number",
        "description": "Average cost per conversion in USD"
      },
      "benchmark_comparison": {
        "type": "string",
        "description": "Performance comparison against selected benchmark"
      },
      "optimization_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of optimization recommendations"
      },
      "analysis_timestamp": {
        "type": "string",
        "description": "ISO 8601 timestamp when analysis was completed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Geofence
