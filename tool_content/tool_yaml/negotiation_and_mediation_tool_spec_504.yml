field_name: negotiation_and_mediation
subfield: Labor Relations and Union Negotiations
task: Contract proposal analysis and comparison
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves analyzing complex legal documents, comparing multiple contract proposals with interdependent clauses, and evaluating financial implications across various scenarios. The high stakes nature of labor negotiations, requirement for legal compliance, and need to balance competing interests makes this a **hard** difficulty task.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to handle the complexity of contract analysis, financial modeling, legal compliance checking, and comparative evaluation.

  **STEP 3 — Tool names and dependencies**

  1. **Contract Text Extractor** - Consumes: contract files → Produces: structured text data
  2. **Clause Identifier** - Consumes: contract text → Produces: categorized clauses
  3. **Financial Term Analyzer** - Consumes: contract clauses → Produces: cost breakdowns
  4. **Legal Compliance Checker** - Consumes: contract terms → Produces: compliance status
  5. **Precedent Case Finder** - Consumes: contract terms → Produces: relevant precedents
  6. **Cost Impact Calculator** - Consumes: financial terms → Produces: cost projections
  7. **Term Comparison Matrix** - Consumes: multiple contracts → Produces: comparison tables
  8. **Risk Assessment Tool** - Consumes: contract terms → Produces: risk ratings
  9. **Timeline Analyzer** - Consumes: contract dates → Produces: timeline conflicts
  10. **Stakeholder Impact Evaluator** - Consumes: contract terms → Produces: impact assessments
  11. **Alternative Proposal Generator** - Consumes: contract analysis → Produces: alternative terms
  12. **Negotiation Point Prioritizer** - Consumes: term differences → Produces: priority rankings
  13. **Implementation Feasibility Checker** - Consumes: contract terms → Produces: feasibility scores
  14. **Market Benchmark Comparator** - Consumes: contract terms → Produces: market comparisons
  15. **Language Clarity Analyzer** - Consumes: contract text → Produces: clarity scores
  16. **Scenario Modeler** - Consumes: contract terms → Produces: outcome scenarios
  17. **Executive Summary Generator** - Consumes: all analyses → Produces: summary reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Contract Text Extractor → Clause Identifier → Term Comparison Matrix (Basic contract comparison)
  2. Financial Term Analyzer → Cost Impact Calculator (Financial impact assessment)

  **Medium Plans:**
  1. Contract Text Extractor → Clause Identifier → Legal Compliance Checker → Risk Assessment Tool → Executive Summary Generator (Compliance-focused analysis)
  2. Financial Term Analyzer → Cost Impact Calculator → Market Benchmark Comparator → Stakeholder Impact Evaluator (Comprehensive financial evaluation)

  **Complex Plans:**
  1. Contract Text Extractor → Clause Identifier → Financial Term Analyzer → Legal Compliance Checker → Risk Assessment Tool → Term Comparison Matrix → Alternative Proposal Generator → Negotiation Point Prioritizer → Executive Summary Generator (Full contract analysis workflow)
  2. Contract Text Extractor → Clause Identifier → Timeline Analyzer → Implementation Feasibility Checker → Scenario Modeler → Stakeholder Impact Evaluator → Cost Impact Calculator → Market Benchmark Comparator → Executive Summary Generator (Implementation-focused comprehensive analysis)

  **STEP 5 — Tools**

  ```json
  {
    "tool_name": "Contract Text Extractor",
    "tool_description": "Extracts and structures text content from contract documents in various formats, identifying sections and organizing content for analysis.",
    "parameters": {
      "file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the contract document file"
      },
      "file_format": {
        "type": "string",
        "required": true,
        "description": "Document format: pdf, docx, txt, rtf"
      }
    },
    "error_messages": [
      "File not found: Verify the file path exists and is accessible.",
      "Unsupported format: Use one of the supported formats (pdf, docx, txt, rtf).",
      "Corrupted file: The document appears to be damaged and cannot be read.",
      "Empty document: The contract file contains no readable text content."
    ],
    "usage": "Provide the file_path and file_format of the contract document. The tool will extract all text content and organize it by sections.",
    "output_details": {
      "extracted_text": {
        "type": "string",
        "description": "Full text content of the contract"
      },
      "section_count": {
        "type": "integer",
        "description": "Number of identified sections"
      },
      "word_count": {
        "type": "integer",
        "description": "Total word count in the document"
      },
      "extraction_status": {
        "type": "string",
        "description": "Status of the extraction process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clause Identifier",
    "tool_description": "Identifies and categorizes different types of clauses in contract text, such as compensation, benefits, working conditions, and termination clauses.",
    "parameters": {
      "contract_text": {
        "type": "string",
        "required": true,
        "description": "Full text content of the contract to analyze"
      },
      "clause_types": {
        "type": "array",
        "required": false,
        "description": "Specific clause types to identify",
        "items": {"type": "string"},
        "default": "None"
      },
      "include_subsections": {
        "type": "boolean",
        "required": false,
        "description": "Whether to identify subsections within clauses",
        "default": "True"
      }
    },
    "error_messages": [
      "Empty text input: Provide non-empty contract text for analysis.",
      "Invalid clause type: Specified clause types must be recognized categories.",
      "Text too short: Contract text must contain at least 100 words for meaningful analysis."
    ],
    "usage": "Input the contract text and optionally specify clause types to focus on. The tool will categorize all identified clauses by type and importance.",
    "output_details": {
      "identified_clauses": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified clause texts"
      },
      "clause_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Category classification for each clause"
      },
      "clause_count": {
        "type": "integer",
        "description": "Total number of clauses identified"
      },
      "coverage_score": {
        "type": "number",
        "description": "Percentage of contract text categorized"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Financial Term Analyzer",
    "tool_description": "Analyzes financial terms in contract clauses including wages, benefits, bonuses, and other monetary obligations to extract quantitative data.",
    "parameters": {
      "contract_clauses": {
        "type": "array",
        "required": true,
        "description": "Array of contract clause texts to analyze",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "base_year": {
        "type": "integer",
        "required": true,
        "description": "Base year for financial calculations (2020-2030)"
      },
      "currency": {
        "type": "string",
        "required": false,
        "description": "Currency code (USD, EUR, etc.)",
        "default": "USD"
      },
      "inflation_rate": {
        "type": "number",
        "required": false,
        "description": "Annual inflation rate as decimal (0.01-0.10)",
        "default": "0.03"
      },
      "employee_count": {
        "type": "integer",
        "required": true,
        "description": "Number of employees affected by the contract"
      }
    },
    "error_messages": [
      "Invalid base year: Year must be between 2020 and 2030.",
      "Invalid inflation rate: Rate must be between 0.01 and 0.10.",
      "Invalid currency: Use standard 3-letter currency codes.",
      "No financial terms found: Contract clauses contain no identifiable monetary values.",
      "Invalid employee count: Employee count must be greater than 0."
    ],
    "usage": "Provide contract clauses, base year, and employee count. Optionally set currency and inflation rate. The tool extracts and analyzes all financial terms.",
    "output_details": {
      "total_compensation": {
        "type": "number",
        "description": "Total annual compensation per employee"
      },
      "wage_components": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified wage components"
      },
      "benefit_values": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Monetary values of identified benefits"
      },
      "cost_escalations": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Annual cost increase percentages"
      },
      "financial_summary": {
        "type": "string",
        "description": "Summary of financial analysis"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Legal Compliance Checker",
    "tool_description": "Verifies contract terms against labor laws, regulations, and legal requirements to identify potential compliance issues.",
    "parameters": {
      "contract_terms": {
        "type": "array",
        "required": true,
        "description": "Array of contract terms to check for compliance",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction (state/province and country)"
      },
      "industry_sector": {
        "type": "string",
        "required": true,
        "description": "Industry sector for sector-specific regulations"
      },
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of labor contract (collective_bargaining, individual, temporary)"
      }
    },
    "error_messages": [
      "Unknown jurisdiction: Jurisdiction must be a recognized legal territory.",
      "Invalid contract type: Use collective_bargaining, individual, or temporary.",
      "Insufficient term details: Contract terms must be specific enough for compliance checking.",
      "Industry sector not recognized: Use a standard industry classification."
    ],
    "usage": "Provide contract terms, jurisdiction, industry sector, and contract type. The tool will check each term against applicable laws and regulations.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status (compliant, non_compliant, needs_review)"
      },
      "violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified compliance violations"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommendations to address compliance issues"
      },
      "risk_level": {
        "type": "string",
        "description": "Legal risk level (low, medium, high, critical)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cost Impact Calculator",
    "tool_description": "Calculates the financial impact of contract terms over specified time periods, including direct costs, indirect costs, and long-term implications.",
    "parameters": {
      "financial_terms": {
        "type": "array",
        "required": true,
        "description": "Array of financial terms with values",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 30
      },
      "calculation_years": {
        "type": "integer",
        "required": true,
        "description": "Number of years to project costs (1-10)"
      },
      "employee_count": {
        "type": "integer",
        "required": true,
        "description": "Total number of employees affected"
      },
      "annual_growth_rate": {
        "type": "number",
        "required": false,
        "description": "Expected annual cost growth rate (0-0.15)",
        "default": "0.03"
      },
      "include_benefits_multiplier": {
        "type": "boolean",
        "required": false,
        "description": "Whether to apply benefits cost multiplier",
        "default": "True"
      }
    },
    "error_messages": [
      "Invalid calculation period: Years must be between 1 and 10.",
      "Invalid growth rate: Rate must be between 0 and 0.15.",
      "Insufficient financial data: Need at least one quantifiable financial term.",
      "Invalid employee count: Count must be positive integer."
    ],
    "usage": "Input financial terms, calculation period, and employee count. Optionally set growth rate and benefits multiplier. Returns comprehensive cost projections.",
    "output_details": {
      "annual_costs": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Projected annual costs for each year"
      },
      "total_cost": {
        "type": "number",
        "description": "Total cost over the calculation period"
      },
      "cost_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Breakdown of cost components"
      },
      "cost_per_employee": {
        "type": "number",
        "description": "Average annual cost per employee"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Term Comparison Matrix",
    "tool_description": "Creates side-by-side comparison matrices of terms across multiple contract proposals, highlighting differences and similarities.",
    "parameters": {
      "contract_a_terms": {
        "type": "array",
        "required": true,
        "description": "Terms from first contract proposal",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "contract_b_terms": {
        "type": "array",
        "required": true,
        "description": "Terms from second contract proposal",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "contract_c_terms": {
        "type": "array",
        "required": false,
        "description": "Terms from third contract proposal (optional)",
        "items": {"type": "string"},
        "default": "None"
      },
      "comparison_categories": {
        "type": "array",
        "required": false,
        "description": "Specific categories to compare",
        "items": {"type": "string"},
        "default": "None"
      },
      "highlight_differences": {
        "type": "boolean",
        "required": false,
        "description": "Whether to emphasize differing terms",
        "default": "True"
      }
    },
    "error_messages": [
      "Insufficient contracts: Need at least two contracts for comparison.",
      "Term mismatch: Contracts must have comparable term structures.",
      "Category not found: Specified comparison categories not found in contracts."
    ],
    "usage": "Provide terms from at least two contracts, optionally specify comparison categories and whether to highlight differences. Returns structured comparison.",
    "output_details": {
      "comparison_matrix": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Formatted comparison matrix rows"
      },
      "key_differences": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of significant differences between contracts"
      },
      "similarity_score": {
        "type": "number",
        "description": "Percentage similarity between contracts"
      },
      "recommendation": {
        "type": "string",
        "description": "Analysis recommendation based on comparison"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Assessment Tool",
    "tool_description": "Evaluates potential risks associated with contract terms including financial, operational, legal, and strategic risks.",
    "parameters": {
      "contract_terms": {
        "type": "array",
        "required": true,
        "description": "Contract terms to assess for risks",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 40
      },
      "risk_categories": {
        "type": "array",
        "required": false,
        "description": "Specific risk categories to evaluate",
        "items": {"type": "string"},
        "default": "None"
      },
      "organization_size": {
        "type": "string",
        "required": true,
        "description": "Organization size: small, medium, large, enterprise"
      },
      "risk_tolerance": {
        "type": "string",
        "required": false,
        "description": "Risk tolerance level: conservative, moderate, aggressive",
        "default": "moderate"
      },
      "market_volatility": {
        "type": "string",
        "required": false,
        "description": "Current market volatility: low, medium, high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Invalid organization size: Use small, medium, large, or enterprise.",
      "Invalid risk tolerance: Use conservative, moderate, or aggressive.",
      "Invalid market volatility: Use low, medium, or high.",
      "Insufficient terms: Need substantive contract terms for risk assessment."
    ],
    "usage": "Input contract terms and organization size, optionally specify risk categories, tolerance, and market volatility. Returns comprehensive risk analysis.",
    "output_details": {
      "overall_risk_score": {
        "type": "number",
        "description": "Overall risk score from 0-100"
      },
      "risk_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified risk categories"
      },
      "high_risk_terms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Terms identified as high risk"
      },
      "mitigation_strategies": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended risk mitigation strategies"
      },
      "risk_summary": {
        "type": "string",
        "description": "Executive summary of risk assessment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Precedent Case Finder",
    "tool_description": "Searches for relevant legal precedents and similar contract cases that relate to specific contract terms or disputes.",
    "parameters": {
      "search_terms": {
        "type": "array",
        "required": true,
        "description": "Key terms to search for precedents",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction for precedent search"
      },
      "case_type": {
        "type": "string",
        "required": false,
        "description": "Type of case: labor_dispute, contract_interpretation, wage_hour",
        "default": "labor_dispute"
      },
      "years_back": {
        "type": "integer",
        "required": false,
        "description": "How many years back to search (1-20)",
        "default": "10"
      }
    },
    "error_messages": [
      "Invalid jurisdiction: Provide a recognized legal jurisdiction.",
      "Invalid case type: Use labor_dispute, contract_interpretation, or wage_hour.",
      "Invalid time range: Years back must be between 1 and 20.",
      "No precedents found: No relevant cases found for the specified terms."
    ],
    "usage": "Provide search terms and jurisdiction, optionally specify case type and time range. Returns relevant legal precedents and case summaries.",
    "output_details": {
      "precedent_count": {
        "type": "integer",
        "description": "Number of relevant precedents found"
      },
      "case_summaries": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Brief summaries of relevant cases"
      },
      "key_rulings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Key legal rulings from precedent cases"
      },
      "relevance_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Relevance scores for each precedent"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Timeline Analyzer",
    "tool_description": "Analyzes contract timelines, deadlines, and implementation schedules to identify potential conflicts or unrealistic expectations.",
    "parameters": {
      "contract_dates": {
        "type": "array",
        "required": true,
        "description": "Important dates from the contract",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 20
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Contract start date",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "Contract end date",
        "format": "date-time"
      },
      "implementation_complexity": {
        "type": "string",
        "required": false,
        "description": "Implementation complexity: simple, moderate, complex",
        "default": "moderate"
      },
      "buffer_days": {
        "type": "integer",
        "required": false,
        "description": "Buffer days to add for realistic planning (0-90)",
        "default": "30"
      }
    },
    "error_messages": [
      "Invalid date format: Use ISO 8601 date-time format for all dates.",
      "Date sequence error: Start date must be before end date.",
      "Invalid complexity level: Use simple, moderate, or complex.",
      "Invalid buffer period: Buffer days must be between 0 and 90.",
      "Timeline conflict: Identified conflicting or overlapping deadlines."
    ],
    "usage": "Input contract dates, start/end dates, and optionally specify implementation complexity and buffer days. Returns timeline analysis with conflict identification.",
    "output_details": {
      "timeline_feasible": {
        "type": "boolean",
        "description": "Whether the timeline is realistic"
      },
      "critical_deadlines": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of critical deadline dates"
      },
      "potential_conflicts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified timeline conflicts"
      },
      "recommended_adjustments": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggested timeline adjustments"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stakeholder Impact Evaluator",
    "tool_description": "Evaluates how contract terms will impact different stakeholders including employees, management, shareholders, and customers.",
    "parameters": {
      "contract_terms": {
        "type": "array",
        "required": true,
        "description": "Contract terms to evaluate for stakeholder impact",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 30
      },
      "stakeholder_groups": {
        "type": "array",
        "required": true,
        "description": "Stakeholder groups to analyze",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "impact_metrics": {
        "type": "array",
        "required": false,
        "description": "Specific metrics to measure impact",
        "items": {"type": "string"},
        "default": "None"
      },
      "time_horizon": {
        "type": "integer",
        "required": false,
        "description": "Time horizon for impact analysis in years (1-5)",
        "default": "3"
      },
      "weight_financial": {
        "type": "number",
        "required": false,
        "description": "Weight for financial impacts (0.1-1.0)",
        "default": "0.4"
      },
      "weight_operational": {
        "type": "number",
        "required": false,
        "description": "Weight for operational impacts (0.1-1.0)",
        "default": "0.3"
      },
      "weight_strategic": {
        "type": "number",
        "required": false,
        "description": "Weight for strategic impacts (0.1-1.0)",
        "default": "0.3"
      }
    },
    "error_messages": [
      "Invalid time horizon: Time horizon must be between 1 and 5 years.",
      "Invalid weights: All weight values must be between 0.1 and 1.0.",
      "Weight sum error: Financial, operational, and strategic weights should sum to approximately 1.0.",
      "Insufficient stakeholder groups: Must specify at least one stakeholder group.",
      "Unrecognized stakeholder group: Use standard stakeholder categories."
    ],
    "usage": "Provide contract terms and stakeholder groups, optionally specify impact metrics, time horizon, and impact weights. Returns comprehensive stakeholder impact analysis.",
    "output_details": {
      "overall_impact_score": {
        "type": "number",
        "description": "Overall weighted impact score"
      },
      "stakeholder_impacts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Impact assessment for each stakeholder group"
      },
      "positive_impacts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified positive impacts"
      },
      "negative_impacts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified negative impacts"
      },
      "impact_summary": {
        "type": "string",
        "description": "Executive summary of stakeholder impacts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Alternative Proposal Generator",
    "tool_description": "Generates alternative contract proposals based on analysis of existing terms, constraints, and negotiation objectives.",
    "parameters": {
      "current_terms": {
        "type": "array",
        "required": true,
        "description": "Current contract terms as baseline",
        "items": {"type": "string"},
        "minItems": 5,
        "maxItems": 40
      },
      "constraints": {
        "type": "array",
        "required": true,
        "description": "Non-negotiable constraints or requirements",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 15
      },
      "objectives": {
        "type": "array",
        "required": true,
        "description": "Primary negotiation objectives",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "budget_limit": {
        "type": "number",
        "required": false,
        "description": "Maximum budget constraint",
        "default": "None"
      },
      "creativity_level": {
        "type": "string",
        "required": false,
        "description": "Level of creative alternatives: conservative, moderate, innovative",
        "default": "moderate"
      },
      "alternatives_count": {
        "type": "integer",
        "required": false,
        "description": "Number of alternatives to generate (1-5)",
        "default": "3"
      }
    },
    "error_messages": [
      "Insufficient baseline terms: Need at least 5 current terms for meaningful alternatives.",
      "Invalid creativity level: Use conservative, moderate, or innovative.",
      "Invalid alternatives count: Must generate between 1 and 5 alternatives.",
      "Conflicting constraints: Identified mutually exclusive constraints.",
      "Budget constraint violation: Generated alternatives exceed specified budget limit."
    ],
    "usage": "Provide current terms, constraints, and objectives. Optionally set budget limit, creativity level, and number of alternatives. Returns feasible alternative proposals.",
    "output_details": {
      "alternatives": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Generated alternative proposals"
      },
      "feasibility_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Feasibility scores for each alternative"
      },
      "cost_estimates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Cost estimates for each alternative"
      },
      "recommendation_ranking": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Recommended ranking of alternatives"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Negotiation Point Prioritizer",
    "tool_description": "Prioritizes negotiation points based on importance, feasibility, and strategic value to guide negotiation strategy.",
    "parameters": {
      "negotiation_points": {
        "type": "array",
        "required": true,
        "description": "List of negotiation points to prioritize",
        "items": {"type": "string"},
        "minItems": 3,
        "maxItems": 25
      },
      "importance_weights": {
        "type": "array",
        "required": false,
        "description": "Importance weights for each point (0-10)",
        "items": {"type": "number"},
        "default": "None"
      },
      "feasibility_scores": {
        "type": "array",
        "required": false,
        "description": "Feasibility scores for each point (0-10)",
        "items": {"type": "number"},
        "default": "None"
      },
      "strategic_value": {
        "type": "array",
        "required": false,
        "description": "Strategic value scores for each point (0-10)",
        "items": {"type": "number"},
        "default": "None"
      },
      "negotiation_style": {
        "type": "string",
        "required": false,
        "description": "Preferred negotiation approach: collaborative, competitive, accommodating",
        "default": "collaborative"
      }
    },
    "error_messages": [
      "Insufficient negotiation points: Need at least 3 points for meaningful prioritization.",
      "Score array mismatch: Weight/score arrays must match negotiation points count.",
      "Invalid score values: All scores must be between 0 and 10.",
      "Invalid negotiation style: Use collaborative, competitive, or accommodating."
    ],
    "usage": "Provide negotiation points and optionally their importance weights, feasibility scores, and strategic values. Specify negotiation style for tailored prioritization.",
    "output_details": {
      "priority_ranking": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Priority ranking of negotiation points"
      },
      "high_priority_points": {
        "type": "array",
        "items
