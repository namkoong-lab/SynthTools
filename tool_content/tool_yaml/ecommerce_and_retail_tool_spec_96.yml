field_name: ecommerce_and_retail
subfield: Customer Reviews and Ratings
task: Collect and aggregate customer reviews from multiple platforms and sources
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task has medium-to-hard difficulty. It involves coordinating data collection across multiple heterogeneous platforms with varying APIs, data formats, and rate limits. The task requires handling authentication, data normalization, duplicate detection, and robust error handling across different sources. The complexity stems from integration challenges, data quality issues, and the need for scalable aggregation pipelines.

  **STEP 2 — Set a tool budget**

  Given the medium-hard difficulty, I'll target 16 tools to cover the diverse aspects of multi-platform review collection, processing, authentication, normalization, deduplication, aggregation, and quality control.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Platform Authenticator** - Consumes: credentials → Produces: auth tokens
  2. **Review Scraper** - Consumes: URLs, auth tokens → Produces: raw review data
  3. **API Review Fetcher** - Consumes: API endpoints, parameters → Produces: structured review data
  4. **Review Parser** - Consumes: raw review text → Produces: structured review fields
  5. **Data Format Normalizer** - Consumes: heterogeneous review data → Produces: standardized review format
  6. **Duplicate Detector** - Consumes: normalized reviews → Produces: duplicate flags/clusters
  7. **Review Validator** - Consumes: review records → Produces: validation status and scores
  8. **Sentiment Analyzer** - Consumes: review text → Produces: sentiment scores and classifications
  9. **Review Aggregator** - Consumes: validated reviews → Produces: aggregated metrics
  10. **Rating Calculator** - Consumes: review scores → Produces: weighted ratings and statistics
  11. **Platform Mapper** - Consumes: platform identifiers → Produces: platform metadata and configs
  12. **Data Quality Assessor** - Consumes: review datasets → Produces: quality metrics and reports
  13. **Review Scheduler** - Consumes: collection parameters → Produces: scheduled collection tasks
  14. **Export Formatter** - Consumes: aggregated data → Produces: formatted export files
  15. **Rate Limiter** - Consumes: request parameters → Produces: throttled request approvals
  16. **Collection Monitor** - Consumes: collection metrics → Produces: monitoring reports and alerts

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  - Basic single-platform collection: Platform Authenticator → API Review Fetcher → Review Parser → Export Formatter
  - Quick sentiment analysis: Review Parser → Sentiment Analyzer → Export Formatter

  **Medium plans:**
  - Multi-platform normalized collection: Platform Mapper → Platform Authenticator → API Review Fetcher → Data Format Normalizer → Duplicate Detector → Export Formatter
  - Quality-controlled aggregation: Review Parser → Review Validator → Data Quality Assessor → Review Aggregator → Rating Calculator → Export Formatter

  **Complex plans:**
  - Full enterprise pipeline: Platform Mapper → Platform Authenticator → Review Scheduler → Rate Limiter → API Review Fetcher → Review Scraper → Review Parser → Data Format Normalizer → Duplicate Detector → Review Validator → Sentiment Analyzer → Data Quality Assessor → Review Aggregator → Rating Calculator → Collection Monitor → Export Formatter
  - Comprehensive analysis workflow: All tools coordinated for large-scale, multi-platform review collection with quality control, deduplication, sentiment analysis, and monitoring

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Platform Authenticator",
    "tool_description": "Authenticates with various review platforms and e-commerce sites to obtain access tokens for API calls and web scraping sessions.",
    "parameters": {
      "platform": {
        "type": "string",
        "required": true,
        "description": "Platform name (amazon, google, yelp, trustpilot, facebook, etc.)"
      },
      "username": {
        "type": "string",
        "required": true,
        "description": "Username or email for platform authentication"
      },
      "password": {
        "type": "string",
        "required": true,
        "description": "Password for platform authentication"
      },
      "api_key": {
        "type": "string",
        "required": false,
        "description": "API key if available for the platform",
        "default": null
      }
    },
    "error_messages": [
      "Invalid credentials: Username or password incorrect for the specified platform.",
      "Platform not supported: The specified platform is not supported by this authenticator.",
      "Authentication failed: Unable to establish authentication with the platform.",
      "Rate limit exceeded: Too many authentication attempts, please wait before retrying."
    ],
    "usage": "Provide platform name and credentials to obtain authentication tokens for subsequent API calls or scraping sessions.",
    "output_details": {
      "auth_token": {
        "type": "string",
        "description": "Authentication token for API access"
      },
      "session_id": {
        "type": "string",
        "description": "Session identifier for web scraping"
      },
      "expires_at": {
        "type": "string",
        "description": "Token expiration time in ISO 8601 format"
      },
      "platform_verified": {
        "type": "string",
        "description": "Confirmed platform name"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Scraper",
    "tool_description": "Scrapes customer reviews from web pages using various extraction patterns and handles dynamic content loading.",
    "parameters": {
      "urls": {
        "type": "array",
        "required": true,
        "description": "List of URLs to scrape reviews from",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "platform": {
        "type": "string",
        "required": true,
        "description": "Platform type for appropriate scraping patterns"
      },
      "session_id": {
        "type": "string",
        "required": false,
        "description": "Session ID from authentication",
        "default": null
      },
      "max_pages": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of pages to scrape per URL (1-50)",
        "default": 5
      },
      "delay_seconds": {
        "type": "number",
        "required": false,
        "description": "Delay between requests in seconds (0.1-10)",
        "default": 1.0
      }
    },
    "error_messages": [
      "URL access denied: Unable to access one or more URLs, check permissions and authentication.",
      "Invalid URL format: One or more URLs are malformed or inaccessible.",
      "Scraping blocked: Website has anti-scraping measures blocking access.",
      "Timeout error: Request timeout exceeded, try reducing max_pages or increasing delay_seconds.",
      "Invalid parameter range: max_pages must be 1-50, delay_seconds must be 0.1-10."
    ],
    "usage": "Provide URLs and platform type to extract reviews using appropriate scraping patterns. Use session_id for authenticated scraping.",
    "output_details": {
      "scraped_reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Raw scraped review data as strings"
      },
      "urls_processed": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Successfully processed URLs"
      },
      "total_reviews_found": {
        "type": "integer",
        "description": "Total number of reviews scraped"
      },
      "scraping_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of errors encountered during scraping"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "API Review Fetcher",
    "tool_description": "Fetches customer reviews from platform APIs with proper pagination, filtering, and rate limiting support.",
    "parameters": {
      "platform": {
        "type": "string",
        "required": true,
        "description": "Platform API to query (amazon, google, yelp, etc.)"
      },
      "auth_token": {
        "type": "string",
        "required": true,
        "description": "Authentication token for API access"
      },
      "product_id": {
        "type": "string",
        "required": true,
        "description": "Product or business identifier"
      },
      "limit": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of reviews to fetch (1-1000)",
        "default": 100
      },
      "offset": {
        "type": "integer",
        "required": false,
        "description": "Starting offset for pagination",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid authentication token: Token is expired or invalid for the specified platform.",
      "Product not found: The specified product_id does not exist on the platform.",
      "API rate limit exceeded: Too many requests made to the platform API.",
      "Invalid limit value: limit must be between 1 and 1000.",
      "API service unavailable: The platform API is temporarily unavailable."
    ],
    "usage": "Provide platform, auth_token, and product_id to fetch reviews via official APIs. Use limit and offset for pagination.",
    "output_details": {
      "reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "JSON-formatted review data from API"
      },
      "total_available": {
        "type": "integer",
        "description": "Total number of reviews available for the product"
      },
      "fetched_count": {
        "type": "integer",
        "description": "Number of reviews actually fetched"
      },
      "next_offset": {
        "type": "integer",
        "description": "Offset for next pagination request"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Parser",
    "tool_description": "Parses raw review text and extracts structured fields like rating, title, content, author, and date.",
    "parameters": {
      "raw_reviews": {
        "type": "array",
        "required": true,
        "description": "Array of raw review strings to parse",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "source_platform": {
        "type": "string",
        "required": true,
        "description": "Source platform for parsing context"
      },
      "extract_features": {
        "type": "array",
        "required": false,
        "description": "Specific features to extract",
        "items": {"type": "string"},
        "default": ["rating", "title", "content", "author", "date"]
      }
    },
    "error_messages": [
      "Invalid review format: One or more reviews are in an unrecognizable format.",
      "Parsing failed: Unable to extract required fields from review text.",
      "Unsupported platform: Parser does not support the specified platform format.",
      "Empty reviews array: At least one review must be provided for parsing."
    ],
    "usage": "Provide raw review data and source platform to extract structured fields. Optionally specify which features to extract.",
    "output_details": {
      "parsed_reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Structured review data in JSON format"
      },
      "parsing_success_rate": {
        "type": "number",
        "description": "Percentage of successfully parsed reviews"
      },
      "extracted_fields": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of fields successfully extracted"
      },
      "parsing_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Details of any parsing failures"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Data Format Normalizer",
    "tool_description": "Normalizes review data from different platforms into a standardized format with consistent field names, data types, and value ranges.",
    "parameters": {
      "review_data": {
        "type": "array",
        "required": true,
        "description": "Array of structured review data to normalize",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5000
      },
      "source_platforms": {
        "type": "array",
        "required": true,
        "description": "List of source platforms for the review data",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "target_schema": {
        "type": "string",
        "required": false,
        "description": "Target schema version (v1, v2, custom)",
        "default": "v1"
      },
      "normalize_ratings": {
        "type": "boolean",
        "required": false,
        "description": "Whether to normalize rating scales to 1-5",
        "default": true
      },
      "standardize_dates": {
        "type": "boolean",
        "required": false,
        "description": "Whether to convert dates to ISO 8601 format",
        "default": true
      },
      "clean_text": {
        "type": "boolean",
        "required": false,
        "description": "Whether to clean and standardize review text",
        "default": true
      },
      "remove_html": {
        "type": "boolean",
        "required": false,
        "description": "Whether to strip HTML tags from content",
        "default": true
      },
      "language_detection": {
        "type": "boolean",
        "required": false,
        "description": "Whether to detect and tag review language",
        "default": false
      },
      "currency_normalization": {
        "type": "string",
        "required": false,
        "description": "Target currency for price normalization (USD, EUR, etc.)",
        "default": null
      },
      "timezone": {
        "type": "string",
        "required": false,
        "description": "Target timezone for date normalization",
        "default": "UTC"
      }
    },
    "error_messages": [
      "Incompatible data format: Review data format is incompatible with normalization process.",
      "Unsupported platform: One or more source platforms are not supported for normalization.",
      "Schema validation failed: Data does not conform to the target schema requirements.",
      "Currency conversion failed: Unable to normalize currencies, check currency_normalization parameter.",
      "Date parsing error: Unable to parse and standardize date formats.",
      "Invalid timezone: Specified timezone is not recognized."
    ],
    "usage": "Provide review data and source platforms to normalize into a standardized format. Configure normalization options as needed.",
    "output_details": {
      "normalized_reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Normalized review data in JSON format"
      },
      "normalization_stats": {
        "type": "string",
        "description": "Statistics about the normalization process"
      },
      "field_mappings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Mapping of original to normalized field names"
      },
      "validation_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of validation errors encountered"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Duplicate Detector",
    "tool_description": "Identifies and flags duplicate or near-duplicate reviews across platforms using various similarity metrics and clustering algorithms.",
    "parameters": {
      "reviews": {
        "type": "array",
        "required": true,
        "description": "Array of normalized review data",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10000
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Similarity threshold for duplicate detection (0.0-1.0)",
        "default": 0.85
      },
      "detection_method": {
        "type": "string",
        "required": false,
        "description": "Detection method (exact, fuzzy, semantic, hybrid)",
        "default": "hybrid"
      }
    },
    "error_messages": [
      "Invalid similarity threshold: Threshold must be between 0.0 and 1.0.",
      "Unsupported detection method: Use exact, fuzzy, semantic, or hybrid.",
      "Insufficient data: Need at least 2 reviews for duplicate detection.",
      "Processing error: Unable to process review data for duplicate detection."
    ],
    "usage": "Provide normalized review data to identify duplicates using specified similarity threshold and detection method.",
    "output_details": {
      "duplicate_groups": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Groups of duplicate review IDs"
      },
      "unique_reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of unique review IDs"
      },
      "duplicate_count": {
        "type": "integer",
        "description": "Total number of duplicate reviews found"
      },
      "similarity_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Similarity scores for detected duplicates"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Validator",
    "tool_description": "Validates review authenticity and quality using multiple criteria including spam detection, fake review identification, and content quality assessment.",
    "parameters": {
      "reviews": {
        "type": "array",
        "required": true,
        "description": "Array of review data to validate",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5000
      },
      "check_spam": {
        "type": "boolean",
        "required": false,
        "description": "Enable spam detection",
        "default": true
      },
      "check_fake": {
        "type": "boolean",
        "required": false,
        "description": "Enable fake review detection",
        "default": true
      },
      "min_content_length": {
        "type": "integer",
        "required": false,
        "description": "Minimum content length for valid reviews",
        "default": 10
      },
      "language_filter": {
        "type": "array",
        "required": false,
        "description": "Accepted languages for reviews",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Invalid review format: Reviews must be in proper JSON format.",
      "Validation service unavailable: External validation services are temporarily unavailable.",
      "Invalid language code: One or more language codes in language_filter are invalid.",
      "Processing timeout: Validation taking too long, try reducing batch size."
    ],
    "usage": "Provide review data and configure validation criteria to assess review authenticity and quality.",
    "output_details": {
      "validated_reviews": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Review data with validation scores and flags"
      },
      "spam_detected": {
        "type": "integer",
        "description": "Number of reviews flagged as spam"
      },
      "fake_detected": {
        "type": "integer",
        "description": "Number of reviews flagged as potentially fake"
      },
      "validation_summary": {
        "type": "string",
        "description": "Summary of validation results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sentiment Analyzer",
    "tool_description": "Analyzes sentiment, emotion, and key themes in review content using natural language processing techniques.",
    "parameters": {
      "review_texts": {
        "type": "array",
        "required": true,
        "description": "Array of review text content to analyze",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "sentiment_model": {
        "type": "string",
        "required": false,
        "description": "Sentiment analysis model (basic, advanced, domain-specific)",
        "default": "advanced"
      },
      "extract_emotions": {
        "type": "boolean",
        "required": false,
        "description": "Whether to extract emotional categories",
        "default": false
      }
    },
    "error_messages": [
      "Empty text content: Review texts cannot be empty or null.",
      "Unsupported model: Specified sentiment model is not available.",
      "Analysis failed: Unable to process text content for sentiment analysis.",
      "Language not supported: Text language is not supported by the sentiment model."
    ],
    "usage": "Provide review text content to analyze sentiment and emotions using specified model configuration.",
    "output_details": {
      "sentiment_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Sentiment scores (-1.0 to 1.0) for each review"
      },
      "sentiment_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Sentiment labels (positive, negative, neutral)"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for sentiment predictions"
      },
      "emotion_tags": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detected emotional categories if enabled"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Review Aggregator",
    "tool_description": "Aggregates validated reviews into comprehensive statistics, metrics, and insights for business intelligence and reporting purposes.",
    "parameters": {
      "validated_reviews": {
        "type": "array",
        "required": true,
        "description": "Array of validated review data with quality scores",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50000
      },
      "grouping_fields": {
        "type": "array",
        "required": false,
        "description": "Fields to group aggregations by (platform, date, rating, category)",
        "items": {"type": "string"},
        "default": ["platform", "rating"]
      },
      "time_period": {
        "type": "string",
        "required": false,
        "description": "Time period for temporal aggregations (daily, weekly, monthly, yearly)",
        "default": "monthly"
      },
      "include_trends": {
        "type": "boolean",
        "required": false,
        "description": "Whether to calculate trend analysis",
        "default": true
      },
      "min_review_threshold": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of reviews required for meaningful aggregation",
        "default": 5
      },
      "weight_by_recency": {
        "type": "boolean",
        "required": false,
        "description": "Whether to weight recent reviews more heavily",
        "default": false
      },
      "exclude_outliers": {
        "type": "boolean",
        "required": false,
        "description": "Whether to exclude statistical outliers from aggregations",
        "default": false
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Statistical confidence level for calculations (0.90, 0.95, 0.99)",
        "default": 0.95
      }
    },
    "error_messages": [
      "Insufficient data: Not enough reviews meet the minimum threshold for aggregation.",
      "Invalid grouping fields: One or more grouping fields are not supported.",
      "Invalid time period: Time period must be daily, weekly, monthly, or yearly.",
      "Invalid confidence level: Confidence level must be 0.90, 0.95, or 0.99.",
      "Data processing error: Unable to process review data for aggregation."
    ],
    "usage": "Provide validated review data and configure aggregation parameters to generate comprehensive review statistics and insights.",
    "output_details": {
      "aggregation_summary": {
        "type": "string",
        "description": "Overall summary of aggregation results"
      },
      "total_reviews": {
        "type": "integer",
        "description": "Total number of reviews processed"
      },
      "average_rating": {
        "type": "number",
        "description": "Overall average rating across all reviews"
      },
      "rating_distribution": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Distribution of ratings (1-5 stars)"
      },
      "platform_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Review statistics broken down by platform"
      },
      "trend_analysis": {
        "type": "string",
        "description": "Trend analysis results if enabled"
      },
      "time_series_data": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Time-series aggregation data"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Rating Calculator",
    "tool_description": "Calculates weighted ratings, confidence intervals, and statistical measures from aggregated review data with customizable weighting schemes.",
    "parameters": {
      "review_scores": {
        "type": "array",
        "required": true,
        "description": "Array of individual review ratings",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 100000
      },
      "weighting_scheme": {
        "type": "string",
        "required": false,
        "description": "Weighting method (equal, recency, helpfulness, verified, bayesian)",
        "default": "equal"
      },
      "confidence_interval": {
        "type": "number",
        "required": false,
        "description": "Confidence interval level (0.90, 0.95, 0.99)",
        "default": 0.95
      }
    },
    "error_messages": [
      "Invalid rating values: All ratings must be numeric values between 1 and 5.",
      "Unsupported weighting scheme: Use equal, recency, helpfulness, verified, or bayesian.",
      "Invalid confidence interval: Must be 0.90, 0.95, or 0.99.",
      "Insufficient data: Need at least 3 ratings for statistical calculations."
    ],
    "usage": "Provide review scores and configure weighting scheme to calculate comprehensive rating statistics with confidence measures.",
    "output_details": {
      "weighted_average": {
        "type": "number",
        "description": "Weighted average rating"
      },
      "confidence_lower": {
        "type": "number",
        "description": "Lower bound of confidence interval"
      },
      "confidence_upper": {
        "type": "number",
        "description": "Upper bound of confidence interval"
      },
      "standard_deviation": {
        "type": "number",
        "description": "Standard deviation of ratings"
      },
      "sample_size": {
        "type": "integer",
        "description": "Number of ratings used in calculation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Platform Mapper",
    "tool_description": "Maps and configures platform-specific settings, API endpoints, authentication methods, and data extraction patterns for different review sources.",
    "parameters": {
      "platforms": {
        "type": "array",
        "required": true,
        "description": "List of platforms to map and configure",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "include_api_configs": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include API configuration details",
        "default": true
      },
      "include_scraping_patterns": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include web scraping patterns",
        "default": false
      },
      "region": {
        "type": "string",
        "required": false,
        "description": "Geographic region for platform configurations (US, EU, APAC, Global)",
        "default": "Global"
      },
      "update_cache": {
        "type": "boolean",
        "required": false,
        "description": "Whether to update platform configuration cache",
        "default": false
      }
    },
    "error_messages": [
      "Unsupported platform: One or more platforms are not supported or recognized.",
      "Invalid region: Region must be US, EU, APAC, or Global.",
      "Configuration unavailable: Platform configuration is temporarily unavailable.",
      "Cache update failed: Unable to update platform configuration cache."
    ],
    "usage": "Provide platform names to retrieve configuration details, API endpoints, and extraction patterns for review collection setup.",
    "output_details": {
      "platform_configs": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Platform-specific configuration details in JSON format"
      },
      "supported_platforms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of fully supported platforms"
      },
      "api_endpoints": {
        "type": "array",
        "items": {"type": "string"},
        "description": "API endpoints for each platform"
      },
      "rate_limits": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Rate limiting information for each platform"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Data Quality Assessor",
    "tool_description": "Assesses the quality of collected review data using multiple quality dimensions including completeness, accuracy, consistency, and freshness.",
    "parameters": {
      "review_dataset": {
        "type": "array",
        "required": true,
        "description": "Review dataset to assess for quality",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20000
      },
      "quality_dimensions": {
        "type": "array",
        "required": false,
        "description": "Quality dimensions to assess",
        "items": {"type": "string"},
        "default": ["completeness", "accuracy", "consistency", "freshness"]
      },
      "completeness_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum completeness score (0.0-1.0)",
        "default": 0.8
      },
      "freshness_days": {
        "type": "integer",
        "required": false,
        "description": "Maximum age in days for fresh reviews",
        "default": 90
      }
    },
    "error_messages": [
      "Invalid quality dimensions: Use completeness, accuracy, consistency, freshness, validity.",
      "Invalid threshold values: Thresholds must be between 0.0 and 1.0.",
      "Dataset format error: Review dataset format is invalid or corrupted.",
      "Assessment failed: Unable to complete quality assessment on provided data."
    ],
    "usage": "Provide review dataset and configure quality criteria to assess data quality across multiple dimensions.",
    "output_details": {
      "overall_quality_score": {
