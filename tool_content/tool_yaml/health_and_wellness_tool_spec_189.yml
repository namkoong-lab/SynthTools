field_name: health_and_wellness
subfield: Electronic Health Records Management
task: Medical history documentation and clinical note recording
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves creating, managing, and maintaining accurate medical documentation with strict compliance requirements, patient privacy concerns, and potential life-or-death implications of errors. The scope includes multiple clinical workflows, complex medical terminology validation, integration with various healthcare systems, and adherence to regulations like HIPAA. **Difficulty: Hard**

  ## STEP 2 — Set a tool budget

  Given the hard difficulty rating due to regulatory compliance, patient safety concerns, complex medical workflows, and integration requirements, I'm targeting **18 tools** within the 15-20 range for hard tasks.

  ## STEP 3 — List all tool names and dependencies

  **Tools with upstream dependencies and downstream affordances:**

  1. **Patient Identity Validator** - Consumes: patient identifiers → Produces: verified patient records
  2. **Medical Code Validator** - Consumes: medical codes → Produces: validated diagnostic/procedure codes
  3. **Clinical Note Creator** - Consumes: patient data, clinical observations → Produces: structured clinical notes
  4. **Medical History Compiler** - Consumes: historical records, new entries → Produces: comprehensive medical timeline
  5. **Symptom Documentation Tool** - Consumes: symptom descriptions → Produces: standardized symptom records
  6. **Medication Record Manager** - Consumes: medication data → Produces: medication history entries
  7. **Vital Signs Recorder** - Consumes: vital sign measurements → Produces: structured vital records
  8. **Allergy Tracker** - Consumes: allergy information → Produces: allergy documentation
  9. **Lab Result Integrator** - Consumes: laboratory data → Produces: formatted lab records
  10. **Procedure Documentation** - Consumes: procedure details → Produces: procedure records
  11. **Clinical Decision Tracker** - Consumes: decision rationale → Produces: decision documentation
  12. **Care Plan Generator** - Consumes: assessment data → Produces: treatment plans
  13. **Progress Note Writer** - Consumes: patient status updates → Produces: progress documentation
  14. **Discharge Summary Creator** - Consumes: stay information → Produces: discharge summaries
  15. **Clinical Alert Manager** - Consumes: patient conditions → Produces: alert notifications
  16. **Medical Record Auditor** - Consumes: clinical records → Produces: compliance reports
  17. **Template Customizer** - Consumes: template requirements → Produces: customized forms
  18. **Record Version Controller** - Consumes: record changes → Produces: versioned documentation

  ## STEP 4 — Multi-tool plans

  **Simple plans:**
  - Basic documentation: Patient Identity Validator → Clinical Note Creator → Record Version Controller
  - Symptom tracking: Symptom Documentation Tool → Medical Code Validator → Medical History Compiler

  **Medium plans:**
  - Comprehensive visit: Patient Identity Validator → Vital Signs Recorder → Symptom Documentation Tool → Clinical Note Creator → Progress Note Writer → Record Version Controller
  - Medication review: Patient Identity Validator → Medication Record Manager → Allergy Tracker → Clinical Decision Tracker → Care Plan Generator

  **Complex plans:**
  - Complete patient workup: Patient Identity Validator → Medical History Compiler → Vital Signs Recorder → Symptom Documentation Tool → Lab Result Integrator → Medical Code Validator → Clinical Note Creator → Clinical Decision Tracker → Care Plan Generator → Record Version Controller → Medical Record Auditor
  - Hospital discharge workflow: Patient Identity Validator → Medical History Compiler → Procedure Documentation → Progress Note Writer → Care Plan Generator → Discharge Summary Creator → Clinical Alert Manager → Record Version Controller → Medical Record Auditor

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Patient Identity Validator",
    "tool_description": "Validates and retrieves patient identity information using multiple identifiers to ensure accurate record matching and prevent medical errors.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Primary patient identifier or medical record number"
      },
      "first_name": {
        "type": "string",
        "required": true,
        "description": "Patient's legal first name"
      },
      "last_name": {
        "type": "string",
        "required": true,
        "description": "Patient's legal last name"
      },
      "date_of_birth": {
        "type": "string",
        "required": true,
        "description": "Patient's date of birth in YYYY-MM-DD format",
        "format": "date-time"
      },
      "ssn_last_four": {
        "type": "string",
        "required": false,
        "description": "Last four digits of Social Security Number for additional verification",
        "default": "None"
      }
    },
    "error_messages": [
      "Patient not found: No patient record matches the provided identifiers. Verify patient_id, name spelling, and date_of_birth.",
      "Multiple matches found: Provided identifiers match multiple patients. Include ssn_last_four for disambiguation.",
      "Invalid date format: date_of_birth must be in YYYY-MM-DD format.",
      "Missing required fields: patient_id, first_name, last_name, and date_of_birth are mandatory.",
      "SSN format error: ssn_last_four must be exactly 4 digits when provided."
    ],
    "usage": "Provide patient_id, first_name, last_name, and date_of_birth. Optionally include ssn_last_four for additional verification when dealing with common names.",
    "output_details": {
      "verified_patient_id": {
        "type": "string",
        "description": "Confirmed patient identifier"
      },
      "full_name": {
        "type": "string",
        "description": "Patient's complete legal name"
      },
      "verified_dob": {
        "type": "string",
        "description": "Confirmed date of birth"
      },
      "active_status": {
        "type": "boolean",
        "description": "Whether patient record is currently active"
      },
      "last_visit_date": {
        "type": "string",
        "description": "Date of most recent medical encounter"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medical Code Validator",
    "tool_description": "Validates medical diagnosis, procedure, and billing codes against current standard code sets including ICD-10, CPT, and HCPCS.",
    "parameters": {
      "code": {
        "type": "string",
        "required": true,
        "description": "Medical code to validate"
      },
      "code_system": {
        "type": "string",
        "required": true,
        "description": "Code system: ICD-10-CM, ICD-10-PCS, CPT, HCPCS, SNOMED-CT"
      },
      "effective_date": {
        "type": "string",
        "required": false,
        "description": "Date for code validity check in YYYY-MM-DD format",
        "format": "date-time",
        "default": "current date"
      }
    },
    "error_messages": [
      "Invalid code: The provided code does not exist in the specified code system. Verify code format and spelling.",
      "Unsupported code system: Use one of [ICD-10-CM, ICD-10-PCS, CPT, HCPCS, SNOMED-CT].",
      "Code deprecated: This code is no longer valid as of the effective date. Use current replacement code.",
      "Invalid date format: effective_date must be in YYYY-MM-DD format.",
      "Code format error: Code format does not match the expected pattern for the specified code system."
    ],
    "usage": "Provide the medical code and specify the code_system. Optionally set effective_date to check historical validity.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the code is valid in the specified system"
      },
      "code_description": {
        "type": "string",
        "description": "Official description of the medical code"
      },
      "code_category": {
        "type": "string",
        "description": "Category or chapter the code belongs to"
      },
      "billable": {
        "type": "boolean",
        "description": "Whether this code is billable for insurance purposes"
      },
      "replacement_code": {
        "type": "string",
        "description": "Current replacement code if original is deprecated"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clinical Note Creator",
    "tool_description": "Creates structured clinical notes using standard medical documentation formats with templates for different note types and automatic timestamp recording.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Patient identifier for the clinical note"
      },
      "provider_id": {
        "type": "string",
        "required": true,
        "description": "Healthcare provider creating the note"
      },
      "note_type": {
        "type": "string",
        "required": true,
        "description": "Type of clinical note: SOAP, H&P, Progress, Consultation, Discharge"
      },
      "chief_complaint": {
        "type": "string",
        "required": true,
        "description": "Primary reason for the patient encounter"
      },
      "subjective_findings": {
        "type": "string",
        "required": true,
        "description": "Patient's reported symptoms and history"
      },
      "objective_findings": {
        "type": "string",
        "required": true,
        "description": "Physical examination findings and objective data"
      },
      "assessment": {
        "type": "string",
        "required": true,
        "description": "Clinical assessment and differential diagnosis"
      },
      "plan": {
        "type": "string",
        "required": true,
        "description": "Treatment plan and follow-up instructions"
      },
      "encounter_date": {
        "type": "string",
        "required": true,
        "description": "Date and time of the clinical encounter",
        "format": "date-time"
      },
      "service_location": {
        "type": "string",
        "required": false,
        "description": "Location where service was provided",
        "default": "None"
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Priority level: Routine, Urgent, Emergent",
        "default": "Routine"
      }
    },
    "error_messages": [
      "Invalid note type: Use one of [SOAP, H&P, Progress, Consultation, Discharge].",
      "Missing required content: All clinical sections (chief_complaint, subjective_findings, objective_findings, assessment, plan) must be provided.",
      "Invalid encounter date: encounter_date must be in valid ISO 8601 format and cannot be future-dated.",
      "Invalid priority level: Use one of [Routine, Urgent, Emergent].",
      "Content length error: Clinical sections must contain meaningful content (minimum 10 characters each).",
      "Patient ID not found: Provided patient_id does not exist in the system.",
      "Provider authorization error: provider_id is not authorized to create clinical notes."
    ],
    "usage": "Provide all required clinical documentation fields including patient_id, provider_id, note_type, and the four main clinical sections. Optionally specify service_location and priority_level.",
    "output_details": {
      "note_id": {
        "type": "string",
        "description": "Unique identifier for the created clinical note"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "When the note was created in the system"
      },
      "formatted_note": {
        "type": "string",
        "description": "Complete formatted clinical note text"
      },
      "word_count": {
        "type": "integer",
        "description": "Total word count of the clinical note"
      },
      "template_used": {
        "type": "string",
        "description": "Name of the documentation template applied"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medical History Compiler",
    "tool_description": "Compiles comprehensive patient medical history from multiple sources, organizing chronologically with timeline visualization and highlighting significant events.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Patient identifier for history compilation"
      },
      "include_conditions": {
        "type": "boolean",
        "required": false,
        "description": "Include diagnosed medical conditions",
        "default": true
      },
      "include_medications": {
        "type": "boolean",
        "required": false,
        "description": "Include medication history",
        "default": true
      },
      "include_procedures": {
        "type": "boolean",
        "required": false,
        "description": "Include surgical and medical procedures",
        "default": true
      },
      "include_allergies": {
        "type": "boolean",
        "required": false,
        "description": "Include allergy and adverse reaction history",
        "default": true
      },
      "include_lab_results": {
        "type": "boolean",
        "required": false,
        "description": "Include significant laboratory results",
        "default": false
      },
      "date_range_start": {
        "type": "string",
        "required": false,
        "description": "Start date for history compilation in YYYY-MM-DD format",
        "format": "date-time",
        "default": "None"
      },
      "date_range_end": {
        "type": "string",
        "required": false,
        "description": "End date for history compilation in YYYY-MM-DD format",
        "format": "date-time",
        "default": "current date"
      }
    },
    "error_messages": [
      "Patient not found: patient_id does not exist in the medical record system.",
      "Invalid date range: date_range_start must be earlier than date_range_end.",
      "Date format error: Dates must be in YYYY-MM-DD format.",
      "No data available: No medical history found for the specified patient and date range.",
      "Access denied: Insufficient privileges to access complete medical history for this patient.",
      "Date range too broad: Maximum allowed date range is 10 years. Narrow the search parameters."
    ],
    "usage": "Provide patient_id and select which types of medical information to include. Optionally specify date_range_start and date_range_end to focus on specific time periods.",
    "output_details": {
      "patient_summary": {
        "type": "string",
        "description": "Brief summary of patient's medical history"
      },
      "chronological_events": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of medical events in chronological order"
      },
      "active_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Currently active medical conditions"
      },
      "significant_events": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Highlighted significant medical events"
      },
      "compilation_date": {
        "type": "string",
        "description": "Date when history was compiled"
      },
      "total_events": {
        "type": "integer",
        "description": "Total number of medical events found"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Symptom Documentation Tool",
    "tool_description": "Standardizes symptom documentation using clinical terminology, severity scales, and temporal patterns for consistent medical record keeping.",
    "parameters": {
      "symptom_description": {
        "type": "string",
        "required": true,
        "description": "Patient's description of the symptom"
      },
      "severity_score": {
        "type": "integer",
        "required": true,
        "description": "Symptom severity on 1-10 scale where 1 is mild and 10 is severe"
      },
      "onset_date": {
        "type": "string",
        "required": true,
        "description": "When the symptom first appeared",
        "format": "date-time"
      },
      "duration_pattern": {
        "type": "string",
        "required": true,
        "description": "Duration pattern: Acute, Chronic, Intermittent, Progressive, Episodic"
      },
      "associated_symptoms": {
        "type": "array",
        "required": false,
        "description": "List of related symptoms",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "aggravating_factors": {
        "type": "array",
        "required": false,
        "description": "Factors that worsen the symptom",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "relieving_factors": {
        "type": "array",
        "required": false,
        "description": "Factors that improve the symptom",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "error_messages": [
      "Invalid severity score: severity_score must be an integer between 1 and 10.",
      "Invalid duration pattern: Use one of [Acute, Chronic, Intermittent, Progressive, Episodic].",
      "Invalid onset date: onset_date must be in valid ISO 8601 format and cannot be future-dated.",
      "Missing symptom description: symptom_description must contain meaningful text (minimum 5 characters).",
      "Array limit exceeded: associated_symptoms, aggravating_factors, and relieving_factors cannot exceed 20 items each."
    ],
    "usage": "Provide symptom_description, severity_score (1-10), onset_date, and duration_pattern. Optionally add associated_symptoms, aggravating_factors, and relieving_factors as arrays.",
    "output_details": {
      "standardized_symptom": {
        "type": "string",
        "description": "Symptom description using standardized medical terminology"
      },
      "clinical_severity": {
        "type": "string",
        "description": "Clinical severity classification (Mild, Moderate, Severe)"
      },
      "symptom_duration": {
        "type": "string",
        "description": "Calculated duration from onset to current date"
      },
      "documentation_summary": {
        "type": "string",
        "description": "Complete symptom documentation summary"
      },
      "recommended_followup": {
        "type": "string",
        "description": "Suggested follow-up based on symptom characteristics"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medication Record Manager",
    "tool_description": "Manages comprehensive medication records including current prescriptions, dosages, adherence tracking, and interaction checking.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Patient identifier for medication record"
      },
      "medication_name": {
        "type": "string",
        "required": true,
        "description": "Generic or brand name of the medication"
      },
      "dosage": {
        "type": "string",
        "required": true,
        "description": "Medication dosage including strength and unit"
      },
      "frequency": {
        "type": "string",
        "required": true,
        "description": "How often medication is taken (e.g., BID, TID, QID, Daily, PRN)"
      },
      "route": {
        "type": "string",
        "required": true,
        "description": "Route of administration: Oral, IV, IM, Topical, Sublingual, Inhalation"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Date medication was started",
        "format": "date-time"
      },
      "prescribing_provider": {
        "type": "string",
        "required": true,
        "description": "Provider who prescribed the medication"
      },
      "indication": {
        "type": "string",
        "required": true,
        "description": "Medical condition or reason for the medication"
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "Date medication was discontinued",
        "format": "date-time",
        "default": "None"
      },
      "adherence_status": {
        "type": "string",
        "required": false,
        "description": "Patient adherence: Excellent, Good, Fair, Poor, Unknown",
        "default": "Unknown"
      },
      "side_effects": {
        "type": "array",
        "required": false,
        "description": "Reported side effects or adverse reactions",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "error_messages": [
      "Patient not found: patient_id does not exist in the system.",
      "Invalid route: Use one of [Oral, IV, IM, Topical, Sublingual, Inhalation].",
      "Invalid adherence status: Use one of [Excellent, Good, Fair, Poor, Unknown].",
      "Invalid date format: start_date and end_date must be in ISO 8601 format.",
      "Date logic error: end_date cannot be earlier than start_date.",
      "Missing required fields: All required medication information must be provided.",
      "Medication not recognized: medication_name may contain spelling errors or be invalid."
    ],
    "usage": "Provide complete medication information including patient_id, medication_name, dosage, frequency, route, start_date, prescribing_provider, and indication. Optionally add end_date, adherence_status, and side_effects.",
    "output_details": {
      "medication_id": {
        "type": "string",
        "description": "Unique identifier for this medication record"
      },
      "active_status": {
        "type": "boolean",
        "description": "Whether medication is currently active"
      },
      "interaction_warnings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Drug interaction warnings with other patient medications"
      },
      "allergy_alerts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Alerts for known patient allergies to this medication"
      },
      "duration_days": {
        "type": "integer",
        "description": "Number of days medication has been prescribed"
      },
      "record_created": {
        "type": "string",
        "description": "Timestamp when medication record was created"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vital Signs Recorder",
    "tool_description": "Records and validates vital sign measurements with automatic flagging of abnormal values and trend analysis.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Patient identifier for vital signs"
      },
      "measurement_datetime": {
        "type": "string",
        "required": true,
        "description": "Date and time when vital signs were taken",
        "format": "date-time"
      },
      "systolic_bp": {
        "type": "integer",
        "required": false,
        "description": "Systolic blood pressure in mmHg",
        "default": "None"
      },
      "diastolic_bp": {
        "type": "integer",
        "required": false,
        "description": "Diastolic blood pressure in mmHg",
        "default": "None"
      },
      "heart_rate": {
        "type": "integer",
        "required": false,
        "description": "Heart rate in beats per minute",
        "default": "None"
      },
      "temperature": {
        "type": "number",
        "required": false,
        "description": "Body temperature in degrees Fahrenheit",
        "default": "None"
      },
      "respiratory_rate": {
        "type": "integer",
        "required": false,
        "description": "Respiratory rate in breaths per minute",
        "default": "None"
      },
      "oxygen_saturation": {
        "type": "integer",
        "required": false,
        "description": "Oxygen saturation percentage",
        "default": "None"
      },
      "height_inches": {
        "type": "number",
        "required": false,
        "description": "Patient height in inches",
        "default": "None"
      },
      "weight_pounds": {
        "type": "number",
        "required": false,
        "description": "Patient weight in pounds",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid vital sign ranges: Ensure values are within physiologically reasonable ranges (BP: 60-250 mmHg, HR: 30-220 bpm, Temp: 90-110°F, RR: 5-60 bpm, O2Sat: 70-100%).",
      "Patient not found: patient_id does not exist in the system.",
      "Invalid datetime: measurement_datetime must be in valid ISO 8601 format and cannot be future-dated.",
      "Missing vital signs: At least one vital sign measurement must be provided.",
      "Blood pressure incomplete: If providing blood pressure, both systolic_bp and diastolic_bp are required.",
      "Inconsistent measurements: Systolic BP must be higher than diastolic BP."
    ],
    "usage": "Provide patient_id and measurement_datetime, then include any combination of vital sign measurements. Blood pressure requires both systolic and diastolic values.",
    "output_details": {
      "vital_signs_id": {
        "type": "string",
        "description": "Unique identifier for this vital signs record"
      },
      "abnormal_flags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of vital signs that are outside normal ranges"
      },
      "calculated_bmi": {
        "type": "number",
        "description": "Body Mass Index if height and weight provided"
      },
      "bp_category": {
        "type": "string",
        "description": "Blood pressure category classification"
      },
      "trend_comparison": {
        "type": "string",
        "description": "Comparison with previous vital signs if available"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Allergy Tracker",
    "tool_description": "Documents and manages patient allergy information including allergens, reaction types, severity levels, and clinical management recommendations.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Patient identifier for allergy record"
      },
      "allergen": {
        "type": "string",
        "required": true,
        "description": "Name of the allergen (medication, food, environmental)"
      },
      "reaction_type": {
        "type": "string",
        "required": true,
        "description": "Type of allergic reaction: Rash, Hives, Swelling, Respiratory, Anaphylaxis, GI, Other"
      },
      "severity": {
        "type": "string",
        "required": true,
        "description": "Reaction severity: Mild, Moderate, Severe, Life-threatening"
      },
      "onset_date": {
        "type": "string",
        "required": false,
        "description": "Date when allergy was first identified",
        "format": "date-time",
        "default": "None"
      },
      "reaction_description": {
        "type": "string",
        "required": false,
        "description": "Detailed description of the allergic reaction",
        "default": "None"
      }
    },
    "error_messages": [
      "Patient not found: patient_id does not exist in the system.",
      "Invalid reaction type: Use one of [Rash, Hives, Swelling, Respiratory, Anaphylaxis, GI, Other].",
      "Invalid severity level: Use one of [Mild, Moderate, Severe, Life-threatening].",
      "Invalid onset date: onset_date must be in valid ISO 8601 format and cannot be future-dated.",
      "Missing allergen: allergen field must contain meaningful text (minimum 2 characters).",
      "Duplicate allergy: This allergen is already documented for this patient."
    ],
    "usage": "Provide patient_id, allergen name, reaction_type, and severity level. Optionally include onset_date and detailed reaction_description for comprehensive documentation.",
    "output_details": {
      "allergy_id": {
        "type": "string",
        "description": "Unique identifier for this allergy record"
      },
      "alert_level": {
        "type": "string",
        "description": "Clinical alert level based on severity"
      },
      "cross_sensitivities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Related allergens that may cause similar reactions"
      },
      "avoidance_recommendations": {
        "type": "string",
        "description": "Clinical recommendations for allergen avoidance"
      },
      "emergency_treatment": {
        "type": "string",
        "description": "Emergency treatment protocol if exposure occurs"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Lab Result Integrator",
    "tool_description": "Integrates laboratory results into patient records with reference range comparison, trend analysis, and clinical significance flagging.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Patient identifier for lab results"
      },
      "test_name": {
        "type": "string",
        "required": true,
        "description": "Name of the laboratory test performed"
      },
      "result_value": {
        "type": "string",
        "required": true,
        "description": "Numeric result value or qualitative result"
      },
      "reference_range": {
        "type": "string",
        "required": true,
        "description": "Normal reference range for the test"
      },
      "units": {
        "type": "string",
        "required": true,
        "description": "Units of measurement for the result"
      },
      "collection_datetime": {
        "type": "string",
        "required": true,
        "description": "Date and time specimen was collected",
        "format": "date-time"
      },
      "ordering_provider": {
        "type": "string",
        "required": true,
        "description": "Provider who ordered the laboratory test"
      },
      "lab_facility": {
        "type": "string",
        "required": false,
        "description": "Laboratory facility that performed the test",
        "default": "None"
      },
      "critical_value": {
        "type": "boolean",
        "required": false,
        "description": "Whether result is a critical/panic value requiring immediate attention",
        "default": false
      }
    },
    "error_messages": [
      "Patient not found: patient_id does not exist in the system.",
      "Invalid collection datetime: collection_datetime must be in valid ISO 8601 format and cannot be future-dated.",
      "Missing required fields: test_name, result_value, reference_range, units, and ordering_provider are mandatory.",
      "Provider not
