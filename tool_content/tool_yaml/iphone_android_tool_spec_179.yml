field_name: iphone_android
subfield: Mobile Application Development and Testing
task: Mobile app user interface design and prototyping
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves medium complexity due to the need to coordinate multiple design phases (wireframing, prototyping, user testing), handle diverse device specifications and platform requirements, and manage iterative feedback loops. The scope includes visual design, interaction patterns, accessibility considerations, and cross-platform compatibility testing.

  **STEP 2 — Set a tool budget**

  Given the medium complexity, I'll target 12 tools to cover the various aspects of UI design and prototyping workflows, from initial concept to final prototype validation.

  **STEP 3 — List all tool names and dependencies**

  1. **Device Specification Analyzer** - Consumes: device models, platform types → Produces: screen dimensions, OS constraints
  2. **Wireframe Generator** - Consumes: app requirements, target devices → Produces: wireframe layouts
  3. **Design System Creator** - Consumes: brand guidelines, platform standards → Produces: design tokens, component library
  4. **Screen Layout Designer** - Consumes: wireframes, design system → Produces: high-fidelity screen designs
  5. **Interaction Pattern Builder** - Consumes: screen designs, user flows → Produces: interaction specifications
  6. **Prototype Assembler** - Consumes: screen designs, interactions → Produces: interactive prototype
  7. **Accessibility Validator** - Consumes: screen designs, interactions → Produces: accessibility compliance report
  8. **Cross Platform Adapter** - Consumes: designs, platform specs → Produces: platform-specific adaptations
  9. **User Testing Simulator** - Consumes: prototype, user scenarios → Produces: usability feedback simulation
  10. **Design Asset Exporter** - Consumes: final designs, platform specs → Produces: development-ready assets
  11. **Prototype Performance Analyzer** - Consumes: prototype specifications → Produces: performance metrics
  12. **Design Iteration Manager** - Consumes: feedback, current designs → Produces: updated design versions

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic wireframe creation: Device Specification Analyzer → Wireframe Generator → Screen Layout Designer
  2. Asset preparation: Screen Layout Designer → Design Asset Exporter

  **Medium Plans:**
  1. Complete prototype creation: Device Specification Analyzer → Design System Creator → Wireframe Generator → Screen Layout Designer → Interaction Pattern Builder → Prototype Assembler
  2. Accessibility-compliant design: Screen Layout Designer → Accessibility Validator → Cross Platform Adapter → Design Asset Exporter

  **Complex Plans:**
  1. Full design and testing cycle: Device Specification Analyzer → Design System Creator → Wireframe Generator → Screen Layout Designer → Interaction Pattern Builder → Prototype Assembler → User Testing Simulator → Design Iteration Manager → updated designs
  2. Multi-platform optimization: All tools in sequence with Cross Platform Adapter generating variants, Prototype Performance Analyzer optimizing each variant, and Design Iteration Manager coordinating updates

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Device Specification Analyzer",
    "tool_description": "Analyzes target device specifications and platform requirements to provide design constraints and guidelines for mobile app UI development.",
    "parameters": {
      "device_models": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of target device models (e.g., iPhone 15, Samsung Galaxy S24)"
      },
      "platforms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Target platforms: iOS, Android, or both"
      }
    },
    "error_messages": [
      "Unsupported device model: Provide valid device models from the supported database.",
      "Invalid platform: Use 'iOS', 'Android', or both.",
      "Empty device list: At least one device model must be specified."
    ],
    "usage": "Specify target device models and platforms to get comprehensive specification data including screen dimensions, resolution, and OS-specific design guidelines.",
    "output_details": {
      "screen_dimensions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Screen dimensions for each device in pixels"
      },
      "platform_guidelines": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Platform-specific design guidelines and constraints"
      },
      "supported_features": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Available UI features and capabilities for each device"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Wireframe Generator",
    "tool_description": "Creates low-fidelity wireframes based on app requirements and target device specifications, establishing basic layout structure and navigation flow.",
    "parameters": {
      "app_type": {
        "type": "string",
        "required": true,
        "description": "Type of application: social, ecommerce, productivity, gaming, utility"
      },
      "screen_count": {
        "type": "integer",
        "required": true,
        "description": "Number of unique screens to wireframe (1-50)"
      },
      "navigation_style": {
        "type": "string",
        "required": true,
        "description": "Navigation pattern: tab-based, drawer, stack, modal"
      },
      "content_areas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Main content areas: header, footer, sidebar, main-content, toolbar"
      },
      "device_orientation": {
        "type": "string",
        "required": false,
        "default": "portrait",
        "description": "Primary orientation: portrait or landscape"
      }
    },
    "error_messages": [
      "Invalid app type: Use one of [social, ecommerce, productivity, gaming, utility].",
      "Screen count out of range: Provide a value between 1 and 50.",
      "Unsupported navigation style: Use one of [tab-based, drawer, stack, modal].",
      "Invalid content area: Use valid area names [header, footer, sidebar, main-content, toolbar].",
      "Invalid orientation: Use 'portrait' or 'landscape'."
    ],
    "usage": "Provide app type, screen count, navigation style, and content areas. The tool generates wireframe layouts showing structural arrangement of UI elements.",
    "output_details": {
      "wireframe_layouts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Wireframe layout descriptions for each screen"
      },
      "navigation_flow": {
        "type": "string",
        "description": "Description of navigation flow between screens"
      },
      "layout_specifications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed specifications for each layout element"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Design System Creator",
    "tool_description": "Establishes a comprehensive design system including color palettes, typography, component styles, and interaction patterns following platform-specific guidelines.",
    "parameters": {
      "brand_colors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Primary brand colors in hex format"
      },
      "typography_style": {
        "type": "string",
        "required": true,
        "description": "Typography approach: modern, classic, minimal, bold"
      },
      "component_density": {
        "type": "string",
        "required": true,
        "description": "UI density: compact, comfortable, spacious"
      },
      "platform_adherence": {
        "type": "string",
        "required": true,
        "description": "Platform guideline adherence: strict, moderate, custom"
      },
      "accessibility_level": {
        "type": "string",
        "required": false,
        "default": "AA",
        "description": "WCAG compliance level: A, AA, AAA"
      },
      "animation_style": {
        "type": "string",
        "required": false,
        "default": "subtle",
        "description": "Animation approach: none, subtle, moderate, dynamic"
      },
      "corner_radius": {
        "type": "number",
        "required": false,
        "default": 8,
        "description": "Default corner radius in pixels (0-20)"
      }
    },
    "error_messages": [
      "Invalid color format: Provide colors in valid hex format (#RRGGBB).",
      "Unsupported typography style: Use one of [modern, classic, minimal, bold].",
      "Invalid component density: Use one of [compact, comfortable, spacious].",
      "Invalid platform adherence: Use one of [strict, moderate, custom].",
      "Invalid accessibility level: Use one of [A, AA, AAA].",
      "Invalid animation style: Use one of [none, subtle, moderate, dynamic].",
      "Corner radius out of range: Provide a value between 0 and 20."
    ],
    "usage": "Define brand colors, typography style, component density, and platform adherence level. The tool creates a comprehensive design system with tokens and component specifications.",
    "output_details": {
      "color_palette": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Complete color palette with semantic color assignments"
      },
      "typography_scale": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Typography hierarchy with font sizes and weights"
      },
      "component_styles": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Styling specifications for UI components"
      },
      "spacing_system": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Standardized spacing values in pixels"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Screen Layout Designer",
    "tool_description": "Creates high-fidelity screen designs by applying the design system to wireframe layouts, producing pixel-perfect UI screens with proper spacing, typography, and visual hierarchy.",
    "parameters": {
      "wireframe_data": {
        "type": "string",
        "required": true,
        "description": "Wireframe layout data from wireframe generator"
      },
      "design_system_data": {
        "type": "string",
        "required": true,
        "description": "Design system specifications from design system creator"
      },
      "screen_resolution": {
        "type": "string",
        "required": true,
        "description": "Target screen resolution (e.g., 390x844, 360x800)"
      },
      "content_priority": {
        "type": "string",
        "required": true,
        "description": "Content prioritization: content-first, action-first, balanced"
      },
      "visual_weight": {
        "type": "string",
        "required": false,
        "default": "medium",
        "description": "Overall visual weight: light, medium, heavy"
      }
    },
    "error_messages": [
      "Invalid wireframe data: Provide valid wireframe layout data from wireframe generator.",
      "Invalid design system: Provide valid design system data from design system creator.",
      "Unsupported screen resolution: Provide resolution in WIDTHxHEIGHT format.",
      "Invalid content priority: Use one of [content-first, action-first, balanced].",
      "Invalid visual weight: Use one of [light, medium, heavy]."
    ],
    "usage": "Provide wireframe data, design system data, target screen resolution, and content priority. The tool generates high-fidelity screen designs with proper visual hierarchy.",
    "output_details": {
      "screen_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "High-fidelity screen design descriptions"
      },
      "design_specifications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed specifications for each design element"
      },
      "visual_hierarchy": {
        "type": "string",
        "description": "Description of established visual hierarchy"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Interaction Pattern Builder",
    "tool_description": "Defines interaction patterns, gestures, transitions, and micro-animations for screen elements to create intuitive user experiences following platform conventions.",
    "parameters": {
      "screen_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Screen design data from screen layout designer"
      },
      "interaction_complexity": {
        "type": "string",
        "required": true,
        "description": "Interaction complexity level: simple, moderate, complex"
      },
      "gesture_support": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Supported gestures: tap, swipe, pinch, long-press, drag"
      },
      "transition_style": {
        "type": "string",
        "required": true,
        "description": "Transition animation style: fade, slide, scale, custom"
      },
      "feedback_intensity": {
        "type": "string",
        "required": false,
        "default": "moderate",
        "description": "User feedback intensity: minimal, moderate, rich"
      },
      "haptic_feedback": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Enable haptic feedback for interactions"
      }
    },
    "error_messages": [
      "Invalid screen design data: Provide valid screen designs from screen layout designer.",
      "Invalid interaction complexity: Use one of [simple, moderate, complex].",
      "Unsupported gesture: Use gestures from [tap, swipe, pinch, long-press, drag].",
      "Invalid transition style: Use one of [fade, slide, scale, custom].",
      "Invalid feedback intensity: Use one of [minimal, moderate, rich]."
    ],
    "usage": "Provide screen designs, interaction complexity level, supported gestures, and transition style. The tool creates comprehensive interaction specifications for all UI elements.",
    "output_details": {
      "interaction_map": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Mapping of interactions to UI elements"
      },
      "gesture_definitions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed gesture interaction specifications"
      },
      "transition_specifications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Animation and transition timing specifications"
      },
      "feedback_patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Visual and haptic feedback specifications"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Prototype Assembler",
    "tool_description": "Combines screen designs and interaction patterns into a functional interactive prototype that can be tested and demonstrated to stakeholders.",
    "parameters": {
      "screen_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Complete screen design data"
      },
      "interaction_patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Interaction pattern specifications"
      },
      "prototype_fidelity": {
        "type": "string",
        "required": true,
        "description": "Prototype fidelity level: low, medium, high"
      },
      "linking_method": {
        "type": "string",
        "required": true,
        "description": "Screen linking approach: hotspots, overlays, smart-animate"
      },
      "data_simulation": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Include simulated data in prototype"
      },
      "device_preview": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Enable device frame preview"
      }
    },
    "error_messages": [
      "Invalid screen design data: Provide valid screen designs from screen layout designer.",
      "Invalid interaction patterns: Provide valid interaction specifications from interaction pattern builder.",
      "Invalid prototype fidelity: Use one of [low, medium, high].",
      "Invalid linking method: Use one of [hotspots, overlays, smart-animate].",
      "Insufficient screens: At least 2 screens required for prototype assembly."
    ],
    "usage": "Provide screen designs and interaction patterns, then specify prototype fidelity and linking method. The tool assembles a functional interactive prototype for testing.",
    "output_details": {
      "prototype_url": {
        "type": "string",
        "description": "URL or identifier for accessing the interactive prototype"
      },
      "interaction_count": {
        "type": "integer",
        "description": "Total number of interactive elements in the prototype"
      },
      "navigation_paths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Available navigation paths through the prototype"
      },
      "prototype_summary": {
        "type": "string",
        "description": "Summary of prototype features and capabilities"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Accessibility Validator",
    "tool_description": "Validates UI designs against accessibility standards (WCAG) and platform-specific accessibility guidelines, providing compliance reports and improvement recommendations.",
    "parameters": {
      "screen_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Screen designs to validate for accessibility"
      },
      "compliance_level": {
        "type": "string",
        "required": true,
        "description": "Target WCAG compliance level: A, AA, AAA"
      },
      "platform": {
        "type": "string",
        "required": true,
        "description": "Target platform for specific guidelines: iOS, Android, both"
      },
      "user_groups": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "default": ["visual", "motor", "cognitive"],
        "description": "Accessibility user groups to consider: visual, motor, cognitive, hearing"
      },
      "color_contrast_ratio": {
        "type": "number",
        "required": false,
        "default": 4.5,
        "description": "Required color contrast ratio (3.0-7.0)"
      },
      "font_size_minimum": {
        "type": "integer",
        "required": false,
        "default": 16,
        "description": "Minimum font size in pixels (12-24)"
      },
      "touch_target_size": {
        "type": "integer",
        "required": false,
        "default": 44,
        "description": "Minimum touch target size in pixels (32-60)"
      }
    },
    "error_messages": [
      "Invalid screen design data: Provide valid screen designs for accessibility validation.",
      "Invalid compliance level: Use one of [A, AA, AAA].",
      "Invalid platform: Use one of [iOS, Android, both].",
      "Invalid user group: Use groups from [visual, motor, cognitive, hearing].",
      "Invalid contrast ratio: Provide a value between 3.0 and 7.0.",
      "Invalid font size: Provide a minimum font size between 12 and 24 pixels.",
      "Invalid touch target size: Provide a size between 32 and 60 pixels."
    ],
    "usage": "Provide screen designs, compliance level, and target platform. The tool validates accessibility compliance and provides detailed reports with improvement recommendations.",
    "output_details": {
      "compliance_score": {
        "type": "number",
        "description": "Overall accessibility compliance score (0-100)"
      },
      "violations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of accessibility violations found"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific recommendations for improving accessibility"
      },
      "passed_checks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of accessibility checks that passed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross Platform Adapter",
    "tool_description": "Adapts UI designs for different platforms (iOS/Android) ensuring adherence to platform-specific design guidelines while maintaining brand consistency.",
    "parameters": {
      "base_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Original screen designs to adapt"
      },
      "source_platform": {
        "type": "string",
        "required": true,
        "description": "Source platform of base designs: iOS or Android"
      },
      "target_platforms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Target platforms for adaptation: iOS, Android"
      },
      "adaptation_level": {
        "type": "string",
        "required": true,
        "description": "Adaptation depth: surface, moderate, native"
      },
      "brand_consistency": {
        "type": "string",
        "required": false,
        "default": "high",
        "description": "Brand consistency priority: low, medium, high"
      }
    },
    "error_messages": [
      "Invalid base design data: Provide valid screen designs for platform adaptation.",
      "Invalid source platform: Use either 'iOS' or 'Android'.",
      "Invalid target platform: Use 'iOS' and/or 'Android'.",
      "Invalid adaptation level: Use one of [surface, moderate, native].",
      "Invalid brand consistency: Use one of [low, medium, high].",
      "Same platform adaptation: Source and target platforms cannot be identical."
    ],
    "usage": "Provide base designs, source platform, target platforms, and adaptation level. The tool creates platform-specific adaptations following respective design guidelines.",
    "output_details": {
      "adapted_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Platform-adapted screen designs"
      },
      "platform_differences": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Summary of key differences between platform versions"
      },
      "adaptation_notes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Notes explaining adaptation decisions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "User Testing Simulator",
    "tool_description": "Simulates user testing scenarios on prototypes to identify usability issues, navigation problems, and user experience pain points before actual user testing.",
    "parameters": {
      "prototype_data": {
        "type": "string",
        "required": true,
        "description": "Prototype data from prototype assembler"
      },
      "user_personas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "User persona types: novice, intermediate, expert, accessibility-focused"
      },
      "testing_scenarios": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Testing scenarios: onboarding, core-features, edge-cases, error-handling"
      },
      "device_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "default": ["normal"],
        "description": "Device conditions: normal, low-light, one-handed, distracted"
      },
      "success_criteria": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "default": ["task-completion", "time-efficiency"],
        "description": "Success metrics: task-completion, time-efficiency, error-rate, satisfaction"
      }
    },
    "error_messages": [
      "Invalid prototype data: Provide valid prototype data from prototype assembler.",
      "Invalid user persona: Use personas from [novice, intermediate, expert, accessibility-focused].",
      "Invalid testing scenario: Use scenarios from [onboarding, core-features, edge-cases, error-handling].",
      "Invalid device condition: Use conditions from [normal, low-light, one-handed, distracted].",
      "Invalid success criteria: Use criteria from [task-completion, time-efficiency, error-rate, satisfaction]."
    ],
    "usage": "Provide prototype data, user personas, and testing scenarios. The tool simulates user interactions and provides usability feedback and improvement suggestions.",
    "output_details": {
      "usability_score": {
        "type": "number",
        "description": "Overall usability score (0-100)"
      },
      "identified_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of usability issues identified during simulation"
      },
      "success_rates": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Task completion rates for different scenarios"
      },
      "improvement_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific suggestions for improving user experience"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Design Asset Exporter",
    "tool_description": "Exports finalized designs into development-ready assets including images, icons, style specifications, and platform-specific resource files for implementation.",
    "parameters": {
      "final_designs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Finalized screen designs ready for export"
      },
      "export_formats": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Required export formats: PNG, SVG, PDF, JSON, XML"
      },
      "resolution_scales": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Resolution scales: 1x, 2x, 3x for iOS or mdpi, hdpi, xhdpi, xxhdpi for Android"
      },
      "asset_organization": {
        "type": "string",
        "required": true,
        "description": "Organization structure: flat, grouped-by-screen, grouped-by-type"
      },
      "naming_convention": {
        "type": "string",
        "required": false,
        "default": "descriptive",
        "description": "Asset naming: descriptive, abbreviated, custom"
      },
      "include_specifications": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Include detailed specifications document"
      }
    },
    "error_messages": [
      "Invalid design data: Provide valid finalized designs for asset export.",
      "Unsupported export format: Use formats from [PNG, SVG, PDF, JSON, XML].",
      "Invalid resolution scale: Use appropriate scales for target platform.",
      "Invalid organization structure: Use one of [flat, grouped-by-screen, grouped-by-type].",
      "Invalid naming convention: Use one of [descriptive, abbreviated, custom]."
    ],
    "usage": "Provide finalized designs, export formats, resolution scales, and organization structure. The tool generates all assets needed for development implementation.",
    "output_details": {
      "asset_inventory": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Complete inventory of exported assets"
      },
      "specification_document": {
        "type": "string",
        "description": "Detailed specification document for developers"
      },
      "file_structure": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended file organization structure"
      },
      "export_summary": {
        "type": "string",
        "description": "Summary of exported assets and their purposes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Prototype Performance Analyzer",
    "tool_description": "Analyzes prototype performance characteristics including load times, interaction responsiveness, memory usage, and identifies potential performance bottlenecks.",
    "parameters": {
      "prototype_specifications": {
        "type": "string",
        "required": true,
        "description": "Prototype technical specifications and asset data"
      },
      "target_devices": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Target device performance profiles for analysis"
      },
      "analysis_depth": {
        "type": "string",
        "required": true,
        "description": "Analysis depth level: basic, detailed, comprehensive"
      },
      "performance_budget": {
        "type": "number",
        "required": false,
        "default": 3.0,
        "description": "Target load time budget in seconds (1.0-10.0)"
      }
    },
    "error_messages": [
      "Invalid prototype specifications: Provide valid prototype technical data.",
      "Unsupported target device: Provide recognized device performance profiles.",
      "Invalid analysis depth: Use one of [basic, detailed, comprehensive].",
      "Invalid performance budget: Provide a value between 1.0 and 10.0 seconds."
    ],
    "usage": "Provide prototype specifications, target devices, and analysis depth. The tool evaluates performance characteristics and provides optimization recommendations.",
    "output_details": {
      "performance_score": {
        "type": "number",
        "description": "Overall performance score (0-100)"
      },
      "load_time_estimate": {
        "type": "number",
        "description": "Estimated initial load time in seconds"
      },
      "bottlenecks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified performance bottlenecks"
      },
      "optimization_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific recommendations for performance improvement"
