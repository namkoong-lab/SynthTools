field_name: genealogy_and_family_history
subfield: DNA analysis and genetic matching
task: Compare DNA profiles to identify genetic matches and relationship degrees
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **hard**. It involves complex genetic algorithms for DNA comparison, statistical analysis of genetic markers, relationship degree calculations, and handling sensitive genetic data with high accuracy requirements. The scope includes multiple DNA profile formats, various matching algorithms, and sophisticated genealogical relationship inference.

  ## STEP 2 — Set a tool budget

  Given the hard difficulty, I'm targeting **17 tools** within the 15-20 range to cover DNA parsing, comparison algorithms, statistical analysis, relationship inference, and result presentation.

  ## STEP 3 — List all tool names with dependencies and affordances

  1. **DNA Profile Parser** - Consumes: raw DNA files → Produces: standardized genetic markers
  2. **Marker Quality Checker** - Consumes: genetic markers → Produces: quality scores and filtered markers
  3. **SNP Comparator** - Consumes: two DNA profiles → Produces: SNP match statistics
  4. **Segment Matcher** - Consumes: DNA profiles → Produces: shared DNA segments
  5. **cM Calculator** - Consumes: shared segments → Produces: centimorgans measurements
  6. **Relationship Predictor** - Consumes: cM values, segment data → Produces: relationship probabilities
  7. **Population Ancestry Analyzer** - Consumes: DNA markers → Produces: ancestry composition
  8. **X-Chromosome Analyzer** - Consumes: X-chr markers → Produces: X-specific matches
  9. **Mitochondrial Matcher** - Consumes: mtDNA sequences → Produces: maternal lineage matches
  10. **Y-Chromosome Analyzer** - Consumes: Y-chr markers → Produces: paternal lineage matches
  11. **Common Ancestor Estimator** - Consumes: relationship data → Produces: generation estimates
  12. **Match Confidence Scorer** - Consumes: multiple match metrics → Produces: confidence levels
  13. **Triangulation Detector** - Consumes: multiple DNA profiles → Produces: triangulated segments
  14. **Pedigree Builder** - Consumes: relationship data → Produces: family tree structure
  15. **Match Reporter** - Consumes: all analysis results → Produces: formatted reports
  16. **Batch Profile Processor** - Consumes: multiple DNA files → Produces: processed profile set
  17. **Statistical Validator** - Consumes: match results → Produces: statistical significance scores

  ## STEP 4 — Multi-tool plans

  **Simple plans:**
  1. Basic DNA comparison: DNA Profile Parser → SNP Comparator → Match Reporter
  2. Quality assessment: DNA Profile Parser → Marker Quality Checker → Statistical Validator

  **Medium plans:**
  1. Standard relationship analysis: DNA Profile Parser → Marker Quality Checker → Segment Matcher → cM Calculator → Relationship Predictor → Match Reporter
  2. Ancestry-focused matching: DNA Profile Parser → Population Ancestry Analyzer → SNP Comparator → Match Confidence Scorer → Match Reporter

  **Complex plans:**
  1. Comprehensive genetic analysis: Batch Profile Processor → Marker Quality Checker → Segment Matcher → cM Calculator → X-Chromosome Analyzer → Y-Chromosome Analyzer → Mitochondrial Matcher → Triangulation Detector → Relationship Predictor → Common Ancestor Estimator → Match Confidence Scorer → Pedigree Builder → Match Reporter
  2. Advanced lineage tracing: DNA Profile Parser → Population Ancestry Analyzer → Y-Chromosome Analyzer → Mitochondrial Matcher → Common Ancestor Estimator → Triangulation Detector → Statistical Validator → Match Reporter

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "DNA Profile Parser",
    "tool_description": "Parses raw DNA data files from various testing companies and converts them into standardized genetic marker format for analysis.",
    "parameters": {
      "file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the raw DNA data file"
      },
      "file_format": {
        "type": "string",
        "required": true,
        "description": "Format of the DNA file: 23andme, ancestrydna, myheritage, ftdna, gedmatch"
      },
      "include_sex_chromosomes": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include X and Y chromosome markers"
      }
    },
    "error_messages": [
      "File not found: Ensure the file_path points to an existing DNA data file.",
      "Unsupported format: Use one of [23andme, ancestrydna, myheritage, ftdna, gedmatch].",
      "Corrupted file: The DNA file appears to be corrupted or incomplete. Verify file integrity.",
      "Invalid file structure: The file doesn't match the expected format structure for the specified company."
    ],
    "usage": "Provide the file_path and file_format of the DNA data. Optionally specify whether to include sex chromosomes. Returns standardized genetic markers ready for analysis.",
    "output_details": {
      "profile_id": {
        "type": "string",
        "description": "Unique identifier for this DNA profile"
      },
      "total_snps": {
        "type": "integer",
        "description": "Total number of SNP markers parsed"
      },
      "autosomal_snps": {
        "type": "integer",
        "description": "Number of autosomal chromosome SNPs"
      },
      "x_snps": {
        "type": "integer",
        "description": "Number of X chromosome SNPs"
      },
      "y_snps": {
        "type": "integer",
        "description": "Number of Y chromosome SNPs"
      },
      "parsing_status": {
        "type": "string",
        "description": "Status of the parsing operation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Marker Quality Checker",
    "tool_description": "Evaluates the quality and reliability of genetic markers, filters out low-quality SNPs, and provides quality metrics for DNA analysis.",
    "parameters": {
      "profile_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the DNA profile to check"
      },
      "min_quality_threshold": {
        "type": "number",
        "required": false,
        "default": 0.7,
        "description": "Minimum quality score threshold (0.0-1.0)"
      },
      "exclude_ambiguous": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to exclude ambiguous or no-call markers"
      },
      "check_population_frequency": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to validate against population frequency databases"
      }
    },
    "error_messages": [
      "Profile not found: The specified profile_id does not exist in the system.",
      "Invalid quality threshold: min_quality_threshold must be between 0.0 and 1.0.",
      "No markers to analyze: The profile contains no genetic markers to evaluate.",
      "Quality check failed: Unable to complete quality assessment due to data issues."
    ],
    "usage": "Provide the profile_id of a parsed DNA profile. Optionally set quality thresholds and filtering options. Returns quality metrics and filtered marker set.",
    "output_details": {
      "original_marker_count": {
        "type": "integer",
        "description": "Number of markers before quality filtering"
      },
      "filtered_marker_count": {
        "type": "integer",
        "description": "Number of markers after quality filtering"
      },
      "quality_score": {
        "type": "number",
        "description": "Overall quality score of the profile (0.0-1.0)"
      },
      "excluded_markers": {
        "type": "integer",
        "description": "Number of markers excluded due to quality issues"
      },
      "quality_report": {
        "type": "string",
        "description": "Detailed quality assessment summary"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "SNP Comparator",
    "tool_description": "Compares SNP markers between two DNA profiles to identify matches, mismatches, and overlapping positions for genetic similarity analysis.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile"
      },
      "comparison_type": {
        "type": "string",
        "required": true,
        "description": "Type of comparison: autosomal, x_chromosome, y_chromosome, mitochondrial"
      }
    },
    "error_messages": [
      "Profile not found: One or both profile IDs do not exist in the system.",
      "Identical profiles: Cannot compare a profile with itself.",
      "Invalid comparison type: Use one of [autosomal, x_chromosome, y_chromosome, mitochondrial].",
      "Insufficient overlap: Profiles have too few overlapping SNPs for reliable comparison.",
      "Gender mismatch: Y-chromosome comparison requires both profiles to be male."
    ],
    "usage": "Provide two profile IDs and specify the comparison type. The tool compares overlapping SNP positions and calculates match statistics.",
    "output_details": {
      "overlapping_snps": {
        "type": "integer",
        "description": "Number of SNP positions present in both profiles"
      },
      "matching_snps": {
        "type": "integer",
        "description": "Number of SNPs with identical genotypes"
      },
      "mismatching_snps": {
        "type": "integer",
        "description": "Number of SNPs with different genotypes"
      },
      "match_percentage": {
        "type": "number",
        "description": "Percentage of matching SNPs out of overlapping positions"
      },
      "comparison_summary": {
        "type": "string",
        "description": "Summary of the SNP comparison results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Segment Matcher",
    "tool_description": "Identifies and analyzes shared DNA segments between profiles, calculating segment lengths and positions across chromosomes.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile"
      },
      "min_segment_length": {
        "type": "number",
        "required": false,
        "default": 7.0,
        "description": "Minimum segment length in centimorgans to report"
      },
      "min_snp_density": {
        "type": "integer",
        "required": false,
        "default": 500,
        "description": "Minimum number of SNPs required in a segment"
      },
      "chromosome_range": {
        "type": "array",
        "items": {"type": "integer"},
        "required": false,
        "default": null,
        "description": "Array of chromosome numbers to analyze (1-22), or null for all autosomes"
      }
    },
    "error_messages": [
      "Profile not found: One or both profile IDs do not exist in the system.",
      "Invalid segment parameters: min_segment_length must be positive, min_snp_density must be >= 100.",
      "Invalid chromosome range: Chromosome numbers must be between 1 and 22.",
      "Insufficient data: Not enough SNP density for reliable segment detection.",
      "Analysis failed: Unable to complete segment matching due to data quality issues."
    ],
    "usage": "Provide two profile IDs and optionally set minimum segment criteria and chromosome range. Returns identified shared DNA segments with positions and lengths.",
    "output_details": {
      "total_segments": {
        "type": "integer",
        "description": "Total number of shared segments identified"
      },
      "segment_chromosomes": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Array of chromosome numbers containing shared segments"
      },
      "segment_lengths": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of segment lengths in centimorgans"
      },
      "longest_segment": {
        "type": "number",
        "description": "Length of the longest shared segment in centimorgans"
      },
      "segments_summary": {
        "type": "string",
        "description": "Summary of shared segment analysis"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "cM Calculator",
    "tool_description": "Calculates total shared centimorgans and genetic distance metrics from identified DNA segments between two profiles.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile"
      },
      "segment_data_source": {
        "type": "string",
        "required": true,
        "description": "Source of segment data: segment_matcher, uploaded_segments, manual_input"
      },
      "include_x_chromosome": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to include X chromosome segments in calculations"
      }
    },
    "error_messages": [
      "Profile not found: One or both profile IDs do not exist in the system.",
      "No segment data: No shared segments found for the specified profiles.",
      "Invalid data source: Use one of [segment_matcher, uploaded_segments, manual_input].",
      "Calculation error: Unable to calculate centimorgans due to invalid segment data.",
      "X-chromosome error: X chromosome analysis requires compatible gender profiles."
    ],
    "usage": "Provide two profile IDs and specify the source of segment data. Optionally include X chromosome segments. Returns total shared DNA measurements in centimorgans.",
    "output_details": {
      "total_shared_cm": {
        "type": "number",
        "description": "Total shared DNA in centimorgans"
      },
      "autosomal_cm": {
        "type": "number",
        "description": "Shared DNA on autosomal chromosomes in centimorgans"
      },
      "x_chromosome_cm": {
        "type": "number",
        "description": "Shared DNA on X chromosome in centimorgans"
      },
      "shared_segments_count": {
        "type": "integer",
        "description": "Number of segments used in calculation"
      },
      "calculation_confidence": {
        "type": "string",
        "description": "Confidence level of the cM calculation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Relationship Predictor",
    "tool_description": "Predicts genetic relationships between individuals based on shared DNA amounts, segment patterns, and genetic distance metrics.",
    "parameters": {
      "shared_cm": {
        "type": "number",
        "required": true,
        "description": "Total shared centimorgans between the individuals"
      },
      "longest_segment": {
        "type": "number",
        "required": true,
        "description": "Length of longest shared segment in centimorgans"
      },
      "segment_count": {
        "type": "integer",
        "required": true,
        "description": "Number of shared DNA segments"
      },
      "x_shared_cm": {
        "type": "number",
        "required": false,
        "default": 0,
        "description": "Shared X chromosome DNA in centimorgans"
      },
      "age_difference": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Age difference between individuals in years"
      },
      "known_common_ancestors": {
        "type": "integer",
        "required": false,
        "default": 0,
        "description": "Number of known common ancestors"
      },
      "population_background": {
        "type": "string",
        "required": false,
        "default": "mixed",
        "description": "Population background: european, african, asian, native_american, mixed"
      }
    },
    "error_messages": [
      "Invalid shared DNA amount: shared_cm must be positive and realistic (0.1-3500 cM range).",
      "Inconsistent segment data: longest_segment cannot exceed shared_cm, segment_count must be positive.",
      "Invalid population background: Use one of [european, african, asian, native_american, mixed].",
      "Contradictory data: X chromosome sharing doesn't match expected patterns for given relationship.",
      "Insufficient data: Not enough genetic information for reliable relationship prediction."
    ],
    "usage": "Provide shared_cm, longest_segment, and segment_count as minimum required data. Add optional parameters like x_shared_cm, age_difference, and population background for more accurate predictions.",
    "output_details": {
      "predicted_relationship": {
        "type": "string",
        "description": "Most likely genetic relationship"
      },
      "relationship_confidence": {
        "type": "number",
        "description": "Confidence score for the prediction (0.0-1.0)"
      },
      "possible_relationships": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of possible relationships in order of likelihood"
      },
      "generation_estimate": {
        "type": "number",
        "description": "Estimated generations to common ancestor"
      },
      "prediction_notes": {
        "type": "string",
        "description": "Additional notes about the relationship prediction"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Population Ancestry Analyzer",
    "tool_description": "Analyzes genetic markers to determine population ancestry composition and ethnic background percentages of a DNA profile.",
    "parameters": {
      "profile_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the DNA profile to analyze"
      },
      "reference_populations": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": ["european", "african", "east_asian", "south_asian", "native_american", "oceanian"],
        "description": "Reference populations to compare against"
      },
      "analysis_method": {
        "type": "string",
        "required": false,
        "default": "admixture",
        "description": "Analysis method: admixture, pca, structure, supervised"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "default": 0.8,
        "description": "Minimum confidence threshold for ancestry assignments"
      },
      "include_recent_ancestry": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include recent ancestry estimates (last 500 years)"
      }
    },
    "error_messages": [
      "Profile not found: The specified profile_id does not exist in the system.",
      "Invalid reference populations: Use valid population identifiers from the reference database.",
      "Unsupported analysis method: Use one of [admixture, pca, structure, supervised].",
      "Invalid confidence threshold: confidence_threshold must be between 0.1 and 1.0.",
      "Insufficient markers: Profile lacks enough ancestry-informative markers for analysis.",
      "Analysis failed: Unable to complete ancestry analysis due to data quality issues."
    ],
    "usage": "Provide a profile_id and optionally specify reference populations, analysis method, and confidence settings. Returns detailed ancestry composition percentages.",
    "output_details": {
      "ancestry_percentages": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of ancestry percentages corresponding to reference populations"
      },
      "population_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of population labels corresponding to percentages"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for each ancestry assignment"
      },
      "primary_ancestry": {
        "type": "string",
        "description": "Primary ancestral population"
      },
      "analysis_quality": {
        "type": "string",
        "description": "Overall quality assessment of the ancestry analysis"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "X Chromosome Analyzer",
    "tool_description": "Performs specialized analysis of X chromosome inheritance patterns to determine maternal lineage connections and gender-specific matching.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile"
      },
      "gender_1": {
        "type": "string",
        "required": true,
        "description": "Gender of first profile: male, female"
      },
      "gender_2": {
        "type": "string",
        "required": true,
        "description": "Gender of second profile: male, female"
      }
    },
    "error_messages": [
      "Profile not found: One or both profile IDs do not exist in the system.",
      "Invalid gender specification: Gender must be either 'male' or 'female'.",
      "No X chromosome data: One or both profiles lack X chromosome markers.",
      "Male-male comparison invalid: Males cannot share X chromosome DNA segments.",
      "Insufficient X markers: Not enough X chromosome SNPs for reliable analysis."
    ],
    "usage": "Provide two profile IDs and their corresponding genders. The tool analyzes X chromosome sharing patterns and inheritance to determine maternal lineage connections.",
    "output_details": {
      "x_shared_cm": {
        "type": "number",
        "description": "Shared X chromosome DNA in centimorgans"
      },
      "x_segments": {
        "type": "integer",
        "description": "Number of shared X chromosome segments"
      },
      "maternal_connection": {
        "type": "boolean",
        "description": "Whether X sharing indicates maternal lineage connection"
      },
      "inheritance_pattern": {
        "type": "string",
        "description": "Description of X chromosome inheritance pattern"
      },
      "analysis_notes": {
        "type": "string",
        "description": "Additional notes about X chromosome analysis"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Mitochondrial Matcher",
    "tool_description": "Compares mitochondrial DNA sequences to identify maternal lineage matches and haplogroup classifications.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile"
      },
      "sequence_region": {
        "type": "string",
        "required": false,
        "default": "hvr1_hvr2",
        "description": "Mitochondrial region to analyze: hvr1, hvr2, hvr1_hvr2, full_sequence"
      },
      "mutation_tolerance": {
        "type": "integer",
        "required": false,
        "default": 0,
        "description": "Maximum number of mutations allowed for a match"
      }
    },
    "error_messages": [
      "Profile not found: One or both profile IDs do not exist in the system.",
      "No mitochondrial data: One or both profiles lack mitochondrial DNA sequences.",
      "Invalid sequence region: Use one of [hvr1, hvr2, hvr1_hvr2, full_sequence].",
      "Invalid mutation tolerance: mutation_tolerance must be between 0 and 10.",
      "Sequence quality issues: Mitochondrial sequences contain too many ambiguous positions."
    ],
    "usage": "Provide two profile IDs and optionally specify the sequence region and mutation tolerance. Returns mitochondrial DNA comparison results and maternal lineage information.",
    "output_details": {
      "exact_match": {
        "type": "boolean",
        "description": "Whether mitochondrial sequences match exactly"
      },
      "mutation_count": {
        "type": "integer",
        "description": "Number of mutations between sequences"
      },
      "haplogroup_1": {
        "type": "string",
        "description": "Haplogroup classification for first profile"
      },
      "haplogroup_2": {
        "type": "string",
        "description": "Haplogroup classification for second profile"
      },
      "maternal_lineage_match": {
        "type": "boolean",
        "description": "Whether profiles share recent maternal lineage"
      },
      "estimated_generations": {
        "type": "number",
        "description": "Estimated generations to common maternal ancestor"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Y Chromosome Analyzer",
    "tool_description": "Analyzes Y chromosome markers to determine paternal lineage connections and haplogroup classifications for male profiles.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile (must be male)"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile (must be male)"
      },
      "marker_type": {
        "type": "string",
        "required": false,
        "default": "str",
        "description": "Type of Y markers to analyze: str, snp, both"
      },
      "genetic_distance_threshold": {
        "type": "integer",
        "required": false,
        "default": 2,
        "description": "Maximum genetic distance for considering profiles related"
      }
    },
    "error_messages": [
      "Profile not found: One or both profile IDs do not exist in the system.",
      "Not male profile: Y chromosome analysis requires both profiles to be male.",
      "No Y chromosome data: One or both profiles lack Y chromosome markers.",
      "Invalid marker type: Use one of [str, snp, both].",
      "Invalid distance threshold: genetic_distance_threshold must be between 0 and 20."
    ],
    "usage": "Provide two male profile IDs and optionally specify marker type and distance threshold. Returns Y chromosome comparison results and paternal lineage information.",
    "output_details": {
      "genetic_distance": {
        "type": "integer",
        "description": "Genetic distance between Y chromosome profiles"
      },
      "haplogroup_1": {
        "type": "string",
        "description": "Y chromosome haplogroup for first profile"
      },
      "haplogroup_2": {
        "type": "string",
        "description": "Y chromosome haplogroup for second profile"
      },
      "paternal_lineage_match": {
        "type": "boolean",
        "description": "Whether profiles share recent paternal lineage"
      },
      "estimated_generations": {
        "type": "number",
        "description": "Estimated generations to common paternal ancestor"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Common Ancestor Estimator",
    "tool_description": "Estimates the time period and number of generations to the most recent common ancestor based on genetic sharing patterns.",
    "parameters": {
      "shared_cm": {
        "type": "number",
        "required": true,
        "description": "Total shared DNA in centimorgans"
      },
      "relationship_type": {
        "type": "string",
        "required": true,
        "description": "Predicted relationship type from relationship predictor"
      },
      "population_background": {
        "type": "string",
        "required": false,
        "default": "mixed",
        "description": "Population background for generation time estimates"
      },
      "known_genealogy_depth": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Known genealogical depth in generations"
      },
      "birth_years": {
        "type": "array",
        "items": {"type": "integer"},
        "required": false,
        "default": null,
        "description": "Birth years of both individuals [year1, year2]"
      }
    },
    "error_messages": [
      "Invalid shared DNA: shared_cm must be positive and within realistic range.",
      "Unknown relationship type: Provide a valid relationship type from relationship predictor.",
      "Invalid population background: Use a recognized population identifier.",
      "Invalid birth years: Provide realistic birth years as [year1, year2] if specified.",
      "Inconsistent data: Genetic data doesn't match the specified relationship type."
    ],
    "usage": "Provide shared_cm and relationship_type as minimum requirements. Add population_background, known_genealogy_depth, and birth_years for more precise estimates.",
    "output_details": {
      "generations_to_mrca": {
        "type": "number",
        "description": "Estimated generations to most recent common ancestor"
      },
      "estimated_time_range": {
        "type": "string",
        "description": "Estimated time period when common ancestor lived"
      },
      "confidence_interval": {
        "type": "string",
        "description": "Confidence interval for the generation estimate"
      },
      "estimation_method": {
        "type": "string",
        "description": "Method used for the ancestor estimation"
      },
      "notes": {
        "type": "string",
        "description": "Additional notes about the estimation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Match Confidence Scorer",
    "tool_description": "Calculates overall confidence scores for genetic matches by combining multiple analysis metrics and data quality indicators.",
    "parameters": {
      "profile_1_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the first DNA profile"
      },
      "profile_2_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the second DNA profile"
      },
      "shared_cm": {
        "type": "number",
        "required": true,
        "description": "Total shared DNA in centimorgans"
      },
      "segment_count": {
        "type": "integer",
        "required": true,
        "description": "Number of shared DNA segments"
      },
      "longest_segment": {
        "type": "number",
        "required": true,
        "description": "Length of longest shared segment"
      },
      "snp_overlap": {
        "type": "integer",
        "required": true,
        "description": "Number of overlapping SNP positions"
      },
      "data_quality_scores": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Quality scores for both profiles [score1, score2]"
