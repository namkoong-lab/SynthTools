field_name: ecommerce_and_retail
subfield: Product Search and Discovery
task: Cross-selling and upselling suggestion generation based on product relationships and customer data
tool_description: |-
  **STEP 1 — Rate task difficulty**
  This task is of medium difficulty. It involves analyzing complex customer behavior patterns, product relationships, and purchase histories to generate relevant suggestions. The challenge lies in balancing multiple data sources (customer profiles, product catalogs, transaction histories) and ensuring recommendations are both accurate and commercially viable.

  **STEP 2 — Set a tool budget**
  Given the medium difficulty, I'll target 12 tools to cover the various aspects of cross-selling and upselling: customer analysis, product relationship mapping, recommendation generation, and performance optimization.

  **STEP 3 — List all tool names and dependencies**
  1. Customer Profile Analyzer - consumes customer data, produces behavioral insights
  2. Product Relationship Mapper - consumes product catalog, produces relationship matrices
  3. Purchase History Analyzer - consumes transaction data, produces purchase patterns
  4. Market Basket Analyzer - consumes transaction data, produces item associations
  5. Customer Segmentation Engine - consumes customer profiles, produces segment classifications
  6. Cross-sell Recommendation Generator - consumes customer data + product relationships, produces cross-sell suggestions
  7. Upsell Opportunity Identifier - consumes purchase history + product catalog, produces upsell opportunities
  8. Price Sensitivity Analyzer - consumes customer data + pricing history, produces price elasticity insights
  9. Recommendation Scorer - consumes recommendations + customer context, produces relevance scores
  10. Campaign Performance Predictor - consumes recommendations + historical data, produces success probabilities
  11. Inventory Constraint Checker - consumes recommendations + inventory data, produces feasibility assessments
  12. A/B Test Designer - consumes recommendation strategies, produces test configurations

  **STEP 4 — Multi-tool plans**

  Simple plans:
  - Basic cross-selling: Customer Profile Analyzer → Cross-sell Recommendation Generator → Recommendation Scorer
  - Simple upselling: Purchase History Analyzer → Upsell Opportunity Identifier → Price Sensitivity Analyzer

  Medium plans:
  - Targeted recommendations: Customer Segmentation Engine → Product Relationship Mapper → Cross-sell Recommendation Generator → Recommendation Scorer → Inventory Constraint Checker
  - Market basket optimization: Market Basket Analyzer → Product Relationship Mapper → Cross-sell Recommendation Generator → Campaign Performance Predictor

  Complex plans:
  - Full recommendation pipeline: Customer Profile Analyzer → Customer Segmentation Engine → Purchase History Analyzer → Market Basket Analyzer → Product Relationship Mapper → Cross-sell Recommendation Generator → Upsell Opportunity Identifier → Price Sensitivity Analyzer → Recommendation Scorer → Campaign Performance Predictor → Inventory Constraint Checker → A/B Test Designer
  - Advanced personalization: Customer Profile Analyzer → Purchase History Analyzer → Customer Segmentation Engine → Price Sensitivity Analyzer → Cross-sell Recommendation Generator → Upsell Opportunity Identifier → Recommendation Scorer → Campaign Performance Predictor

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Customer Profile Analyzer",
    "tool_description": "Analyzes customer demographic, behavioral, and transactional data to extract key insights for personalized recommendations.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the customer"
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "description": "Level of analysis: basic, detailed, or comprehensive",
        "default": "detailed"
      },
      "time_window_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to look back for behavioral analysis",
        "default": 90
      }
    },
    "error_messages": [
      "Customer not found: The provided customer_id does not exist in the database.",
      "Invalid analysis depth: Use one of [basic, detailed, comprehensive].",
      "Invalid time window: time_window_days must be between 1 and 365."
    ],
    "usage": "Provide customer_id and optionally set analysis_depth and time_window_days to generate customer behavioral insights.",
    "output_details": {
      "customer_segment": {
        "type": "string",
        "description": "Primary customer segment classification"
      },
      "purchase_frequency": {
        "type": "string",
        "description": "Customer's purchasing frequency category"
      },
      "average_order_value": {
        "type": "number",
        "description": "Customer's average order value"
      },
      "preferred_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of customer's preferred product categories"
      },
      "behavioral_insights": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Key behavioral patterns and preferences"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Product Relationship Mapper",
    "tool_description": "Analyzes product catalog and transaction data to identify relationships between products for cross-selling and upselling opportunities.",
    "parameters": {
      "product_ids": {
        "type": "array",
        "required": true,
        "description": "List of product IDs to analyze relationships for",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "relationship_types": {
        "type": "array",
        "required": false,
        "description": "Types of relationships to identify",
        "items": {
          "type": "string"
        },
        "default": ["complementary", "substitute", "upgrade"]
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence score for relationship inclusion (0.1-1.0)",
        "default": 0.3
      },
      "data_source": {
        "type": "string",
        "required": false,
        "description": "Primary data source: transactions, product_attributes, or combined",
        "default": "combined"
      }
    },
    "error_messages": [
      "Invalid product IDs: One or more product IDs do not exist in the catalog.",
      "Invalid relationship types: Use combinations of [complementary, substitute, upgrade, accessory, bundle].",
      "Invalid confidence threshold: Value must be between 0.1 and 1.0.",
      "Invalid data source: Use one of [transactions, product_attributes, combined]."
    ],
    "usage": "Provide product_ids and optionally specify relationship_types, confidence_threshold, and data_source to generate product relationship mappings.",
    "output_details": {
      "relationship_matrix": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Matrix showing relationships between products"
      },
      "strong_relationships": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "High-confidence product relationships"
      },
      "relationship_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Confidence scores for each relationship"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Purchase History Analyzer",
    "tool_description": "Analyzes customer purchase patterns and transaction history to identify trends and preferences for recommendation targeting.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier to analyze"
      },
      "analysis_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to analyze (30-730)",
        "default": 180
      }
    },
    "error_messages": [
      "Customer not found: The provided customer_id does not exist.",
      "Invalid analysis period: analysis_period_days must be between 30 and 730.",
      "Insufficient purchase history: Customer has fewer than 3 transactions in the specified period."
    ],
    "usage": "Provide customer_id and optionally set analysis_period_days to analyze purchase patterns and trends.",
    "output_details": {
      "purchase_patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified purchasing patterns and behaviors"
      },
      "seasonal_trends": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Seasonal purchasing trends"
      },
      "repurchase_likelihood": {
        "type": "number",
        "description": "Probability of customer making another purchase"
      },
      "category_preferences": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Ranked list of preferred product categories"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Market Basket Analyzer",
    "tool_description": "Performs market basket analysis to identify frequently bought together items and association rules for cross-selling opportunities.",
    "parameters": {
      "transaction_data_source": {
        "type": "string",
        "required": true,
        "description": "Data source identifier for transaction analysis"
      },
      "min_support": {
        "type": "number",
        "required": false,
        "description": "Minimum support threshold for association rules (0.01-0.5)",
        "default": 0.05
      },
      "min_confidence": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence threshold for association rules (0.1-1.0)",
        "default": 0.6
      },
      "analysis_timeframe_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days of transaction data to analyze (30-365)",
        "default": 90
      },
      "category_filter": {
        "type": "array",
        "required": false,
        "description": "Specific product categories to include in analysis",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid data source: The specified transaction_data_source is not accessible.",
      "Invalid support threshold: min_support must be between 0.01 and 0.5.",
      "Invalid confidence threshold: min_confidence must be between 0.1 and 1.0.",
      "Invalid timeframe: analysis_timeframe_days must be between 30 and 365.",
      "Insufficient transaction data: Not enough transactions found for reliable analysis."
    ],
    "usage": "Provide transaction_data_source and optionally set thresholds and filters to identify product associations and cross-selling opportunities.",
    "output_details": {
      "frequent_itemsets": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most frequently purchased item combinations"
      },
      "association_rules": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Association rules with support and confidence metrics"
      },
      "top_cross_sell_pairs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Highest confidence cross-selling product pairs"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Customer Segmentation Engine",
    "tool_description": "Segments customers based on behavioral, demographic, and transactional characteristics for targeted recommendation strategies.",
    "parameters": {
      "segmentation_method": {
        "type": "string",
        "required": true,
        "description": "Segmentation approach: RFM, behavioral, demographic, or hybrid"
      },
      "customer_data_source": {
        "type": "string",
        "required": true,
        "description": "Data source containing customer information"
      },
      "number_of_segments": {
        "type": "integer",
        "required": false,
        "description": "Target number of customer segments (3-10)",
        "default": 5
      },
      "feature_weights": {
        "type": "array",
        "required": false,
        "description": "Weights for different segmentation features",
        "items": {
          "type": "number"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid segmentation method: Use one of [RFM, behavioral, demographic, hybrid].",
      "Invalid data source: The specified customer_data_source is not accessible.",
      "Invalid segment count: number_of_segments must be between 3 and 10.",
      "Invalid feature weights: Weights must be positive numbers that sum to 1.0."
    ],
    "usage": "Provide segmentation_method and customer_data_source, optionally specify number_of_segments and feature_weights to create customer segments.",
    "output_details": {
      "segment_definitions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Definitions and characteristics of each segment"
      },
      "segment_sizes": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Number of customers in each segment"
      },
      "segment_profiles": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed profiles for each customer segment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross-sell Recommendation Generator",
    "tool_description": "Generates personalized cross-selling recommendations based on customer profile, product relationships, and business rules.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Target customer for recommendations"
      },
      "current_cart_items": {
        "type": "array",
        "required": true,
        "description": "Products currently in customer's cart or recent purchases",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "recommendation_count": {
        "type": "integer",
        "required": false,
        "description": "Number of recommendations to generate (1-20)",
        "default": 5
      },
      "exclude_categories": {
        "type": "array",
        "required": false,
        "description": "Product categories to exclude from recommendations",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "price_range_min": {
        "type": "number",
        "required": false,
        "description": "Minimum price for recommended products",
        "default": "None"
      },
      "price_range_max": {
        "type": "number",
        "required": false,
        "description": "Maximum price for recommended products",
        "default": "None"
      },
      "business_priority": {
        "type": "string",
        "required": false,
        "description": "Business objective: revenue, margin, inventory, or balanced",
        "default": "balanced"
      }
    },
    "error_messages": [
      "Customer not found: The provided customer_id does not exist.",
      "Invalid cart items: One or more current_cart_items do not exist in the catalog.",
      "Invalid recommendation count: recommendation_count must be between 1 and 20.",
      "Invalid price range: price_range_min must be less than price_range_max.",
      "Invalid business priority: Use one of [revenue, margin, inventory, balanced]."
    ],
    "usage": "Provide customer_id and current_cart_items, optionally set filters and business priorities to generate personalized cross-sell recommendations.",
    "output_details": {
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of recommended product IDs with names"
      },
      "recommendation_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Relevance scores for each recommendation"
      },
      "reasoning": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Explanation for each recommendation"
      },
      "expected_conversion_rate": {
        "type": "number",
        "description": "Predicted conversion rate for the recommendation set"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Upsell Opportunity Identifier",
    "tool_description": "Identifies upselling opportunities by analyzing customer purchase history and product hierarchy to suggest higher-value alternatives.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer identifier for upsell analysis"
      },
      "current_products": {
        "type": "array",
        "required": true,
        "description": "Products customer currently owns or is considering",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 15
      },
      "upsell_factor_min": {
        "type": "number",
        "required": false,
        "description": "Minimum price multiplier for upsell products (1.2-5.0)",
        "default": 1.5
      },
      "upsell_factor_max": {
        "type": "number",
        "required": false,
        "description": "Maximum price multiplier for upsell products (1.2-5.0)",
        "default": 3.0
      },
      "max_recommendations": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of upsell recommendations (1-15)",
        "default": 8
      }
    },
    "error_messages": [
      "Customer not found: The provided customer_id does not exist.",
      "Invalid current products: One or more products in current_products do not exist.",
      "Invalid upsell factors: upsell_factor_min must be less than upsell_factor_max, both between 1.2 and 5.0.",
      "Invalid max recommendations: max_recommendations must be between 1 and 15.",
      "No upsell opportunities: No suitable upsell products found within specified criteria."
    ],
    "usage": "Provide customer_id and current_products, optionally set upsell price factors and recommendation limits to identify upselling opportunities.",
    "output_details": {
      "upsell_opportunities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of upsell product recommendations"
      },
      "value_propositions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Value propositions for each upsell recommendation"
      },
      "price_differences": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Price differences between current and recommended products"
      },
      "upgrade_paths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Logical upgrade paths from current to recommended products"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Price Sensitivity Analyzer",
    "tool_description": "Analyzes customer price sensitivity and elasticity to optimize recommendation pricing and promotional strategies.",
    "parameters": {
      "customer_id": {
        "type": "string",
        "required": true,
        "description": "Customer to analyze price sensitivity for"
      },
      "product_category": {
        "type": "string",
        "required": false,
        "description": "Specific product category to focus analysis on",
        "default": "None"
      },
      "analysis_window_days": {
        "type": "integer",
        "required": false,
        "description": "Time window for price sensitivity analysis (30-365)",
        "default": 120
      }
    },
    "error_messages": [
      "Customer not found: The provided customer_id does not exist.",
      "Invalid product category: The specified category does not exist in the catalog.",
      "Invalid analysis window: analysis_window_days must be between 30 and 365.",
      "Insufficient price data: Not enough pricing variation data for reliable sensitivity analysis."
    ],
    "usage": "Provide customer_id and optionally specify product_category and analysis_window_days to analyze customer price sensitivity patterns.",
    "output_details": {
      "price_sensitivity_score": {
        "type": "number",
        "description": "Overall price sensitivity score (0-1, where 1 is highly sensitive)"
      },
      "optimal_discount_range": {
        "type": "string",
        "description": "Recommended discount range to maximize conversion"
      },
      "price_elasticity": {
        "type": "number",
        "description": "Price elasticity coefficient for the customer"
      },
      "category_sensitivities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Price sensitivity by product category"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recommendation Scorer",
    "tool_description": "Scores and ranks recommendations based on multiple factors including relevance, profitability, inventory, and customer preferences.",
    "parameters": {
      "recommendations": {
        "type": "array",
        "required": true,
        "description": "List of product recommendations to score",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "customer_context": {
        "type": "string",
        "required": true,
        "description": "Customer context information for scoring"
      },
      "scoring_weights": {
        "type": "array",
        "required": false,
        "description": "Weights for different scoring factors: [relevance, profitability, inventory, popularity]",
        "items": {
          "type": "number"
        },
        "default": "[0.4, 0.3, 0.2, 0.1]"
      },
      "business_objectives": {
        "type": "array",
        "required": false,
        "description": "Primary business objectives to optimize for",
        "items": {
          "type": "string"
        },
        "default": "[\"conversion\", \"revenue\"]"
      },
      "personalization_level": {
        "type": "string",
        "required": false,
        "description": "Level of personalization: low, medium, or high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Invalid recommendations: One or more recommended products do not exist in catalog.",
      "Invalid customer context: Customer context information is incomplete or invalid.",
      "Invalid scoring weights: Weights must be positive numbers that sum to 1.0.",
      "Invalid business objectives: Use combinations of [conversion, revenue, margin, inventory, retention].",
      "Invalid personalization level: Use one of [low, medium, high]."
    ],
    "usage": "Provide recommendations and customer_context, optionally customize scoring_weights, business_objectives, and personalization_level to score recommendations.",
    "output_details": {
      "scored_recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommendations ranked by score"
      },
      "recommendation_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Numerical scores for each recommendation"
      },
      "score_breakdowns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Detailed scoring breakdown for each recommendation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Campaign Performance Predictor",
    "tool_description": "Predicts the performance of recommendation campaigns using historical data and machine learning models.",
    "parameters": {
      "campaign_recommendations": {
        "type": "array",
        "required": true,
        "description": "Product recommendations for the campaign",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "target_segment": {
        "type": "string",
        "required": true,
        "description": "Customer segment being targeted"
      },
      "campaign_channel": {
        "type": "string",
        "required": true,
        "description": "Marketing channel: email, web, mobile, social, or in_store"
      },
      "campaign_duration_days": {
        "type": "integer",
        "required": false,
        "description": "Expected campaign duration in days (1-90)",
        "default": 7
      },
      "discount_percentage": {
        "type": "number",
        "required": false,
        "description": "Discount percentage offered (0-50)",
        "default": 0
      },
      "historical_comparison": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include historical campaign comparisons",
        "default": true
      }
    },
    "error_messages": [
      "Invalid recommendations: One or more campaign_recommendations do not exist in catalog.",
      "Invalid target segment: The specified target_segment is not recognized.",
      "Invalid campaign channel: Use one of [email, web, mobile, social, in_store].",
      "Invalid campaign duration: campaign_duration_days must be between 1 and 90.",
      "Invalid discount percentage: discount_percentage must be between 0 and 50."
    ],
    "usage": "Provide campaign_recommendations, target_segment, and campaign_channel, optionally set campaign parameters to predict campaign performance.",
    "output_details": {
      "predicted_conversion_rate": {
        "type": "number",
        "description": "Predicted conversion rate for the campaign"
      },
      "expected_revenue": {
        "type": "number",
        "description": "Expected revenue from the campaign"
      },
      "confidence_interval": {
        "type": "string",
        "description": "Confidence interval for predictions"
      },
      "performance_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Key factors influencing predicted performance"
      },
      "optimization_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Suggestions to improve campaign performance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Constraint Checker",
    "tool_description": "Validates recommendations against inventory levels and supply chain constraints to ensure feasibility.",
    "parameters": {
      "recommended_products": {
        "type": "array",
        "required": true,
        "description": "List of recommended products to check inventory for",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "expected_demand": {
        "type": "array",
        "required": true,
        "description": "Expected demand quantities for each recommended product",
        "items": {
          "type": "integer"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "time_horizon_days": {
        "type": "integer",
        "required": false,
        "description": "Time horizon for inventory availability check (1-30)",
        "default": 7
      },
      "include_alternatives": {
        "type": "boolean",
        "required": false,
        "description": "Whether to suggest alternative products for out-of-stock items",
        "default": true
      }
    },
    "error_messages": [
      "Invalid product list: One or more recommended_products do not exist in catalog.",
      "Mismatched arrays: recommended_products and expected_demand arrays must have the same length.",
      "Invalid demand values: expected_demand values must be positive integers.",
      "Invalid time horizon: time_horizon_days must be between 1 and 30."
    ],
    "usage": "Provide recommended_products and expected_demand arrays, optionally set time_horizon_days and include_alternatives to check inventory feasibility.",
    "output_details": {
      "inventory_status": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Inventory status for each recommended product"
      },
      "available_quantities": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Available inventory quantities for each product"
      },
      "constraint_violations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Products with inventory constraints"
      },
      "alternative_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Alternative products for constrained items"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "A/B Test Designer",
    "tool_description": "Designs A/B tests for recommendation strategies to optimize performance and validate effectiveness of different approaches.",
    "parameters": {
      "test_name": {
        "type": "string",
        "required": true,
        "description": "Name for the A/B test experiment"
      },
      "control_strategy": {
        "type": "string",
        "required": true,
        "description": "Description of the control recommendation strategy"
      },
      "variant_strategies": {
        "type": "array",
        "required": true,
        "description": "List of variant recommendation strategies to test",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 5
      },
      "target_metrics": {
        "type": "array",
        "required": true,
        "description": "Primary metrics to measure in the test",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "test_duration_days": {
        "type": "integer",
        "required": false,
        "description": "Planned test duration in days (7-60)",
        "default": 14
      },
      "traffic_split": {
        "type": "array",
        "required": false,
        "description": "Traffic allocation percentages for control and variants",
        "items": {
          "type": "number"
        },
        "default": "None"
      },
      "minimum_sample_size": {
        "type": "integer",
        "required": false,
        "description": "Minimum sample size per variant",
        "default": 1000
      },
      "statistical_power": {
        "type": "number",
        "required": false,
        "description": "Desired statistical power (0.7-0.95)",
        "default": 0.8
      },
      "significance_level": {
        "type": "number",
        "required": false,
        "description": "Statistical significance level (0.01-0.1)",
        "default": 0.05
      }
    },
    "error_messages": [
