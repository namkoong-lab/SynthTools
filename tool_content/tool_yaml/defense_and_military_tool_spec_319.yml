field_name: defense_and_military
subfield: Intelligence Analysis and Reconnaissance
task: Geospatial Intelligence Collection and Analysis
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard**. Geospatial Intelligence Collection and Analysis involves complex multi-source data fusion, sophisticated analytical workflows, high-stakes decision making with national security implications, and requires specialized domain knowledge across remote sensing, GIS analysis, temporal pattern recognition, and threat assessment methodologies.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to cover the comprehensive workflows needed for geospatial intelligence operations.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  - **Satellite Image Fetcher** → produces raw imagery data
  - **Coordinate System Converter** → consumes/produces standardized coordinates
  - **Image Preprocessing Pipeline** → consumes raw imagery, produces enhanced images
  - **Change Detection Analyzer** → consumes temporal imagery, produces change maps
  - **Object Detection Classifier** → consumes imagery, produces identified objects/facilities
  - **Terrain Analysis Generator** → consumes elevation data, produces terrain characteristics
  - **Weather Data Integrator** → produces environmental context
  - **Multi-Source Data Fusion** → consumes various data streams, produces integrated intelligence
  - **Threat Assessment Calculator** → consumes fused data, produces risk evaluations
  - **Geospatial Query Engine** → consumes location data, produces spatial relationships
  - **Temporal Pattern Detector** → consumes time-series data, produces trend analysis
  - **Route Planning Optimizer** → consumes terrain/threat data, produces optimal paths
  - **Coverage Gap Analyzer** → consumes collection requirements, identifies intelligence gaps
  - **Intelligence Report Generator** → consumes analysis results, produces formatted reports
  - **Data Export Manager** → consumes processed data, produces standardized outputs
  - **Quality Assurance Validator** → consumes analysis products, produces validation results
  - **Alert System Monitor** → consumes real-time data, produces priority notifications

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  1. Basic imagery analysis: Satellite Image Fetcher → Image Preprocessing Pipeline → Object Detection Classifier
  2. Coordinate standardization: Coordinate System Converter → Geospatial Query Engine → Data Export Manager

  **Medium plans:**
  1. Change monitoring: Satellite Image Fetcher → Image Preprocessing Pipeline → Change Detection Analyzer → Temporal Pattern Detector → Intelligence Report Generator
  2. Environmental assessment: Weather Data Integrator → Terrain Analysis Generator → Multi-Source Data Fusion → Threat Assessment Calculator

  **Complex plans:**
  1. Comprehensive intelligence cycle: Coverage Gap Analyzer → Satellite Image Fetcher → Image Preprocessing Pipeline → Object Detection Classifier → Change Detection Analyzer → Multi-Source Data Fusion → Threat Assessment Calculator → Intelligence Report Generator → Quality Assurance Validator
  2. Mission planning workflow: Geospatial Query Engine → Terrain Analysis Generator → Weather Data Integrator → Route Planning Optimizer → Alert System Monitor → Data Export Manager

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Satellite Image Fetcher",
    "tool_description": "Retrieves satellite imagery from specified coordinates and time ranges, supporting multiple sensor types and resolution requirements for intelligence collection.",
    "parameters": {
      "latitude": {
        "type": "number",
        "required": true,
        "description": "Center latitude in decimal degrees (-90 to 90)"
      },
      "longitude": {
        "type": "number",
        "required": true,
        "description": "Center longitude in decimal degrees (-180 to 180)"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for imagery collection",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for imagery collection",
        "format": "date-time"
      },
      "sensor_type": {
        "type": "string",
        "required": true,
        "description": "Sensor type: optical, sar, infrared, multispectral"
      },
      "resolution_meters": {
        "type": "number",
        "required": false,
        "description": "Desired resolution in meters (0.1 to 100)",
        "default": 1.0
      },
      "area_km_radius": {
        "type": "number",
        "required": false,
        "description": "Collection radius in kilometers (0.1 to 50)",
        "default": 5.0
      },
      "cloud_cover_max": {
        "type": "integer",
        "required": false,
        "description": "Maximum acceptable cloud cover percentage (0 to 100)",
        "default": 20
      }
    },
    "error_messages": [
      "Invalid coordinates: Latitude must be between -90 and 90, longitude between -180 and 180",
      "Invalid date range: start_date must be before end_date and within available imagery timeframe",
      "Unsupported sensor type: Use optical, sar, infrared, or multispectral",
      "Resolution out of bounds: resolution_meters must be between 0.1 and 100",
      "Area too large: area_km_radius must be between 0.1 and 50 kilometers",
      "No imagery available: No satellite images found matching the specified criteria"
    ],
    "usage": "Specify target coordinates, date range, and sensor type. Optionally adjust resolution, area radius, and cloud cover constraints to retrieve relevant satellite imagery.",
    "output_details": {
      "image_count": {
        "type": "integer",
        "description": "Number of images retrieved"
      },
      "image_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Unique identifiers for retrieved images"
      },
      "acquisition_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Acquisition timestamps for each image"
      },
      "actual_resolution": {
        "type": "number",
        "description": "Actual resolution achieved in meters"
      },
      "coverage_area": {
        "type": "number",
        "description": "Total coverage area in square kilometers"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Coordinate System Converter",
    "tool_description": "Converts coordinates between different reference systems commonly used in military and intelligence operations.",
    "parameters": {
      "input_coordinates": {
        "type": "array",
        "required": true,
        "description": "Array of coordinate pairs to convert",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 1000
      },
      "input_system": {
        "type": "string",
        "required": true,
        "description": "Input coordinate system: wgs84, utm, mgrs, lambert"
      },
      "output_system": {
        "type": "string",
        "required": true,
        "description": "Target coordinate system: wgs84, utm, mgrs, lambert"
      },
      "utm_zone": {
        "type": "string",
        "required": false,
        "description": "UTM zone (e.g., 33N) when using UTM system",
        "default": "auto"
      }
    },
    "error_messages": [
      "Invalid coordinate format: Ensure coordinates are provided as numeric pairs",
      "Unsupported coordinate system: Use wgs84, utm, mgrs, or lambert",
      "Invalid UTM zone: Provide valid UTM zone format (e.g., 33N) or use auto",
      "Coordinate out of bounds: Input coordinates exceed valid range for specified system"
    ],
    "usage": "Provide coordinate pairs, specify input and output coordinate systems. Set UTM zone when applicable or use 'auto' for automatic detection.",
    "output_details": {
      "converted_coordinates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of converted coordinate pairs"
      },
      "conversion_accuracy": {
        "type": "string",
        "description": "Estimated accuracy of coordinate conversion"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Image Preprocessing Pipeline",
    "tool_description": "Enhances satellite imagery through noise reduction, contrast adjustment, and atmospheric correction to improve analysis quality.",
    "parameters": {
      "image_ids": {
        "type": "array",
        "required": true,
        "description": "List of image identifiers to process",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "noise_reduction": {
        "type": "boolean",
        "required": false,
        "description": "Apply noise reduction filtering",
        "default": true
      },
      "contrast_enhancement": {
        "type": "boolean",
        "required": false,
        "description": "Apply contrast enhancement",
        "default": true
      },
      "atmospheric_correction": {
        "type": "boolean",
        "required": false,
        "description": "Apply atmospheric correction",
        "default": true
      },
      "histogram_equalization": {
        "type": "boolean",
        "required": false,
        "description": "Apply histogram equalization",
        "default": false
      },
      "edge_sharpening": {
        "type": "boolean",
        "required": false,
        "description": "Apply edge sharpening",
        "default": false
      },
      "output_format": {
        "type": "string",
        "required": false,
        "description": "Output format: tiff, jpeg, png",
        "default": "tiff"
      },
      "compression_level": {
        "type": "integer",
        "required": false,
        "description": "Compression level (0 to 9)",
        "default": 1
      }
    },
    "error_messages": [
      "Invalid image IDs: One or more image identifiers not found",
      "Processing failed: Error during image enhancement operations",
      "Unsupported output format: Use tiff, jpeg, or png",
      "Invalid compression level: Must be integer between 0 and 9",
      "Memory exceeded: Too many large images for processing batch"
    ],
    "usage": "Provide image IDs and select desired enhancement operations. Configure output format and compression as needed for downstream analysis.",
    "output_details": {
      "processed_image_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identifiers for processed images"
      },
      "enhancement_log": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Log of applied enhancement operations"
      },
      "quality_metrics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Quality scores for processed images"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Change Detection Analyzer",
    "tool_description": "Identifies and quantifies changes between temporal satellite images to detect facility construction, vehicle movement, and terrain modifications.",
    "parameters": {
      "baseline_image_id": {
        "type": "string",
        "required": true,
        "description": "Reference image identifier for comparison"
      },
      "comparison_image_id": {
        "type": "string",
        "required": true,
        "description": "Target image identifier to analyze changes"
      },
      "change_threshold": {
        "type": "number",
        "required": false,
        "description": "Sensitivity threshold for change detection (0.1 to 1.0)",
        "default": 0.3
      },
      "minimum_area": {
        "type": "number",
        "required": false,
        "description": "Minimum change area in square meters to report",
        "default": 100.0
      },
      "change_types": {
        "type": "array",
        "required": false,
        "description": "Types of changes to detect",
        "items": {"type": "string"},
        "default": ["construction", "vegetation", "vehicles", "infrastructure"]
      }
    },
    "error_messages": [
      "Image alignment failed: Images cannot be properly co-registered for comparison",
      "Invalid threshold: change_threshold must be between 0.1 and 1.0",
      "Minimum area invalid: minimum_area must be positive number",
      "Image resolution mismatch: Images have incompatible resolutions",
      "Temporal gap too large: Time difference between images exceeds analysis parameters"
    ],
    "usage": "Provide baseline and comparison image IDs. Adjust change threshold and minimum area based on analysis requirements. Specify change types of interest.",
    "output_details": {
      "change_areas_detected": {
        "type": "integer",
        "description": "Number of change areas identified"
      },
      "total_changed_area": {
        "type": "number",
        "description": "Total area changed in square meters"
      },
      "change_classifications": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Classifications of detected changes"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for each detected change"
      },
      "change_coordinates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Coordinates of detected change centroids"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Object Detection Classifier",
    "tool_description": "Identifies and classifies military assets, infrastructure, and facilities in satellite imagery using AI-powered recognition algorithms.",
    "parameters": {
      "image_id": {
        "type": "string",
        "required": true,
        "description": "Image identifier to analyze"
      },
      "detection_categories": {
        "type": "array",
        "required": true,
        "description": "Object categories to detect",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence for object detection (0.1 to 1.0)",
        "default": 0.7
      },
      "max_objects": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of objects to detect",
        "default": 100
      },
      "overlap_threshold": {
        "type": "number",
        "required": false,
        "description": "IoU threshold for duplicate suppression (0.1 to 0.9)",
        "default": 0.5
      }
    },
    "error_messages": [
      "Image not found: Specified image_id does not exist",
      "Invalid detection categories: Use supported military/infrastructure object types",
      "Confidence threshold out of range: Must be between 0.1 and 1.0",
      "Max objects invalid: Must be positive integer up to 1000",
      "Overlap threshold invalid: Must be between 0.1 and 0.9",
      "Detection failed: AI model encountered processing error"
    ],
    "usage": "Specify image ID and detection categories of interest. Adjust confidence and overlap thresholds based on precision requirements.",
    "output_details": {
      "detected_objects": {
        "type": "integer",
        "description": "Number of objects detected"
      },
      "object_types": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Types of detected objects"
      },
      "detection_confidence": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for detections"
      },
      "object_coordinates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Bounding box coordinates for detected objects"
      },
      "object_dimensions": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Estimated dimensions of detected objects in meters"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Terrain Analysis Generator",
    "tool_description": "Analyzes topographical features, elevation profiles, and terrain characteristics for tactical and strategic planning purposes.",
    "parameters": {
      "area_coordinates": {
        "type": "array",
        "required": true,
        "description": "Bounding box coordinates [min_lat, min_lon, max_lat, max_lon]",
        "items": {"type": "number"},
        "minItems": 4,
        "maxItems": 4
      },
      "elevation_source": {
        "type": "string",
        "required": true,
        "description": "Elevation data source: srtm, aster, lidar"
      },
      "analysis_types": {
        "type": "array",
        "required": true,
        "description": "Types of terrain analysis to perform",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "resolution_meters": {
        "type": "number",
        "required": false,
        "description": "Analysis resolution in meters (1 to 100)",
        "default": 30.0
      },
      "slope_threshold": {
        "type": "number",
        "required": false,
        "description": "Slope threshold for trafficability analysis in degrees (0 to 90)",
        "default": 30.0
      },
      "water_detection": {
        "type": "boolean",
        "required": false,
        "description": "Include water body detection",
        "default": true
      }
    },
    "error_messages": [
      "Invalid coordinates: Bounding box coordinates must form valid rectangle",
      "Unsupported elevation source: Use srtm, aster, or lidar",
      "Invalid analysis types: Specify supported terrain analysis methods",
      "Resolution out of range: Must be between 1 and 100 meters",
      "Invalid slope threshold: Must be between 0 and 90 degrees",
      "Area too large: Requested area exceeds processing limits"
    ],
    "usage": "Define area of interest with bounding box coordinates. Select elevation data source and analysis types. Configure resolution and thresholds as needed.",
    "output_details": {
      "elevation_statistics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Min, max, mean elevation values"
      },
      "slope_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Slope classification categories and percentages"
      },
      "trafficability_index": {
        "type": "number",
        "description": "Overall terrain trafficability score"
      },
      "water_bodies_detected": {
        "type": "integer",
        "description": "Number of water bodies identified"
      },
      "terrain_features": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified terrain features and obstacles"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weather Data Integrator",
    "tool_description": "Retrieves and processes meteorological data to support intelligence analysis and mission planning with environmental context.",
    "parameters": {
      "latitude": {
        "type": "number",
        "required": true,
        "description": "Target latitude in decimal degrees"
      },
      "longitude": {
        "type": "number",
        "required": true,
        "description": "Target longitude in decimal degrees"
      },
      "forecast_hours": {
        "type": "integer",
        "required": false,
        "description": "Number of forecast hours (1 to 168)",
        "default": 24
      }
    },
    "error_messages": [
      "Invalid coordinates: Latitude and longitude must be within valid ranges",
      "Forecast period invalid: Must be between 1 and 168 hours",
      "Weather data unavailable: No meteorological data available for specified location"
    ],
    "usage": "Provide target coordinates and specify forecast period. The tool retrieves comprehensive weather information for intelligence context.",
    "output_details": {
      "current_conditions": {
        "type": "string",
        "description": "Current weather conditions summary"
      },
      "visibility_km": {
        "type": "number",
        "description": "Current visibility in kilometers"
      },
      "cloud_cover_percent": {
        "type": "integer",
        "description": "Cloud cover percentage"
      },
      "wind_speed_kmh": {
        "type": "number",
        "description": "Wind speed in kilometers per hour"
      },
      "temperature_celsius": {
        "type": "number",
        "description": "Current temperature in Celsius"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Multi Source Data Fusion",
    "tool_description": "Integrates intelligence data from multiple sources including imagery, signals, human intelligence, and open sources to create comprehensive intelligence pictures.",
    "parameters": {
      "imagery_data_ids": {
        "type": "array",
        "required": false,
        "description": "Image analysis result identifiers",
        "items": {"type": "string"},
        "default": []
      },
      "signals_data_ids": {
        "type": "array",
        "required": false,
        "description": "Signals intelligence data identifiers",
        "items": {"type": "string"},
        "default": []
      },
      "humint_reports": {
        "type": "array",
        "required": false,
        "description": "Human intelligence report identifiers",
        "items": {"type": "string"},
        "default": []
      },
      "open_source_data": {
        "type": "array",
        "required": false,
        "description": "Open source intelligence identifiers",
        "items": {"type": "string"},
        "default": []
      },
      "temporal_weight": {
        "type": "number",
        "required": false,
        "description": "Weight factor for temporal correlation (0.1 to 1.0)",
        "default": 0.7
      },
      "spatial_weight": {
        "type": "number",
        "required": false,
        "description": "Weight factor for spatial correlation (0.1 to 1.0)",
        "default": 0.8
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence for fused intelligence (0.1 to 1.0)",
        "default": 0.6
      },
      "correlation_radius_km": {
        "type": "number",
        "required": false,
        "description": "Spatial correlation radius in kilometers",
        "default": 5.0
      },
      "time_window_hours": {
        "type": "integer",
        "required": false,
        "description": "Temporal correlation window in hours",
        "default": 24
      },
      "fusion_algorithm": {
        "type": "string",
        "required": false,
        "description": "Fusion algorithm: bayesian, dempster_shafer, fuzzy_logic",
        "default": "bayesian"
      },
      "priority_sources": {
        "type": "array",
        "required": false,
        "description": "Prioritized source types for conflict resolution",
        "items": {"type": "string"},
        "default": ["imagery", "signals", "humint", "osint"]
      },
      "output_format": {
        "type": "string",
        "required": false,
        "description": "Output format: summary, detailed, technical",
        "default": "detailed"
      }
    },
    "error_messages": [
      "No data sources provided: At least one data source must be specified",
      "Invalid weight factors: temporal_weight and spatial_weight must be between 0.1 and 1.0",
      "Invalid confidence threshold: Must be between 0.1 and 1.0",
      "Correlation parameters invalid: radius and time window must be positive",
      "Unsupported fusion algorithm: Use bayesian, dempster_shafer, or fuzzy_logic",
      "Data correlation failed: Unable to establish correlations between provided sources",
      "Insufficient data quality: Input data does not meet minimum quality standards"
    ],
    "usage": "Provide data identifiers from multiple intelligence sources. Configure correlation parameters and fusion algorithm. The tool produces integrated intelligence assessments with confidence ratings.",
    "output_details": {
      "fused_intelligence_items": {
        "type": "integer",
        "description": "Number of fused intelligence items generated"
      },
      "correlation_strength": {
        "type": "number",
        "description": "Overall correlation strength between sources"
      },
      "confidence_distribution": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence score distribution across fused items"
      },
      "source_contribution": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Contribution percentage by source type"
      },
      "intelligence_summary": {
        "type": "string",
        "description": "Executive summary of fused intelligence findings"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Threat Assessment Calculator",
    "tool_description": "Evaluates threat levels and risk scores based on intelligence data, terrain analysis, and historical patterns to support decision making.",
    "parameters": {
      "intelligence_data_id": {
        "type": "string",
        "required": true,
        "description": "Fused intelligence data identifier for assessment"
      },
      "threat_categories": {
        "type": "array",
        "required": true,
        "description": "Categories of threats to assess",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 15
      },
      "assessment_timeframe": {
        "type": "integer",
        "required": false,
        "description": "Assessment timeframe in hours (1 to 720)",
        "default": 72
      },
      "risk_tolerance": {
        "type": "string",
        "required": false,
        "description": "Risk tolerance level: low, medium, high",
        "default": "medium"
      },
      "historical_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for historical threat patterns (0.1 to 1.0)",
        "default": 0.4
      }
    },
    "error_messages": [
      "Intelligence data not found: Specified intelligence_data_id does not exist",
      "Invalid threat categories: Use supported military threat classification types",
      "Invalid timeframe: assessment_timeframe must be between 1 and 720 hours",
      "Invalid risk tolerance: Use low, medium, or high",
      "Invalid historical weight: Must be between 0.1 and 1.0",
      "Assessment failed: Insufficient data for reliable threat assessment"
    ],
    "usage": "Provide intelligence data ID and specify threat categories to assess. Configure timeframe, risk tolerance, and historical weighting based on operational requirements.",
    "output_details": {
      "overall_threat_level": {
        "type": "string",
        "description": "Overall threat assessment level"
      },
      "threat_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Individual threat category scores"
      },
      "risk_factors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified risk factors and contributors"
      },
      "mitigation_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended mitigation strategies"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Geospatial Query Engine",
    "tool_description": "Executes spatial queries and proximity analysis to identify relationships between geographic features and intelligence targets.",
    "parameters": {
      "query_type": {
        "type": "string",
        "required": true,
        "description": "Type of spatial query: proximity, intersection, buffer, route"
      },
      "target_coordinates": {
        "type": "array",
        "required": true,
        "description": "Target location coordinates [lat, lon]",
        "items": {"type": "number"},
        "minItems": 2,
        "maxItems": 2
      },
      "search_radius_km": {
        "type": "number",
        "required": false,
        "description": "Search radius in kilometers (0.1 to 100)",
        "default": 10.0
      },
      "feature_types": {
        "type": "array",
        "required": false,
        "description": "Types of features to include in query",
        "items": {"type": "string"},
        "default": ["all"]
      }
    },
    "error_messages": [
      "Invalid query type: Use proximity, intersection, buffer, or route",
      "Invalid coordinates: Target coordinates must be valid lat/lon pair",
      "Invalid search radius: Must be between 0.1 and 100 kilometers",
      "No features found: No geographic features match query criteria",
      "Query execution failed: Spatial database query encountered error"
    ],
    "usage": "Specify query type and target coordinates. Set search radius and feature types as needed. The tool returns spatially related features and their relationships.",
    "output_details": {
      "features_found": {
        "type": "integer",
        "description": "Number of features matching query"
      },
      "feature_distances": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Distances to found features in kilometers"
      },
      "feature_types_found": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Types of features identified in query results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Temporal Pattern Detector",
    "tool_description": "Analyzes time-series intelligence data to identify patterns, trends, and anomalies in target behavior and activities.",
    "parameters": {
      "data_series_id": {
        "type": "string",
        "required": true,
        "description": "Time-series data identifier for analysis"
      },
      "pattern_types": {
        "type": "array",
        "required": true,
        "description": "Types of patterns to detect",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 8
      },
      "analysis_window_days": {
        "type": "integer",
        "required": false,
        "description": "Analysis window in days (1 to 365)",
        "default": 30
      },
      "anomaly_threshold": {
        "type": "number",
        "required": false,
        "description": "Threshold for anomaly detection (0.1 to 1.0)",
        "default": 0.8
      }
    },
    "error_messages": [
      "Data series not found: Specified data_series_id does not exist",
      "Invalid pattern types: Use supported temporal pattern detection methods",
      "Invalid analysis window: Must be between 1 and 365 days",
      "Invalid anomaly threshold: Must be between 0.1 and 1.0",
      "Insufficient data: Not enough temporal data points for reliable pattern analysis"
    ],
    "usage": "Provide time-series data ID and specify pattern types to
