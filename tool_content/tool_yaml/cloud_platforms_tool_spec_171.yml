field_name: cloud_platforms
subfield: Container Orchestration and Management
task: Monitor container health, performance metrics, and resource utilization
tool_description: "## STEP 1 — Rate task difficulty\n\nThis is a **hard** task due to its broad scope covering multiple monitoring dimensions (health, performance, resources), complex dependencies between containerized applications and orchestration platforms, high coordination requirements across distributed systems, and critical impact where monitoring failures can lead to service outages or resource wastage.\n\n## STEP 2 — Set a tool budget\n\nGiven the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to comprehensively cover container monitoring workflows including data collection, metric aggregation, alerting, visualization, and remediation actions.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tools with upstream dependencies → downstream affordances:**\n1. Container Metrics Collector → raw metrics data\n2. Resource Usage Analyzer → processed resource metrics  \n3. Health Check Executor → health status data\n4. Log Aggregator → centralized log data\n5. Alert Rule Manager → alert configurations\n6. Threshold Monitor → threshold violations\n7. Performance Baseline Calculator → performance baselines\n8. Anomaly Detector → anomaly alerts (consumes baselines)\n9. Dashboard Generator → visualization configs (consumes metrics)\n10. Report Generator → monitoring reports (consumes multiple data sources)\n11. Auto Scaler Controller → scaling actions (consumes metrics/alerts)\n12. Container Restart Manager → restart actions (consumes health data)\n13. Network Monitor → network performance data\n14. Storage Monitor → storage utilization data\n15. Service Discovery Scanner → service topology data\n16. Notification Dispatcher → alert notifications (consumes alerts)\n17. Metric Archive Manager → historical data storage\n\n## STEP 4 — Multi-tool plans\n\n**Simple plans:**\n- Basic health monitoring: Container Metrics Collector + Health Check Executor + Dashboard Generator\n- Resource alerting: Resource Usage Analyzer + Threshold Monitor + Notification Dispatcher\n\n**Medium plans:**  \n- Performance monitoring: Container Metrics Collector + Performance Baseline Calculator + Anomaly Detector + Alert Rule Manager + Dashboard Generator\n- Auto-remediation: Health Check Executor + Container Restart Manager + Log Aggregator + Notification Dispatcher + Report Generator\n\n**Complex plans:**\n- Full monitoring stack: Container Metrics Collector + Resource Usage Analyzer + Health Check Executor + Log Aggregator + Performance Baseline Calculator + Anomaly Detector + Dashboard Generator + Report Generator + Auto Scaler Controller + Notification Dispatcher\n- Comprehensive analysis: Service Discovery Scanner + Network Monitor + Storage Monitor + Container Metrics Collector + Performance Baseline Calculator + Anomaly Detector + Threshold Monitor + Metric Archive Manager + Report Generator\n\n## STEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"Container Metrics Collector\",\n  \"tool_description\": \"Collects real-time metrics from containers including CPU, memory, disk I/O, and network statistics across specified namespaces and time ranges.\",\n  \"parameters\": {\n    \"namespace\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Kubernetes namespace to monitor\"\n    },\n    \"container_names\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Specific container names to monitor\",\n      \"default\": \"None\"\n    },\n    \"metrics_types\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Types of metrics to collect: cpu, memory, disk_io, network, filesystem\"\n    },\n    \"sampling_interval\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Metrics collection interval in seconds (1-3600)\",\n      \"default\": 30\n    },\n    \"duration\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Collection duration in minutes (1-1440)\",\n     \
  \ \"default\": 60\n    }\n  },\n  \"error_messages\": [\n    \"Invalid namespace: Namespace does not exist or access denied. Verify namespace name and permissions.\",\n    \"Container not found: One or more specified containers do not exist in the namespace.\",\n    \"Invalid metrics type: Use only supported types [cpu, memory, disk_io, network, filesystem].\",\n    \"Invalid sampling interval: Must be between 1-3600 seconds.\",\n    \"Invalid duration: Must be between 1-1440 minutes.\",\n    \"Collection timeout: Metrics collection timed out. Check container and network connectivity.\"\n  ],\n  \"usage\": \"Specify namespace and metrics_types, optionally filter by container_names and set sampling_interval and duration. Returns timestamped metrics data for analysis.\",\n  \"output_details\": {\n    \"collection_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of metrics collection operation\"\n    },\n    \"container_count\": {\n      \"type\": \"integer\", \n      \"description\": \"Number of containers monitored\"\n    },\n    \"timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of ISO 8601 timestamp strings\"\n    },\n    \"cpu_usage_percent\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"CPU usage percentages corresponding to timestamps\"\n    },\n    \"memory_usage_bytes\": {\n      \"type\": \"array\", \n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Memory usage in bytes corresponding to timestamps\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Resource Usage Analyzer\",\n  \"tool_description\": \"Analyzes container resource consumption patterns, calculates utilization statistics, and identifies resource bottlenecks and waste.\",\n  \"parameters\": {\n    \"metrics_data\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Array of numeric metric values to analyze\"\n    },\n    \"resource_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of resource being analyzed: cpu, memory, disk, network\"\n    },\n    \"analysis_window\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Analysis window in minutes (5-1440)\",\n      \"default\": 60\n    },\n    \"percentiles\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"description\": \"Percentiles to calculate (0-100)\",\n      \"default\": \"[50, 90, 95, 99]\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty metrics data: Provide non-empty array of numeric values.\",\n    \"Invalid resource type: Use one of [cpu, memory, disk, network].\",\n    \"Invalid analysis window: Must be between 5-1440 minutes.\",\n    \"Invalid percentiles: All values must be integers between 0-100.\",\n    \"Insufficient data: Need at least 10 data points for meaningful analysis.\"\n  ],\n  \"usage\": \"Provide metrics_data array and resource_type, optionally set analysis_window and percentiles. Returns comprehensive resource utilization statistics.\",\n  \"output_details\": {\n    \"analysis_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of resource usage analysis\"\n    },\n    \"mean_usage\": {\n      \"type\": \"number\",\n      \"description\": \"Mean resource usage value\"\n    },\n    \"max_usage\": {\n      \"type\": \"number\", \n      \"description\": \"Maximum resource usage observed\"\n    },\n    \"min_usage\": {\n      \"type\": \"number\",\n      \"description\": \"Minimum resource usage observed\"\n    },\n    \"percentile_values\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Resource usage values at requested percentiles\"\n    },\n    \"bottleneck_detected\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether resource bottleneck was detected\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\"\
  : \"Health Check Executor\",\n  \"tool_description\": \"Executes health checks on containers including readiness probes, liveness probes, and custom health endpoints to determine container operational status.\",\n  \"parameters\": {\n    \"container_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Container ID or name to check\"\n    },\n    \"health_check_type\": {\n      \"type\": \"string\", \n      \"required\": true,\n      \"description\": \"Type of health check: readiness, liveness, custom_http, custom_tcp, exec\"\n    },\n    \"endpoint_url\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"HTTP endpoint URL for custom_http checks\",\n      \"default\": \"None\"\n    },\n    \"port\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Port number for TCP checks (1-65535)\",\n      \"default\": \"None\"\n    },\n    \"command\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Command to execute for exec checks\",\n      \"default\": \"None\"\n    },\n    \"timeout_seconds\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Health check timeout in seconds (1-300)\",\n      \"default\": 30\n    },\n    \"retry_attempts\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of retry attempts (1-10)\",\n      \"default\": 3\n    }\n  },\n  \"error_messages\": [\n    \"Container not found: Container ID does not exist or is not accessible.\",\n    \"Invalid health check type: Use one of [readiness, liveness, custom_http, custom_tcp, exec].\",\n    \"Missing endpoint URL: endpoint_url required for custom_http checks.\",\n    \"Missing port: port required for custom_tcp checks.\",\n    \"Missing command: command required for exec checks.\",\n    \"Invalid timeout: Must be between 1-300 seconds.\",\n    \"Invalid retry attempts: Must be between 1-10 attempts.\",\n    \"Health check failed: All retry attempts exhausted, container is unhealthy.\"\n  ],\n  \"usage\": \"Specify container_id and health_check_type, provide additional parameters based on check type. Returns health status and diagnostic information.\",\n  \"output_details\": {\n    \"container_id\": {\n      \"type\": \"string\",\n      \"description\": \"ID of the checked container\"\n    },\n    \"health_status\": {\n      \"type\": \"string\", \n      \"description\": \"Health status: healthy, unhealthy, unknown\"\n    },\n    \"check_duration_ms\": {\n      \"type\": \"integer\",\n      \"description\": \"Time taken for health check in milliseconds\"\n    },\n    \"attempts_made\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of attempts made before success or final failure\"\n    },\n    \"last_check_time\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp of last health check attempt\"\n    },\n    \"error_message\": {\n      \"type\": \"string\",\n      \"description\": \"Error details if health check failed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Log Aggregator\",\n  \"tool_description\": \"Aggregates and processes container logs from multiple sources, applies filtering and parsing rules, and prepares logs for analysis and alerting.\",\n  \"parameters\": {\n    \"log_sources\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Container IDs or log file paths to aggregate\"\n    },\n    \"start_time\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Start time for log collection (ISO 8601 format)\",\n      \"format\": \"date-time\"\n    },\n    \"end_time\": {\n      \"type\": \"string\", \n      \"required\": true,\n      \"description\": \"End time for log collection (ISO 8601 format)\",\n      \"format\": \"date-time\"\n    },\n    \"log_level_filter\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\"\
  : \"Log levels to include: DEBUG, INFO, WARN, ERROR, FATAL\",\n      \"default\": \"None\"\n    },\n    \"search_patterns\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Regex patterns to search for in logs\",\n      \"default\": \"None\"\n    },\n    \"max_lines\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum number of log lines to return (1-10000)\",\n      \"default\": 1000\n    },\n    \"include_metadata\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include log metadata (timestamp, source, level)\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid time range: start_time must be earlier than end_time and both must be valid ISO 8601 timestamps.\",\n    \"Log source not found: One or more specified log sources are not accessible.\",\n    \"Invalid log level: Use only [DEBUG, INFO, WARN, ERROR, FATAL].\",\n    \"Invalid regex pattern: One or more search patterns contain invalid regex syntax.\",\n    \"Invalid max_lines: Must be between 1-10000.\",\n    \"Log collection timeout: Log aggregation timed out, reduce time range or max_lines.\"\n  ],\n  \"usage\": \"Specify log_sources, start_time, and end_time, optionally set filters and limits. Returns aggregated and filtered log entries with metadata.\",\n  \"output_details\": {\n    \"aggregation_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of log aggregation operation\"\n    },\n    \"total_lines_processed\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of log lines processed\"\n    },\n    \"lines_returned\": {\n      \"type\": \"integer\", \n      \"description\": \"Number of log lines returned after filtering\"\n    },\n    \"log_entries\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of log entry strings\"\n    },\n    \"error_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of error-level log entries found\"\n    },\n    \"warning_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of warning-level log entries found\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Alert Rule Manager\",\n  \"tool_description\": \"Creates, manages, and evaluates alert rules for container monitoring with configurable conditions, thresholds, and notification settings.\",\n  \"parameters\": {\n    \"rule_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique name for the alert rule\"\n    },\n    \"metric_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the metric to monitor\"\n    },\n    \"condition\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Alert condition: greater_than, less_than, equals, not_equals, contains\"\n    },\n    \"threshold_value\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Threshold value to compare against\"\n    },\n    \"evaluation_window\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Time window for evaluation in minutes (1-1440)\",\n      \"default\": 5\n    },\n    \"severity\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Alert severity level: low, medium, high, critical\",\n      \"default\": \"medium\"\n    },\n    \"notification_channels\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Notification channels: email, slack, webhook, pagerduty\",\n      \"default\": \"None\"\n    },\n    \"enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether the alert rule is enabled\",\n      \"default\": true\n    },\n    \"suppression_duration\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\"\
  : \"Alert suppression duration in minutes after firing (0-1440)\",\n      \"default\": 0\n    }\n  },\n  \"error_messages\": [\n    \"Duplicate rule name: Alert rule with this name already exists.\",\n    \"Invalid condition: Use one of [greater_than, less_than, equals, not_equals, contains].\",\n    \"Invalid evaluation window: Must be between 1-1440 minutes.\",\n    \"Invalid severity: Use one of [low, medium, high, critical].\",\n    \"Invalid notification channel: Use only [email, slack, webhook, pagerduty].\",\n    \"Invalid suppression duration: Must be between 0-1440 minutes.\",\n    \"Rule evaluation failed: Unable to evaluate rule due to missing or invalid metric data.\"\n  ],\n  \"usage\": \"Specify rule_name, metric_name, condition, and threshold_value, optionally configure evaluation_window, severity, notifications, and other settings.\",\n  \"output_details\": {\n    \"rule_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the created alert rule\"\n    },\n    \"rule_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of rule creation: created, updated, failed\"\n    },\n    \"evaluation_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of times rule has been evaluated\"\n    },\n    \"last_triggered\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when rule was last triggered\"\n    },\n    \"current_state\": {\n      \"type\": \"string\", \n      \"description\": \"Current rule state: ok, alerting, suppressed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Threshold Monitor\",\n  \"tool_description\": \"Monitors metric values against predefined thresholds and generates alerts when violations occur, supporting multiple threshold types and conditions.\",\n  \"parameters\": {\n    \"metric_values\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Array of metric values to monitor\"\n    },\n    \"threshold_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of threshold: static, dynamic, percentile\"\n    },\n    \"threshold_config\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Threshold configuration values (limits, percentiles, etc.)\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty metric values: Provide non-empty array of numeric values to monitor.\",\n    \"Invalid threshold type: Use one of [static, dynamic, percentile].\",\n    \"Invalid threshold config: Configuration values must be appropriate for the threshold type.\",\n    \"Insufficient data: Need sufficient metric values for threshold evaluation.\"\n  ],\n  \"usage\": \"Provide metric_values array and configure threshold_type with appropriate threshold_config values. Returns violation alerts and threshold status.\",\n  \"output_details\": {\n    \"violations_detected\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of threshold violations detected\"\n    },\n    \"violation_timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Timestamps when violations occurred\"\n    },\n    \"threshold_status\": {\n      \"type\": \"string\",\n      \"description\": \"Overall threshold status: normal, warning, critical\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Performance Baseline Calculator\",\n  \"tool_description\": \"Calculates performance baselines from historical container metrics data using statistical analysis and machine learning techniques for anomaly detection reference.\",\n  \"parameters\": {\n    \"historical_data\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Historical metric values for baseline calculation\"\n    },\n    \"baseline_method\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Baseline calculation method: statistical,\
  \ seasonal, trend_adjusted, ml_based\"\n    },\n    \"time_window_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Historical time window in days (1-365)\",\n      \"default\": 30\n    },\n    \"seasonality_period\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Seasonality period in hours for seasonal method (1-168)\",\n      \"default\": \"None\"\n    },\n    \"confidence_level\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Confidence level for baseline bounds (0.8-0.99)\",\n      \"default\": 0.95\n    },\n    \"outlier_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Outlier removal threshold as standard deviations (1-5)\",\n      \"default\": 3.0\n    }\n  },\n  \"error_messages\": [\n    \"Insufficient historical data: Need at least 100 data points for reliable baseline calculation.\",\n    \"Invalid baseline method: Use one of [statistical, seasonal, trend_adjusted, ml_based].\",\n    \"Invalid time window: Must be between 1-365 days.\",\n    \"Invalid seasonality period: Must be between 1-168 hours when using seasonal method.\",\n    \"Invalid confidence level: Must be between 0.8-0.99.\",\n    \"Invalid outlier threshold: Must be between 1-5 standard deviations.\",\n    \"Baseline calculation failed: Unable to calculate baseline due to data quality issues.\"\n  ],\n  \"usage\": \"Provide historical_data and baseline_method, optionally configure time_window_days, seasonality settings, and statistical parameters for baseline calculation.\",\n  \"output_details\": {\n    \"baseline_value\": {\n      \"type\": \"number\",\n      \"description\": \"Calculated baseline value for the metric\"\n    },\n    \"upper_bound\": {\n      \"type\": \"number\",\n      \"description\": \"Upper bound for normal behavior\"\n    },\n    \"lower_bound\": {\n      \"type\": \"number\",\n      \"description\": \"Lower bound for normal behavior\"\n    },\n    \"baseline_quality\": {\n      \"type\": \"string\",\n      \"description\": \"Quality assessment of baseline: excellent, good, fair, poor\"\n    },\n    \"data_points_used\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data points used in baseline calculation\"\n    },\n    \"calculation_method\": {\n      \"type\": \"string\",\n      \"description\": \"Method used for baseline calculation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Anomaly Detector\",\n  \"tool_description\": \"Detects anomalous behavior in container metrics using statistical analysis and machine learning models, comparing current values against established baselines.\",\n  \"parameters\": {\n    \"current_values\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"required\": true,\n      \"description\": \"Current metric values to check for anomalies\"\n    },\n    \"baseline_value\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Baseline reference value from Performance Baseline Calculator\"\n    },\n    \"upper_bound\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Upper bound for normal behavior\"\n    },\n    \"lower_bound\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Lower bound for normal behavior\"\n    },\n    \"detection_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Anomaly detection method: threshold, statistical, isolation_forest, lstm\",\n      \"default\": \"threshold\"\n    },\n    \"sensitivity\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Detection sensitivity: low, medium, high\",\n      \"default\": \"medium\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty current values: Provide non-empty array of current metric values.\",\n    \"Invalid bounds: upper_bound must be greater than lower_bound and baseline_value should be between bounds.\",\n    \"Invalid\
  \ detection method: Use one of [threshold, statistical, isolation_forest, lstm].\",\n    \"Invalid sensitivity: Use one of [low, medium, high].\",\n    \"Detection failed: Anomaly detection algorithm failed due to data quality issues.\"\n  ],\n  \"usage\": \"Provide current_values and baseline bounds from Performance Baseline Calculator, optionally set detection_method and sensitivity for anomaly detection.\",\n  \"output_details\": {\n    \"anomalies_detected\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of anomalies detected in current values\"\n    },\n    \"anomaly_indices\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"description\": \"Indices of anomalous values in the input array\"\n    },\n    \"anomaly_scores\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Anomaly scores for each detected anomaly\"\n    },\n    \"overall_anomaly_level\": {\n      \"type\": \"string\",\n      \"description\": \"Overall anomaly level: none, low, medium, high, critical\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Dashboard Generator\",\n  \"tool_description\": \"Generates monitoring dashboards and visualizations for container metrics, health status, and performance data with customizable layouts and chart types.\",\n  \"parameters\": {\n    \"dashboard_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the generated dashboard\"\n    },\n    \"data_sources\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Data sources to include: metrics, logs, health_checks, alerts, performance\"\n    },\n    \"chart_types\": {\n      \"type\": \"array\", \n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Chart types to generate: line, bar, pie, gauge, heatmap, table\"\n    },\n    \"time_range\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Default time range: 1h, 6h, 24h, 7d, 30d\",\n      \"default\": \"24h\"\n    },\n    \"refresh_interval\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Dashboard refresh interval in seconds (10-3600)\",\n      \"default\": 60\n    },\n    \"layout\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Dashboard layout: grid, vertical, horizontal, custom\",\n      \"default\": \"grid\"\n    },\n    \"include_filters\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include interactive filters for namespaces, containers\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid data sources: Use only [metrics, logs, health_checks, alerts, performance].\",\n    \"Invalid chart types: Use only [line, bar, pie, gauge, heatmap, table].\",\n    \"Invalid time range: Use one of [1h, 6h, 24h, 7d, 30d].\",\n    \"Invalid refresh interval: Must be between 10-3600 seconds.\",\n    \"Invalid layout: Use one of [grid, vertical, horizontal, custom].\",\n    \"Dashboard generation failed: Unable to generate dashboard due to configuration errors.\"\n  ],\n  \"usage\": \"Specify dashboard_name, data_sources, and chart_types, optionally configure time_range, refresh settings, and layout preferences.\",\n  \"output_details\": {\n    \"dashboard_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the generated dashboard\"\n    },\n    \"dashboard_url\": {\n      \"type\": \"string\",\n      \"description\": \"URL to access the generated dashboard\"\n    },\n    \"widget_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of widgets created in the dashboard\"\n    },\n    \"generation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Dashboard generation status: success, partial, failed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Report Generator\",\n  \"tool_description\": \"Generates comprehensive\
  \ monitoring reports combining container metrics, health status, alerts, and performance analysis with customizable formats and scheduling.\",\n  \"parameters\": {\n    \"report_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name for the generated report\"\n    },\n    \"report_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of report: summary, detailed, executive, technical, compliance\"\n    },\n    \"time_period\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Reporting time period: daily, weekly, monthly, quarterly, custom\"\n    },\n    \"start_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Start date for custom time period (ISO 8601 format)\",\n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    },\n    \"end_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"End date for custom time period (ISO 8601 format)\", \n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    },\n    \"include_sections\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Report sections: overview, metrics_summary, health_analysis, alerts_summary, performance_trends, recommendations\",\n      \"default\": \"[\\\"overview\\\", \\\"metrics_summary\\\", \\\"health_analysis\\\"]\"\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Report output format: pdf, html, json, csv\",\n      \"default\": \"pdf\"\n    },\n    \"include_charts\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include charts and visualizations in the report\",\n      \"default\": true\n    },\n    \"namespace_filter\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Filter report by specific namespaces\",\n      \"default\": \"None\"\n    },\n    \"severity_filter\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"description\": \"Filter alerts by severity: low, medium, high, critical\",\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid report type: Use one of [summary, detailed, executive, technical, compliance].\",\n    \"Invalid time period: Use one of [daily, weekly, monthly, quarterly, custom].\",\n    \"Missing dates for custom period: start_date and end_date required when time_period is custom.\",\n    \"Invalid date range: start_date must be earlier than end_date and both must be valid ISO 8601 timestamps.\",\n    \"Invalid report sections: Use only [overview, metrics_summary, health_analysis, alerts_summary, performance_trends, recommendations].\",\n    \"Invalid output format: Use one of [pdf, html, json, csv].\",\n    \"Invalid severity filter: Use only [low, medium, high, critical].\",\n    \"Report generation failed: Unable to generate report due to insufficient data or configuration errors.\"\n  ],\n  \"usage\": \"Specify report_name, report_type, and time_period, configure sections and filters as needed. For custom periods, provide start_date and end_date.\",\n  \"output_details\": {\n    \"report_id\": {\n      \"type"
