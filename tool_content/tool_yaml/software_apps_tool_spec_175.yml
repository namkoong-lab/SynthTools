field_name: software_apps
subfield: Web Application Development
task: Backend API Design and Database Integration
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task involves designing backend APIs and integrating with databases, which requires coordinating multiple technical components including API endpoints, database schemas, authentication, validation, and data transformations. The task has medium-high complexity due to the need to handle various data types, ensure security, manage database connections, and coordinate between different layers of the application stack.\n\n## STEP 2 — Set a tool budget\n\nGiven the medium-high complexity, I'm targeting 14 tools to cover the various aspects of backend API design and database integration, including schema management, endpoint creation, authentication, validation, testing, and deployment.\n\n## STEP 3 — List all tool names with dependencies and affordances\n\n1. **Database Schema Creator** - Consumes: table specifications → Produces: schema definitions\n2. **API Endpoint Generator** - Consumes: endpoint specs → Produces: route configurations \n3. **Database Connection Manager** - Consumes: connection params → Produces: connection status\n4. **Query Builder** - Consumes: query specifications → Produces: SQL queries\n5. **Data Validator** - Consumes: data + validation rules → Produces: validation results\n6. **Authentication Handler** - Consumes: user credentials → Produces: auth tokens\n7. **Request Parser** - Consumes: HTTP requests → Produces: parsed data\n8. **Response Formatter** - Consumes: data + format specs → Produces: formatted responses\n9. **Migration Generator** - Consumes: schema changes → Produces: migration scripts\n10. **API Documentation Generator** - Consumes: endpoint definitions → Produces: API docs\n11. **Database Seeder** - Consumes: seed data → Produces: populated database\n12. **Error Handler** - Consumes: errors + context → Produces: error responses\n13. **API Testing Framework** - Consumes: test cases → Produces: test results\n14. **Performance Monitor** - Consumes: API metrics → Produces: performance reports\n\n## STEP 4 — Multi-tool plans\n\n**Simple Plans:**\n1. Basic CRUD API: Database Schema Creator → API Endpoint Generator → Query Builder → Response Formatter\n2. Data Validation: Request Parser → Data Validator → Error Handler → Response Formatter\n\n**Medium Plans:**\n1. Authenticated API: Authentication Handler → Request Parser → Data Validator → Query Builder → Response Formatter\n2. Database Setup: Database Connection Manager → Database Schema Creator → Migration Generator → Database Seeder\n\n**Complex Plans:**\n1. Full API Development: Database Connection Manager → Database Schema Creator → Migration Generator → API Endpoint Generator → Authentication Handler → Request Parser → Data Validator → Query Builder → Response Formatter → Error Handler → API Documentation Generator\n2. Testing & Monitoring: API Endpoint Generator → Database Seeder → API Testing Framework → Performance Monitor → Error Handler\n\n## STEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"Database Schema Creator\",\n  \"tool_description\": \"Creates database schema definitions with tables, columns, data types, constraints, and relationships for backend applications.\",\n  \"parameters\": {\n    \"database_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of database: mysql, postgresql, sqlite, mongodb\"\n    },\n    \"table_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the database table to create\"\n    },\n    \"columns\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Column definitions in format 'name:type:constraints'\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"primary_key\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the primary key column\"\n    },\n    \"foreign_keys\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Foreign key relationships in format 'column:reference_table:reference_column'\"\
  ,\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid database type: Use one of [mysql, postgresql, sqlite, mongodb]\",\n    \"Empty table name: Provide a valid table name with alphanumeric characters and underscores only\",\n    \"Invalid column format: Use format 'name:type:constraints' for each column definition\",\n    \"Primary key not found: Ensure the primary_key matches one of the column names\",\n    \"Invalid foreign key format: Use format 'column:reference_table:reference_column'\"\n  ],\n  \"usage\": \"Specify database_type, table_name, columns array with proper formatting, and primary_key. Optionally add foreign_keys for relationships.\",\n  \"output_details\": {\n    \"schema_sql\": {\n      \"type\": \"string\",\n      \"description\": \"Generated SQL CREATE TABLE statement\"\n    },\n    \"table_structure\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable table structure description\"\n    },\n    \"constraints\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of all constraints applied to the table\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"API Endpoint Generator\",\n  \"tool_description\": \"Generates RESTful API endpoint configurations with HTTP methods, paths, parameters, and response schemas for web applications.\",\n  \"parameters\": {\n    \"resource_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the resource (e.g., users, products, orders)\"\n    },\n    \"http_methods\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"HTTP methods to support\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 5\n    },\n    \"base_path\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Base API path (e.g., /api/v1)\"\n    },\n    \"authentication_required\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether authentication is required for these endpoints\",\n      \"default\": true\n    },\n    \"rate_limit\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Requests per minute limit (10-1000)\",\n      \"default\": 100\n    },\n    \"request_validation\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Enable request body validation\",\n      \"default\": true\n    },\n    \"response_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Default response format: json, xml\",\n      \"default\": \"json\"\n    },\n    \"pagination_enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Enable pagination for GET requests\",\n      \"default\": true\n    },\n    \"cors_enabled\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Enable CORS headers\",\n      \"default\": true\n    },\n    \"cache_ttl\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Cache time-to-live in seconds (0-3600)\",\n      \"default\": 300\n    },\n    \"allowed_origins\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Allowed CORS origins\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid resource name: Use alphanumeric characters and underscores only\",\n    \"Invalid HTTP method: Use one of [GET, POST, PUT, DELETE, PATCH]\",\n    \"Invalid base path: Must start with / and contain valid URL characters\",\n    \"Invalid rate limit: Must be between 10 and 1000 requests per minute\",\n    \"Invalid response format: Use 'json' or 'xml'\",\n    \"Invalid cache TTL: Must be between 0 and 3600 seconds\",\n    \"Invalid origin format: Provide valid URLs for CORS origins\"\n  ],\n\
  \  \"usage\": \"Specify resource_name, http_methods array, and base_path. Configure optional settings for authentication, rate limiting, validation, and CORS as needed.\",\n  \"output_details\": {\n    \"endpoints\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Generated endpoint paths with HTTP methods\"\n    },\n    \"route_config\": {\n      \"type\": \"string\",\n      \"description\": \"Complete route configuration code\"\n    },\n    \"middleware\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Required middleware components\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Database Connection Manager\",\n  \"tool_description\": \"Manages database connections with connection pooling, retry logic, and health monitoring for backend applications.\",\n  \"parameters\": {\n    \"database_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database type: mysql, postgresql, sqlite, mongodb, redis\"\n    },\n    \"host\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database server hostname or IP address\"\n    },\n    \"port\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Database server port number\"\n    },\n    \"database_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the database to connect to\"\n    },\n    \"username\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database username for authentication\"\n    },\n    \"password\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Database password for authentication\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid database type: Use one of [mysql, postgresql, sqlite, mongodb, redis]\",\n    \"Connection failed: Check host, port, and network connectivity\",\n    \"Authentication failed: Verify username and password\",\n    \"Database not found: Ensure the specified database exists\",\n    \"Port out of range: Use a valid port number between 1 and 65535\",\n    \"Invalid hostname: Provide a valid hostname or IP address\"\n  ],\n  \"usage\": \"Provide database_type, host, port, database_name, username, and password to establish a database connection with automatic health monitoring.\",\n  \"output_details\": {\n    \"connection_status\": {\n      \"type\": \"string\",\n      \"description\": \"Current connection status: connected, disconnected, error\"\n    },\n    \"connection_string\": {\n      \"type\": \"string\",\n      \"description\": \"Generated connection string (password masked)\"\n    },\n    \"health_check\": {\n      \"type\": \"boolean\",\n      \"description\": \"Database health status\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Query Builder\",\n  \"tool_description\": \"Constructs optimized SQL queries with support for complex conditions, joins, aggregations, and parameterized statements.\",\n  \"parameters\": {\n    \"query_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of query: SELECT, INSERT, UPDATE, DELETE\"\n    },\n    \"table_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Primary table name for the query\"\n    },\n    \"columns\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Columns to select or modify\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    },\n    \"conditions\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"WHERE conditions in format 'column:operator:value'\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    },\n    \"joins\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"JOIN clauses in format 'type:table:condition'\",\n      \"items\"\
  : {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid query type: Use one of [SELECT, INSERT, UPDATE, DELETE]\",\n    \"Empty table name: Provide a valid table name\",\n    \"Invalid condition format: Use 'column:operator:value' format\",\n    \"Invalid join format: Use 'type:table:condition' format\",\n    \"Missing required columns: Specify columns for SELECT queries\"\n  ],\n  \"usage\": \"Specify query_type and table_name. Add columns, conditions, and joins as needed. The tool generates optimized SQL with parameterized values.\",\n  \"output_details\": {\n    \"sql_query\": {\n      \"type\": \"string\",\n      \"description\": \"Generated SQL query with parameter placeholders\"\n    },\n    \"parameters\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Parameter values for the query\"\n    },\n    \"query_explanation\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable explanation of the query logic\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Validator\",\n  \"tool_description\": \"Validates incoming data against predefined schemas with support for custom rules, type checking, and sanitization.\",\n  \"parameters\": {\n    \"data_fields\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Field definitions in format 'name:type:required:constraints'\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 100\n    },\n    \"validation_mode\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Validation strictness: strict, lenient, custom\",\n      \"default\": \"strict\"\n    },\n    \"sanitize_input\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Enable input sanitization to prevent injection attacks\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid field format: Use 'name:type:required:constraints' format\",\n    \"Invalid validation mode: Use one of [strict, lenient, custom]\",\n    \"Empty field definitions: Provide at least one field definition\",\n    \"Unsupported data type: Use supported types like string, integer, number, boolean, email, date\"\n  ],\n  \"usage\": \"Define data_fields with proper formatting including type and constraints. Set validation_mode and sanitize_input as needed.\",\n  \"output_details\": {\n    \"validation_schema\": {\n      \"type\": \"string\",\n      \"description\": \"Generated validation schema code\"\n    },\n    \"rules_summary\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Summary of all validation rules\"\n    },\n    \"sanitization_rules\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Applied sanitization rules\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Authentication Handler\",\n  \"tool_description\": \"Manages user authentication with support for JWT tokens, password hashing, session management, and role-based access control.\",\n  \"parameters\": {\n    \"auth_method\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Authentication method: jwt, session, oauth, basic\"\n    },\n    \"token_expiry\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Token expiration time in minutes (15-10080)\",\n      \"default\": 1440\n    },\n    \"password_policy\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Password strength policy: weak, medium, strong\",\n      \"default\": \"medium\"\n    },\n    \"roles\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Available user roles for access control\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    },\n    \"enable_refresh_tokens\"\
  : {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Enable refresh token functionality\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid authentication method: Use one of [jwt, session, oauth, basic]\",\n    \"Invalid token expiry: Must be between 15 and 10080 minutes\",\n    \"Invalid password policy: Use one of [weak, medium, strong]\",\n    \"Empty roles array: Provide at least one role when using role-based access\"\n  ],\n  \"usage\": \"Select auth_method and configure token_expiry, password_policy, and roles as needed. Enable refresh_tokens for enhanced security.\",\n  \"output_details\": {\n    \"auth_config\": {\n      \"type\": \"string\",\n      \"description\": \"Generated authentication configuration\"\n    },\n    \"middleware_code\": {\n      \"type\": \"string\",\n      \"description\": \"Authentication middleware implementation\"\n    },\n    \"security_features\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of enabled security features\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Request Parser\",\n  \"tool_description\": \"Parses and processes incoming HTTP requests, extracting headers, body, query parameters, and path variables for API endpoints.\",\n  \"parameters\": {\n    \"supported_content_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Supported content types for request parsing\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"max_request_size\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum request size in bytes (1024-10485760)\",\n      \"default\": 1048576\n    }\n  },\n  \"error_messages\": [\n    \"Unsupported content type: Request content type not in supported list\",\n    \"Request too large: Request exceeds maximum allowed size\",\n    \"Malformed request: Unable to parse request body or headers\",\n    \"Empty content types: Provide at least one supported content type\"\n  ],\n  \"usage\": \"Configure supported_content_types array and optionally set max_request_size. The tool will handle parsing of various HTTP request formats.\",\n  \"output_details\": {\n    \"parser_config\": {\n      \"type\": \"string\",\n      \"description\": \"Generated request parser configuration\"\n    },\n    \"content_handlers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of content type handlers\"\n    },\n    \"size_limits\": {\n      \"type\": \"string\",\n      \"description\": \"Configured size limits and restrictions\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Response Formatter\",\n  \"tool_description\": \"Formats API responses with consistent structure, status codes, headers, and content types for web applications.\",\n  \"parameters\": {\n    \"default_format\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Default response format: json, xml, csv\"\n    },\n    \"include_metadata\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include response metadata like timestamps and request IDs\",\n      \"default\": true\n    },\n    \"compression\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Enable response compression\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid response format: Use one of [json, xml, csv]\",\n    \"Formatting error: Unable to serialize response data to specified format\"\n  ],\n  \"usage\": \"Specify default_format and configure metadata inclusion and compression options. The tool ensures consistent response formatting across all endpoints.\",\n  \"output_details\": {\n    \"formatter_config\": {\n      \"type\": \"string\",\n      \"description\": \"Generated response formatter configuration\"\n    },\n    \"supported_formats\": {\n      \"type\": \"\
  array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"All supported response formats\"\n    },\n    \"headers_template\": {\n      \"type\": \"string\",\n      \"description\": \"Standard response headers template\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Migration Generator\",\n  \"tool_description\": \"Generates database migration scripts for schema changes, data transformations, and version control management.\",\n  \"parameters\": {\n    \"migration_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of migration: create_table, alter_table, drop_table, add_column, drop_column, add_index\"\n    },\n    \"target_table\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the table affected by the migration\"\n    },\n    \"migration_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Descriptive name for the migration\"\n    },\n    \"changes\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of changes to apply in the migration\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"reversible\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Generate rollback script for the migration\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid migration type: Use one of [create_table, alter_table, drop_table, add_column, drop_column, add_index]\",\n    \"Empty table name: Provide a valid target table name\",\n    \"Empty migration name: Provide a descriptive migration name\",\n    \"No changes specified: Provide at least one change to apply\"\n  ],\n  \"usage\": \"Specify migration_type, target_table, migration_name, and changes array. Set reversible to true for rollback capability.\",\n  \"output_details\": {\n    \"up_script\": {\n      \"type\": \"string\",\n      \"description\": \"SQL script to apply the migration\"\n    },\n    \"down_script\": {\n      \"type\": \"string\",\n      \"description\": \"SQL script to rollback the migration\"\n    },\n    \"migration_file\": {\n      \"type\": \"string\",\n      \"description\": \"Complete migration file content\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"API Documentation Generator\",\n  \"tool_description\": \"Generates comprehensive API documentation with endpoint descriptions, request/response schemas, and interactive examples.\",\n  \"parameters\": {\n    \"api_title\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Title of the API documentation\"\n    },\n    \"api_version\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"API version number\"\n    },\n    \"base_url\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Base URL for the API\"\n    },\n    \"endpoints\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of API endpoints to document\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Documentation format: swagger, openapi, markdown\",\n      \"default\": \"openapi\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty API title: Provide a meaningful API title\",\n    \"Invalid version format: Use semantic versioning (e.g., 1.0.0)\",\n    \"Invalid base URL: Provide a valid HTTP/HTTPS URL\",\n    \"No endpoints provided: Include at least one endpoint to document\",\n    \"Invalid output format: Use one of [swagger, openapi, markdown]\"\n  ],\n  \"usage\": \"Provide api_title, api_version, base_url, and endpoints array. Select desired output_format for the documentation.\",\n  \"output_details\": {\n    \"documentation\": {\n      \"type\": \"string\",\n      \"description\": \"Complete API documentation content\"\n    },\n   \
  \ \"endpoint_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of documented endpoints\"\n    },\n    \"interactive_features\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Available interactive documentation features\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Database Seeder\",\n  \"tool_description\": \"Populates database tables with initial or test data using configurable seed data sources and generation rules.\",\n  \"parameters\": {\n    \"table_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the table to seed with data\"\n    },\n    \"seed_data_source\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Data source type: file, generated, api\"\n    },\n    \"record_count\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of records to generate (1-10000)\",\n      \"default\": 100\n    },\n    \"data_file_path\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Path to seed data file (required if source is 'file')\",\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid table name: Provide a valid database table name\",\n    \"Invalid data source: Use one of [file, generated, api]\",\n    \"Invalid record count: Must be between 1 and 10000\",\n    \"File not found: Specified data file path does not exist\",\n    \"Missing file path: data_file_path is required when source is 'file'\"\n  ],\n  \"usage\": \"Specify table_name and seed_data_source. Set record_count for generated data or provide data_file_path for file-based seeding.\",\n  \"output_details\": {\n    \"seeded_records\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of records successfully inserted\"\n    },\n    \"seed_script\": {\n      \"type\": \"string\",\n      \"description\": \"Generated SQL insert script\"\n    },\n    \"execution_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of the seeding operation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Error Handler\",\n  \"tool_description\": \"Manages application errors with consistent error responses, logging, and debugging information for API endpoints.\",\n  \"parameters\": {\n    \"error_format\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Error response format: standard, detailed, minimal\"\n    },\n    \"log_level\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Logging level: debug, info, warn, error\",\n      \"default\": \"error\"\n    },\n    \"include_stack_trace\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Include stack trace in error responses (development only)\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Invalid error format: Use one of [standard, detailed, minimal]\",\n    \"Invalid log level: Use one of [debug, info, warn, error]\"\n  ],\n  \"usage\": \"Configure error_format and log_level. Set include_stack_trace to true only in development environments for debugging.\",\n  \"output_details\": {\n    \"error_handler_config\": {\n      \"type\": \"string\",\n      \"description\": \"Generated error handling configuration\"\n    },\n    \"logging_setup\": {\n      \"type\": \"string\",\n      \"description\": \"Logging configuration code\"\n    },\n    \"error_templates\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Standard error response templates\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"API Testing Framework\",\n  \"tool_description\": \"Creates comprehensive test suites for API endpoints including unit tests, integration tests, and performance tests.\",\n  \"parameters\": {\n    \"test_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Types of tests\
  \ to generate\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"endpoints_to_test\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of API endpoints to test\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"test_framework\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Testing framework: jest, mocha, pytest, junit\",\n      \"default\": \"jest\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid test type: Use one of [unit, integration, performance, security, load]\",\n    \"No endpoints specified: Provide at least one endpoint to test\",\n    \"Invalid test framework: Use one of [jest, mocha, pytest, junit]\"\n  ],\n  \"usage\": \"Select test_types and endpoints_to_test arrays. Choose appropriate test_framework for your development environment.\",\n  \"output_details\": {\n    \"test_files\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Generated test file names and paths\"\n    },\n    \"test_coverage\": {\n      \"type\": \"string\",\n      \"description\": \"Expected test coverage summary\"\n    },\n    \"setup_instructions\": {\n      \"type\": \"string\",\n      \"description\": \"Instructions for running the generated tests\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Performance Monitor\",\n  \"tool_description\": \"Monitors API performance metrics including response times, throughput, error rates, and resource utilization with alerting capabilities.\",\n  \"parameters\": {\n    \"metrics_to_track\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Performance metrics to monitor\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"monitoring_interval\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Monitoring interval in seconds (10-3600)\",\n      \"default\": 60\n    },\n    \"alert_thresholds\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Alert threshold configurations in format 'metric:operator:value'\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid metric: Use supported metrics like response_time, throughput, error_rate, cpu_usage, memory_usage\",\n    \"Invalid monitoring interval: Must be between 10 and 3600 seconds\",\n    \"Invalid threshold format: Use 'metric:operator:value' format (e.g., response_time:>:1000)\"\n  ],\n  \"usage\": \"Configure metrics_to_track array and set monitoring_interval. Define alert_thresholds for proactive monitoring and alerting.\",\n  \"output_details\": {\n    \"monitoring_config\": {\n      \"type\": \"string\",\n      \"description\": \"Generated performance monitoring configuration"
