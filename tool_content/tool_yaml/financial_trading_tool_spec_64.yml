field_name: financial_trading
subfield: algorithmic_trading_strategy_development
task: Market data collection and preprocessing for strategy backtesting
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task involves medium complexity due to the need to handle multiple data sources, various preprocessing techniques, data quality validation, and time-series specific operations. The coordination between data collection, cleaning, feature engineering, and storage requires careful dependency management, while data quality issues can significantly impact downstream strategy performance.\n\n## STEP 2 — Set a tool budget\n\nGiven the medium difficulty rating, I'll target 12 tools within the 10-15 range to cover data acquisition, preprocessing, validation, feature engineering, and storage workflows comprehensively.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tool Dependencies & Affordances:**\n1. **Market Data Fetcher** - Consumes: ticker symbols, time ranges → Produces: raw OHLCV data\n2. **Data Quality Validator** - Consumes: raw market data → Produces: quality assessment reports\n3. **Missing Data Handler** - Consumes: data with gaps → Produces: cleaned data with interpolated values\n4. **Outlier Detector** - Consumes: market data → Produces: outlier flags and cleaned data\n5. **Technical Indicator Calculator** - Consumes: OHLCV data → Produces: technical indicators\n6. **Price Data Normalizer** - Consumes: raw prices → Produces: normalized/scaled data\n7. **Time Series Resampler** - Consumes: high-frequency data → Produces: resampled data at target frequency\n8. **Data Alignment Tool** - Consumes: multiple time series → Produces: synchronized datasets\n9. **Feature Engineering Pipeline** - Consumes: processed data → Produces: engineered features\n10. **Data Splitter** - Consumes: complete dataset → Produces: train/validation/test splits\n11. **Backtesting Data Formatter** - Consumes: processed data → Produces: backtest-ready format\n12. **Dataset Storage Manager** - Consumes: processed datasets → Produces: stored data with metadata\n\n## STEP 4 — Multi-tool plans\n\n**Simple Plans:**\n1. **Basic Data Collection**: Market Data Fetcher → Data Quality Validator → Dataset Storage Manager (collect and validate single asset data)\n2. **Quick Preprocessing**: Missing Data Handler → Outlier Detector → Data Splitter (clean and split existing data)\n\n**Medium Plans:**\n1. **Single Asset Pipeline**: Market Data Fetcher → Data Quality Validator → Missing Data Handler → Technical Indicator Calculator → Data Splitter → Backtesting Data Formatter\n2. **Multi-Asset Preparation**: Market Data Fetcher → Time Series Resampler → Data Alignment Tool → Feature Engineering Pipeline → Dataset Storage Manager\n\n**Complex Plans:**\n1. **Complete Strategy Data Pipeline**: Market Data Fetcher → Data Quality Validator → Missing Data Handler → Outlier Detector → Technical Indicator Calculator → Price Data Normalizer → Feature Engineering Pipeline → Data Splitter → Backtesting Data Formatter → Dataset Storage Manager\n2. **Multi-Asset Research Dataset**: Market Data Fetcher → Data Quality Validator → Time Series Resampler → Data Alignment Tool → Technical Indicator Calculator → Feature Engineering Pipeline → Price Data Normalizer → Data Splitter → Dataset Storage Manager\n\n## STEP 5 — Tools\n\n```json\n{\n  \"tool_name\": \"Market Data Fetcher\",\n  \"tool_description\": \"Retrieves historical market data (OHLCV) for specified financial instruments from various data sources with configurable frequency and date ranges.\",\n  \"parameters\": {\n    \"ticker_symbols\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of ticker symbols to fetch data for\",\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"start_date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\",\n      \"required\": true,\n      \"description\": \"Start date for data collection in ISO 8601 format\"\n    },\n    \"end_date\": {\n      \"type\": \"string\",\n      \"format\": \"date-time\", \n      \"required\": true,\n      \"description\": \"End date for data collection in ISO 8601 format\"\n    },\n    \"\
  frequency\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"1d\",\n      \"description\": \"Data frequency (1m, 5m, 15m, 1h, 1d)\"\n    },\n    \"data_source\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"yahoo\",\n      \"description\": \"Data provider (yahoo, alpha_vantage, quandl, polygon)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid date range: start_date must be earlier than end_date and both must be valid ISO 8601 dates\",\n    \"Unsupported ticker symbol: One or more ticker symbols are not recognized by the data source\",\n    \"Invalid frequency: Use supported frequencies (1m, 5m, 15m, 1h, 1d)\",\n    \"Data source unavailable: The specified data source is not accessible or requires authentication\",\n    \"Rate limit exceeded: Too many requests to data source, retry after delay\"\n  ],\n  \"usage\": \"Provide ticker symbols array and date range. Optionally specify frequency and data source. Returns OHLCV data for all requested symbols.\",\n  \"output_details\": {\n    \"data_points\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of data points retrieved\"\n    },\n    \"symbols_fetched\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Successfully retrieved ticker symbols\"\n    },\n    \"timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of timestamp strings for the data points\"\n    },\n    \"status\": {\n      \"type\": \"string\",\n      \"description\": \"Success status of the data fetch operation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Quality Validator\",\n  \"tool_description\": \"Analyzes market data quality by detecting missing values, duplicate entries, inconsistent pricing, and other data integrity issues that could affect backtesting accuracy.\",\n  \"parameters\": {\n    \"data_source\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Source identifier or path to the market data to validate\"\n    },\n    \"validation_rules\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"missing_values\", \"duplicates\", \"price_consistency\", \"volume_check\"],\n      \"description\": \"List of validation checks to perform\"\n    },\n    \"price_change_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.2,\n      \"description\": \"Maximum allowed single-period price change (as percentage)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid data source: The specified data source cannot be accessed or does not exist\",\n    \"Unsupported validation rule: Use supported rules (missing_values, duplicates, price_consistency, volume_check, timestamp_gaps)\",\n    \"Invalid threshold: price_change_threshold must be between 0.01 and 1.0\"\n  ],\n  \"usage\": \"Provide data source path and optionally specify validation rules and thresholds. Returns comprehensive quality assessment report.\",\n  \"output_details\": {\n    \"overall_quality_score\": {\n      \"type\": \"number\",\n      \"description\": \"Quality score from 0-100 indicating data reliability\"\n    },\n    \"issues_found\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of data quality issues detected\"\n    },\n    \"missing_data_percentage\": {\n      \"type\": \"number\",\n      \"description\": \"Percentage of missing data points\"\n    },\n    \"duplicate_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of duplicate entries found\"\n    },\n    \"anomaly_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of price anomalies detected\"\n    },\n    \"recommendation\": {\n      \"type\": \"string\",\n      \"description\": \"Recommended actions based on quality assessment\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Missing Data Handler\",\n  \"\
  tool_description\": \"Handles missing values in market data using various interpolation and imputation methods suitable for financial time series data.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path or identifier to the dataset with missing values\"\n    },\n    \"method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"forward_fill\",\n      \"description\": \"Imputation method (forward_fill, backward_fill, linear_interpolation, spline, mean_imputation)\"\n    },\n    \"max_gap_size\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 5,\n      \"description\": \"Maximum consecutive missing values to interpolate\"\n    },\n    \"columns_to_process\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"open\", \"high\", \"low\", \"close\", \"volume\"],\n      \"description\": \"Columns to apply missing data handling\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: The specified dataset cannot be accessed or is empty\",\n    \"Unsupported method: Use supported imputation methods (forward_fill, backward_fill, linear_interpolation, spline, mean_imputation)\",\n    \"Invalid gap size: max_gap_size must be between 1 and 100\",\n    \"Column not found: One or more specified columns do not exist in the dataset\"\n  ],\n  \"usage\": \"Provide input data path and optionally specify imputation method, maximum gap size, and columns to process. Returns cleaned dataset with imputed values.\",\n  \"output_details\": {\n    \"rows_processed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of rows in the processed dataset\"\n    },\n    \"values_imputed\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of missing values that were imputed\"\n    },\n    \"imputation_summary\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Summary of imputation applied to each column\"\n    },\n    \"remaining_gaps\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of gaps that could not be filled\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Outlier Detector\",\n  \"tool_description\": \"Identifies and handles outliers in market data using statistical and domain-specific methods, with options for removal or adjustment.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to the market data for outlier detection\"\n    },\n    \"detection_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"iqr\",\n      \"description\": \"Outlier detection method (iqr, zscore, isolation_forest, price_jump)\"\n    },\n    \"sensitivity\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 2.5,\n      \"description\": \"Detection sensitivity multiplier (higher = less sensitive)\"\n    },\n    \"action\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"flag\",\n      \"description\": \"Action for outliers (flag, remove, cap, replace)\"\n    },\n    \"price_columns\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"open\", \"high\", \"low\", \"close\"],\n      \"description\": \"Price columns to analyze for outliers\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot access the specified dataset or data is corrupted\",\n    \"Unsupported detection method: Use supported methods (iqr, zscore, isolation_forest, price_jump)\",\n    \"Invalid sensitivity: Sensitivity must be between 0.5 and 10.0\",\n    \"Invalid action: Use supported actions (flag, remove, cap, replace)\",\n    \"Missing price columns: One or more specified price columns not found in dataset\"\n  ],\n  \"usage\": \"Provide input data path and optionally configure detection method, sensitivity,\
  \ action, and price columns. Returns processed data with outlier information.\",\n  \"output_details\": {\n    \"outliers_detected\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of outliers identified\"\n    },\n    \"outlier_timestamps\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Timestamps where outliers were detected\"\n    },\n    \"action_taken\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of actions performed on outliers\"\n    },\n    \"detection_summary\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Per-column outlier detection summary\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Technical Indicator Calculator\",\n  \"tool_description\": \"Calculates a comprehensive set of technical indicators from OHLCV data including moving averages, momentum oscillators, volatility measures, and custom indicators for strategy development.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to OHLCV market data\"\n    },\n    \"indicators\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of technical indicators to calculate\",\n      \"minItems\": 1,\n      \"maxItems\": 30\n    },\n    \"sma_periods\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"default\": [10, 20, 50],\n      \"description\": \"Periods for simple moving averages\"\n    },\n    \"ema_periods\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"default\": [12, 26],\n      \"description\": \"Periods for exponential moving averages\"\n    },\n    \"rsi_period\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 14,\n      \"description\": \"Period for RSI calculation\"\n    },\n    \"bollinger_period\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 20,\n      \"description\": \"Period for Bollinger Bands\"\n    },\n    \"bollinger_std\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 2.0,\n      \"description\": \"Standard deviation multiplier for Bollinger Bands\"\n    },\n    \"macd_fast\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 12,\n      \"description\": \"Fast period for MACD\"\n    },\n    \"macd_slow\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 26,\n      \"description\": \"Slow period for MACD\"\n    },\n    \"macd_signal\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 9,\n      \"description\": \"Signal period for MACD\"\n    },\n    \"stochastic_k\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 14,\n      \"description\": \"K period for Stochastic oscillator\"\n    },\n    \"stochastic_d\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 3,\n      \"description\": \"D period for Stochastic oscillator\"\n    },\n    \"atr_period\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 14,\n      \"description\": \"Period for Average True Range\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot access OHLCV data or data format is incorrect\",\n    \"Unsupported indicator: Use supported indicators (SMA, EMA, RSI, MACD, Bollinger, Stochastic, ATR, Williams%R, CCI, ADX)\",\n    \"Invalid period parameter: All period parameters must be positive integers between 1 and 200\",\n    \"Invalid standard deviation: bollinger_std must be between 0.5 and 5.0\",\n    \"Insufficient data: Dataset must have enough rows to calculate the longest period indicator\"\n  ],\n  \"usage\": \"Provide input data path and specify desired indicators. Configure periods and parameters for each indicator family. Returns\
  \ dataset enriched with calculated technical indicators.\",\n  \"output_details\": {\n    \"indicators_calculated\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of successfully calculated indicators\"\n    },\n    \"new_columns\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Names of new columns added to the dataset\"\n    },\n    \"calculation_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of indicator calculations performed\"\n    },\n    \"data_points\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data points in enhanced dataset\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Price Data Normalizer\",\n  \"tool_description\": \"Normalizes and scales price data using various methods to prepare data for algorithm development, ensuring consistent ranges across different price levels and time periods.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to market data requiring normalization\"\n    },\n    \"normalization_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"returns\",\n      \"description\": \"Normalization approach (returns, log_returns, percent_change, min_max, z_score, robust_scale)\"\n    },\n    \"price_columns\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"open\", \"high\", \"low\", \"close\"],\n      \"description\": \"Price columns to normalize\"\n    },\n    \"reference_column\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"close\",\n      \"description\": \"Reference column for returns-based normalization\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot access the specified dataset or data is corrupted\",\n    \"Unsupported normalization method: Use supported methods (returns, log_returns, percent_change, min_max, z_score, robust_scale)\",\n    \"Missing price columns: One or more specified price columns not found in dataset\",\n    \"Invalid reference column: Reference column must exist in the dataset and be numeric\",\n    \"Zero or negative prices: Log returns normalization requires strictly positive prices\"\n  ],\n  \"usage\": \"Provide input data path and select normalization method. Optionally specify price columns and reference column. Returns normalized dataset ready for algorithm development.\",\n  \"output_details\": {\n    \"normalization_applied\": {\n      \"type\": \"string\",\n      \"description\": \"Type of normalization performed on the data\"\n    },\n    \"columns_normalized\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"List of columns that were normalized\"\n    },\n    \"scaling_parameters\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Scaling parameters used (means, std devs, min/max values)\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Time Series Resampler\",\n  \"tool_description\": \"Resamples time series market data to different frequencies using appropriate aggregation methods for OHLCV data, enabling multi-timeframe analysis.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to time series market data to resample\"\n    },\n    \"target_frequency\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target frequency for resampling (5m, 15m, 1h, 4h, 1d, 1w, 1M)\"\n    },\n    \"aggregation_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"ohlc\",\n      \"description\": \"Aggregation method (ohlc, mean, sum, first, last)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot access time series data or timestamp column is missing\",\n    \"Unsupported target\
  \ frequency: Use supported frequencies (5m, 15m, 1h, 4h, 1d, 1w, 1M)\",\n    \"Invalid aggregation method: Use supported methods (ohlc, mean, sum, first, last)\",\n    \"Insufficient data: Not enough data points for meaningful resampling at target frequency\"\n  ],\n  \"usage\": \"Provide input data path and specify target frequency. Optionally set aggregation method. Returns resampled dataset with appropriate OHLCV aggregation.\",\n  \"output_details\": {\n    \"original_frequency\": {\n      \"type\": \"string\",\n      \"description\": \"Detected frequency of input data\"\n    },\n    \"resampled_frequency\": {\n      \"type\": \"string\",\n      \"description\": \"Target frequency of resampled data\"\n    },\n    \"data_points_before\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data points before resampling\"\n    },\n    \"data_points_after\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data points after resampling\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Alignment Tool\",\n  \"tool_description\": \"Aligns multiple time series datasets with potentially different timestamps, handling timezone conversions and synchronizing data for multi-asset analysis.\",\n  \"parameters\": {\n    \"primary_dataset\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to primary dataset that serves as time reference\"\n    },\n    \"secondary_datasets\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Paths to secondary datasets to align with primary\",\n      \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"alignment_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"nearest\",\n      \"description\": \"Timestamp alignment method (exact, nearest, forward_fill, interpolate)\"\n    },\n    \"tolerance\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"1min\",\n      \"description\": \"Maximum time difference for alignment (e.g., '1min', '5min', '1h')\"\n    },\n    \"timezone\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"UTC\",\n      \"description\": \"Target timezone for alignment\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid dataset paths: One or more dataset paths cannot be accessed\",\n    \"Timestamp column missing: All datasets must have a timestamp column\",\n    \"Unsupported alignment method: Use supported methods (exact, nearest, forward_fill, interpolate)\",\n    \"Invalid tolerance format: Use format like '1min', '5min', '1h'\",\n    \"Timezone not recognized: Use valid timezone identifiers (UTC, US/Eastern, etc.)\",\n    \"Insufficient overlap: Datasets have insufficient time overlap for meaningful alignment\"\n  ],\n  \"usage\": \"Provide primary dataset path and array of secondary dataset paths. Configure alignment method, tolerance, and timezone as needed. Returns synchronized multi-asset dataset.\",\n  \"output_details\": {\n    \"aligned_datasets\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of datasets successfully aligned\"\n    },\n    \"common_timeframe\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Start and end timestamps of common data period\"\n    },\n    \"alignment_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of alignment process and any issues encountered\"\n    },\n    \"synchronized_rows\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of synchronized time periods in final dataset\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Feature Engineering Pipeline\",\n  \"tool_description\": \"Creates engineered features from market data including lagged variables, rolling statistics, cross-asset relationships, and custom financial features for algorithmic trading strategies.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n\
  \      \"description\": \"Path to preprocessed market data for feature engineering\"\n    },\n    \"feature_types\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Types of features to engineer\",\n      \"minItems\": 1,\n      \"maxItems\": 15\n    },\n    \"lookback_periods\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"default\": [5, 10, 20],\n      \"description\": \"Lookback periods for rolling features\"\n    },\n    \"lag_periods\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"default\": [1, 2, 3, 5],\n      \"description\": \"Lag periods for lagged features\"\n    },\n    \"price_ratios\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"high_low\", \"close_open\"],\n      \"description\": \"Price ratio features to calculate\"\n    },\n    \"rolling_stats\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": [\"mean\", \"std\", \"min\", \"max\"],\n      \"description\": \"Rolling statistics to calculate\"\n    },\n    \"momentum_periods\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"default\": [5, 10, 20],\n      \"description\": \"Periods for momentum features\"\n    },\n    \"volatility_periods\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"required\": false,\n      \"default\": [10, 20, 30],\n      \"description\": \"Periods for volatility features\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot access market data or required columns missing\",\n    \"Unsupported feature type: Use supported types (lags, rolling_stats, momentum, volatility, price_ratios, volume_features, time_features)\",\n    \"Invalid period values: All period values must be positive integers between 1 and 100\",\n    \"Insufficient data: Not enough data points to calculate features with specified periods\",\n    \"Invalid price ratio: Use supported ratios (high_low, close_open, close_high, close_low)\"\n  ],\n  \"usage\": \"Provide input data path and specify feature types to engineer. Configure periods and statistics as needed. Returns enriched dataset with engineered features.\",\n  \"output_details\": {\n    \"features_created\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of new features created\"\n    },\n    \"feature_names\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Names of all engineered features\"\n    },\n    \"feature_categories\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Categories of features created\"\n    },\n    \"data_shape\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"integer\"},\n      \"description\": \"Dimensions of final feature matrix [rows, columns]\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Splitter\",\n  \"tool_description\": \"Splits time series data into training, validation, and test sets using time-aware methods that prevent look-ahead bias in backtesting scenarios.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to processed dataset ready for splitting\"\n    },\n    \"split_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"time_series\",\n      \"description\": \"Data splitting method (time_series, walk_forward, expanding_window)\"\n    },\n    \"train_ratio\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.7,\n      \"description\": \"Proportion of data for training (0.1 to 0.9)\"\n    },\n    \"validation_ratio\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.15,\n   \
  \   \"description\": \"Proportion of data for validation (0.0 to 0.4)\"\n    },\n    \"test_ratio\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.15,\n      \"description\": \"Proportion of data for testing (0.1 to 0.4)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot access dataset or timestamp column missing\",\n    \"Invalid split ratios: train_ratio + validation_ratio + test_ratio must equal 1.0\",\n    \"Unsupported split method: Use supported methods (time_series, walk_forward, expanding_window)\",\n    \"Invalid ratio values: All ratios must be between 0.0 and 1.0\",\n    \"Insufficient data: Dataset too small for meaningful splits with specified ratios\"\n  ],\n  \"usage\": \"Provide input data path and optionally configure split method and ratios. Ensures temporal ordering is preserved for backtesting validity.\",\n  \"output_details\": {\n    \"train_samples\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of samples in training set\"\n    },\n    \"validation_samples\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of samples in validation set\"\n    },\n    \"test_samples\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of samples in test set\"\n    },\n    \"split_dates\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Boundary dates for train/validation/test splits\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Backtesting Data Formatter\",\n  \"tool_description\": \"Formats processed market data into standardized structure optimized for backtesting frameworks, ensuring proper column naming, data types, and metadata inclusion.\",\n  \"parameters\": {\n    \"input_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path to processed market data ready for formatting\"\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"backtrader\",\n      \"description\": \"Target backtesting framework format (backtrader, zipline, vectorbt, custom)\"\n    },\n    \"include_features\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to include engineered features in output\"\n    },\n    \"price_adjustment\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"none\",\n      \"description\": \"Price adjustment method (none, splits, dividends, both)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid input data: Cannot"
