field_name: membership_and_subscriptions
subfield: Member Registration and Onboarding
task: Identity verification and background checks for new member applications
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to the high complexity of identity verification workflows, strict regulatory compliance requirements across multiple jurisdictions, integration with numerous external verification services, high risk of fraud or security breaches, and the need for comprehensive audit trails and data protection measures.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** to cover the comprehensive workflow of identity verification and background checks, including document processing, database lookups, risk assessment, and compliance tracking.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  1. **Document Parser** → produces structured document data
  2. **Identity Database Checker** → consumes personal info, produces verification status
  3. **Address Validator** → consumes address data, produces validation results
  4. **Credit Score Retriever** → consumes identity info, produces credit data
  5. **Criminal Background Checker** → consumes identity info, produces criminal history
  6. **Employment Verifier** → consumes employment data, produces verification status
  7. **Reference Contact Validator** → consumes contact info, produces validation results
  8. **Sanction List Screener** → consumes identity info, produces screening results
  9. **Document Authenticity Validator** → consumes document data, produces authenticity score
  10. **Biometric Matcher** → consumes biometric data, produces match results
  11. **Risk Score Calculator** → consumes all verification results, produces risk assessment
  12. **Compliance Checker** → consumes verification data, produces compliance status
  13. **Fraud Detection Scanner** → consumes application data, produces fraud indicators
  14. **Decision Engine** → consumes all results, produces final decision
  15. **Audit Trail Generator** → consumes all process data, produces audit records
  16. **Notification Sender** → consumes decision data, produces delivery confirmations
  17. **Report Generator** → consumes verification results, produces summary reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic identity check: Document Parser → Identity Database Checker → Decision Engine → Notification Sender
  2. Address verification: Address Validator → Audit Trail Generator → Report Generator

  **Medium Plans:**
  1. Standard verification: Document Parser → Identity Database Checker → Address Validator → Credit Score Retriever → Risk Score Calculator → Decision Engine → Notification Sender → Audit Trail Generator
  2. Document validation: Document Parser → Document Authenticity Validator → Fraud Detection Scanner → Compliance Checker → Report Generator

  **Complex Plans:**
  1. Comprehensive background check: Document Parser → Identity Database Checker → Address Validator → Credit Score Retriever → Criminal Background Checker → Employment Verifier → Sanction List Screener → Biometric Matcher → Risk Score Calculator → Fraud Detection Scanner → Compliance Checker → Decision Engine → Audit Trail Generator → Notification Sender → Report Generator
  2. High-risk assessment: All verification tools feeding into Risk Score Calculator and Decision Engine with full audit and reporting workflow

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Document Parser",
    "tool_description": "Extracts and structures personal information from uploaded identity documents such as passports, driver's licenses, and national ID cards.",
    "parameters": {
      "document_type": {
        "type": "string",
        "required": true,
        "description": "Type of document being processed"
      },
      "document_content": {
        "type": "string",
        "required": true,
        "description": "Base64 encoded document image or text content"
      },
      "country_code": {
        "type": "string",
        "required": true,
        "description": "ISO 3166-1 alpha-2 country code for the document"
      }
    },
    "error_messages": [
      "Invalid document type: Use passport, drivers_license, national_id, or birth_certificate.",
      "Document content corrupted: Ensure the document is properly encoded in base64 format.",
      "Unsupported country code: Provide a valid ISO 3166-1 alpha-2 country code.",
      "Document unreadable: The document quality is too poor for text extraction."
    ],
    "usage": "Provide the document type, base64 encoded content, and country code. The tool will extract structured personal information from the document.",
    "output_details": {
      "full_name": {
        "type": "string",
        "description": "Complete name as it appears on the document"
      },
      "date_of_birth": {
        "type": "string",
        "description": "Date of birth in YYYY-MM-DD format"
      },
      "document_number": {
        "type": "string",
        "description": "Official document identification number"
      },
      "expiry_date": {
        "type": "string",
        "description": "Document expiration date in YYYY-MM-DD format"
      },
      "extraction_confidence": {
        "type": "number",
        "description": "Confidence score from 0-1 for the extraction accuracy"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Identity Database Checker",
    "tool_description": "Verifies personal identity information against authoritative government and commercial databases to confirm identity authenticity.",
    "parameters": {
      "full_name": {
        "type": "string",
        "required": true,
        "description": "Complete legal name to verify"
      },
      "date_of_birth": {
        "type": "string",
        "required": true,
        "description": "Date of birth in YYYY-MM-DD format"
      },
      "ssn_or_national_id": {
        "type": "string",
        "required": true,
        "description": "Social Security Number or national identification number"
      },
      "check_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Verification depth: basic, standard, or comprehensive"
      }
    },
    "error_messages": [
      "Invalid date format: Use YYYY-MM-DD format for date_of_birth.",
      "Invalid check level: Use basic, standard, or comprehensive.",
      "Missing required information: Provide full_name, date_of_birth, and ssn_or_national_id.",
      "Database timeout: External verification service is temporarily unavailable."
    ],
    "usage": "Provide the individual's full name, date of birth, and SSN/national ID. Optionally specify check_level for verification depth.",
    "output_details": {
      "identity_verified": {
        "type": "boolean",
        "description": "Whether the identity was successfully verified"
      },
      "match_score": {
        "type": "number",
        "description": "Identity match confidence score from 0-1"
      },
      "database_sources": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of databases used for verification"
      },
      "verification_date": {
        "type": "string",
        "description": "Timestamp of verification check"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Address Validator",
    "tool_description": "Validates and standardizes residential addresses using postal service databases and geocoding services.",
    "parameters": {
      "street_address": {
        "type": "string",
        "required": true,
        "description": "Street address including number and street name"
      },
      "city": {
        "type": "string",
        "required": true,
        "description": "City or municipality name"
      },
      "state_province": {
        "type": "string",
        "required": true,
        "description": "State, province, or administrative region"
      },
      "postal_code": {
        "type": "string",
        "required": true,
        "description": "ZIP code or postal code"
      },
      "country": {
        "type": "string",
        "required": true,
        "description": "Country name or ISO code"
      }
    },
    "error_messages": [
      "Invalid address format: Ensure all address components are properly formatted.",
      "Address not found: The provided address cannot be located in postal databases.",
      "Incomplete address: All address fields (street, city, state, postal code, country) are required.",
      "Service unavailable: Address validation service is temporarily down."
    ],
    "usage": "Provide complete address information including street, city, state, postal code, and country for validation and standardization.",
    "output_details": {
      "address_valid": {
        "type": "boolean",
        "description": "Whether the address is valid and deliverable"
      },
      "standardized_address": {
        "type": "string",
        "description": "Properly formatted standardized address"
      },
      "geocoordinates": {
        "type": "string",
        "description": "Latitude and longitude coordinates"
      },
      "address_type": {
        "type": "string",
        "description": "Type of address: residential, commercial, or po_box"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Credit Score Retriever",
    "tool_description": "Retrieves credit scores and basic credit history information from major credit reporting agencies for financial assessment.",
    "parameters": {
      "full_name": {
        "type": "string",
        "required": true,
        "description": "Complete legal name for credit check"
      },
      "ssn": {
        "type": "string",
        "required": true,
        "description": "Social Security Number"
      },
      "date_of_birth": {
        "type": "string",
        "required": true,
        "description": "Date of birth in YYYY-MM-DD format"
      },
      "current_address": {
        "type": "string",
        "required": true,
        "description": "Current residential address"
      },
      "credit_bureau": {
        "type": "string",
        "required": false,
        "default": "all",
        "description": "Specific bureau: experian, equifax, transunion, or all"
      },
      "report_type": {
        "type": "string",
        "required": false,
        "default": "score_only",
        "description": "Type of report: score_only or detailed"
      },
      "permissible_purpose": {
        "type": "string",
        "required": true,
        "description": "Legal reason for credit check"
      }
    },
    "error_messages": [
      "Invalid SSN format: Provide a valid 9-digit Social Security Number.",
      "Invalid credit bureau: Use experian, equifax, transunion, or all.",
      "Invalid report type: Use score_only or detailed.",
      "Insufficient permissible purpose: Provide valid legal reason for credit inquiry.",
      "Credit file not found: No credit history found for the provided information."
    ],
    "usage": "Provide personal information and specify credit bureau and report type. Include permissible purpose for legal compliance.",
    "output_details": {
      "credit_score": {
        "type": "integer",
        "description": "Primary credit score (300-850 range)"
      },
      "score_range": {
        "type": "string",
        "description": "Credit score category: poor, fair, good, very_good, excellent"
      },
      "report_date": {
        "type": "string",
        "description": "Date when credit report was generated"
      },
      "derogatory_marks": {
        "type": "integer",
        "description": "Number of negative marks on credit report"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Criminal Background Checker",
    "tool_description": "Searches criminal databases and court records for past convictions, charges, and legal issues at local, state, and federal levels.",
    "parameters": {
      "full_name": {
        "type": "string",
        "required": true,
        "description": "Complete legal name for background check"
      },
      "date_of_birth": {
        "type": "string",
        "required": true,
        "description": "Date of birth in YYYY-MM-DD format"
      },
      "ssn": {
        "type": "string",
        "required": true,
        "description": "Social Security Number"
      },
      "search_jurisdictions": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "List of states or jurisdictions to search"
      },
      "search_scope": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Search depth: basic, standard, or comprehensive"
      },
      "years_back": {
        "type": "integer",
        "required": false,
        "default": 7,
        "description": "Number of years to search back (1-20)"
      },
      "include_sex_offender": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include sex offender registry search"
      }
    },
    "error_messages": [
      "Invalid search scope: Use basic, standard, or comprehensive.",
      "Invalid years_back: Must be between 1 and 20 years.",
      "Empty jurisdictions: Provide at least one jurisdiction to search.",
      "Invalid jurisdiction format: Use standard state abbreviations or jurisdiction codes.",
      "Search timeout: Criminal database search is taking longer than expected."
    ],
    "usage": "Provide personal information and specify jurisdictions to search. Set search scope and time range as needed for the background check.",
    "output_details": {
      "criminal_record_found": {
        "type": "boolean",
        "description": "Whether any criminal records were discovered"
      },
      "felony_count": {
        "type": "integer",
        "description": "Number of felony convictions found"
      },
      "misdemeanor_count": {
        "type": "integer",
        "description": "Number of misdemeanor convictions found"
      },
      "sex_offender_match": {
        "type": "boolean",
        "description": "Whether individual appears on sex offender registry"
      },
      "jurisdictions_searched": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of jurisdictions that were successfully searched"
      },
      "search_date": {
        "type": "string",
        "description": "Date and time when background check was performed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Employment Verifier",
    "tool_description": "Verifies employment history, job titles, and income information by contacting employers and checking employment databases.",
    "parameters": {
      "employee_name": {
        "type": "string",
        "required": true,
        "description": "Full name of the employee to verify"
      },
      "employer_name": {
        "type": "string",
        "required": true,
        "description": "Name of the employer or company"
      },
      "employment_start_date": {
        "type": "string",
        "required": true,
        "description": "Employment start date in YYYY-MM-DD format"
      },
      "employment_end_date": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Employment end date in YYYY-MM-DD format, null if current"
      },
      "job_title": {
        "type": "string",
        "required": true,
        "description": "Job title or position held"
      },
      "verify_income": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to verify salary/income information"
      }
    },
    "error_messages": [
      "Invalid date format: Use YYYY-MM-DD format for employment dates.",
      "End date before start date: Employment end date cannot be before start date.",
      "Employer not found: The specified employer cannot be located or contacted.",
      "Employment record not found: No employment record found for the specified period.",
      "Verification declined: Employer declined to verify employment information."
    ],
    "usage": "Provide employee name, employer details, employment dates, and job title. Optionally request income verification if permitted.",
    "output_details": {
      "employment_verified": {
        "type": "boolean",
        "description": "Whether employment was successfully verified"
      },
      "title_matches": {
        "type": "boolean",
        "description": "Whether the job title matches employer records"
      },
      "dates_verified": {
        "type": "boolean",
        "description": "Whether employment dates were confirmed"
      },
      "income_verified": {
        "type": "boolean",
        "description": "Whether income information was verified"
      },
      "verification_method": {
        "type": "string",
        "description": "How verification was conducted: direct_contact, database, or third_party"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Reference Contact Validator",
    "tool_description": "Validates and contacts personal or professional references to verify character and background information.",
    "parameters": {
      "reference_name": {
        "type": "string",
        "required": true,
        "description": "Full name of the reference person"
      },
      "reference_phone": {
        "type": "string",
        "required": true,
        "description": "Phone number of the reference"
      },
      "reference_email": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Email address of the reference"
      },
      "relationship": {
        "type": "string",
        "required": true,
        "description": "Relationship to applicant: personal, professional, academic, or landlord"
      },
      "contact_method": {
        "type": "string",
        "required": false,
        "default": "phone",
        "description": "Preferred contact method: phone or email"
      }
    },
    "error_messages": [
      "Invalid phone format: Provide a valid phone number with area code.",
      "Invalid email format: Provide a valid email address if specified.",
      "Invalid relationship type: Use personal, professional, academic, or landlord.",
      "Contact method unavailable: Cannot use requested contact method with provided information.",
      "Reference unreachable: Unable to contact the reference after multiple attempts."
    ],
    "usage": "Provide reference contact information and relationship type. Specify preferred contact method for reaching the reference.",
    "output_details": {
      "contact_successful": {
        "type": "boolean",
        "description": "Whether the reference was successfully contacted"
      },
      "reference_confirms": {
        "type": "boolean",
        "description": "Whether reference confirms knowing the applicant"
      },
      "recommendation_positive": {
        "type": "boolean",
        "description": "Whether reference provides positive recommendation"
      },
      "contact_date": {
        "type": "string",
        "description": "Date and time when reference was contacted"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sanction List Screener",
    "tool_description": "Screens individuals against government sanction lists, watch lists, and politically exposed persons (PEP) databases for compliance purposes.",
    "parameters": {
      "full_name": {
        "type": "string",
        "required": true,
        "description": "Complete name to screen against sanction lists"
      },
      "date_of_birth": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Date of birth in YYYY-MM-DD format for more precise matching"
      },
      "nationality": {
        "type": "string",
        "required": false,
        "default": null,
        "description": "Nationality or citizenship country"
      },
      "screening_lists": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Lists to screen: OFAC, UN, EU, PEP, terrorist_watch"
      },
      "match_threshold": {
        "type": "number",
        "required": false,
        "default": 0.8,
        "description": "Minimum match score for positive hits (0.5-1.0)"
      }
    },
    "error_messages": [
      "Invalid screening list: Use OFAC, UN, EU, PEP, or terrorist_watch.",
      "Invalid match threshold: Must be between 0.5 and 1.0.",
      "Empty screening lists: Provide at least one list to screen against.",
      "List unavailable: One or more screening lists are temporarily unavailable.",
      "Invalid nationality format: Use standard country names or ISO codes."
    ],
    "usage": "Provide the individual's name and select appropriate screening lists. Optionally include date of birth and nationality for more accurate matching.",
    "output_details": {
      "matches_found": {
        "type": "boolean",
        "description": "Whether any matches were found on screening lists"
      },
      "high_risk_match": {
        "type": "boolean",
        "description": "Whether any high-confidence matches were identified"
      },
      "matched_lists": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Names of lists where matches were found"
      },
      "match_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Confidence scores for each match found"
      },
      "screening_date": {
        "type": "string",
        "description": "Date and time when screening was performed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Document Authenticity Validator",
    "tool_description": "Analyzes document security features, watermarks, and formatting to detect fraudulent or altered identity documents.",
    "parameters": {
      "document_image": {
        "type": "string",
        "required": true,
        "description": "Base64 encoded high-resolution document image"
      },
      "document_type": {
        "type": "string",
        "required": true,
        "description": "Type of document: passport, drivers_license, national_id, birth_certificate"
      },
      "issuing_country": {
        "type": "string",
        "required": true,
        "description": "Country that issued the document"
      },
      "check_security_features": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to analyze security features like watermarks and holograms"
      },
      "check_tampering": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to detect signs of document tampering or alteration"
      }
    },
    "error_messages": [
      "Invalid document type: Use passport, drivers_license, national_id, or birth_certificate.",
      "Invalid country code: Provide a valid country name or ISO code.",
      "Poor image quality: Document image resolution is too low for analysis.",
      "Unsupported document format: Cannot analyze documents from the specified country.",
      "Analysis failed: Unable to complete authenticity validation."
    ],
    "usage": "Provide high-resolution document image, document type, and issuing country. Enable security feature and tampering checks as needed.",
    "output_details": {
      "authenticity_score": {
        "type": "number",
        "description": "Overall authenticity score from 0-1"
      },
      "security_features_valid": {
        "type": "boolean",
        "description": "Whether security features appear authentic"
      },
      "tampering_detected": {
        "type": "boolean",
        "description": "Whether signs of tampering were found"
      },
      "analysis_confidence": {
        "type": "number",
        "description": "Confidence level in the analysis results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Biometric Matcher",
    "tool_description": "Compares biometric data from documents and live captures to verify identity consistency and detect spoofing attempts.",
    "parameters": {
      "document_photo": {
        "type": "string",
        "required": true,
        "description": "Base64 encoded photo from identity document"
      },
      "live_photo": {
        "type": "string",
        "required": true,
        "description": "Base64 encoded live selfie photo"
      },
      "liveness_check": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to perform liveness detection on live photo"
      },
      "match_threshold": {
        "type": "number",
        "required": false,
        "default": 0.85,
        "description": "Minimum confidence score for positive match (0.5-0.99)"
      }
    },
    "error_messages": [
      "Invalid match threshold: Must be between 0.5 and 0.99.",
      "Poor photo quality: One or both photos are too low quality for comparison.",
      "Face not detected: Unable to detect face in one or both images.",
      "Liveness check failed: Live photo appears to be a spoof attempt.",
      "Biometric analysis error: Unable to complete facial comparison."
    ],
    "usage": "Provide document photo and live selfie for comparison. Set match threshold and enable liveness detection to prevent spoofing.",
    "output_details": {
      "faces_match": {
        "type": "boolean",
        "description": "Whether the faces in both photos match"
      },
      "match_confidence": {
        "type": "number",
        "description": "Confidence score for the facial match"
      },
      "liveness_passed": {
        "type": "boolean",
        "description": "Whether the live photo passed liveness detection"
      },
      "spoof_detected": {
        "type": "boolean",
        "description": "Whether potential spoofing was detected"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Score Calculator",
    "tool_description": "Analyzes all verification results to calculate comprehensive risk scores using weighted factors and machine learning models.",
    "parameters": {
      "identity_verified": {
        "type": "boolean",
        "required": true,
        "description": "Result from identity verification check"
      },
      "address_valid": {
        "type": "boolean",
        "required": true,
        "description": "Result from address validation"
      },
      "credit_score": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Credit score if available (300-850)"
      },
      "criminal_record_found": {
        "type": "boolean",
        "required": true,
        "description": "Whether criminal records were found"
      },
      "employment_verified": {
        "type": "boolean",
        "required": false,
        "default": null,
        "description": "Employment verification result"
      },
      "sanction_match": {
        "type": "boolean",
        "required": true,
        "description": "Whether individual appears on sanction lists"
      },
      "document_authentic": {
        "type": "boolean",
        "required": true,
        "description": "Document authenticity verification result"
      },
      "biometric_match": {
        "type": "boolean",
        "required": false,
        "default": null,
        "description": "Biometric matching result"
      },
      "fraud_indicators": {
        "type": "array",
        "required": false,
        "default": [],
        "items": {
          "type": "string"
        },
        "description": "List of fraud indicators detected"
      },
      "risk_model": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Risk assessment model: conservative, standard, or liberal"
      }
    },
    "error_messages": [
      "Invalid credit score: Must be between 300 and 850 if provided.",
      "Invalid risk model: Use conservative, standard, or liberal.",
      "Insufficient data: Need at least identity, address, criminal, sanction, and document results.",
      "Calculation error: Unable to compute risk score with provided inputs.",
      "Model unavailable: Selected risk assessment model is temporarily unavailable."
    ],
    "usage": "Provide verification results from multiple checks. The tool will calculate a comprehensive risk score based on weighted factors.",
    "output_details": {
      "overall_risk_score": {
        "type": "number",
        "description": "Overall risk score from 0-100 (higher = more risky)"
      },
      "risk_category": {
        "type": "string",
        "description": "Risk level: low, medium, high, or very_high"
      },
      "contributing_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Factors that contributed to the risk score"
      },
      "recommendation": {
        "type": "string",
        "description": "Recommended action: approve, review, or reject"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Checker",
    "tool_description": "Ensures verification processes meet regulatory requirements including KYC, AML, and data protection standards for different jurisdictions.",
    "parameters": {
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Regulatory jurisdiction: US, EU, UK, Canada, Australia"
      },
      "business_type": {
        "type": "string",
        "required": true,
        "description": "Type of business: financial, healthcare, gaming, general"
      },
      "verification_level": {
        "type": "string",
        "required": true,
        "description": "Level of verification performed: basic, enhanced, or comprehensive"
      },
      "checks_completed": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "List of verification checks that were completed"
      },
      "customer_risk_rating": {
        "type": "string",
        "required": true,
        "description": "Customer risk level: low, medium, or high"
      },
      "data_retention_required": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether data retention is required for compliance"
      }
    },
    "error_messages": [
      "Invalid jurisdiction: Use US, EU, UK, Canada, or Australia.",
      "Invalid business type: Use financial, healthcare, gaming, or general.",
      "Invalid verification level: Use basic, enhanced, or comprehensive.",
      "Invalid risk rating: Use low, medium, or high.",
      "Insufficient checks: Verification level requires additional checks for compliance.",
      "Regulatory mismatch: Business type and jurisdiction combination requires different procedures."
    ],
    "usage": "Specify jurisdiction, business type, and verification details. The tool will check compliance with applicable regulations.",
    "output_details": {
      "compliant": {
        "type": "boolean",
        "description": "Whether the verification process meets regulatory requirements"
      },
      "missing_requirements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of missing compliance requirements"
      },
      "retention_period": {
        "type": "integer",
        "description": "Required data
