field_name: sales_and_crm
subfield: Contact and Account Management
task: Account hierarchy mapping and relationship tracking
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is of **medium** difficulty. It involves mapping complex organizational structures, tracking multi-level relationships between accounts, and maintaining data consistency across hierarchical networks. The challenge lies in handling diverse organizational structures, managing dynamic relationships, and ensuring data integrity across interconnected entities.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target **12 tools** to cover the various aspects of account hierarchy mapping and relationship tracking comprehensively.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  - Account Validator → validates account data → feeds into Account Creator
  - Account Creator → creates accounts → feeds into Hierarchy Builder, Relationship Mapper
  - Hierarchy Builder → builds hierarchies → feeds into Hierarchy Visualizer, Relationship Analyzer
  - Contact Associator → links contacts → feeds into Relationship Mapper, Contact Hierarchy Tracker
  - Relationship Mapper → maps relationships → feeds into Relationship Analyzer, Hierarchy Merger
  - Hierarchy Visualizer → visualizes structure → feeds into reporting tools
  - Relationship Analyzer → analyzes patterns → feeds into Change Detector
  - Hierarchy Merger → merges hierarchies → feeds into Duplicate Detector
  - Duplicate Detector → finds duplicates → feeds into Hierarchy Updater
  - Contact Hierarchy Tracker → tracks contact relationships → feeds into Change Detector
  - Change Detector → detects changes → feeds into Hierarchy Updater
  - Hierarchy Updater → updates structures → maintains data consistency

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  1. **Basic Account Setup**: Account Validator → Account Creator → Contact Associator (validates and creates new accounts with contacts)
  2. **Duplicate Management**: Duplicate Detector → Hierarchy Updater (identifies and resolves duplicate accounts)

  **Medium plans:**
  1. **Hierarchy Construction**: Account Creator → Hierarchy Builder → Contact Associator → Hierarchy Visualizer (builds complete account hierarchies with contacts)
  2. **Relationship Analysis**: Relationship Mapper → Relationship Analyzer → Change Detector (maps and analyzes account relationships)

  **Complex plans:**
  1. **Complete Hierarchy Management**: Account Validator → Account Creator → Hierarchy Builder → Relationship Mapper → Contact Associator → Hierarchy Visualizer → Relationship Analyzer (full hierarchy creation and analysis)
  2. **Dynamic Hierarchy Maintenance**: Change Detector → Duplicate Detector → Hierarchy Merger → Hierarchy Updater → Contact Hierarchy Tracker (comprehensive hierarchy maintenance and updates)

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Account Validator",
    "tool_description": "Validates account data for completeness, format correctness, and business rule compliance before account creation or updates.",
    "parameters": {
      "account_name": {
        "type": "string",
        "required": true,
        "description": "Name of the account to validate"
      },
      "account_type": {
        "type": "string",
        "required": true,
        "description": "Type of account: customer, prospect, partner, vendor, subsidiary"
      },
      "industry": {
        "type": "string",
        "required": false,
        "description": "Industry classification",
        "default": "None"
      },
      "revenue": {
        "type": "number",
        "required": false,
        "description": "Annual revenue in USD",
        "default": "None"
      },
      "employee_count": {
        "type": "integer",
        "required": false,
        "description": "Number of employees",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid account name: Account name cannot be empty or contain special characters except hyphens and apostrophes.",
      "Invalid account type: Account type must be one of: customer, prospect, partner, vendor, subsidiary.",
      "Invalid revenue value: Revenue must be a positive number if provided.",
      "Invalid employee count: Employee count must be a positive integer if provided.",
      "Duplicate account detected: An account with this name and type already exists in the system."
    ],
    "usage": "Provide account_name and account_type as required parameters. Optionally include industry, revenue, and employee_count for enhanced validation. The tool checks data integrity and business rules compliance.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the account data passes validation"
      },
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: passed, failed, or warning"
      },
      "issues_found": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of validation issues or warnings"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Account Creator",
    "tool_description": "Creates new account records with basic information and assigns unique identifiers for hierarchy mapping.",
    "parameters": {
      "account_name": {
        "type": "string",
        "required": true,
        "description": "Name of the account to create"
      },
      "account_type": {
        "type": "string",
        "required": true,
        "description": "Type of account: customer, prospect, partner, vendor, subsidiary"
      },
      "parent_account_id": {
        "type": "string",
        "required": false,
        "description": "ID of parent account if this is a subsidiary",
        "default": "None"
      },
      "industry": {
        "type": "string",
        "required": false,
        "description": "Industry classification",
        "default": "None"
      }
    },
    "error_messages": [
      "Account creation failed: Account name already exists in the system.",
      "Invalid parent account: Parent account ID does not exist or is invalid.",
      "Circular hierarchy detected: Cannot set parent account as it would create a circular reference.",
      "Account type mismatch: Parent-child account type combination is not allowed per business rules."
    ],
    "usage": "Provide account_name and account_type. Optionally specify parent_account_id to place the account in a hierarchy. The tool creates the account and returns a unique identifier.",
    "output_details": {
      "account_id": {
        "type": "string",
        "description": "Unique identifier assigned to the created account"
      },
      "creation_status": {
        "type": "string",
        "description": "Status of account creation: success or failed"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "When the account was created in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Hierarchy Builder",
    "tool_description": "Constructs account hierarchies by establishing parent-child relationships and calculating hierarchy levels and paths.",
    "parameters": {
      "root_account_id": {
        "type": "string",
        "required": true,
        "description": "ID of the root account to build hierarchy from"
      },
      "child_account_ids": {
        "type": "array",
        "required": true,
        "description": "Array of child account IDs to include in hierarchy",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "max_depth": {
        "type": "integer",
        "required": false,
        "description": "Maximum hierarchy depth to build",
        "default": 10
      },
      "include_indirect": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include indirect relationships",
        "default": true
      },
      "relationship_types": {
        "type": "array",
        "required": false,
        "description": "Types of relationships to include: parent, subsidiary, division, branch",
        "items": {
          "type": "string"
        },
        "default": ["parent", "subsidiary"]
      }
    },
    "error_messages": [
      "Invalid root account: Root account ID does not exist or is inaccessible.",
      "Circular dependency detected: Hierarchy contains circular references that must be resolved.",
      "Invalid child account: One or more child account IDs do not exist.",
      "Max depth exceeded: Hierarchy depth exceeds system limits or specified maximum.",
      "Invalid relationship type: Relationship type must be one of: parent, subsidiary, division, branch."
    ],
    "usage": "Specify root_account_id and array of child_account_ids. Configure max_depth, include_indirect, and relationship_types as needed. The tool builds a structured hierarchy with levels and paths.",
    "output_details": {
      "hierarchy_id": {
        "type": "string",
        "description": "Unique identifier for the built hierarchy"
      },
      "total_accounts": {
        "type": "integer",
        "description": "Total number of accounts in the hierarchy"
      },
      "max_depth_reached": {
        "type": "integer",
        "description": "Maximum depth level in the built hierarchy"
      },
      "account_paths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of hierarchy paths for each account"
      },
      "build_status": {
        "type": "string",
        "description": "Status of hierarchy building: completed, partial, or failed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Contact Associator",
    "tool_description": "Associates contacts with accounts and maps contact relationships within account hierarchies.",
    "parameters": {
      "contact_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the contact to associate"
      },
      "account_id": {
        "type": "string",
        "required": true,
        "description": "Account ID to associate the contact with"
      },
      "role": {
        "type": "string",
        "required": true,
        "description": "Contact's role: primary, secondary, decision_maker, influencer, user"
      },
      "relationship_strength": {
        "type": "integer",
        "required": false,
        "description": "Relationship strength score from 1-10",
        "default": 5
      }
    },
    "error_messages": [
      "Invalid contact ID: Contact does not exist in the system.",
      "Invalid account ID: Account does not exist or is inaccessible.",
      "Invalid role: Role must be one of: primary, secondary, decision_maker, influencer, user.",
      "Duplicate association: Contact is already associated with this account in the same role.",
      "Invalid relationship strength: Value must be between 1 and 10."
    ],
    "usage": "Provide contact_id, account_id, and role. Optionally set relationship_strength to indicate the strength of the relationship. The tool creates the association and updates relationship mappings.",
    "output_details": {
      "association_id": {
        "type": "string",
        "description": "Unique identifier for the contact-account association"
      },
      "association_status": {
        "type": "string",
        "description": "Status of association: success, updated, or failed"
      },
      "association_timestamp": {
        "type": "string",
        "description": "When the association was created in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Relationship Mapper",
    "tool_description": "Maps and categorizes relationships between accounts, including business partnerships, ownership structures, and influence networks.",
    "parameters": {
      "source_account_id": {
        "type": "string",
        "required": true,
        "description": "ID of the source account in the relationship"
      },
      "target_account_id": {
        "type": "string",
        "required": true,
        "description": "ID of the target account in the relationship"
      },
      "relationship_type": {
        "type": "string",
        "required": true,
        "description": "Type of relationship: owns, partners_with, competes_with, supplies_to, buys_from, influences"
      },
      "relationship_strength": {
        "type": "integer",
        "required": false,
        "description": "Strength of relationship from 1-10",
        "default": 5
      },
      "start_date": {
        "type": "string",
        "required": false,
        "description": "When relationship started in ISO 8601 format",
        "default": "None"
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "When relationship ended in ISO 8601 format",
        "default": "None"
      },
      "bidirectional": {
        "type": "boolean",
        "required": false,
        "description": "Whether the relationship is bidirectional",
        "default": false
      },
      "notes": {
        "type": "string",
        "required": false,
        "description": "Additional notes about the relationship",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid source account: Source account ID does not exist.",
      "Invalid target account: Target account ID does not exist.",
      "Self-relationship not allowed: Source and target accounts cannot be the same.",
      "Invalid relationship type: Type must be one of: owns, partners_with, competes_with, supplies_to, buys_from, influences.",
      "Invalid date format: Dates must be in ISO 8601 format.",
      "Invalid date range: End date cannot be before start date.",
      "Duplicate relationship: This relationship already exists between these accounts.",
      "Invalid relationship strength: Value must be between 1 and 10."
    ],
    "usage": "Specify source_account_id, target_account_id, and relationship_type. Optionally set relationship_strength, start_date, end_date, bidirectional flag, and notes. The tool creates relationship mappings for analysis.",
    "output_details": {
      "relationship_id": {
        "type": "string",
        "description": "Unique identifier for the mapped relationship"
      },
      "mapping_status": {
        "type": "string",
        "description": "Status of relationship mapping: created, updated, or failed"
      },
      "mapping_timestamp": {
        "type": "string",
        "description": "When the relationship was mapped in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Hierarchy Visualizer",
    "tool_description": "Generates visual representations of account hierarchies including organization charts, network diagrams, and relationship maps.",
    "parameters": {
      "hierarchy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the hierarchy to visualize"
      },
      "visualization_type": {
        "type": "string",
        "required": true,
        "description": "Type of visualization: org_chart, network_diagram, tree_view, relationship_map"
      },
      "include_contacts": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include contact information in visualization",
        "default": false
      },
      "max_levels": {
        "type": "integer",
        "required": false,
        "description": "Maximum hierarchy levels to display",
        "default": 5
      },
      "layout_direction": {
        "type": "string",
        "required": false,
        "description": "Layout direction: top_down, left_right, radial",
        "default": "top_down"
      }
    },
    "error_messages": [
      "Invalid hierarchy ID: Hierarchy does not exist or is inaccessible.",
      "Invalid visualization type: Type must be one of: org_chart, network_diagram, tree_view, relationship_map.",
      "Invalid layout direction: Direction must be one of: top_down, left_right, radial.",
      "Visualization too complex: Hierarchy is too large to visualize with current settings.",
      "No data to visualize: Hierarchy contains no valid relationships or accounts."
    ],
    "usage": "Provide hierarchy_id and visualization_type. Configure include_contacts, max_levels, and layout_direction as needed. The tool generates visual representations for analysis and presentation.",
    "output_details": {
      "visualization_id": {
        "type": "string",
        "description": "Unique identifier for the generated visualization"
      },
      "visualization_url": {
        "type": "string",
        "description": "URL or path to access the visualization"
      },
      "nodes_displayed": {
        "type": "integer",
        "description": "Number of account nodes in the visualization"
      },
      "relationships_displayed": {
        "type": "integer",
        "description": "Number of relationships shown in the visualization"
      },
      "generation_status": {
        "type": "string",
        "description": "Status of visualization generation: success, partial, or failed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Relationship Analyzer",
    "tool_description": "Analyzes relationship patterns, identifies key influencers, calculates relationship metrics, and provides insights on account networks.",
    "parameters": {
      "analysis_scope": {
        "type": "string",
        "required": true,
        "description": "Scope of analysis: single_account, account_group, full_network, hierarchy_branch"
      },
      "account_ids": {
        "type": "array",
        "required": true,
        "description": "Array of account IDs to analyze",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "analysis_types": {
        "type": "array",
        "required": true,
        "description": "Types of analysis to perform",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "time_period_start": {
        "type": "string",
        "required": false,
        "description": "Start of analysis period in ISO 8601 format",
        "default": "None"
      },
      "time_period_end": {
        "type": "string",
        "required": false,
        "description": "End of analysis period in ISO 8601 format",
        "default": "None"
      },
      "include_inactive": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include inactive relationships",
        "default": false
      },
      "minimum_strength": {
        "type": "integer",
        "required": false,
        "description": "Minimum relationship strength to consider (1-10)",
        "default": 1
      }
    },
    "error_messages": [
      "Invalid analysis scope: Scope must be one of: single_account, account_group, full_network, hierarchy_branch.",
      "Invalid account IDs: One or more account IDs do not exist or are inaccessible.",
      "Invalid analysis type: Analysis types must include valid options like influence_score, relationship_density, network_centrality.",
      "Invalid date format: Time period dates must be in ISO 8601 format.",
      "Invalid date range: End date cannot be before start date.",
      "Invalid minimum strength: Value must be between 1 and 10.",
      "Insufficient data: Not enough relationship data for meaningful analysis."
    ],
    "usage": "Specify analysis_scope, account_ids array, and analysis_types array. Optionally set time periods, include_inactive flag, and minimum_strength threshold. The tool performs comprehensive relationship analysis.",
    "output_details": {
      "analysis_id": {
        "type": "string",
        "description": "Unique identifier for the analysis session"
      },
      "key_influencers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of account IDs identified as key influencers"
      },
      "relationship_density": {
        "type": "number",
        "description": "Overall relationship density score"
      },
      "network_strength": {
        "type": "number",
        "description": "Average network relationship strength"
      },
      "insights": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of analytical insights and recommendations"
      },
      "analysis_timestamp": {
        "type": "string",
        "description": "When the analysis was completed in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Hierarchy Merger",
    "tool_description": "Merges multiple account hierarchies or branches while maintaining data integrity and resolving conflicts.",
    "parameters": {
      "primary_hierarchy_id": {
        "type": "string",
        "required": true,
        "description": "ID of the primary hierarchy to merge into"
      },
      "secondary_hierarchy_ids": {
        "type": "array",
        "required": true,
        "description": "Array of secondary hierarchy IDs to merge",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "merge_strategy": {
        "type": "string",
        "required": true,
        "description": "Strategy for handling conflicts: primary_wins, secondary_wins, manual_review, merge_all"
      },
      "preserve_relationships": {
        "type": "boolean",
        "required": false,
        "description": "Whether to preserve all existing relationships",
        "default": true
      },
      "auto_resolve_duplicates": {
        "type": "boolean",
        "required": false,
        "description": "Whether to automatically resolve duplicate accounts",
        "default": false
      }
    },
    "error_messages": [
      "Invalid primary hierarchy: Primary hierarchy ID does not exist or is inaccessible.",
      "Invalid secondary hierarchy: One or more secondary hierarchy IDs do not exist.",
      "Invalid merge strategy: Strategy must be one of: primary_wins, secondary_wins, manual_review, merge_all.",
      "Merge conflict detected: Hierarchies contain conflicting data that requires manual resolution.",
      "Circular dependency would result: Merge would create circular references in the hierarchy.",
      "Insufficient permissions: User does not have permission to merge these hierarchies."
    ],
    "usage": "Provide primary_hierarchy_id and array of secondary_hierarchy_ids to merge. Select appropriate merge_strategy and configure preservation options. The tool handles complex hierarchy merging operations.",
    "output_details": {
      "merge_id": {
        "type": "string",
        "description": "Unique identifier for the merge operation"
      },
      "merged_hierarchy_id": {
        "type": "string",
        "description": "ID of the resulting merged hierarchy"
      },
      "accounts_merged": {
        "type": "integer",
        "description": "Number of accounts successfully merged"
      },
      "conflicts_found": {
        "type": "integer",
        "description": "Number of conflicts identified during merge"
      },
      "merge_status": {
        "type": "string",
        "description": "Status of merge operation: completed, partial, failed, or pending_review"
      },
      "merge_timestamp": {
        "type": "string",
        "description": "When the merge was completed in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Duplicate Detector",
    "tool_description": "Identifies potential duplicate accounts and relationships within hierarchies using various matching algorithms and similarity scoring.",
    "parameters": {
      "search_scope": {
        "type": "string",
        "required": true,
        "description": "Scope for duplicate detection: single_hierarchy, multiple_hierarchies, all_accounts"
      },
      "hierarchy_ids": {
        "type": "array",
        "required": false,
        "description": "Array of hierarchy IDs to search within",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "matching_criteria": {
        "type": "array",
        "required": true,
        "description": "Criteria for duplicate detection",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 8
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum similarity score to consider as duplicate (0.0-1.0)",
        "default": 0.8
      },
      "exact_match_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether exact matches are required for critical fields",
        "default": false
      }
    },
    "error_messages": [
      "Invalid search scope: Scope must be one of: single_hierarchy, multiple_hierarchies, all_accounts.",
      "Invalid hierarchy IDs: One or more hierarchy IDs do not exist when search scope requires them.",
      "Invalid matching criteria: Criteria must include valid options like name, address, phone, email, tax_id.",
      "Invalid similarity threshold: Threshold must be between 0.0 and 1.0.",
      "No data to analyze: Search scope contains no accounts to check for duplicates.",
      "Search timeout: Duplicate detection exceeded time limits due to large dataset."
    ],
    "usage": "Specify search_scope and matching_criteria array. Provide hierarchy_ids if needed for scope. Configure similarity_threshold and exact_match_required as needed. The tool identifies potential duplicates with confidence scores.",
    "output_details": {
      "detection_id": {
        "type": "string",
        "description": "Unique identifier for the detection session"
      },
      "duplicates_found": {
        "type": "integer",
        "description": "Number of potential duplicate pairs identified"
      },
      "high_confidence_matches": {
        "type": "integer",
        "description": "Number of high-confidence duplicate matches"
      },
      "duplicate_pairs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of account ID pairs identified as potential duplicates"
      },
      "detection_status": {
        "type": "string",
        "description": "Status of detection process: completed, partial, or failed"
      },
      "detection_timestamp": {
        "type": "string",
        "description": "When duplicate detection was completed in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Contact Hierarchy Tracker",
    "tool_description": "Tracks contact movements and role changes within account hierarchies, maintaining historical records of contact-account associations.",
    "parameters": {
      "contact_id": {
        "type": "string",
        "required": true,
        "description": "ID of the contact to track"
      },
      "tracking_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to track back from current date",
        "default": 90
      },
      "include_role_changes": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include role change events",
        "default": true
      }
    },
    "error_messages": [
      "Invalid contact ID: Contact does not exist in the system.",
      "Invalid tracking period: Period must be between 1 and 365 days.",
      "No tracking data available: Contact has no recorded hierarchy movements in the specified period.",
      "Access denied: Insufficient permissions to track this contact's hierarchy movements."
    ],
    "usage": "Provide contact_id to track. Optionally set tracking_period_days and include_role_changes flag. The tool provides comprehensive contact movement history within account hierarchies.",
    "output_details": {
      "contact_name": {
        "type": "string",
        "description": "Name of the tracked contact"
      },
      "current_account_id": {
        "type": "string",
        "description": "Current primary account association"
      },
      "movement_count": {
        "type": "integer",
        "description": "Number of hierarchy movements in tracking period"
      },
      "role_changes": {
        "type": "integer",
        "description": "Number of role changes in tracking period"
      },
      "movement_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Chronological list of contact movements and changes"
      },
      "tracking_timestamp": {
        "type": "string",
        "description": "When tracking was performed in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Change Detector",
    "tool_description": "Monitors and detects changes in account hierarchies, relationships, and contact associations over specified time periods.",
    "parameters": {
      "monitoring_scope": {
        "type": "string",
        "required": true,
        "description": "Scope of change monitoring: single_account, hierarchy_branch, full_hierarchy, relationship_network"
      },
      "target_ids": {
        "type": "array",
        "required": true,
        "description": "Array of account or hierarchy IDs to monitor",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "change_types": {
        "type": "array",
        "required": true,
        "description": "Types of changes to detect",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 12
      },
      "monitoring_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to monitor for changes",
        "default": 30
      },
      "change_threshold": {
        "type": "string",
        "required": false,
        "description": "Sensitivity level: low, medium, high",
        "default": "medium"
      },
      "include_minor_changes": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include minor field updates",
        "default": false
      },
      "real_time_monitoring": {
        "type": "boolean",
        "required": false,
        "description": "Whether to enable real-time change detection",
        "default": false
      },
      "notification_threshold": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of changes to trigger notification",
        "default": 1
      },
      "exclude_user_ids": {
        "type": "array",
        "required": false,
        "description": "Array of user IDs to exclude from change tracking",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "baseline_date": {
        "type": "string",
        "required": false,
        "description": "Baseline date for change comparison in ISO 8601 format",
        "default": "None"
      },
      "output_format": {
        "type": "string",
        "required": false,
        "description": "Format for change reports: summary, detailed, timeline",
        "default": "summary"
      },
      "group_similar_changes": {
        "type": "boolean",
        "required": false,
        "description": "Whether to group similar changes together",
        "default": true
      }
    },
    "error_messages": [
      "Invalid monitoring scope: Scope must be one of: single_account, hierarchy_branch, full_hierarchy, relationship_network.",
      "Invalid target IDs: One or more target IDs do not exist
