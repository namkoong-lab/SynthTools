field_name: financial_trading
subfield: algorithmic_trading_strategy_development
task: Risk management and portfolio optimization
tool_description: |-
  **STEP 1 — Rate task difficulty**

  Risk management and portfolio optimization is a **hard** task due to its broad scope encompassing multiple mathematical models, complex interdependencies between assets and risk factors, significant computational requirements for optimization algorithms, and high impact of errors on financial outcomes.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to cover portfolio construction, risk assessment, optimization, and monitoring workflows.

  **STEP 3 — List all tool names and dependencies**

  1. **Portfolio Data Loader** - Consumes: file paths, symbols → Produces: portfolio positions, market data
  2. **Risk Factor Calculator** - Consumes: price data, returns → Produces: volatility, correlations, beta metrics
  3. **Covariance Matrix Builder** - Consumes: returns data, timeframe → Produces: covariance/correlation matrices
  4. **VaR Calculator** - Consumes: portfolio data, distributions → Produces: Value-at-Risk metrics
  5. **Sharpe Ratio Analyzer** - Consumes: returns, risk-free rate → Produces: risk-adjusted performance metrics
  6. **Portfolio Optimizer** - Consumes: expected returns, covariance matrix, constraints → Produces: optimal weights
  7. **Risk Budget Allocator** - Consumes: risk targets, asset risks → Produces: risk-based position sizing
  8. **Stress Test Engine** - Consumes: portfolio, scenario parameters → Produces: stress test results
  9. **Drawdown Analyzer** - Consumes: portfolio returns, timeframe → Produces: drawdown statistics
  10. **Correlation Monitor** - Consumes: asset returns, thresholds → Produces: correlation alerts
  11. **Position Sizer** - Consumes: signals, risk parameters → Produces: position sizes
  12. **Rebalancing Scheduler** - Consumes: current weights, target weights → Produces: rebalancing actions
  13. **Performance Attribution** - Consumes: portfolio returns, benchmark → Produces: attribution analysis
  14. **Risk Limit Monitor** - Consumes: current positions, risk limits → Produces: limit breach alerts
  15. **Black-Litterman Optimizer** - Consumes: market views, confidence levels → Produces: adjusted expected returns
  16. **Monte Carlo Simulator** - Consumes: portfolio parameters, scenarios → Produces: simulation results
  17. **Risk Report Generator** - Consumes: risk metrics, portfolio data → Produces: comprehensive risk reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic Risk Assessment: Portfolio Data Loader → Risk Factor Calculator → VaR Calculator
  2. Performance Analysis: Portfolio Data Loader → Sharpe Ratio Analyzer → Drawdown Analyzer

  **Medium Plans:**
  1. Portfolio Optimization: Portfolio Data Loader → Covariance Matrix Builder → Portfolio Optimizer → Position Sizer
  2. Risk Monitoring: Risk Factor Calculator → Risk Limit Monitor → Correlation Monitor → Risk Report Generator
  3. Stress Testing: Portfolio Data Loader → Stress Test Engine → Monte Carlo Simulator → Performance Attribution

  **Complex Plans:**
  1. Full Portfolio Management: Portfolio Data Loader → Covariance Matrix Builder → Black-Litterman Optimizer → Portfolio Optimizer → Risk Budget Allocator → Position Sizer → Rebalancing Scheduler → Risk Report Generator
  2. Advanced Risk Framework: Portfolio Data Loader → Risk Factor Calculator → VaR Calculator → Stress Test Engine → Monte Carlo Simulator → Risk Limit Monitor → Performance Attribution → Risk Report Generator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Portfolio Data Loader",
    "tool_description": "Loads portfolio positions and market data from various sources, normalizing data formats for downstream analysis.",
    "parameters": {
      "data_source": {
        "type": "string",
        "required": true,
        "description": "Data source type: csv, json, database, api"
      },
      "file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the data file or connection string"
      },
      "symbols": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of asset symbols to load"
      }
    },
    "error_messages": [
      "Invalid data source: Use one of [csv, json, database, api]",
      "File not found: The specified file path does not exist or is inaccessible",
      "Invalid symbols: At least one symbol must be provided and symbols must be valid strings",
      "Data format error: The loaded data does not match expected portfolio format"
    ],
    "usage": "Specify data_source, file_path, and symbols array to load portfolio data. Returns normalized position and price data for analysis.",
    "output_details": {
      "symbols": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of successfully loaded symbols"
      },
      "positions": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Current position sizes for each symbol"
      },
      "prices": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Latest prices for each symbol"
      },
      "status": {
        "type": "string",
        "description": "Loading status message"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Factor Calculator",
    "tool_description": "Calculates key risk metrics including volatility, beta, and correlation measures for individual assets and portfolios.",
    "parameters": {
      "returns_data": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Array of return values for the asset or portfolio"
      },
      "benchmark_returns": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Benchmark return series for beta calculation",
        "default": "None"
      },
      "lookback_period": {
        "type": "integer",
        "required": false,
        "description": "Number of periods to use for calculations (minimum 30)",
        "default": 252
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Confidence level for risk metrics (0.01 to 0.99)",
        "default": 0.95
      },
      "annualization_factor": {
        "type": "number",
        "required": false,
        "description": "Factor to annualize metrics (e.g., 252 for daily data)",
        "default": 252
      }
    },
    "error_messages": [
      "Insufficient data: Returns data must contain at least 30 observations",
      "Mismatched data length: Returns and benchmark data must have the same length",
      "Invalid confidence level: Must be between 0.01 and 0.99",
      "Invalid lookback period: Must be at least 30 and not exceed data length",
      "Invalid annualization factor: Must be positive number"
    ],
    "usage": "Provide returns_data array and optionally benchmark_returns, lookback_period, confidence_level, and annualization_factor. Returns comprehensive risk metrics.",
    "output_details": {
      "volatility": {
        "type": "number",
        "description": "Annualized volatility of the returns"
      },
      "beta": {
        "type": "number",
        "description": "Beta coefficient relative to benchmark (if provided)"
      },
      "correlation": {
        "type": "number",
        "description": "Correlation with benchmark (if provided)"
      },
      "var_estimate": {
        "type": "number",
        "description": "Value-at-Risk estimate at specified confidence level"
      },
      "tracking_error": {
        "type": "number",
        "description": "Tracking error relative to benchmark (if provided)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Covariance Matrix Builder",
    "tool_description": "Constructs covariance and correlation matrices from multi-asset return data with various estimation methods.",
    "parameters": {
      "returns_matrix": {
        "type": "array",
        "items": {"type": "array"},
        "required": true,
        "description": "2D array where each sub-array represents returns for one asset"
      },
      "estimation_method": {
        "type": "string",
        "required": false,
        "description": "Method for covariance estimation: sample, shrinkage, exponential",
        "default": "sample"
      },
      "shrinkage_target": {
        "type": "string",
        "required": false,
        "description": "Shrinkage target: identity, constant_correlation, single_factor",
        "default": "constant_correlation"
      },
      "decay_factor": {
        "type": "number",
        "required": false,
        "description": "Decay factor for exponential weighting (0.01 to 0.99)",
        "default": 0.94
      }
    },
    "error_messages": [
      "Invalid returns matrix: Must be 2D array with at least 2 assets and 30 observations",
      "Inconsistent data length: All asset return series must have the same length",
      "Invalid estimation method: Use one of [sample, shrinkage, exponential]",
      "Invalid shrinkage target: Use one of [identity, constant_correlation, single_factor]",
      "Invalid decay factor: Must be between 0.01 and 0.99"
    ],
    "usage": "Provide returns_matrix as 2D array and optionally specify estimation_method, shrinkage_target, and decay_factor. Returns covariance and correlation matrices.",
    "output_details": {
      "covariance_matrix": {
        "type": "array",
        "items": {"type": "array"},
        "description": "2D covariance matrix"
      },
      "correlation_matrix": {
        "type": "array",
        "items": {"type": "array"},
        "description": "2D correlation matrix"
      },
      "eigenvalues": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Eigenvalues of the covariance matrix"
      },
      "condition_number": {
        "type": "number",
        "description": "Condition number indicating matrix stability"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "VaR Calculator",
    "tool_description": "Calculates Value-at-Risk and Expected Shortfall using multiple methodologies for portfolio risk assessment.",
    "parameters": {
      "returns_data": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Historical returns data for VaR calculation"
      },
      "portfolio_value": {
        "type": "number",
        "required": true,
        "description": "Current portfolio value in monetary units"
      },
      "confidence_levels": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Array of confidence levels (e.g., [0.95, 0.99])",
        "default": "[0.95, 0.99]"
      },
      "time_horizon": {
        "type": "integer",
        "required": false,
        "description": "Time horizon in days (1 to 30)",
        "default": 1
      },
      "method": {
        "type": "string",
        "required": false,
        "description": "VaR calculation method: historical, parametric, monte_carlo",
        "default": "historical"
      },
      "num_simulations": {
        "type": "integer",
        "required": false,
        "description": "Number of Monte Carlo simulations (1000 to 100000)",
        "default": 10000
      }
    },
    "error_messages": [
      "Insufficient data: Returns data must contain at least 100 observations for reliable VaR estimation",
      "Invalid portfolio value: Must be positive number",
      "Invalid confidence levels: All values must be between 0.01 and 0.999",
      "Invalid time horizon: Must be between 1 and 30 days",
      "Invalid method: Use one of [historical, parametric, monte_carlo]",
      "Invalid simulation count: Must be between 1000 and 100000 for Monte Carlo method"
    ],
    "usage": "Provide returns_data and portfolio_value, optionally specify confidence_levels, time_horizon, method, and num_simulations. Returns VaR and Expected Shortfall estimates.",
    "output_details": {
      "var_estimates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "VaR estimates for each confidence level"
      },
      "expected_shortfall": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Expected Shortfall (CVaR) for each confidence level"
      },
      "confidence_levels": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence levels used for calculations"
      },
      "method_used": {
        "type": "string",
        "description": "VaR calculation method applied"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sharpe Ratio Analyzer",
    "tool_description": "Calculates risk-adjusted performance metrics including Sharpe ratio, information ratio, and related measures.",
    "parameters": {
      "portfolio_returns": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Portfolio return series"
      },
      "risk_free_rate": {
        "type": "number",
        "required": true,
        "description": "Risk-free rate for excess return calculation"
      },
      "benchmark_returns": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Benchmark return series for information ratio",
        "default": "None"
      },
      "annualization_factor": {
        "type": "number",
        "required": false,
        "description": "Annualization factor (e.g., 252 for daily returns)",
        "default": 252
      }
    },
    "error_messages": [
      "Insufficient data: Portfolio returns must contain at least 12 observations",
      "Invalid risk-free rate: Must be a valid numeric rate",
      "Mismatched data length: Portfolio and benchmark returns must have same length if benchmark provided",
      "Invalid annualization factor: Must be positive number",
      "Zero volatility error: Cannot calculate Sharpe ratio with zero portfolio volatility"
    ],
    "usage": "Provide portfolio_returns and risk_free_rate, optionally add benchmark_returns and annualization_factor. Returns comprehensive performance metrics.",
    "output_details": {
      "sharpe_ratio": {
        "type": "number",
        "description": "Annualized Sharpe ratio"
      },
      "information_ratio": {
        "type": "number",
        "description": "Information ratio vs benchmark (if provided)"
      },
      "sortino_ratio": {
        "type": "number",
        "description": "Sortino ratio using downside deviation"
      },
      "calmar_ratio": {
        "type": "number",
        "description": "Calmar ratio (return/max drawdown)"
      },
      "excess_return": {
        "type": "number",
        "description": "Annualized excess return over risk-free rate"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Portfolio Optimizer",
    "tool_description": "Performs portfolio optimization using various objective functions and constraint sets to determine optimal asset weights.",
    "parameters": {
      "expected_returns": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Expected returns for each asset"
      },
      "covariance_matrix": {
        "type": "array",
        "items": {"type": "array"},
        "required": true,
        "description": "Asset covariance matrix (2D array)"
      },
      "objective": {
        "type": "string",
        "required": true,
        "description": "Optimization objective: max_sharpe, min_volatility, max_return, risk_parity"
      },
      "weight_bounds": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Array of [min_weight, max_weight] bounds",
        "default": "[0.0, 1.0]"
      },
      "target_return": {
        "type": "number",
        "required": false,
        "description": "Target return for efficient frontier point",
        "default": "None"
      },
      "target_volatility": {
        "type": "number",
        "required": false,
        "description": "Target volatility constraint",
        "default": "None"
      },
      "sector_constraints": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Maximum allocation per sector",
        "default": "None"
      },
      "turnover_constraint": {
        "type": "number",
        "required": false,
        "description": "Maximum portfolio turnover allowed",
        "default": "None"
      },
      "risk_free_rate": {
        "type": "number",
        "required": false,
        "description": "Risk-free rate for Sharpe ratio calculation",
        "default": 0.02
      },
      "solver_tolerance": {
        "type": "number",
        "required": false,
        "description": "Solver convergence tolerance",
        "default": 0.000001
      },
      "max_iterations": {
        "type": "integer",
        "required": false,
        "description": "Maximum solver iterations",
        "default": 1000
      }
    },
    "error_messages": [
      "Dimension mismatch: Expected returns length must match covariance matrix dimensions",
      "Invalid covariance matrix: Must be positive semi-definite square matrix",
      "Invalid objective: Use one of [max_sharpe, min_volatility, max_return, risk_parity]",
      "Invalid weight bounds: Bounds must be [min, max] with 0 <= min <= max <= 1",
      "Infeasible constraints: The combination of constraints has no feasible solution",
      "Convergence failure: Solver failed to converge within maximum iterations",
      "Invalid target parameters: target_return and target_volatility must be positive if specified"
    ],
    "usage": "Provide expected_returns, covariance_matrix, and objective. Optionally add constraints via weight_bounds, target_return, target_volatility, sector_constraints, and turnover_constraint. Adjust solver parameters if needed.",
    "output_details": {
      "optimal_weights": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Optimal portfolio weights for each asset"
      },
      "expected_return": {
        "type": "number",
        "description": "Expected portfolio return"
      },
      "expected_volatility": {
        "type": "number",
        "description": "Expected portfolio volatility"
      },
      "sharpe_ratio": {
        "type": "number",
        "description": "Expected Sharpe ratio of optimal portfolio"
      },
      "optimization_status": {
        "type": "string",
        "description": "Solver convergence status"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Budget Allocator",
    "tool_description": "Allocates portfolio positions based on risk budgeting principles, ensuring each position contributes equally to total portfolio risk.",
    "parameters": {
      "asset_volatilities": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Individual asset volatilities"
      },
      "correlation_matrix": {
        "type": "array",
        "items": {"type": "array"},
        "required": true,
        "description": "Asset correlation matrix"
      },
      "risk_budgets": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Target risk contribution for each asset (must sum to 1)"
      },
      "total_portfolio_value": {
        "type": "number",
        "required": true,
        "description": "Total portfolio value for position sizing"
      },
      "rebalancing_frequency": {
        "type": "string",
        "required": false,
        "description": "Rebalancing frequency: daily, weekly, monthly, quarterly",
        "default": "monthly"
      }
    },
    "error_messages": [
      "Dimension mismatch: All input arrays must have consistent dimensions",
      "Invalid risk budgets: Risk budgets must be positive and sum to 1.0",
      "Invalid correlation matrix: Must be symmetric positive semi-definite matrix with 1.0 on diagonal",
      "Invalid volatilities: All volatilities must be positive",
      "Invalid portfolio value: Must be positive number",
      "Invalid rebalancing frequency: Use one of [daily, weekly, monthly, quarterly]"
    ],
    "usage": "Provide asset_volatilities, correlation_matrix, risk_budgets, and total_portfolio_value. Optionally specify rebalancing_frequency. Returns risk-budgeted position sizes.",
    "output_details": {
      "position_weights": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Risk-budgeted portfolio weights"
      },
      "position_values": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Dollar position sizes for each asset"
      },
      "risk_contributions": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Actual risk contribution of each position"
      },
      "portfolio_volatility": {
        "type": "number",
        "description": "Total portfolio volatility"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stress Test Engine",
    "tool_description": "Conducts portfolio stress testing under various market scenarios to assess potential losses and risk exposures.",
    "parameters": {
      "portfolio_positions": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Current portfolio position sizes"
      },
      "asset_prices": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Current asset prices"
      },
      "stress_scenarios": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Stress scenarios to test: market_crash, interest_rate_shock, credit_crisis, liquidity_crisis, inflation_shock"
      },
      "scenario_severity": {
        "type": "string",
        "required": false,
        "description": "Scenario severity: mild, moderate, severe, extreme",
        "default": "moderate"
      },
      "time_horizon": {
        "type": "integer",
        "required": false,
        "description": "Stress test time horizon in days",
        "default": 30
      },
      "correlation_breakdown": {
        "type": "boolean",
        "required": false,
        "description": "Whether to model correlation breakdown in stress scenarios",
        "default": true
      },
      "liquidity_impact": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include liquidity impact in stress scenarios",
        "default": false
      }
    },
    "error_messages": [
      "Dimension mismatch: Portfolio positions and asset prices must have same length",
      "Invalid positions: All position sizes must be numeric",
      "Invalid prices: All asset prices must be positive",
      "Invalid scenarios: Use scenarios from [market_crash, interest_rate_shock, credit_crisis, liquidity_crisis, inflation_shock]",
      "Invalid severity: Use one of [mild, moderate, severe, extreme]",
      "Invalid time horizon: Must be between 1 and 365 days"
    ],
    "usage": "Provide portfolio_positions, asset_prices, and stress_scenarios array. Optionally set scenario_severity, time_horizon, correlation_breakdown, and liquidity_impact flags.",
    "output_details": {
      "scenario_losses": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Portfolio loss for each stress scenario"
      },
      "worst_case_loss": {
        "type": "number",
        "description": "Maximum loss across all scenarios"
      },
      "scenario_names": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Names of tested stress scenarios"
      },
      "asset_contributions": {
        "type": "array",
        "items": {"type": "array"},
        "description": "Individual asset loss contributions per scenario"
      },
      "liquidity_costs": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Additional liquidity costs per scenario (if enabled)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Drawdown Analyzer",
    "tool_description": "Analyzes portfolio drawdown characteristics including maximum drawdown, duration, and recovery statistics.",
    "parameters": {
      "portfolio_values": {
        "type": "array",
        "items": {"type": "number"},
        "required": true,
        "description": "Time series of portfolio values"
      },
      "timestamps": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "Timestamps corresponding to portfolio values"
      },
      "benchmark_values": {
        "type": "array",
        "items": {"type": "number"},
        "required": false,
        "description": "Benchmark portfolio values for relative drawdown",
        "default": "None"
      }
    },
    "error_messages": [
      "Dimension mismatch: Portfolio values and timestamps must have same length",
      "Insufficient data: Need at least 10 observations for drawdown analysis",
      "Invalid portfolio values: All values must be positive",
      "Invalid timestamps: Timestamps must be in chronological order",
      "Benchmark length mismatch: Benchmark values must match portfolio length if provided"
    ],
    "usage": "Provide portfolio_values and corresponding timestamps arrays. Optionally include benchmark_values for relative drawdown analysis.",
    "output_details": {
      "max_drawdown": {
        "type": "number",
        "description": "Maximum drawdown percentage"
      },
      "max_drawdown_duration": {
        "type": "integer",
        "description": "Duration of maximum drawdown in days"
      },
      "recovery_time": {
        "type": "integer",
        "description": "Time to recover from maximum drawdown in days"
      },
      "current_drawdown": {
        "type": "number",
        "description": "Current drawdown from peak"
      },
      "drawdown_periods": {
        "type": "integer",
        "description": "Number of distinct drawdown periods"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Correlation Monitor",
    "tool_description": "Monitors asset correlations in real-time and generates alerts when correlations exceed predefined thresholds.",
    "parameters": {
      "returns_data": {
        "type": "array",
        "items": {"type": "array"},
        "required": true,
        "description": "2D array of asset returns for correlation calculation"
      },
      "correlation_threshold": {
        "type": "number",
        "required": true,
        "description": "Alert threshold for correlation (0.0 to 1.0)"
      },
      "window_size": {
        "type": "integer",
        "required": false,
        "description": "Rolling window size for correlation calculation",
        "default": 60
      },
      "alert_type": {
        "type": "string",
        "required": false,
        "description": "Alert condition: above_threshold, below_threshold, significant_change",
        "default": "above_threshold"
      }
    },
    "error_messages": [
      "Invalid returns data: Must be 2D array with at least 2 assets",
      "Invalid correlation threshold: Must be between 0.0 and 1.0",
      "Invalid window size: Must be at least 10 and not exceed data length",
      "Invalid alert type: Use one of [above_threshold, below_threshold, significant_change]",
      "Insufficient data: Need at least window_size observations for each asset"
    ],
    "usage": "Provide returns_data and correlation_threshold. Optionally set window_size and alert_type. Returns correlation matrix and any threshold violations.",
    "output_details": {
      "correlation_matrix": {
        "type": "array",
        "items": {"type": "array"},
        "description": "Current correlation matrix"
      },
      "alerts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of correlation alerts"
      },
      "threshold_violations": {
        "type": "array",
        "items": {"type": "array"},
        "description": "Asset pairs violating correlation thresholds"
      },
      "max_correlation": {
        "type": "number",
        "description": "Maximum correlation in the matrix"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Position Sizer",
    "tool_description": "Determines appropriate position sizes based on risk parameters, signals strength, and portfolio constraints.",
    "parameters": {
      "signal_strength": {
        "type": "number",
        "required": true,
        "description": "Trading signal strength (-1.0 to 1.0)"
      },
      "asset_volatility": {
        "type": "number",
        "required": true,
        "description": "Asset volatility for risk scaling"
      },
      "portfolio_equity": {
        "type": "number",
        "required": true,
        "description": "Total portfolio equity value"
      },
      "risk_per_trade": {
        "type": "number",
        "required": false,
        "description": "Maximum risk per trade as percentage of equity",
        "default": 0.02
      },
      "max_position_size": {
        "type": "number",
        "required": false,
        "description": "Maximum position size as percentage of equity",
        "default": 0.1
      }
    },
    "error_messages": [
      "Invalid signal strength: Must be between -1.0 and 1.0",
      "Invalid asset volatility: Must be positive number",
      "Invalid portfolio equity: Must be positive number",
      "Invalid risk per trade: Must be between 0.001 and 0.1 (0.1% to 10%)",
      "Invalid max position size: Must be between risk_per_trade and 1.0"
    ],
    "usage": "Provide signal_strength, asset_volatility, and portfolio_equity. Optionally adjust risk_per_trade and max_position_size parameters.",
    "output_details": {
      "position_size": {
        "
