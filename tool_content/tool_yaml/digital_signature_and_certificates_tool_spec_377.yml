field_name: digital_signature_and_certificates
subfield: Certificate Authority Operations
task: Certificate issuance and enrollment processing
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task involves complex cryptographic operations, PKI infrastructure management, identity verification, and compliance with security standards. The scope includes multiple interdependent processes (validation, signing, enrollment), strict security requirements, and potential for significant security impact if errors occur. This is a **hard** difficulty task.\n\n## STEP 2 — Set a tool budget\n\nGiven the hard difficulty rating, I'm targeting 17 tools within the 15-20 range to cover the comprehensive certificate lifecycle management, validation processes, cryptographic operations, and compliance requirements.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tools and their flow:**\n1. **Certificate Request Parser** → parses CSR data → feeds into validation tools\n2. **Identity Validator** → validates subject identity → feeds into approval workflow\n3. **Domain Ownership Verifier** → validates domain control → feeds into approval workflow  \n4. **Certificate Template Selector** → selects appropriate template → feeds into certificate generation\n5. **Key Usage Validator** → validates key usage parameters → feeds into certificate generation\n6. **Certificate Authority Signer** → signs certificates → produces signed certificates\n7. **Certificate Serial Generator** → generates unique serials → feeds into certificate creation\n8. **CRL Entry Manager** → manages revocation lists → feeds into revocation processes\n9. **Certificate Status Checker** → checks certificate validity → feeds into enrollment decisions\n10. **OCSP Response Generator** → generates OCSP responses → feeds into status services\n11. **Certificate Chain Builder** → builds certificate chains → feeds into validation processes\n12. **Enrollment Request Processor** → processes enrollment requests → coordinates multiple tools\n13. **Certificate Policy Enforcer** → enforces certificate policies → feeds into approval workflow\n14. **Cryptographic Key Generator** → generates key pairs → feeds into certificate creation\n15. **Certificate Expiry Monitor** → monitors certificate expiration → feeds into renewal processes\n16. **Audit Log Manager** → logs all operations → provides compliance tracking\n17. **Certificate Repository Manager** → manages certificate storage → provides certificate retrieval\n\n## STEP 4 — Multi-tool plans\n\n**Simple plans:**\n- Single certificate issuance: Certificate Request Parser → Identity Validator → Certificate Authority Signer → Certificate Repository Manager\n- Certificate status check: Certificate Status Checker → OCSP Response Generator → Audit Log Manager\n\n**Medium plans:**\n- Domain-validated certificate issuance: Certificate Request Parser → Domain Ownership Verifier → Certificate Template Selector → Key Usage Validator → Certificate Serial Generator → Certificate Authority Signer → Certificate Chain Builder → Certificate Repository Manager → Audit Log Manager\n- Certificate revocation: Certificate Status Checker → CRL Entry Manager → OCSP Response Generator → Certificate Repository Manager → Audit Log Manager\n\n**Complex plans:**\n- Full enterprise enrollment: Enrollment Request Processor → Certificate Request Parser → Identity Validator → Domain Ownership Verifier → Certificate Policy Enforcer → Certificate Template Selector → Key Usage Validator → Cryptographic Key Generator → Certificate Serial Generator → Certificate Authority Signer → Certificate Chain Builder → Certificate Repository Manager → Audit Log Manager\n- Complete certificate lifecycle with monitoring: All tools orchestrated for enrollment, issuance, monitoring, renewal alerts, and revocation management\n\n## STEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"Certificate Request Parser\",\n  \"tool_description\": \"Parses and validates Certificate Signing Request (CSR) files, extracting subject information, public key details, and requested extensions for further processing.\",\n  \"parameters\": {\n    \"csr_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\"\
  : \"Base64-encoded CSR in PEM or DER format\"\n    },\n    \"format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"CSR format: PEM or DER\",\n      \"default\": \"PEM\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid CSR format: Ensure CSR is properly Base64-encoded and in valid PEM or DER format.\",\n    \"Malformed CSR structure: CSR must contain valid subject information and public key.\",\n    \"Unsupported key algorithm: Only RSA, ECDSA, and EdDSA keys are supported.\",\n    \"Invalid CSR signature: CSR signature verification failed, ensure private key matches public key.\"\n  ],\n  \"usage\": \"Provide csr_data as Base64-encoded string and optionally specify format. Tool will parse and extract all relevant information from the CSR.\",\n  \"output_details\": {\n    \"subject_dn\": {\n      \"type\": \"string\",\n      \"description\": \"Distinguished name of the certificate subject\"\n    },\n    \"public_key_algorithm\": {\n      \"type\": \"string\",\n      \"description\": \"Algorithm used for the public key (RSA, ECDSA, EdDSA)\"\n    },\n    \"key_size\": {\n      \"type\": \"integer\",\n      \"description\": \"Size of the public key in bits\"\n    },\n    \"requested_extensions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of X.509 extensions requested in the CSR\"\n    },\n    \"subject_alt_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Subject alternative names requested\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Identity Validator\",\n  \"tool_description\": \"Validates the identity of certificate requestors through various verification methods including document verification, organizational validation, and extended validation processes.\",\n  \"parameters\": {\n    \"subject_dn\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Distinguished name of the certificate subject to validate\"\n    },\n    \"validation_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of validation: DV (domain), OV (organization), or EV (extended)\"\n    },\n    \"organization_name\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Legal name of the organization (required for OV and EV)\",\n      \"default\": \"None\"\n    },\n    \"country_code\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Two-letter ISO country code\",\n      \"default\": \"None\"\n    },\n    \"contact_email\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Contact email for verification communications\"\n    },\n    \"phone_number\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Contact phone number for verification\",\n      \"default\": \"None\"\n    },\n    \"business_registration_number\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Official business registration number (required for EV)\",\n      \"default\": \"None\"\n    },\n    \"verification_documents\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"List of Base64-encoded supporting documents\",\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Incomplete organization information: OV and EV validation require organization_name and country_code.\",\n    \"Missing business registration: EV validation requires valid business_registration_number.\",\n    \"Invalid email format: contact_email must be a valid email address format.\",\n    \"Document verification failed: Provided verification documents could not be validated.\",\n    \"Organization not found: Could not verify organization existence in official registries.\",\n    \"Contact verification failed: Unable to confirm contact information through\
  \ specified channels.\"\n  ],\n  \"usage\": \"Specify subject_dn, validation_type, and contact_email at minimum. For OV/EV validation, provide organization details and supporting documents. Tool will perform appropriate validation checks based on the validation type.\",\n  \"output_details\": {\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of validation: PASSED, FAILED, or PENDING\"\n    },\n    \"validation_method\": {\n      \"type\": \"string\",\n      \"description\": \"Method used for validation\"\n    },\n    \"verified_attributes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of successfully verified subject attributes\"\n    },\n    \"validation_expiry\": {\n      \"type\": \"string\",\n      \"description\": \"Expiration date-time of the validation\",\n      \"format\": \"date-time\"\n    },\n    \"validation_reference\": {\n      \"type\": \"string\",\n      \"description\": \"Unique reference ID for this validation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Domain Ownership Verifier\",\n  \"tool_description\": \"Verifies domain ownership through multiple methods including DNS validation, HTTP validation, and email validation for domain-validated certificates.\",\n  \"parameters\": {\n    \"domain_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Fully qualified domain name to verify ownership\"\n    },\n    \"verification_method\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Verification method: DNS, HTTP, or EMAIL\"\n    },\n    \"challenge_token\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Unique challenge token for verification\",\n      \"default\": \"None\"\n    },\n    \"validation_timeout\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Timeout in seconds for validation checks (60-3600)\",\n      \"default\": 300\n    }\n  },\n  \"error_messages\": [\n    \"Invalid domain format: Domain name must be a valid FQDN format.\",\n    \"Unsupported verification method: Use DNS, HTTP, or EMAIL verification methods.\",\n    \"DNS validation failed: Could not find required DNS TXT record with challenge token.\",\n    \"HTTP validation failed: Could not retrieve challenge token from /.well-known/acme-challenge/ path.\",\n    \"Email validation failed: Domain owner did not respond to verification email within timeout period.\",\n    \"Domain not resolvable: Domain name does not resolve to any IP address.\",\n    \"Timeout exceeded: Validation process exceeded the specified timeout period.\"\n  ],\n  \"usage\": \"Provide domain_name and verification_method. For DNS/HTTP methods, challenge_token will be generated if not provided. Tool will attempt domain ownership verification using the specified method.\",\n  \"output_details\": {\n    \"verification_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of domain verification: VERIFIED, FAILED, or PENDING\"\n    },\n    \"verification_method_used\": {\n      \"type\": \"string\",\n      \"description\": \"The actual verification method that was used\"\n    },\n    \"challenge_token\": {\n      \"type\": \"string\",\n      \"description\": \"The challenge token used for verification\"\n    },\n    \"verification_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when verification was completed\",\n      \"format\": \"date-time\"\n    },\n    \"dns_records_found\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"DNS records found during verification process\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Certificate Template Selector\",\n  \"tool_description\": \"Selects appropriate certificate template based on certificate type, intended usage, and organizational policies to ensure proper certificate configuration.\",\n  \"parameters\": {\n    \"certificate_type\"\
  : {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of certificate: SSL/TLS, Code Signing, Email, Client Auth, Server Auth\"\n    },\n    \"validation_level\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Validation level: DV, OV, or EV\"\n    },\n    \"key_usage_requirements\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Required key usage extensions\"\n    },\n    \"extended_key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Extended key usage requirements\",\n      \"default\": \"None\"\n    },\n    \"validity_period_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Requested validity period in days (1-825)\",\n      \"default\": 365\n    }\n  },\n  \"error_messages\": [\n    \"Unsupported certificate type: Use SSL/TLS, Code Signing, Email, Client Auth, or Server Auth.\",\n    \"Invalid validation level: Use DV, OV, or EV validation levels.\",\n    \"Incompatible key usage: Key usage requirements are incompatible with certificate type.\",\n    \"Invalid validity period: Validity period must be between 1-825 days based on CA/Browser Forum requirements.\",\n    \"Template not found: No suitable template found for the specified requirements.\",\n    \"Policy violation: Certificate configuration violates organizational certificate policy.\"\n  ],\n  \"usage\": \"Specify certificate_type, validation_level, and key_usage_requirements. Tool will select the most appropriate certificate template and return template configuration details.\",\n  \"output_details\": {\n    \"template_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier of the selected certificate template\"\n    },\n    \"template_name\": {\n      \"type\": \"string\",\n      \"description\": \"Human-readable name of the certificate template\"\n    },\n    \"allowed_key_sizes\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"description\": \"Allowed key sizes for this template\"\n    },\n    \"maximum_validity_days\": {\n      \"type\": \"integer\",\n      \"description\": \"Maximum validity period allowed by this template\"\n    },\n    \"required_extensions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Required X.509 extensions for this template\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Key Usage Validator\",\n  \"tool_description\": \"Validates key usage and extended key usage parameters against certificate type requirements and security policies to ensure proper certificate configuration.\",\n  \"parameters\": {\n    \"certificate_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of certificate being validated\"\n    },\n    \"key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Key usage extensions to validate\"\n    },\n    \"extended_key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Extended key usage extensions to validate\",\n      \"default\": \"None\"\n    },\n    \"critical_extensions\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Extensions that should be marked as critical\",\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid key usage combination: Key usage values are incompatible with each other.\",\n    \"Certificate type mismatch: Key usage doesn't match the specified certificate type requirements.\",\n    \"Missing required key usage: Required key usage extensions are missing for\
  \ this certificate type.\",\n    \"Invalid extended key usage: Extended key usage values are not valid OID formats.\",\n    \"Critical extension conflict: Extension cannot be marked as critical for this certificate type.\",\n    \"Policy violation: Key usage configuration violates CA security policies.\"\n  ],\n  \"usage\": \"Provide certificate_type and key_usage array. Optionally specify extended_key_usage and critical_extensions. Tool validates the configuration against standards and policies.\",\n  \"output_details\": {\n    \"validation_result\": {\n      \"type\": \"string\",\n      \"description\": \"Overall validation result: VALID, INVALID, or WARNING\"\n    },\n    \"validated_key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Final validated key usage extensions\"\n    },\n    \"validated_extended_key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Final validated extended key usage extensions\"\n    },\n    \"validation_warnings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Any warnings about the key usage configuration\"\n    },\n    \"compliance_status\": {\n      \"type\": \"string\",\n      \"description\": \"Compliance status with industry standards\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Certificate Authority Signer\",\n  \"tool_description\": \"Signs certificate requests using the CA's private key, generating X.509 certificates with proper extensions, validity periods, and digital signatures.\",\n  \"parameters\": {\n    \"csr_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Base64-encoded Certificate Signing Request\"\n    },\n    \"template_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Certificate template identifier to use\"\n    },\n    \"serial_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique certificate serial number\"\n    },\n    \"validity_period_days\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Certificate validity period in days\"\n    },\n    \"subject_alt_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Subject alternative names to include\",\n      \"default\": \"None\"\n    },\n    \"key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"Key usage extensions\"\n    },\n    \"extended_key_usage\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Extended key usage extensions\",\n      \"default\": \"None\"\n    },\n    \"ca_private_key_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Identifier of the CA private key to use for signing\"\n    },\n    \"signature_algorithm\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Signature algorithm: SHA256withRSA, SHA384withECDSA, etc.\",\n      \"default\": \"SHA256withRSA\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid CSR data: CSR must be properly formatted and parseable.\",\n    \"Template not found: Specified template_id does not exist or is not accessible.\",\n    \"Duplicate serial number: The serial number is already in use by another certificate.\",\n    \"Invalid validity period: Validity period exceeds maximum allowed by template or policy.\",\n    \"CA key not available: Specified CA private key is not available or accessible.\",\n    \"Signature generation failed: Unable to generate digital signature, check CA key and algorithm compatibility.\",\n    \"Extension processing error: Unable to process required certificate extensions.\"\n  ],\n\
  \  \"usage\": \"Provide CSR data, template_id, serial_number, validity_period_days, key_usage, and ca_private_key_id. Tool will generate and sign the certificate according to the template specifications.\",\n  \"output_details\": {\n    \"certificate_pem\": {\n      \"type\": \"string\",\n      \"description\": \"Base64-encoded signed certificate in PEM format\"\n    },\n    \"certificate_fingerprint\": {\n      \"type\": \"string\",\n      \"description\": \"SHA-256 fingerprint of the certificate\"\n    },\n    \"serial_number\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate serial number\"\n    },\n    \"not_before\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate validity start date\",\n      \"format\": \"date-time\"\n    },\n    \"not_after\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate validity end date\",\n      \"format\": \"date-time\"\n    },\n    \"issuer_dn\": {\n      \"type\": \"string\",\n      \"description\": \"Distinguished name of the certificate issuer\"\n    },\n    \"signature_algorithm_used\": {\n      \"type\": \"string\",\n      \"description\": \"Signature algorithm used for signing\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Certificate Serial Generator\",\n  \"tool_description\": \"Generates cryptographically secure, unique serial numbers for certificates following CA/Browser Forum guidelines and ensuring no collisions with existing certificates.\",\n  \"parameters\": {\n    \"entropy_bits\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of entropy bits for serial number generation (64-159)\",\n      \"default\": 128\n    },\n    \"format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Serial number format: HEX or DECIMAL\",\n      \"default\": \"HEX\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid entropy bits: Entropy must be between 64-159 bits as per CA/Browser Forum requirements.\",\n    \"Unsupported format: Use HEX or DECIMAL format only.\",\n    \"Serial collision detected: Generated serial number already exists, regeneration required.\",\n    \"Insufficient entropy: System entropy pool insufficient for secure serial generation.\"\n  ],\n  \"usage\": \"Optionally specify entropy_bits and format. Tool generates cryptographically secure serial numbers that are guaranteed to be unique within the CA's certificate database.\",\n  \"output_details\": {\n    \"serial_number\": {\n      \"type\": \"string\",\n      \"description\": \"Generated unique certificate serial number\"\n    },\n    \"entropy_used\": {\n      \"type\": \"integer\",\n      \"description\": \"Actual entropy bits used in generation\"\n    },\n    \"generation_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when serial number was generated\",\n      \"format\": \"date-time\"\n    },\n    \"format_used\": {\n      \"type\": \"string\",\n      \"description\": \"Format of the generated serial number\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"CRL Entry Manager\",\n  \"tool_description\": \"Manages Certificate Revocation List entries, adding revoked certificates with reason codes and timestamps for distribution through CRL publication points.\",\n  \"parameters\": {\n    \"certificate_serial\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Serial number of certificate to revoke\"\n    },\n    \"revocation_reason\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Revocation reason: unspecified, keyCompromise, caCompromise, affiliationChanged, superseded, cessationOfOperation, certificateHold, removeFromCRL\"\n    },\n    \"revocation_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Date of revocation (defaults to current time)\",\n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    },\n    \"invalidity_date\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\"\
  : \"Date when certificate became invalid (for backdated revocations)\",\n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Certificate not found: Serial number does not correspond to any issued certificate.\",\n    \"Invalid revocation reason: Use a valid RFC 5280 revocation reason code.\",\n    \"Certificate already revoked: Certificate is already present in the CRL.\",\n    \"Invalid date format: Dates must be in valid ISO 8601 format.\",\n    \"Invalidity date after revocation: Invalidity date cannot be later than revocation date.\",\n    \"Certificate expired: Cannot revoke a certificate that has already expired.\"\n  ],\n  \"usage\": \"Provide certificate_serial and revocation_reason. Optionally specify custom revocation_date and invalidity_date. Tool adds the certificate to the CRL with proper reason codes.\",\n  \"output_details\": {\n    \"crl_entry_added\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether the CRL entry was successfully added\"\n    },\n    \"serial_number\": {\n      \"type\": \"string\",\n      \"description\": \"Serial number of the revoked certificate\"\n    },\n    \"revocation_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when certificate was revoked\",\n      \"format\": \"date-time\"\n    },\n    \"reason_code\": {\n      \"type\": \"string\",\n      \"description\": \"Revocation reason code used\"\n    },\n    \"next_crl_update\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when next CRL will be published\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Certificate Status Checker\",\n  \"tool_description\": \"Checks the current status of certificates by verifying against CRL, OCSP responses, and certificate validity periods to determine if certificates are valid, revoked, or expired.\",\n  \"parameters\": {\n    \"certificate_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Base64-encoded certificate to check status\"\n    },\n    \"check_revocation\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check revocation status\",\n      \"default\": true\n    },\n    \"check_chain\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to validate the certificate chain\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid certificate format: Certificate must be valid PEM or DER encoded X.509 certificate.\",\n    \"Certificate parsing failed: Unable to parse certificate data structure.\",\n    \"CRL unavailable: Cannot access Certificate Revocation List for status checking.\",\n    \"OCSP responder unavailable: OCSP service is not responding for revocation checking.\",\n    \"Chain validation failed: Certificate chain cannot be validated to trusted root.\"\n  ],\n  \"usage\": \"Provide certificate_data as Base64-encoded certificate. Optionally disable revocation or chain checking. Tool returns comprehensive status information about the certificate.\",\n  \"output_details\": {\n    \"certificate_status\": {\n      \"type\": \"string\",\n      \"description\": \"Overall certificate status: VALID, REVOKED, EXPIRED, or UNKNOWN\"\n    },\n    \"serial_number\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate serial number\"\n    },\n    \"validity_status\": {\n      \"type\": \"string\",\n      \"description\": \"Time validity status: VALID, EXPIRED, or NOT_YET_VALID\"\n    },\n    \"revocation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Revocation status: NOT_REVOKED, REVOKED, or UNKNOWN\"\n    },\n    \"chain_valid\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether certificate chain validation passed\"\n    },\n    \"expires_at\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate expiration date\",\n      \"format\": \"date-time\"\n    },\n    \"days_until_expiry\": {\n      \"type\": \"integer\"\
  ,\n      \"description\": \"Number of days until certificate expires\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"OCSP Response Generator\",\n  \"tool_description\": \"Generates Online Certificate Status Protocol responses for certificate status queries, providing real-time revocation information with cryptographic signatures.\",\n  \"parameters\": {\n    \"certificate_serial\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Serial number of certificate being queried\"\n    },\n    \"issuer_name_hash\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Hash of the certificate issuer's name\"\n    },\n    \"issuer_key_hash\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Hash of the certificate issuer's public key\"\n    },\n    \"hash_algorithm\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Hash algorithm used: SHA1, SHA256, SHA384, SHA512\",\n      \"default\": \"SHA256\"\n    },\n    \"response_validity_hours\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"OCSP response validity period in hours (1-168)\",\n      \"default\": 24\n    },\n    \"nonce\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"OCSP request nonce for replay protection\",\n      \"default\": \"None\"\n    }\n  },\n  \"error_messages\": [\n    \"Certificate not found: Serial number does not match any issued certificate.\",\n    \"Invalid issuer hash: Issuer name or key hash does not match CA certificate.\",\n    \"Unsupported hash algorithm: Use SHA1, SHA256, SHA384, or SHA512.\",\n    \"Invalid validity period: Response validity must be between 1-168 hours.\",\n    \"OCSP signing key unavailable: OCSP responder signing key is not available.\",\n    \"Signature generation failed: Unable to generate OCSP response signature.\"\n  ],\n  \"usage\": \"Provide certificate_serial, issuer_name_hash, and issuer_key_hash. Optionally specify hash_algorithm, response_validity_hours, and nonce. Tool generates signed OCSP response.\",\n  \"output_details\": {\n    \"ocsp_response\": {\n      \"type\": \"string\",\n      \"description\": \"Base64-encoded DER OCSP response\"\n    },\n    \"certificate_status\": {\n      \"type\": \"string\",\n      \"description\": \"Certificate status: GOOD, REVOKED, or UNKNOWN\"\n    },\n    \"this_update\": {\n      \"type\": \"string\",\n      \"description\": \"Response generation time\",\n      \"format\": \"date-time\"\n    },\n    \"next_update\": {\n      \"type\": \"string\",\n      \"description\": \"Next scheduled response update time\",\n      \"format\": \"date-time\"\n    },\n    \"response_signature\": {\n      \"type\": \"string\",\n      \"description\": \"OCSP response signature algorithm used\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Certificate Chain Builder\",\n  \"tool_description\": \"Constructs complete certificate chains from end-entity certificates to trusted root CAs, validating each link and ensuring proper certificate hierarchy.\",\n  \"parameters\": {\n    \"end_entity_cert\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Base64-encoded end-entity certificate\"\n    },\n    \"intermediate_certs\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Array of Base64-encoded intermediate certificates\",\n      \"default\": \"None\"\n    },\n    \"trusted_roots\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Array of Base64-encoded trusted root certificates\",\n      \"default\": \"None\"\n    },\n    \"validate_signatures\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to validate certificate signatures in chain\",\n      \"default\": true\n    },\n    \"check_validity_dates\": {\n  \
  \    \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check certificate validity dates\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid certificate format: One or more certificates are not valid X.509 format.\",\n    \"Chain building failed: Unable to construct complete chain to trusted root.\","
