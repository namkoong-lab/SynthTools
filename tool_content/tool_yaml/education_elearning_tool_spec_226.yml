field_name: education_elearning
subfield: Video-Based Learning and Streaming
task: Video content discovery and recommendation based on learning objectives and user preferences
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is of **medium** difficulty. It involves multiple complex subproblems including content analysis, user profiling, preference matching, and recommendation algorithms. There are moderate unknowns around learning objective interpretation and user preference evolution, with dependencies between content metadata, user behavior tracking, and recommendation engines. Errors in recommendations can impact learning outcomes but are not catastrophic.

  **STEP 2 — Set a tool budget**

  Given the medium complexity, I'll target **12 tools** to cover the various aspects of video content discovery and recommendation systems for educational platforms.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Content Metadata Extractor** - Consumes: video files/URLs → Produces: structured metadata
  2. **Learning Objective Parser** - Consumes: text descriptions → Produces: standardized learning goals
  3. **User Profile Builder** - Consumes: user data, preferences → Produces: comprehensive user profile
  4. **Video Content Analyzer** - Consumes: video metadata, transcripts → Produces: content features
  5. **User Behavior Tracker** - Consumes: interaction events → Produces: behavior patterns
  6. **Content Similarity Calculator** - Consumes: content features → Produces: similarity scores
  7. **Preference Matcher** - Consumes: user profiles, content features → Produces: preference scores
  8. **Learning Path Generator** - Consumes: objectives, content catalog → Produces: structured learning paths
  9. **Recommendation Engine** - Consumes: user profiles, content features, similarity scores → Produces: ranked recommendations
  10. **Content Filter** - Consumes: content catalog, filter criteria → Produces: filtered content list
  11. **Performance Predictor** - Consumes: user data, content features → Produces: learning outcome predictions
  12. **Recommendation Validator** - Consumes: recommendations, validation criteria → Produces: quality scores

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Basic Content Discovery: Content Metadata Extractor → Content Filter → simple content list
  - User Setup: Learning Objective Parser → User Profile Builder → basic user profile

  **Medium Plans:**
  - Content Analysis Pipeline: Content Metadata Extractor → Video Content Analyzer → Content Similarity Calculator → content relationship mapping
  - Personalized Filtering: User Profile Builder → Preference Matcher → Content Filter → personalized content discovery

  **Complex Plans:**
  - Full Recommendation System: Learning Objective Parser → User Profile Builder → Video Content Analyzer → Content Similarity Calculator → Preference Matcher → Recommendation Engine → Recommendation Validator → validated personalized recommendations
  - Adaptive Learning Path: Learning Objective Parser → Content Metadata Extractor → Learning Path Generator → User Behavior Tracker → Performance Predictor → Recommendation Engine → adaptive learning experience

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Content Metadata Extractor",
    "tool_description": "Extracts comprehensive metadata from video content including duration, topics, difficulty level, format, and technical specifications for educational video cataloging.",
    "parameters": {
      "video_url": {
        "type": "string",
        "required": true,
        "description": "URL or path to the video content to analyze"
      },
      "extract_transcript": {
        "type": "boolean",
        "required": false,
        "description": "Whether to extract video transcript for content analysis",
        "default": true
      },
      "language": {
        "type": "string",
        "required": false,
        "description": "Primary language of the video content (ISO 639-1 code)",
        "default": "en"
      }
    },
    "error_messages": [
      "Invalid video URL: Provide a valid URL or file path to accessible video content.",
      "Unsupported video format: Video must be in a supported format (mp4, mov, avi, mkv, webm).",
      "Video processing failed: Unable to extract metadata due to corrupted or protected content.",
      "Invalid language code: Use a valid ISO 639-1 language code (e.g., 'en', 'es', 'fr')."
    ],
    "usage": "Provide a video_url to extract metadata; optionally set extract_transcript to false for faster processing and specify the primary language. Returns structured metadata for video cataloging and analysis.",
    "output_details": {
      "title": {
        "type": "string",
        "description": "Extracted or provided video title"
      },
      "duration_seconds": {
        "type": "integer",
        "description": "Video duration in seconds"
      },
      "topics": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified topics or subjects covered in the video"
      },
      "difficulty_level": {
        "type": "string",
        "description": "Assessed difficulty level (beginner, intermediate, advanced)"
      },
      "transcript": {
        "type": "string",
        "description": "Extracted transcript text if available"
      },
      "format_type": {
        "type": "string",
        "description": "Video format classification (lecture, tutorial, demonstration, discussion)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Learning Objective Parser",
    "tool_description": "Parses and standardizes learning objectives from natural language descriptions into structured, measurable goals aligned with educational taxonomies.",
    "parameters": {
      "objective_text": {
        "type": "string",
        "required": true,
        "description": "Natural language description of learning objectives or goals"
      },
      "taxonomy_framework": {
        "type": "string",
        "required": false,
        "description": "Educational taxonomy to use for classification (blooms, solo, 4cs)",
        "default": "blooms"
      },
      "subject_domain": {
        "type": "string",
        "required": false,
        "description": "Academic or professional domain context",
        "default": "general"
      },
      "skill_level": {
        "type": "string",
        "required": false,
        "description": "Target skill level (novice, intermediate, advanced, expert)",
        "default": "intermediate"
      }
    },
    "error_messages": [
      "Empty objective text: Provide a meaningful description of learning objectives.",
      "Unsupported taxonomy: Use one of the supported frameworks (blooms, solo, 4cs).",
      "Invalid skill level: Use one of (novice, intermediate, advanced, expert).",
      "Parsing failed: Unable to extract meaningful objectives from the provided text."
    ],
    "usage": "Provide objective_text describing what learners should achieve; optionally specify taxonomy_framework, subject_domain, and skill_level for more precise parsing. Returns structured learning objectives.",
    "output_details": {
      "parsed_objectives": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of individual parsed learning objectives"
      },
      "cognitive_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Cognitive complexity levels for each objective"
      },
      "key_concepts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Key concepts and skills identified in objectives"
      },
      "measurability_score": {
        "type": "number",
        "description": "Score indicating how measurable the objectives are (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "User Profile Builder",
    "tool_description": "Creates comprehensive user profiles by combining demographic information, learning preferences, historical performance, and behavioral patterns for personalized content recommendations.",
    "parameters": {
      "user_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the user"
      },
      "age_group": {
        "type": "string",
        "required": false,
        "description": "User age category (child, teen, adult, senior)",
        "default": "adult"
      },
      "education_level": {
        "type": "string",
        "required": false,
        "description": "Highest education level (high_school, bachelor, master, doctorate)",
        "default": "bachelor"
      },
      "learning_style": {
        "type": "string",
        "required": false,
        "description": "Preferred learning style (visual, auditory, kinesthetic, reading)",
        "default": "visual"
      },
      "subject_interests": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of subject areas of interest",
        "default": []
      },
      "time_availability": {
        "type": "integer",
        "required": false,
        "description": "Available learning time per day in minutes",
        "default": 30
      },
      "difficulty_preference": {
        "type": "string",
        "required": false,
        "description": "Preferred content difficulty (easy, moderate, challenging)",
        "default": "moderate"
      },
      "completion_rate": {
        "type": "number",
        "required": false,
        "description": "Historical course completion rate (0-1)",
        "default": 0.7
      },
      "preferred_video_length": {
        "type": "integer",
        "required": false,
        "description": "Preferred video length in minutes",
        "default": 15
      }
    },
    "error_messages": [
      "Invalid user_id: Provide a valid non-empty user identifier.",
      "Invalid age_group: Use one of (child, teen, adult, senior).",
      "Invalid education_level: Use one of (high_school, bachelor, master, doctorate).",
      "Invalid learning_style: Use one of (visual, auditory, kinesthetic, reading).",
      "Invalid time_availability: Must be a positive integer between 5 and 480 minutes.",
      "Invalid difficulty_preference: Use one of (easy, moderate, challenging).",
      "Invalid completion_rate: Must be between 0 and 1.",
      "Invalid preferred_video_length: Must be between 1 and 120 minutes."
    ],
    "usage": "Provide user_id and optionally specify user characteristics like age_group, education_level, learning_style, subject_interests, time_availability, difficulty_preference, completion_rate, and preferred_video_length. Returns a comprehensive user profile for personalization.",
    "output_details": {
      "profile_id": {
        "type": "string",
        "description": "Generated unique profile identifier"
      },
      "learning_persona": {
        "type": "string",
        "description": "Classified learning persona type"
      },
      "motivation_level": {
        "type": "string",
        "description": "Assessed motivation level (low, medium, high)"
      },
      "recommended_pace": {
        "type": "string",
        "description": "Recommended learning pace (slow, normal, fast)"
      },
      "content_preferences": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Inferred content type preferences"
      },
      "risk_dropout": {
        "type": "number",
        "description": "Predicted dropout risk score (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Video Content Analyzer",
    "tool_description": "Analyzes video content to extract educational features including topic depth, presentation style, interaction level, and learning effectiveness indicators.",
    "parameters": {
      "content_metadata": {
        "type": "string",
        "required": true,
        "description": "JSON string containing video metadata from Content Metadata Extractor"
      },
      "transcript_text": {
        "type": "string",
        "required": false,
        "description": "Video transcript for detailed content analysis",
        "default": ""
      },
      "analyze_engagement": {
        "type": "boolean",
        "required": false,
        "description": "Whether to analyze engagement and interaction patterns",
        "default": true
      }
    },
    "error_messages": [
      "Invalid content_metadata: Provide valid JSON metadata from Content Metadata Extractor.",
      "Transcript processing error: Unable to process the provided transcript text.",
      "Analysis failed: Content analysis could not be completed due to insufficient data."
    ],
    "usage": "Provide content_metadata from the Content Metadata Extractor; optionally include transcript_text for deeper analysis and set analyze_engagement for engagement pattern analysis. Returns detailed content features.",
    "output_details": {
      "content_complexity": {
        "type": "number",
        "description": "Content complexity score (0-1)"
      },
      "presentation_style": {
        "type": "string",
        "description": "Identified presentation style (lecture, interactive, hands-on, storytelling)"
      },
      "concept_density": {
        "type": "number",
        "description": "Density of concepts per minute (0-10)"
      },
      "prerequisite_concepts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified prerequisite knowledge areas"
      },
      "learning_outcomes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Predicted learning outcomes from this content"
      },
      "engagement_score": {
        "type": "number",
        "description": "Predicted engagement score (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "User Behavior Tracker",
    "tool_description": "Tracks and analyzes user interaction patterns with video content to identify learning behaviors, preferences, and engagement levels.",
    "parameters": {
      "user_id": {
        "type": "string",
        "required": true,
        "description": "User identifier for behavior tracking"
      },
      "session_events": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of user interaction events (play, pause, seek, complete, bookmark, etc.)"
      },
      "timestamps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Timestamps for each event in ISO 8601 format"
      },
      "video_positions": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": false,
        "description": "Video positions (in seconds) where events occurred",
        "default": []
      }
    },
    "error_messages": [
      "Invalid user_id: Provide a valid user identifier.",
      "Mismatched array lengths: session_events and timestamps arrays must have the same length.",
      "Invalid timestamp format: Use ISO 8601 date-time format for all timestamps.",
      "Invalid video positions: Positions must be non-negative numbers in seconds."
    ],
    "usage": "Provide user_id, session_events, and corresponding timestamps; optionally include video_positions for events that occur at specific video times. Returns analyzed behavior patterns.",
    "output_details": {
      "engagement_pattern": {
        "type": "string",
        "description": "Identified engagement pattern (focused, scattered, consistent, declining)"
      },
      "completion_tendency": {
        "type": "number",
        "description": "Tendency to complete videos (0-1)"
      },
      "interaction_frequency": {
        "type": "number",
        "description": "Average interactions per minute of video"
      },
      "preferred_segments": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Video segments with highest engagement"
      },
      "learning_velocity": {
        "type": "number",
        "description": "Estimated learning pace (0.5-2.0, where 1.0 is normal)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Similarity Calculator",
    "tool_description": "Calculates similarity scores between video contents based on topics, difficulty, learning objectives, and pedagogical features to enable content-based recommendations.",
    "parameters": {
      "reference_content": {
        "type": "string",
        "required": true,
        "description": "JSON string of reference content features from Video Content Analyzer"
      },
      "comparison_contents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of JSON strings containing content features to compare against reference",
        "minItems": 1,
        "maxItems": 100
      },
      "similarity_weights": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": false,
        "description": "Weights for different similarity factors [topic, difficulty, style, outcomes]",
        "default": [0.4, 0.2, 0.2, 0.2]
      }
    },
    "error_messages": [
      "Invalid reference_content: Provide valid JSON content features from Video Content Analyzer.",
      "Invalid comparison_contents: Provide an array of valid JSON content feature strings.",
      "Invalid similarity_weights: Provide exactly 4 weights that sum to 1.0.",
      "Comparison limit exceeded: Maximum 100 contents can be compared at once."
    ],
    "usage": "Provide reference_content and comparison_contents as JSON strings from Video Content Analyzer; optionally customize similarity_weights to emphasize different aspects. Returns similarity scores for content-based recommendations.",
    "output_details": {
      "similarity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Similarity scores (0-1) for each comparison content"
      },
      "topic_similarities": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Topic-specific similarity scores"
      },
      "difficulty_alignment": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Difficulty level alignment scores"
      },
      "top_matches": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Indices of top 5 most similar contents"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Preference Matcher",
    "tool_description": "Matches user preferences and learning profile with content characteristics to generate personalized preference scores for video recommendations.",
    "parameters": {
      "user_profile": {
        "type": "string",
        "required": true,
        "description": "JSON string of user profile from User Profile Builder"
      },
      "content_features": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of JSON strings containing content features to match against user preferences",
        "minItems": 1,
        "maxItems": 50
      },
      "matching_strategy": {
        "type": "string",
        "required": false,
        "description": "Strategy for preference matching (conservative, balanced, exploratory)",
        "default": "balanced"
      },
      "diversity_factor": {
        "type": "number",
        "required": false,
        "description": "Factor to promote content diversity (0-1)",
        "default": 0.3
      }
    },
    "error_messages": [
      "Invalid user_profile: Provide valid JSON user profile from User Profile Builder.",
      "Invalid content_features: Provide an array of valid JSON content feature strings.",
      "Invalid matching_strategy: Use one of (conservative, balanced, exploratory).",
      "Invalid diversity_factor: Must be between 0 and 1.",
      "Content limit exceeded: Maximum 50 contents can be processed at once."
    ],
    "usage": "Provide user_profile and content_features as JSON strings; optionally set matching_strategy and diversity_factor to control recommendation behavior. Returns personalized preference scores.",
    "output_details": {
      "preference_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Preference scores (0-1) for each content item"
      },
      "match_reasons": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Primary reasons for each preference score"
      },
      "diversity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Diversity contribution scores for each content"
      },
      "recommendation_confidence": {
        "type": "number",
        "description": "Overall confidence in preference matching (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Learning Path Generator",
    "tool_description": "Generates structured learning paths by organizing video content in optimal sequence based on learning objectives, prerequisites, and difficulty progression.",
    "parameters": {
      "learning_objectives": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of learning objectives from Learning Objective Parser"
      },
      "available_content": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "JSON strings of available content with features and metadata",
        "minItems": 2,
        "maxItems": 200
      },
      "path_length": {
        "type": "integer",
        "required": false,
        "description": "Desired number of videos in the learning path",
        "default": 10
      },
      "difficulty_progression": {
        "type": "string",
        "required": false,
        "description": "Difficulty progression strategy (gradual, steep, mixed)",
        "default": "gradual"
      },
      "time_constraint": {
        "type": "integer",
        "required": false,
        "description": "Maximum total time for the learning path in minutes",
        "default": 300
      }
    },
    "error_messages": [
      "Empty learning_objectives: Provide at least one learning objective.",
      "Insufficient content: Need at least 2 content items to generate a learning path.",
      "Invalid path_length: Must be between 2 and 50 videos.",
      "Invalid difficulty_progression: Use one of (gradual, steep, mixed).",
      "Invalid time_constraint: Must be between 30 and 1440 minutes.",
      "Content limit exceeded: Maximum 200 content items can be processed.",
      "Path generation failed: Unable to create a coherent learning path with given constraints."
    ],
    "usage": "Provide learning_objectives and available_content; optionally set path_length, difficulty_progression, and time_constraint to customize the learning path. Returns a structured sequence of learning content.",
    "output_details": {
      "path_sequence": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Ordered indices of content items in the learning path"
      },
      "estimated_duration": {
        "type": "integer",
        "description": "Total estimated learning time in minutes"
      },
      "difficulty_curve": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Difficulty progression scores for each step in the path"
      },
      "learning_milestones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Key learning milestones achieved at various points in the path"
      },
      "prerequisite_coverage": {
        "type": "number",
        "description": "Percentage of prerequisites covered by the path (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recommendation Engine",
    "tool_description": "Combines multiple recommendation signals to generate ranked video recommendations using collaborative filtering, content-based filtering, and learning analytics.",
    "parameters": {
      "user_profile": {
        "type": "string",
        "required": true,
        "description": "JSON string of user profile data"
      },
      "content_catalog": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of JSON strings containing all available content with features",
        "minItems": 1,
        "maxItems": 500
      },
      "similarity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": false,
        "description": "Content similarity scores from Content Similarity Calculator",
        "default": []
      },
      "preference_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": false,
        "description": "User preference scores from Preference Matcher",
        "default": []
      },
      "recommendation_count": {
        "type": "integer",
        "required": false,
        "description": "Number of recommendations to generate",
        "default": 10
      },
      "algorithm_weights": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": false,
        "description": "Weights for [content-based, collaborative, popularity, diversity]",
        "default": [0.4, 0.3, 0.2, 0.1]
      },
      "exclude_completed": {
        "type": "boolean",
        "required": false,
        "description": "Whether to exclude already completed content",
        "default": true
      }
    },
    "error_messages": [
      "Invalid user_profile: Provide valid JSON user profile data.",
      "Empty content_catalog: Provide at least one content item for recommendations.",
      "Invalid recommendation_count: Must be between 1 and 50.",
      "Invalid algorithm_weights: Provide exactly 4 weights that sum to 1.0.",
      "Mismatched array lengths: similarity_scores and preference_scores must match content_catalog length when provided.",
      "Catalog limit exceeded: Maximum 500 content items can be processed.",
      "Recommendation generation failed: Unable to generate recommendations with current parameters."
    ],
    "usage": "Provide user_profile and content_catalog; optionally include similarity_scores and preference_scores from other tools, and customize recommendation_count, algorithm_weights, and exclude_completed. Returns ranked video recommendations.",
    "output_details": {
      "recommended_content_ids": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Indices of recommended content items in descending order of relevance"
      },
      "recommendation_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Relevance scores for each recommendation (0-1)"
      },
      "recommendation_reasons": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Explanation for each recommendation"
      },
      "algorithm_contributions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Primary algorithm contributing to each recommendation"
      },
      "diversity_score": {
        "type": "number",
        "description": "Overall diversity score of the recommendation set (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Content Filter",
    "tool_description": "Filters video content based on specific criteria such as duration, topic, difficulty level, format, and quality to create targeted content subsets.",
    "parameters": {
      "content_catalog": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of JSON strings containing content metadata and features",
        "minItems": 1,
        "maxItems": 1000
      },
      "topics": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Filter by specific topics or subjects",
        "default": []
      },
      "min_duration": {
        "type": "integer",
        "required": false,
        "description": "Minimum video duration in seconds",
        "default": 0
      },
      "max_duration": {
        "type": "integer",
        "required": false,
        "description": "Maximum video duration in seconds",
        "default": 7200
      },
      "difficulty_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Allowed difficulty levels (beginner, intermediate, advanced)",
        "default": ["beginner", "intermediate", "advanced"]
      },
      "content_formats": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Allowed content formats (lecture, tutorial, demonstration, discussion)",
        "default": ["lecture", "tutorial", "demonstration", "discussion"]
      }
    },
    "error_messages": [
      "Empty content_catalog: Provide at least one content item to filter.",
      "Invalid duration range: min_duration must be less than max_duration and both must be non-negative.",
      "Invalid difficulty_levels: Use only (beginner, intermediate, advanced).",
      "Invalid content_formats: Use only (lecture, tutorial, demonstration, discussion).",
      "Catalog limit exceeded: Maximum 1000 content items can be processed.",
      "No content matches filters: Adjust filter criteria to include more content."
    ],
    "usage": "Provide content_catalog and optionally specify filtering criteria like topics, duration range (min_duration, max_duration), difficulty_levels, and content_formats. Returns filtered content subset matching all criteria.",
    "output_details": {
      "filtered_content_ids": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Indices of content items that pass all filters"
      },
      "filter_match_count": {
        "type": "integer",
        "description": "Total number of content items matching filters"
      },
      "topic_distribution": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Distribution of topics in filtered content"
      },
      "difficulty_distribution": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Distribution of difficulty levels in filtered content"
      },
      "average_duration": {
        "type": "number",
        "description": "Average duration of filtered content in minutes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Predictor",
    "tool_description": "Predicts learning performance and outcomes for users based on their profile, behavior patterns, and content characteristics using machine learning models.",
    "parameters": {
      "user_profile": {
        "type": "string",
        "required": true,
        "description": "JSON string of user profile data from User Profile Builder"
      },
      "behavior_data": {
        "type": "string",
        "required": false,
        "description": "JSON string of user behavior analysis from User
