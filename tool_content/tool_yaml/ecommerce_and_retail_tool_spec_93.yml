field_name: ecommerce_and_retail
subfield: Product Search and Discovery
task: Search result ranking optimization based on relevance, popularity, and business rules
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task is **hard**. Search result ranking optimization involves complex multi-objective optimization balancing relevance signals, popularity metrics, and business constraints. It requires sophisticated data processing, real-time performance considerations, extensive A/B testing infrastructure, and coordination between multiple subsystems with high impact on business metrics.\n\n**STEP 2 — Set a tool budget**\n\nGiven the hard difficulty rating, I'll target **17 tools** within the 15-20 range to cover the comprehensive workflow from data ingestion to deployment and monitoring.\n\n**STEP 3 — List all tool names and dependencies**\n\nTools and their data flow:\n1. **Product Catalog Indexer** → produces indexed product data\n2. **Search Query Analyzer** → consumes queries, produces structured query data  \n3. **Relevance Scorer** → consumes query data + product data, produces relevance scores\n4. **Popularity Calculator** → consumes interaction data, produces popularity scores\n5. **Business Rules Engine** → consumes product data + rules, produces rule-based adjustments\n6. **Feature Extractor** → consumes multiple data sources, produces ML features\n7. **Ranking Model Trainer** → consumes features + labels, produces trained models\n8. **Model Validator** → consumes models + test data, produces validation metrics\n9. **Real-time Ranker** → consumes all scores + models, produces final rankings\n10. **A/B Test Manager** → consumes test configs, produces experiment assignments\n11. **Performance Monitor** → consumes ranking results, produces performance metrics\n12. **Click-through Tracker** → consumes user interactions, produces engagement data\n13. **Personalization Engine** → consumes user profiles, produces personalized adjustments\n14. **Search Analytics Reporter** → consumes all metrics, produces business reports\n15. **Model Deployment Manager** → consumes validated models, produces deployment status\n16. **Cache Manager** → consumes ranking results, produces cached responses\n17. **Feedback Loop Processor** → consumes all feedback data, produces retraining signals\n\n**STEP 4 — Multi-tool plans**\n\n**Simple Plans:**\n1. **Basic Search Ranking**: Search Query Analyzer → Relevance Scorer → Real-time Ranker (3 tools)\n2. **Performance Monitoring**: Click-through Tracker → Performance Monitor → Search Analytics Reporter (3 tools)\n\n**Medium Plans:**\n1. **Enhanced Ranking Pipeline**: Search Query Analyzer → Feature Extractor → Relevance Scorer → Popularity Calculator → Real-time Ranker → Cache Manager (6 tools)\n2. **Model Training Workflow**: Feature Extractor → Ranking Model Trainer → Model Validator → Model Deployment Manager → Performance Monitor (5 tools)\n\n**Complex Plans:**\n1. **Full Production System**: Product Catalog Indexer → Search Query Analyzer → Feature Extractor → Relevance Scorer → Popularity Calculator → Business Rules Engine → Personalization Engine → Real-time Ranker → A/B Test Manager → Performance Monitor → Cache Manager (11 tools)\n2. **Complete ML Lifecycle**: Feature Extractor → Ranking Model Trainer → Model Validator → Model Deployment Manager → Real-time Ranker → Click-through Tracker → Performance Monitor → Feedback Loop Processor → Search Analytics Reporter (9 tools)\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Product Catalog Indexer\",\n  \"tool_description\": \"Indexes product catalog data for efficient search operations, creating structured representations with metadata and searchable fields.\",\n  \"parameters\": {\n    \"catalog_data_source\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Path or identifier for the product catalog data source\"\n    },\n    \"index_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of index to create: elasticsearch, solr, or custom\"\n    },\n    \"update_mode\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"incremental\",\n      \"description\": \"Index update\
  \ mode: full or incremental\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid data source: Ensure the catalog_data_source path exists and is accessible.\",\n    \"Unsupported index type: Use one of [elasticsearch, solr, custom].\",\n    \"Invalid update mode: Use either 'full' or 'incremental'.\",\n    \"Indexing failed: Check data format and system resources availability.\"\n  ],\n  \"usage\": \"Provide catalog_data_source and index_type to create or update the product search index. Use update_mode to control full vs incremental updates.\",\n  \"output_details\": {\n    \"index_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of the indexing operation\"\n    },\n    \"indexed_products_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of products successfully indexed\"\n    },\n    \"index_size_mb\": {\n      \"type\": \"number\",\n      \"description\": \"Size of the created index in megabytes\"\n    },\n    \"processing_time_seconds\": {\n      \"type\": \"number\",\n      \"description\": \"Time taken to complete indexing\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Search Query Analyzer\",\n  \"tool_description\": \"Analyzes and processes search queries to extract intent, entities, and structured information for improved ranking.\",\n  \"parameters\": {\n    \"query\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"The search query to analyze\"\n    },\n    \"user_id\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"anonymous\",\n      \"description\": \"Identifier for the user making the search\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty query: Provide a non-empty search query string.\",\n    \"Query too long: Query must be under 500 characters.\",\n    \"Processing failed: Unable to analyze query due to system error.\"\n  ],\n  \"usage\": \"Pass the search query string and optionally user_id to get structured analysis including intent, entities, and query type classification.\",\n  \"output_details\": {\n    \"processed_query\": {\n      \"type\": \"string\",\n      \"description\": \"Cleaned and normalized version of the input query\"\n    },\n    \"query_intent\": {\n      \"type\": \"string\",\n      \"description\": \"Detected search intent category\"\n    },\n    \"extracted_entities\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of entities extracted from the query\"\n    },\n    \"query_type\": {\n      \"type\": \"string\",\n      \"description\": \"Classification of query type (product, brand, category, etc.)\"\n    },\n    \"confidence_score\": {\n      \"type\": \"number\",\n      \"description\": \"Confidence score for the analysis (0-1)\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Relevance Scorer\",\n  \"tool_description\": \"Calculates relevance scores between search queries and products using multiple relevance signals and algorithms.\",\n  \"parameters\": {\n    \"query_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"JSON string containing processed query information\"\n    },\n    \"product_ids\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of product IDs to score for relevance\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1000\n    },\n    \"scoring_algorithm\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"tf_idf\",\n      \"description\": \"Relevance scoring algorithm: tf_idf, bm25, or neural\"\n    },\n    \"boost_fields\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"Fields to boost in relevance calculation\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"error_messages\": [\n    \"Invalid query data: Provide valid JSON string containing query information.\",\n    \"Empty product list: Provide\
  \ at least one product ID to score.\",\n    \"Too many products: Maximum 1000 products can be scored in single request.\",\n    \"Unsupported algorithm: Use one of [tf_idf, bm25, neural].\",\n    \"Product not found: One or more product IDs do not exist in the catalog.\"\n  ],\n  \"usage\": \"Provide query_data from Search Query Analyzer and list of product_ids to get relevance scores. Optionally specify scoring_algorithm and boost_fields for customization.\",\n  \"output_details\": {\n    \"relevance_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Relevance scores corresponding to input product IDs\"\n    },\n    \"algorithm_used\": {\n      \"type\": \"string\",\n      \"description\": \"The scoring algorithm that was applied\"\n    },\n    \"max_score\": {\n      \"type\": \"number\",\n      \"description\": \"Highest relevance score in the result set\"\n    },\n    \"processing_time_ms\": {\n      \"type\": \"number\",\n      \"description\": \"Time taken to calculate scores in milliseconds\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Popularity Calculator\",\n  \"tool_description\": \"Calculates product popularity scores based on various interaction metrics like views, clicks, purchases, and ratings.\",\n  \"parameters\": {\n    \"product_ids\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of product IDs to calculate popularity scores for\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1000\n    },\n    \"time_window_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 30,\n      \"description\": \"Time window in days for calculating popularity (1-365)\"\n    },\n    \"popularity_metrics\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"Specific metrics to include: views, clicks, purchases, ratings, reviews\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"weighting_scheme\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"balanced\",\n      \"description\": \"How to weight different metrics: balanced, conversion_focused, or engagement_focused\"\n    },\n    \"decay_factor\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.9,\n      \"description\": \"Time decay factor for recent vs older interactions (0.1-1.0)\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty product list: Provide at least one product ID.\",\n    \"Too many products: Maximum 1000 products can be processed in single request.\",\n    \"Invalid time window: time_window_days must be between 1 and 365.\",\n    \"Unsupported metrics: Use combination of [views, clicks, purchases, ratings, reviews].\",\n    \"Invalid weighting scheme: Use one of [balanced, conversion_focused, engagement_focused].\",\n    \"Invalid decay factor: decay_factor must be between 0.1 and 1.0.\",\n    \"Insufficient data: Not enough interaction data available for the specified time window.\"\n  ],\n  \"usage\": \"Provide product_ids and configure time_window_days, popularity_metrics, weighting_scheme, and decay_factor to calculate popularity scores based on user interaction patterns.\",\n  \"output_details\": {\n    \"popularity_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Popularity scores corresponding to input product IDs\"\n    },\n    \"score_breakdown\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Breakdown of how each score was calculated\"\n    },\n    \"trending_products\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Product IDs showing significant popularity increase\"\n    },\n    \"calculation_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"When the\
  \ popularity scores were calculated\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Business Rules Engine\",\n  \"tool_description\": \"Applies configurable business rules to adjust product rankings based on inventory, profit margins, promotions, and business priorities.\",\n  \"parameters\": {\n    \"product_ids\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of product IDs to apply business rules to\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1000\n    },\n    \"rule_categories\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Categories of business rules to apply\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"boost_out_of_stock\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to boost or demote out-of-stock products\"\n    },\n    \"promotion_weight\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 1.0,\n      \"description\": \"Weight multiplier for promoted products (0.1-5.0)\"\n    },\n    \"margin_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.2,\n      \"description\": \"Minimum profit margin threshold for boosting (0.0-1.0)\"\n    },\n    \"inventory_threshold\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 10,\n      \"description\": \"Minimum inventory level for normal ranking (0-1000)\"\n    },\n    \"brand_preferences\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"Preferred brands to boost in rankings\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"seasonal_adjustments\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to apply seasonal ranking adjustments\"\n    },\n    \"geographic_rules\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to apply location-based business rules\"\n    },\n    \"custom_rule_config\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"JSON string containing custom business rule configurations\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty product list: Provide at least one product ID.\",\n    \"Too many products: Maximum 1000 products can be processed in single request.\",\n    \"Invalid rule categories: Provide at least one valid rule category from [inventory, promotion, margin, brand, seasonal, geographic].\",\n    \"Invalid promotion weight: promotion_weight must be between 0.1 and 5.0.\",\n    \"Invalid margin threshold: margin_threshold must be between 0.0 and 1.0.\",\n    \"Invalid inventory threshold: inventory_threshold must be between 0 and 1000.\",\n    \"Custom rule parsing error: custom_rule_config must be valid JSON if provided.\",\n    \"Rule application failed: Unable to apply business rules due to missing product data.\"\n  ],\n  \"usage\": \"Provide product_ids and rule_categories, then configure specific parameters like boost_out_of_stock, promotion_weight, margin_threshold, etc. to apply business logic to product rankings.\",\n  \"output_details\": {\n    \"adjusted_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Business rule adjusted scores for each product\"\n    },\n    \"applied_rules\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of business rules that were applied\"\n    },\n    \"boosted_products\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Product IDs that received positive adjustments\"\n    },\n    \"demoted_products\"\
  : {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Product IDs that received negative adjustments\"\n    },\n    \"rule_execution_time_ms\": {\n      \"type\": \"number\",\n      \"description\": \"Time taken to execute all business rules in milliseconds\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Feature Extractor\",\n  \"tool_description\": \"Extracts and engineers features from multiple data sources for machine learning model training and inference in search ranking.\",\n  \"parameters\": {\n    \"query_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"JSON string containing processed query information\"\n    },\n    \"product_ids\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of product IDs to extract features for\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1000\n    },\n    \"feature_groups\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Groups of features to extract\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1\n    },\n    \"include_relevance\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to include relevance-based features\"\n    },\n    \"include_popularity\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to include popularity-based features\"\n    },\n    \"include_user_context\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to include user context features\"\n    },\n    \"normalization_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"min_max\",\n      \"description\": \"Feature normalization method: min_max, z_score, or none\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid query data: Provide valid JSON string containing query information.\",\n    \"Empty product list: Provide at least one product ID.\",\n    \"Too many products: Maximum 1000 products can be processed in single request.\",\n    \"Invalid feature groups: Provide at least one feature group from [text, numerical, categorical, interaction, temporal].\",\n    \"Unsupported normalization: Use one of [min_max, z_score, none].\",\n    \"Feature extraction failed: Unable to extract features due to missing data or system error.\"\n  ],\n  \"usage\": \"Provide query_data and product_ids along with desired feature_groups. Configure inclusion flags and normalization_method to customize feature extraction for ML model training or inference.\",\n  \"output_details\": {\n    \"feature_matrix\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"array\"\n      },\n      \"description\": \"2D array where each row represents features for a product\"\n    },\n    \"feature_names\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Names of the extracted features in order\"\n    },\n    \"feature_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of features extracted\"\n    },\n    \"extraction_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of the feature extraction process\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Ranking Model Trainer\",\n  \"tool_description\": \"Trains machine learning models for search result ranking using extracted features and labeled training data.\",\n  \"parameters\": {\n    \"training_features\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"JSON string containing training feature matrix\"\n    },\n    \"training_labels\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Training labels indicating ranking relevance or click-through rates\"\
  ,\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 10\n    },\n    \"model_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of ranking model to train\"\n    },\n    \"validation_split\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.2,\n      \"description\": \"Fraction of data to use for validation (0.1-0.5)\"\n    },\n    \"learning_rate\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.01,\n      \"description\": \"Learning rate for the optimizer (0.0001-1.0)\"\n    },\n    \"max_iterations\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 1000,\n      \"description\": \"Maximum number of training iterations (10-10000)\"\n    },\n    \"early_stopping\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to use early stopping to prevent overfitting\"\n    },\n    \"regularization\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.01,\n      \"description\": \"L2 regularization strength (0.0-1.0)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid training features: Provide valid JSON string containing feature matrix.\",\n    \"Insufficient training data: Need at least 10 training samples.\",\n    \"Feature-label mismatch: Number of feature rows must match number of labels.\",\n    \"Unsupported model type: Use one of [linear, gradient_boosting, neural_network, learning_to_rank].\",\n    \"Invalid validation split: validation_split must be between 0.1 and 0.5.\",\n    \"Invalid learning rate: learning_rate must be between 0.0001 and 1.0.\",\n    \"Invalid iterations: max_iterations must be between 10 and 10000.\",\n    \"Invalid regularization: regularization must be between 0.0 and 1.0.\",\n    \"Training failed: Model training encountered an error during optimization.\"\n  ],\n  \"usage\": \"Provide training_features matrix and training_labels, specify model_type, and configure hyperparameters like learning_rate, max_iterations, and regularization to train a ranking model.\",\n  \"output_details\": {\n    \"model_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the trained model\"\n    },\n    \"training_accuracy\": {\n      \"type\": \"number\",\n      \"description\": \"Final training accuracy score\"\n    },\n    \"validation_accuracy\": {\n      \"type\": \"number\",\n      \"description\": \"Final validation accuracy score\"\n    },\n    \"training_time_seconds\": {\n      \"type\": \"number\",\n      \"description\": \"Total time spent training the model\"\n    },\n    \"model_size_mb\": {\n      \"type\": \"number\",\n      \"description\": \"Size of the trained model in megabytes\"\n    },\n    \"feature_importance\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Importance scores for each input feature\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Model Validator\",\n  \"tool_description\": \"Validates trained ranking models using various metrics and test datasets to ensure quality before deployment.\",\n  \"parameters\": {\n    \"model_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Identifier of the trained model to validate\"\n    },\n    \"test_features\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"JSON string containing test feature matrix\"\n    },\n    \"test_labels\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Ground truth labels for test data\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 5\n    },\n    \"validation_metrics\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"Specific metrics to calculate\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    },\n    \"cross_validation_folds\"\
  : {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 5,\n      \"description\": \"Number of cross-validation folds (3-10)\"\n    }\n  },\n  \"error_messages\": [\n    \"Model not found: The specified model_id does not exist.\",\n    \"Invalid test features: Provide valid JSON string containing test feature matrix.\",\n    \"Insufficient test data: Need at least 5 test samples for validation.\",\n    \"Feature dimension mismatch: Test features must have same dimensions as training features.\",\n    \"Unsupported metrics: Use combination of [ndcg, map, mrr, precision, recall, auc].\",\n    \"Invalid cross-validation folds: Must be between 3 and 10.\",\n    \"Validation failed: Unable to complete model validation due to system error.\"\n  ],\n  \"usage\": \"Provide model_id, test_features, and test_labels to validate a trained model. Optionally specify validation_metrics and cross_validation_folds for comprehensive evaluation.\",\n  \"output_details\": {\n    \"validation_score\": {\n      \"type\": \"number\",\n      \"description\": \"Overall validation score (0-1)\"\n    },\n    \"metric_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Individual scores for each requested metric\"\n    },\n    \"cross_validation_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Cross-validation scores for each fold\"\n    },\n    \"recommendation\": {\n      \"type\": \"string\",\n      \"description\": \"Recommendation whether to deploy the model\"\n    },\n    \"validation_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"When validation was completed\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Real-time Ranker\",\n  \"tool_description\": \"Combines relevance scores, popularity metrics, business rules, and ML model outputs to produce final ranked search results in real-time.\",\n  \"parameters\": {\n    \"query_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"JSON string containing processed query information\"\n    },\n    \"candidate_products\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of candidate product IDs to rank\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 500\n    },\n    \"ranking_strategy\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Overall ranking strategy to apply\"\n    },\n    \"max_results\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 50,\n      \"description\": \"Maximum number of results to return (1-100)\"\n    },\n    \"enable_personalization\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to apply personalization adjustments\"\n    },\n    \"user_id\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"User identifier for personalized ranking\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid query data: Provide valid JSON string containing query information.\",\n    \"Empty candidate list: Provide at least one candidate product ID.\",\n    \"Too many candidates: Maximum 500 candidate products can be ranked.\",\n    \"Unsupported ranking strategy: Use one of [relevance_only, popularity_weighted, ml_hybrid, business_optimized].\",\n    \"Invalid max_results: Must be between 1 and 100.\",\n    \"Personalization error: User ID required when personalization is enabled.\",\n    \"Ranking failed: Unable to complete ranking due to missing data or system error.\"\n  ],\n  \"usage\": \"Provide query_data and candidate_products with a ranking_strategy. Optionally enable personalization and set max_results to get final ranked product list.\",\n  \"output_details\": {\n    \"ranked_products\": {\n      \"type\": \"array\"\
  ,\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Product IDs in ranked order\"\n    },\n    \"ranking_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Final ranking scores for each product\"\n    },\n    \"strategy_used\": {\n      \"type\": \"string\",\n      \"description\": \"The ranking strategy that was applied\"\n    },\n    \"personalization_applied\": {\n      \"type\": \"boolean\",\n      \"description\": \"Whether personalization adjustments were made\"\n    },\n    \"ranking_time_ms\": {\n      \"type\": \"number\",\n      \"description\": \"Time taken to complete ranking in milliseconds\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"A/B Test Manager\",\n  \"tool_description\": \"Manages A/B testing experiments for ranking algorithms, handles user assignment, and tracks experiment performance.\",\n  \"parameters\": {\n    \"experiment_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the A/B test experiment\"\n    },\n    \"control_strategy\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Ranking strategy for control group\"\n    },\n    \"treatment_strategies\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of ranking strategies for treatment groups\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 5\n    },\n    \"traffic_allocation\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Traffic percentage for each group (must sum to 100)\",\n      \"items\": {\n        \"type\": \"number\"\n      }\n    },\n    \"user_id\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": None,\n      \"description\": \"User ID for assignment (generates random if not provided)\"\n    },\n    \"experiment_duration_days\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 14,\n      \"description\": \"Duration of the experiment in days (1-90)\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid experiment name: Provide a non-empty experiment name.\",\n    \"Invalid control strategy: Specify a valid ranking strategy for control group.\",\n    \"Empty treatment strategies: Provide at least one treatment strategy.\",\n    \"Too many treatments: Maximum 5 treatment strategies allowed.\",\n    \"Invalid traffic allocation: Traffic percentages must be positive numbers that sum to 100.\",\n    \"Mismatched allocation: Number of traffic allocation values must match number of groups.\",\n    \"Invalid duration: experiment_duration_days must be between 1 and 90.\",\n    \"Experiment creation failed: Unable to create A/B test due to system error.\"\n  ],\n  \"usage\": \"Define experiment_name, control_strategy, treatment_strategies, and traffic_allocation to create an A/"
