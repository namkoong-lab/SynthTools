field_name: ecommerce_and_retail
subfield: Product Catalog Management
task: Product Variant and Bundle Configuration
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **medium** difficulty. It involves managing complex product relationships (variants, bundles), requires coordination between pricing, inventory, and catalog systems, and has moderate risk of errors that could impact customer experience and sales.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty, I'll target **12 tools** to handle the various aspects of product variant management, bundle creation, pricing coordination, and catalog synchronization.

  ## STEP 3 — List all tool names with dependencies and affordances

  1. **Product Variant Creator** - Consumes: base product data, variant attributes → Produces: variant product records
  2. **Variant Attribute Manager** - Consumes: attribute definitions → Produces: standardized attribute schemas
  3. **Bundle Configuration Builder** - Consumes: product IDs, bundle rules → Produces: bundle definitions
  4. **Variant Price Calculator** - Consumes: base prices, variant modifiers → Produces: calculated variant prices
  5. **Inventory Allocation Tracker** - Consumes: variant IDs, stock levels → Produces: inventory allocations
  6. **Bundle Price Optimizer** - Consumes: bundle components, pricing strategy → Produces: optimized bundle prices
  7. **Product Relationship Mapper** - Consumes: product hierarchies → Produces: relationship mappings
  8. **Variant Availability Checker** - Consumes: variant IDs, inventory data → Produces: availability status
  9. **Bundle Compatibility Validator** - Consumes: bundle configurations → Produces: validation results
  10. **Catalog Synchronization Engine** - Consumes: product updates → Produces: synchronized catalog data
  11. **Product Configuration Validator** - Consumes: product configurations → Produces: validation reports
  12. **Variant Display Optimizer** - Consumes: variant data, display rules → Produces: optimized display configurations

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Create Basic Variant**: Variant Attribute Manager → Product Variant Creator → Variant Price Calculator
  2. **Check Availability**: Inventory Allocation Tracker → Variant Availability Checker

  **Medium Plans:**
  1. **Setup Product Line**: Variant Attribute Manager → Product Variant Creator → Variant Price Calculator → Product Relationship Mapper → Catalog Synchronization Engine
  2. **Create Bundle**: Bundle Configuration Builder → Bundle Compatibility Validator → Bundle Price Optimizer → Catalog Synchronization Engine

  **Complex Plans:**
  1. **Complete Product Launch**: Variant Attribute Manager → Product Variant Creator → Variant Price Calculator → Bundle Configuration Builder → Bundle Compatibility Validator → Bundle Price Optimizer → Product Relationship Mapper → Inventory Allocation Tracker → Product Configuration Validator → Variant Display Optimizer → Catalog Synchronization Engine
  2. **Full Catalog Update**: Product Configuration Validator → Variant Availability Checker → Bundle Compatibility Validator → Variant Price Calculator → Bundle Price Optimizer → Variant Display Optimizer → Catalog Synchronization Engine

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Product Variant Creator",
    "tool_description": "Creates product variants based on a base product and specified variant attributes like size, color, material, etc.",
    "parameters": {
      "base_product_id": {
        "type": "string",
        "required": true,
        "description": "The ID of the base product to create variants for"
      },
      "variant_attributes": {
        "type": "array",
        "required": true,
        "description": "Array of variant attribute names to create combinations from",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "variant_values": {
        "type": "array",
        "required": true,
        "description": "Array of possible values for each attribute in the same order as variant_attributes",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      }
    },
    "error_messages": [
      "Invalid base product ID: The provided base_product_id does not exist in the system.",
      "Mismatched attributes and values: The number of variant_values must correspond to the variant_attributes provided.",
      "Invalid attribute name: One or more attribute names in variant_attributes are not recognized.",
      "Too many variants: The combination of attributes and values would create more than 1000 variants.",
      "Duplicate variant attributes: Each attribute in variant_attributes must be unique."
    ],
    "usage": "Provide a base_product_id, list of variant_attributes (e.g., ['size', 'color']), and corresponding variant_values. The tool creates all possible combinations as separate variant products.",
    "output_details": {
      "variants_created": {
        "type": "integer",
        "description": "Number of variant products successfully created"
      },
      "variant_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of generated variant product IDs"
      },
      "status": {
        "type": "string",
        "description": "Overall status of the variant creation process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Variant Attribute Manager",
    "tool_description": "Manages and standardizes product variant attributes, defining allowed values, data types, and validation rules for consistent variant creation.",
    "parameters": {
      "attribute_name": {
        "type": "string",
        "required": true,
        "description": "Name of the variant attribute to manage"
      },
      "attribute_type": {
        "type": "string",
        "required": true,
        "description": "Data type of the attribute: text, number, boolean, or selection"
      },
      "allowed_values": {
        "type": "array",
        "required": false,
        "description": "Array of allowed values for selection type attributes",
        "items": {"type": "string"},
        "default": null
      },
      "validation_rules": {
        "type": "array",
        "required": false,
        "description": "Array of validation rule descriptions",
        "items": {"type": "string"},
        "default": null
      },
      "is_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether this attribute is required for all variants",
        "default": false
      }
    },
    "error_messages": [
      "Invalid attribute type: attribute_type must be one of [text, number, boolean, selection].",
      "Missing allowed values: selection type attributes must have allowed_values specified.",
      "Invalid validation rule format: validation rules must be properly formatted strings.",
      "Attribute name already exists: Use a unique attribute_name or update the existing one.",
      "Empty allowed values: allowed_values array cannot be empty for selection type attributes."
    ],
    "usage": "Define variant attributes by providing attribute_name, attribute_type, and optionally allowed_values and validation_rules. Use this before creating variants to ensure consistency.",
    "output_details": {
      "attribute_id": {
        "type": "string",
        "description": "Unique identifier for the created attribute"
      },
      "schema_created": {
        "type": "boolean",
        "description": "Whether the attribute schema was successfully created"
      },
      "validation_active": {
        "type": "boolean",
        "description": "Whether validation rules are active for this attribute"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Bundle Configuration Builder",
    "tool_description": "Creates product bundles by combining multiple products with specified quantities, bundle rules, and configuration options.",
    "parameters": {
      "bundle_name": {
        "type": "string",
        "required": true,
        "description": "Name for the product bundle"
      },
      "product_ids": {
        "type": "array",
        "required": true,
        "description": "Array of product IDs to include in the bundle",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 20
      },
      "quantities": {
        "type": "array",
        "required": true,
        "description": "Array of quantities for each product in the same order as product_ids",
        "items": {"type": "integer"},
        "minItems": 2,
        "maxItems": 20
      },
      "bundle_type": {
        "type": "string",
        "required": true,
        "description": "Type of bundle: fixed, flexible, or customizable"
      },
      "min_selection": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of items customer must select (for flexible bundles)",
        "default": null
      },
      "max_selection": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of items customer can select (for flexible bundles)",
        "default": null
      },
      "substitution_allowed": {
        "type": "boolean",
        "required": false,
        "description": "Whether product substitutions are allowed in this bundle",
        "default": false
      },
      "bundle_category": {
        "type": "string",
        "required": false,
        "description": "Category classification for the bundle",
        "default": "general"
      },
      "discount_type": {
        "type": "string",
        "required": false,
        "description": "Type of discount: percentage, fixed_amount, or none",
        "default": "none"
      },
      "discount_value": {
        "type": "number",
        "required": false,
        "description": "Discount value based on discount_type",
        "default": 0
      },
      "start_date": {
        "type": "string",
        "required": false,
        "description": "Bundle availability start date",
        "format": "date-time",
        "default": null
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "Bundle availability end date",
        "format": "date-time",
        "default": null
      }
    },
    "error_messages": [
      "Product ID not found: One or more product_ids do not exist in the catalog.",
      "Mismatched arrays: product_ids and quantities arrays must have the same length.",
      "Invalid bundle type: bundle_type must be one of [fixed, flexible, customizable].",
      "Invalid quantity: All quantities must be positive integers.",
      "Invalid selection range: min_selection must be less than max_selection for flexible bundles.",
      "Invalid discount type: discount_type must be one of [percentage, fixed_amount, none].",
      "Invalid discount value: discount_value must be non-negative and appropriate for the discount_type.",
      "Invalid date range: start_date must be before end_date when both are specified.",
      "Bundle name already exists: Choose a unique bundle_name."
    ],
    "usage": "Provide bundle_name, arrays of product_ids and corresponding quantities, and bundle_type. Optionally configure selection limits, substitutions, discounts, and availability dates.",
    "output_details": {
      "bundle_id": {
        "type": "string",
        "description": "Unique identifier for the created bundle"
      },
      "total_products": {
        "type": "integer",
        "description": "Total number of individual products in the bundle"
      },
      "configuration_valid": {
        "type": "boolean",
        "description": "Whether the bundle configuration is valid"
      },
      "estimated_value": {
        "type": "number",
        "description": "Estimated total value of the bundle before discounts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Variant Price Calculator",
    "tool_description": "Calculates pricing for product variants based on base product price and variant-specific modifiers like material costs, size adjustments, and market positioning.",
    "parameters": {
      "base_product_id": {
        "type": "string",
        "required": true,
        "description": "ID of the base product to calculate variant prices for"
      },
      "variant_id": {
        "type": "string",
        "required": true,
        "description": "ID of the specific variant to price"
      },
      "cost_modifiers": {
        "type": "array",
        "required": false,
        "description": "Array of cost modifier values (positive or negative percentages)",
        "items": {"type": "number"},
        "default": null
      },
      "pricing_strategy": {
        "type": "string",
        "required": false,
        "description": "Pricing strategy: cost_plus, competitive, premium, or value_based",
        "default": "cost_plus"
      },
      "margin_target": {
        "type": "number",
        "required": false,
        "description": "Target profit margin as a percentage",
        "default": 30
      }
    },
    "error_messages": [
      "Base product not found: The provided base_product_id does not exist.",
      "Variant not found: The provided variant_id does not exist or is not associated with the base product.",
      "Invalid cost modifier: Cost modifiers must be numeric values between -50 and 100.",
      "Invalid pricing strategy: pricing_strategy must be one of [cost_plus, competitive, premium, value_based].",
      "Invalid margin target: margin_target must be between 0 and 100.",
      "Insufficient data: Unable to calculate price due to missing cost or base price information."
    ],
    "usage": "Provide base_product_id and variant_id, optionally specify cost_modifiers, pricing_strategy, and margin_target. The tool calculates appropriate variant pricing.",
    "output_details": {
      "calculated_price": {
        "type": "number",
        "description": "Final calculated price for the variant"
      },
      "base_price": {
        "type": "number",
        "description": "Original base product price"
      },
      "total_modifier": {
        "type": "number",
        "description": "Total percentage modifier applied"
      },
      "profit_margin": {
        "type": "number",
        "description": "Actual profit margin percentage achieved"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inventory Allocation Tracker",
    "tool_description": "Tracks and manages inventory allocation across product variants and bundles, ensuring accurate stock levels and availability calculations.",
    "parameters": {
      "product_ids": {
        "type": "array",
        "required": true,
        "description": "Array of product or variant IDs to track inventory for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "warehouse_locations": {
        "type": "array",
        "required": false,
        "description": "Array of warehouse location codes to check",
        "items": {"type": "string"},
        "default": null
      },
      "allocation_type": {
        "type": "string",
        "required": false,
        "description": "Type of allocation tracking: available, reserved, or total",
        "default": "available"
      },
      "include_safety_stock": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include safety stock in calculations",
        "default": true
      }
    },
    "error_messages": [
      "Product not found: One or more product_ids do not exist in the inventory system.",
      "Invalid warehouse location: One or more warehouse locations are not recognized.",
      "Invalid allocation type: allocation_type must be one of [available, reserved, total].",
      "Inventory system unavailable: Unable to connect to inventory management system.",
      "Access denied: Insufficient permissions to access inventory data for specified products."
    ],
    "usage": "Provide an array of product_ids to track inventory for. Optionally specify warehouse_locations, allocation_type, and whether to include_safety_stock in calculations.",
    "output_details": {
      "inventory_levels": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Current inventory levels for each product in the same order as input"
      },
      "total_available": {
        "type": "integer",
        "description": "Total available inventory across all tracked products"
      },
      "low_stock_alerts": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of product IDs with low stock levels"
      },
      "last_updated": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when inventory data was last updated"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Bundle Price Optimizer",
    "tool_description": "Optimizes bundle pricing using various strategies to maximize revenue, margin, or competitiveness while maintaining attractive value propositions.",
    "parameters": {
      "bundle_id": {
        "type": "string",
        "required": true,
        "description": "ID of the bundle to optimize pricing for"
      },
      "optimization_goal": {
        "type": "string",
        "required": true,
        "description": "Optimization objective: maximize_revenue, maximize_margin, or competitive_positioning"
      },
      "discount_range_min": {
        "type": "number",
        "required": false,
        "description": "Minimum discount percentage to consider",
        "default": 5
      },
      "discount_range_max": {
        "type": "number",
        "required": false,
        "description": "Maximum discount percentage to consider",
        "default": 25
      }
    },
    "error_messages": [
      "Bundle not found: The provided bundle_id does not exist in the system.",
      "Invalid optimization goal: optimization_goal must be one of [maximize_revenue, maximize_margin, competitive_positioning].",
      "Invalid discount range: discount_range_min must be less than discount_range_max, both between 0 and 50.",
      "Insufficient product data: Unable to optimize due to missing pricing data for bundle components.",
      "Market data unavailable: Competitive positioning requires market data that is currently unavailable."
    ],
    "usage": "Provide bundle_id and optimization_goal. Optionally set discount_range_min and discount_range_max to constrain the optimization space.",
    "output_details": {
      "optimized_price": {
        "type": "number",
        "description": "Recommended optimized price for the bundle"
      },
      "discount_percentage": {
        "type": "number",
        "description": "Recommended discount percentage from sum of individual prices"
      },
      "expected_margin": {
        "type": "number",
        "description": "Expected profit margin percentage at optimized price"
      },
      "value_proposition": {
        "type": "string",
        "description": "Summary of the value proposition at the optimized price point"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Product Relationship Mapper",
    "tool_description": "Maps and manages relationships between products, variants, and bundles, creating hierarchical structures and cross-references for catalog organization.",
    "parameters": {
      "primary_product_id": {
        "type": "string",
        "required": true,
        "description": "ID of the primary product to map relationships for"
      },
      "relationship_types": {
        "type": "array",
        "required": true,
        "description": "Types of relationships to map",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "related_product_ids": {
        "type": "array",
        "required": false,
        "description": "Array of related product IDs to establish relationships with",
        "items": {"type": "string"},
        "default": null
      },
      "auto_discover": {
        "type": "boolean",
        "required": false,
        "description": "Whether to automatically discover related products based on attributes",
        "default": true
      },
      "relationship_strength": {
        "type": "array",
        "required": false,
        "description": "Strength scores for each relationship (0-100)",
        "items": {"type": "integer"},
        "default": null
      },
      "bidirectional": {
        "type": "boolean",
        "required": false,
        "description": "Whether relationships should be bidirectional",
        "default": true
      }
    },
    "error_messages": [
      "Primary product not found: The provided primary_product_id does not exist.",
      "Invalid relationship type: All relationship_types must be from the supported list: [variant, bundle_component, accessory, substitute, complement, upsell, cross_sell, related].",
      "Related product not found: One or more related_product_ids do not exist in the catalog.",
      "Circular relationship detected: The relationship configuration would create a circular reference.",
      "Relationship strength mismatch: If provided, relationship_strength array must match the length of related_product_ids.",
      "Invalid strength value: Relationship strength values must be integers between 0 and 100."
    ],
    "usage": "Provide primary_product_id and relationship_types to map. Optionally specify related_product_ids or enable auto_discover to find relationships automatically.",
    "output_details": {
      "relationships_created": {
        "type": "integer",
        "description": "Number of relationships successfully created"
      },
      "relationship_map": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of relationship descriptions created"
      },
      "auto_discovered": {
        "type": "integer",
        "description": "Number of relationships automatically discovered"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Variant Availability Checker",
    "tool_description": "Checks real-time availability of product variants across multiple channels and locations, considering inventory, reservations, and business rules.",
    "parameters": {
      "variant_ids": {
        "type": "array",
        "required": true,
        "description": "Array of variant IDs to check availability for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "sales_channels": {
        "type": "array",
        "required": false,
        "description": "Array of sales channel names to check",
        "items": {"type": "string"},
        "default": null
      },
      "check_date": {
        "type": "string",
        "required": false,
        "description": "Date to check availability for (future availability)",
        "format": "date-time",
        "default": null
      }
    },
    "error_messages": [
      "Variant not found: One or more variant_ids do not exist in the system.",
      "Invalid sales channel: One or more specified sales_channels are not recognized.",
      "Invalid check date: check_date must be a valid future date in ISO 8601 format.",
      "Availability service unavailable: Unable to connect to inventory availability service.",
      "Too many variants requested: Maximum 100 variants can be checked in a single request."
    ],
    "usage": "Provide an array of variant_ids to check availability. Optionally specify sales_channels and check_date for channel-specific or future availability checks.",
    "output_details": {
      "availability_status": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Availability status for each variant: available, low_stock, out_of_stock, or discontinued"
      },
      "stock_levels": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Current stock levels for each variant"
      },
      "estimated_restock": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Estimated restock dates for out-of-stock variants"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Bundle Compatibility Validator",
    "tool_description": "Validates bundle configurations for compatibility issues, business rule violations, and logical inconsistencies before deployment.",
    "parameters": {
      "bundle_id": {
        "type": "string",
        "required": true,
        "description": "ID of the bundle to validate"
      },
      "validation_rules": {
        "type": "array",
        "required": false,
        "description": "Array of specific validation rules to apply",
        "items": {"type": "string"},
        "default": null
      },
      "strict_mode": {
        "type": "boolean",
        "required": false,
        "description": "Whether to apply strict validation rules",
        "default": false
      }
    },
    "error_messages": [
      "Bundle not found: The provided bundle_id does not exist in the system.",
      "Invalid validation rule: One or more validation_rules are not recognized.",
      "Bundle configuration incomplete: The bundle configuration is missing required components.",
      "Product compatibility conflict: Some products in the bundle are not compatible with each other.",
      "Business rule violation: The bundle violates one or more business rules."
    ],
    "usage": "Provide bundle_id to validate. Optionally specify validation_rules for targeted checks or enable strict_mode for comprehensive validation.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the bundle configuration is valid"
      },
      "validation_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of validation error messages"
      },
      "validation_warnings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of validation warning messages"
      },
      "compatibility_score": {
        "type": "integer",
        "description": "Overall compatibility score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Catalog Synchronization Engine",
    "tool_description": "Synchronizes product catalog data across multiple systems, channels, and platforms, ensuring consistent product information and availability.",
    "parameters": {
      "sync_targets": {
        "type": "array",
        "required": true,
        "description": "Array of target systems to synchronize with",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "product_ids": {
        "type": "array",
        "required": false,
        "description": "Array of specific product IDs to sync (if empty, syncs all products)",
        "items": {"type": "string"},
        "default": null
      },
      "sync_type": {
        "type": "string",
        "required": false,
        "description": "Type of synchronization: full, incremental, or priority",
        "default": "incremental"
      },
      "data_fields": {
        "type": "array",
        "required": false,
        "description": "Specific data fields to synchronize",
        "items": {"type": "string"},
        "default": null
      },
      "force_update": {
        "type": "boolean",
        "required": false,
        "description": "Whether to force update even if no changes detected",
        "default": false
      },
      "validate_before_sync": {
        "type": "boolean",
        "required": false,
        "description": "Whether to validate data before synchronizing",
        "default": true
      },
      "batch_size": {
        "type": "integer",
        "required": false,
        "description": "Number of products to sync in each batch",
        "default": 100
      },
      "retry_attempts": {
        "type": "integer",
        "required": false,
        "description": "Number of retry attempts for failed syncs",
        "default": 3
      },
      "sync_priority": {
        "type": "string",
        "required": false,
        "description": "Synchronization priority level: low, normal, or high",
        "default": "normal"
      },
      "notification_settings": {
        "type": "array",
        "required": false,
        "description": "Array of notification preferences for sync status",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Invalid sync target: One or more sync_targets are not recognized or accessible.",
      "Product not found: One or more product_ids do not exist in the catalog.",
      "Invalid sync type: sync_type must be one of [full, incremental, priority].",
      "Invalid data field: One or more data_fields are not recognized.",
      "Invalid batch size: batch_size must be between 1 and 1000.",
      "Invalid retry attempts: retry_attempts must be between 0 and 10.",
      "Invalid sync priority: sync_priority must be one of [low, normal, high].",
      "Sync target unavailable: One or more target systems are currently unavailable.",
      "Authentication failed: Unable to authenticate with one or more target systems.",
      "Data validation failed: Pre-sync validation failed for one or more products."
    ],
    "usage": "Provide sync_targets array to specify destination systems. Configure sync_type, data_fields, batch processing, and other parameters based on synchronization requirements.",
    "output_details": {
      "sync_job_id": {
        "type": "string",
        "description": "Unique identifier for the synchronization job"
      },
      "products_synced": {
        "type": "integer",
        "description": "Number of products successfully synchronized"
      },
      "sync_failures": {
        "type": "integer",
        "description": "Number of products that failed to synchronize"
      },
      "target_status": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Synchronization status for each target system"
      },
      "completion_time": {
        "type": "string",
        "format": "date-time",
        "description": "Timestamp when synchronization completed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Product Configuration Validator",
    "tool_description": "Validates complete product configurations including variants, bundles, pricing, and metadata for compliance with business rules and data quality standards.",
    "parameters": {
      "product_ids": {
        "type": "array",
        "required": true,
        "description": "Array of product IDs to validate configurations for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "validation_scope": {
        "type": "string",
        "required": false,
        "description": "Scope of validation: basic, comprehensive, or custom",
        "default": "comprehensive"
      }
    },
    "error_messages": [
      "Product not found: One or more product_ids do not exist in the catalog.",
      "Invalid validation scope: validation_scope must be one of [basic, comprehensive, custom].",
      "Configuration data incomplete: Some products have incomplete configuration data.",
      "Validation service unavailable: Unable to access product validation services."
    ],
    "usage": "Provide an array of product_ids to validate. Set validation_scope to control the depth and breadth of validation checks performed.",
    "output_details": {
      "validation_results": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Validation results for each product: valid, invalid, or warning"
      },
      "total_errors": {
        "type": "integer",
        "description": "Total number of validation errors found"
      },
      "total_warnings": {
        "type": "integer",
        "description": "Total number of validation warnings found"
      },
      "compliance_score": {
        "type": "integer",
        "description": "Overall compliance score (0-100) for all validated products"
      }
    }
  }
  ```

  ```json
  {
    "tool
