field_name: ecommerce_and_retail
subfield: Payment Processing and Financial Transactions
task: Process credit card and debit card transactions with fraud detection
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to high security requirements, real-time fraud detection complexity, multiple payment processor integrations, strict regulatory compliance (PCI DSS), and critical error impact on both merchants and customers.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'll target **17 tools** within the 15-20 range to cover payment processing, fraud detection, compliance, and transaction management comprehensively.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Card Validator** - Consumes: card details → Produces: validation results
  2. **Payment Processor Gateway** - Consumes: validated card data → Produces: transaction authorization
  3. **Fraud Risk Analyzer** - Consumes: transaction details → Produces: risk scores
  4. **Transaction Logger** - Consumes: transaction data → Produces: audit logs
  5. **Merchant Account Validator** - Consumes: merchant credentials → Produces: validation status
  6. **CVV Verifier** - Consumes: card data → Produces: verification results
  7. **Address Verification Service** - Consumes: billing address → Produces: address match scores
  8. **Velocity Rule Engine** - Consumes: transaction history → Produces: velocity flags
  9. **Blacklist Checker** - Consumes: card/customer identifiers → Produces: blacklist status
  10. **3D Secure Authenticator** - Consumes: card data → Produces: authentication tokens
  11. **Transaction Status Monitor** - Consumes: transaction IDs → Produces: status updates
  12. **Chargeback Handler** - Consumes: dispute data → Produces: chargeback responses
  13. **Settlement Calculator** - Consumes: transaction batches → Produces: settlement amounts
  14. **Refund Processor** - Consumes: refund requests → Produces: refund confirmations
  15. **Compliance Reporter** - Consumes: transaction logs → Produces: compliance reports
  16. **Risk Model Trainer** - Consumes: historical data → Produces: updated fraud models
  17. **Payment Method Router** - Consumes: payment preferences → Produces: optimal routing decisions

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic card payment: Card Validator → CVV Verifier → Payment Processor Gateway → Transaction Logger
  2. Simple refund: Transaction Status Monitor → Refund Processor → Transaction Logger

  **Medium Plans:**
  1. Standard fraud-checked payment: Card Validator → CVV Verifier → Address Verification Service → Fraud Risk Analyzer → Payment Processor Gateway → Transaction Logger
  2. Merchant onboarding with compliance: Merchant Account Validator → Compliance Reporter → Transaction Logger

  **Complex Plans:**
  1. High-security transaction processing: Card Validator → CVV Verifier → Address Verification Service → 3D Secure Authenticator → Blacklist Checker → Velocity Rule Engine → Fraud Risk Analyzer → Payment Method Router → Payment Processor Gateway → Transaction Logger → Settlement Calculator
  2. Fraud investigation workflow: Transaction Status Monitor → Fraud Risk Analyzer → Velocity Rule Engine → Blacklist Checker → Risk Model Trainer → Compliance Reporter

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Card Validator",
    "tool_description": "Validates credit and debit card information using industry-standard algorithms including Luhn algorithm verification and card type detection.",
    "parameters": {
      "card_number": {
        "type": "string",
        "required": true,
        "description": "The card number to validate (13-19 digits)"
      },
      "card_type": {
        "type": "string",
        "required": false,
        "description": "Expected card type (visa, mastercard, amex, discover)",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid card number format: Card number must contain only digits and be 13-19 characters long.",
      "Failed Luhn algorithm check: The card number does not pass the Luhn checksum validation.",
      "Unsupported card type: Use one of [visa, mastercard, amex, discover] or leave blank for auto-detection."
    ],
    "usage": "Provide the card_number parameter. Optionally specify expected card_type for additional validation. Returns validation status and detected card information.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the card number is valid"
      },
      "detected_card_type": {
        "type": "string",
        "description": "The detected card brand"
      },
      "last_four_digits": {
        "type": "string",
        "description": "Last four digits of the card for reference"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Payment Processor Gateway",
    "tool_description": "Processes credit and debit card transactions through various payment processors with support for authorization, capture, and settlement operations.",
    "parameters": {
      "card_number": {
        "type": "string",
        "required": true,
        "description": "Valid card number (13-19 digits)"
      },
      "expiry_month": {
        "type": "integer",
        "required": true,
        "description": "Card expiry month (1-12)"
      },
      "expiry_year": {
        "type": "integer",
        "required": true,
        "description": "Card expiry year (4 digits)"
      },
      "cvv": {
        "type": "string",
        "required": true,
        "description": "Card verification value (3-4 digits)"
      },
      "amount": {
        "type": "number",
        "required": true,
        "description": "Transaction amount (greater than 0)"
      },
      "currency": {
        "type": "string",
        "required": true,
        "description": "ISO 4217 currency code (e.g., USD, EUR)"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "transaction_type": {
        "type": "string",
        "required": false,
        "description": "Transaction type (auth, sale, capture)",
        "default": "sale"
      },
      "processor": {
        "type": "string",
        "required": false,
        "description": "Preferred payment processor (stripe, square, authorize_net)",
        "default": "stripe"
      }
    },
    "error_messages": [
      "Invalid card data: Ensure card number, expiry date, and CVV are valid and properly formatted.",
      "Transaction declined: The payment was declined by the issuing bank or processor.",
      "Invalid merchant credentials: The merchant_id is not recognized or authorized.",
      "Insufficient funds: The transaction amount exceeds available funds or credit limit.",
      "Processor unavailable: The selected payment processor is currently unavailable.",
      "Invalid currency: Use a valid ISO 4217 currency code.",
      "Amount validation failed: Transaction amount must be greater than 0 and within processor limits."
    ],
    "usage": "Provide all required card details, amount, currency, and merchant_id. Optionally specify transaction_type and processor. Returns transaction authorization details and status.",
    "output_details": {
      "transaction_id": {
        "type": "string",
        "description": "Unique transaction identifier"
      },
      "status": {
        "type": "string",
        "description": "Transaction status (approved, declined, pending)"
      },
      "authorization_code": {
        "type": "string",
        "description": "Authorization code from processor"
      },
      "processor_response": {
        "type": "string",
        "description": "Response message from payment processor"
      },
      "timestamp": {
        "type": "string",
        "description": "Transaction timestamp in ISO 8601 format"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Fraud Risk Analyzer",
    "tool_description": "Analyzes transaction patterns and characteristics to generate fraud risk scores using machine learning models and rule-based detection systems.",
    "parameters": {
      "transaction_amount": {
        "type": "number",
        "required": true,
        "description": "Transaction amount in base currency units"
      },
      "card_country": {
        "type": "string",
        "required": true,
        "description": "Country code where card was issued"
      },
      "merchant_category": {
        "type": "string",
        "required": true,
        "description": "Merchant category code (MCC)"
      },
      "customer_ip": {
        "type": "string",
        "required": true,
        "description": "Customer IP address"
      },
      "billing_country": {
        "type": "string",
        "required": true,
        "description": "Billing address country code"
      },
      "shipping_country": {
        "type": "string",
        "required": false,
        "description": "Shipping address country code",
        "default": "None"
      },
      "transaction_hour": {
        "type": "integer",
        "required": true,
        "description": "Hour of transaction (0-23)"
      },
      "customer_age_days": {
        "type": "integer",
        "required": false,
        "description": "Days since customer account creation",
        "default": 0
      },
      "historical_transactions": {
        "type": "integer",
        "required": false,
        "description": "Number of previous successful transactions",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid transaction amount: Amount must be greater than 0 and within reasonable limits.",
      "Invalid country code: Use valid ISO 3166-1 alpha-2 country codes.",
      "Invalid IP address format: Provide a valid IPv4 or IPv6 address.",
      "Invalid merchant category: MCC must be a valid 4-digit merchant category code.",
      "Invalid transaction hour: Hour must be between 0 and 23.",
      "Invalid customer age: Customer age in days must be non-negative."
    ],
    "usage": "Provide transaction details including amount, geographical information, timing, and customer history. Returns comprehensive fraud risk assessment with scores and recommendations.",
    "output_details": {
      "risk_score": {
        "type": "number",
        "description": "Overall fraud risk score (0-100)"
      },
      "risk_level": {
        "type": "string",
        "description": "Risk classification (low, medium, high, critical)"
      },
      "triggered_rules": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of triggered fraud detection rules"
      },
      "recommendation": {
        "type": "string",
        "description": "Recommended action (approve, review, decline)"
      },
      "confidence": {
        "type": "number",
        "description": "Model confidence score (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Transaction Logger",
    "tool_description": "Creates comprehensive audit logs for all payment transactions with encryption and compliance-ready formatting for regulatory requirements.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Unique transaction identifier"
      },
      "event_type": {
        "type": "string",
        "required": true,
        "description": "Type of event (auth, capture, void, refund, chargeback)"
      },
      "amount": {
        "type": "number",
        "required": true,
        "description": "Transaction amount"
      },
      "currency": {
        "type": "string",
        "required": true,
        "description": "ISO 4217 currency code"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "status": {
        "type": "string",
        "required": true,
        "description": "Transaction status"
      },
      "masked_card": {
        "type": "string",
        "required": false,
        "description": "Masked card number (e.g., ****1234)",
        "default": "None"
      }
    },
    "error_messages": [
      "Missing required transaction data: Ensure transaction_id, event_type, amount, currency, merchant_id, and status are provided.",
      "Invalid event type: Use one of [auth, capture, void, refund, chargeback].",
      "Invalid currency format: Use valid ISO 4217 currency codes.",
      "Logging system unavailable: Unable to write to audit log storage."
    ],
    "usage": "Provide transaction details to create audit log entries. All sensitive data is automatically encrypted and masked according to PCI compliance standards.",
    "output_details": {
      "log_id": {
        "type": "string",
        "description": "Unique log entry identifier"
      },
      "timestamp": {
        "type": "string",
        "description": "Log entry timestamp in ISO 8601 format"
      },
      "status": {
        "type": "string",
        "description": "Logging operation status"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Merchant Account Validator",
    "tool_description": "Validates merchant account credentials and verifies authorization to process payments with specific processors and transaction limits.",
    "parameters": {
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "api_key": {
        "type": "string",
        "required": true,
        "description": "Merchant API authentication key"
      },
      "processor": {
        "type": "string",
        "required": false,
        "description": "Payment processor to validate against",
        "default": "stripe"
      }
    },
    "error_messages": [
      "Invalid merchant credentials: The merchant_id or api_key is incorrect or expired.",
      "Merchant account suspended: The merchant account is currently suspended or inactive.",
      "Processor validation failed: Unable to validate credentials with the specified processor.",
      "Account limits exceeded: The merchant account has reached transaction or volume limits."
    ],
    "usage": "Provide merchant_id and api_key to validate account status and processing capabilities. Optionally specify processor for specific validation.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether merchant credentials are valid"
      },
      "account_status": {
        "type": "string",
        "description": "Merchant account status (active, suspended, limited)"
      },
      "daily_limit": {
        "type": "number",
        "description": "Daily transaction volume limit"
      },
      "available_processors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of available payment processors"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "CVV Verifier",
    "tool_description": "Verifies card verification values (CVV/CVC) against card issuer databases to authenticate card-present transactions.",
    "parameters": {
      "card_number": {
        "type": "string",
        "required": true,
        "description": "Card number for CVV verification"
      },
      "cvv": {
        "type": "string",
        "required": true,
        "description": "CVV/CVC code (3-4 digits)"
      },
      "expiry_month": {
        "type": "integer",
        "required": true,
        "description": "Card expiry month (1-12)"
      },
      "expiry_year": {
        "type": "integer",
        "required": true,
        "description": "Card expiry year (4 digits)"
      }
    },
    "error_messages": [
      "Invalid CVV format: CVV must be 3-4 digits depending on card type.",
      "CVV verification failed: The provided CVV does not match issuer records.",
      "Expired card: The card expiry date has passed.",
      "Issuer unavailable: Unable to verify CVV with card issuer at this time."
    ],
    "usage": "Provide card number, CVV, and expiry date for verification. Returns verification status and response codes from card issuer.",
    "output_details": {
      "cvv_match": {
        "type": "boolean",
        "description": "Whether CVV matches issuer records"
      },
      "response_code": {
        "type": "string",
        "description": "Issuer response code"
      },
      "verification_status": {
        "type": "string",
        "description": "Verification result (match, no_match, not_processed)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Address Verification Service",
    "tool_description": "Verifies billing address information against issuer records and postal databases to reduce fraud and ensure accurate billing information.",
    "parameters": {
      "street_address": {
        "type": "string",
        "required": true,
        "description": "Street address line 1"
      },
      "city": {
        "type": "string",
        "required": true,
        "description": "City name"
      },
      "state": {
        "type": "string",
        "required": true,
        "description": "State/province code"
      },
      "postal_code": {
        "type": "string",
        "required": true,
        "description": "Postal/ZIP code"
      },
      "country": {
        "type": "string",
        "required": true,
        "description": "ISO 3166-1 alpha-2 country code"
      },
      "card_number": {
        "type": "string",
        "required": true,
        "description": "Card number for issuer verification"
      }
    },
    "error_messages": [
      "Invalid address format: Ensure all address fields are properly formatted and complete.",
      "Address verification failed: The provided address does not match issuer records.",
      "Invalid country code: Use valid ISO 3166-1 alpha-2 country codes.",
      "Postal code mismatch: The postal code does not match the city/state combination.",
      "AVS service unavailable: Address verification service is temporarily unavailable."
    ],
    "usage": "Provide complete billing address and card number for verification. Returns detailed address matching results and risk scores.",
    "output_details": {
      "avs_result": {
        "type": "string",
        "description": "AVS result code from issuer"
      },
      "address_match": {
        "type": "boolean",
        "description": "Whether street address matches"
      },
      "postal_match": {
        "type": "boolean",
        "description": "Whether postal code matches"
      },
      "risk_score": {
        "type": "number",
        "description": "Address-based risk score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Velocity Rule Engine",
    "tool_description": "Analyzes transaction velocity patterns to detect suspicious activity based on configurable rules for frequency, amounts, and time windows.",
    "parameters": {
      "card_number": {
        "type": "string",
        "required": true,
        "description": "Masked card number for velocity tracking"
      },
      "transaction_amount": {
        "type": "number",
        "required": true,
        "description": "Current transaction amount"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "customer_ip": {
        "type": "string",
        "required": true,
        "description": "Customer IP address"
      },
      "time_window_minutes": {
        "type": "integer",
        "required": false,
        "description": "Time window for velocity analysis (1-1440 minutes)",
        "default": 60
      },
      "max_transactions": {
        "type": "integer",
        "required": false,
        "description": "Maximum allowed transactions in time window",
        "default": 5
      },
      "max_amount": {
        "type": "number",
        "required": false,
        "description": "Maximum allowed total amount in time window",
        "default": 1000.0
      },
      "check_ip_velocity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to check IP-based velocity",
        "default": true
      },
      "check_card_velocity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to check card-based velocity",
        "default": true
      }
    },
    "error_messages": [
      "Invalid time window: Time window must be between 1 and 1440 minutes.",
      "Invalid velocity limits: max_transactions must be positive, max_amount must be greater than 0.",
      "Velocity check failed: Unable to retrieve transaction history for velocity analysis.",
      "Rate limit exceeded: Transaction frequency exceeds configured velocity rules."
    ],
    "usage": "Provide card number, transaction details, and velocity configuration. Returns velocity analysis results with rule violation details.",
    "output_details": {
      "velocity_passed": {
        "type": "boolean",
        "description": "Whether transaction passes all velocity checks"
      },
      "violated_rules": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of violated velocity rules"
      },
      "transaction_count": {
        "type": "integer",
        "description": "Number of transactions in time window"
      },
      "total_amount": {
        "type": "number",
        "description": "Total transaction amount in time window"
      },
      "risk_level": {
        "type": "string",
        "description": "Velocity-based risk level (low, medium, high)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Blacklist Checker",
    "tool_description": "Checks card numbers, IP addresses, and customer identifiers against fraud blacklists and negative databases from multiple sources.",
    "parameters": {
      "card_number": {
        "type": "string",
        "required": false,
        "description": "Card number to check against blacklists",
        "default": "None"
      },
      "customer_email": {
        "type": "string",
        "required": false,
        "description": "Customer email address to check",
        "default": "None"
      },
      "customer_ip": {
        "type": "string",
        "required": false,
        "description": "Customer IP address to check",
        "default": "None"
      },
      "phone_number": {
        "type": "string",
        "required": false,
        "description": "Customer phone number to check",
        "default": "None"
      }
    },
    "error_messages": [
      "No identifiers provided: At least one identifier (card_number, customer_email, customer_ip, phone_number) must be provided.",
      "Invalid card number format: Card number must contain only digits.",
      "Invalid email format: Provide a valid email address format.",
      "Invalid IP address format: Provide a valid IPv4 or IPv6 address.",
      "Blacklist service unavailable: Unable to access blacklist databases at this time."
    ],
    "usage": "Provide one or more customer/card identifiers to check against fraud blacklists. Returns comprehensive blacklist status and risk indicators.",
    "output_details": {
      "is_blacklisted": {
        "type": "boolean",
        "description": "Whether any identifier is found on blacklists"
      },
      "blacklisted_identifiers": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of identifiers found on blacklists"
      },
      "blacklist_sources": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Sources where identifiers were found"
      },
      "risk_score": {
        "type": "number",
        "description": "Blacklist-based risk score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "3D Secure Authenticator",
    "tool_description": "Initiates and processes 3D Secure authentication for enhanced security on online card transactions, supporting both 3DS1 and 3DS2 protocols.",
    "parameters": {
      "card_number": {
        "type": "string",
        "required": true,
        "description": "Card number for 3DS authentication"
      },
      "amount": {
        "type": "number",
        "required": true,
        "description": "Transaction amount"
      },
      "currency": {
        "type": "string",
        "required": true,
        "description": "ISO 4217 currency code"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant identifier"
      },
      "return_url": {
        "type": "string",
        "required": true,
        "description": "URL for authentication redirect"
      },
      "browser_info": {
        "type": "string",
        "required": false,
        "description": "Browser information for 3DS2",
        "default": "None"
      },
      "challenge_preference": {
        "type": "string",
        "required": false,
        "description": "Challenge preference (no_preference, challenge_requested, challenge_mandated)",
        "default": "no_preference"
      }
    },
    "error_messages": [
      "Card not enrolled: The card is not enrolled in 3D Secure program.",
      "Invalid return URL: Provide a valid HTTPS URL for authentication redirect.",
      "3DS service unavailable: 3D Secure authentication service is temporarily unavailable.",
      "Invalid challenge preference: Use one of [no_preference, challenge_requested, challenge_mandated].",
      "Authentication failed: Customer failed to complete 3DS authentication."
    ],
    "usage": "Provide card details, transaction amount, and redirect URL to initiate 3D Secure authentication. Returns authentication URL and transaction tokens.",
    "output_details": {
      "authentication_url": {
        "type": "string",
        "description": "URL for customer authentication"
      },
      "transaction_id": {
        "type": "string",
        "description": "3DS transaction identifier"
      },
      "challenge_required": {
        "type": "boolean",
        "description": "Whether customer challenge is required"
      },
      "protocol_version": {
        "type": "string",
        "description": "3DS protocol version used"
      },
      "authentication_token": {
        "type": "string",
        "description": "Authentication token for transaction completion"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Transaction Status Monitor",
    "tool_description": "Monitors and retrieves real-time status updates for payment transactions across multiple processors and provides detailed transaction history.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Transaction identifier to monitor"
      },
      "include_history": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include transaction history",
        "default": false
      }
    },
    "error_messages": [
      "Transaction not found: The specified transaction_id does not exist in the system.",
      "Access denied: Insufficient permissions to view this transaction.",
      "Status service unavailable: Transaction status monitoring service is temporarily unavailable."
    ],
    "usage": "Provide transaction_id to get current status and optionally include transaction history. Returns comprehensive transaction information and status updates.",
    "output_details": {
      "current_status": {
        "type": "string",
        "description": "Current transaction status"
      },
      "last_updated": {
        "type": "string",
        "description": "Last status update timestamp"
      },
      "amount": {
        "type": "number",
        "description": "Transaction amount"
      },
      "currency": {
        "type": "string",
        "description": "Transaction currency"
      },
      "processor": {
        "type": "string",
        "description": "Payment processor used"
      },
      "status_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Chronological list of status changes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Chargeback Handler",
    "tool_description": "Manages chargeback disputes by processing dispute notifications, gathering evidence, and submitting responses to card networks and processors.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Original transaction identifier"
      },
      "chargeback_reason": {
        "type": "string",
        "required": true,
        "description": "Reason code for chargeback"
      },
      "dispute_amount": {
        "type": "number",
        "required": true,
        "description": "Disputed amount"
      },
      "evidence_documents": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of evidence document references",
        "default": "None"
      },
      "response_action": {
        "type": "string",
        "required": true,
        "description": "Response action (accept, dispute, partial_accept)"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "due_date": {
        "type": "string",
        "required": true,
        "description": "Response due date in ISO 8601 format"
      }
    },
    "error_messages": [
      "Transaction not found: The specified transaction_id does not exist or is not associated with chargebacks.",
      "Invalid reason code: Provide a valid chargeback reason code.",
      "Invalid response action: Use one of [accept, dispute, partial_accept].",
      "Missing evidence: Required evidence documents are missing for dispute response.",
      "Due date passed: The response due date has already passed.",
      "Invalid dispute amount: Dispute amount must be positive and not exceed original transaction amount."
    ],
    "usage": "Provide chargeback details and response strategy to process dispute. Returns chargeback case information and response confirmation.",
    "output_details": {
      "case_id": {
        "type": "string",
        "description": "Chargeback case identifier"
      },
      "response_status": {
        "type": "string",
        "description": "Response submission status"
      },
      "next_action_required": {
        "type": "string",
        "description": "Next required action in dispute process"
      },
      "estimated_resolution_date": {
        "type": "string",
        "description": "Estimated case resolution date"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Settlement Calculator",
    "tool_description": "Calculates net settlement amounts for merchant transactions including fees, reserves, and adjustments across multiple processors and timeframes.",
    "parameters": {
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account
