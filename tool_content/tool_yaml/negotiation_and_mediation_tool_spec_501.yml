field_name: negotiation_and_mediation
subfield: Contract Negotiation
task: Risk assessment and identification of potentially problematic clauses
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to the broad scope of legal domains and clause types, high ambiguity in interpreting legal language nuances, complex dependencies between clauses, and significant impact of errors on contract validity and financial exposure.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'll target **17 tools** to cover the comprehensive workflow of contract risk assessment, from document parsing through final risk reporting.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  1. **Contract Parser** (consumes: contract document) → produces: structured clauses
  2. **Clause Categorizer** (consumes: structured clauses) → produces: categorized clauses
  3. **Legal Terminology Validator** (consumes: clause text) → produces: terminology assessment
  4. **Risk Scoring Engine** (consumes: categorized clauses) → produces: risk scores
  5. **Industry Standards Checker** (consumes: clauses, industry type) → produces: compliance assessment
  6. **Cross Reference Analyzer** (consumes: multiple clauses) → produces: conflict detection
  7. **Financial Impact Calculator** (consumes: risky clauses, contract value) → produces: financial exposure
  8. **Jurisdiction Compliance Checker** (consumes: clauses, jurisdiction) → produces: legal compliance
  9. **Deadline Tracker** (consumes: temporal clauses) → produces: deadline analysis
  10. **Liability Assessor** (consumes: liability clauses) → produces: liability evaluation
  11. **Termination Clause Analyzer** (consumes: termination clauses) → produces: exit risk assessment
  12. **Payment Terms Evaluator** (consumes: payment clauses) → produces: payment risk analysis
  13. **IP Rights Analyzer** (consumes: IP clauses) → produces: IP risk assessment
  14. **Force Majeure Evaluator** (consumes: force majeure clauses) → produces: coverage assessment
  15. **Dispute Resolution Analyzer** (consumes: dispute clauses) → produces: resolution pathway analysis
  16. **Contract Comparison Tool** (consumes: multiple contracts) → produces: comparative analysis
  17. **Risk Report Generator** (consumes: all assessments) → produces: comprehensive risk report

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  - Basic risk check: Contract Parser → Clause Categorizer → Risk Scoring Engine → Risk Report Generator
  - Compliance validation: Clause Categorizer → Industry Standards Checker → Jurisdiction Compliance Checker

  **Medium plans:**
  - Financial risk assessment: Contract Parser → Clause Categorizer → Financial Impact Calculator → Liability Assessor → Payment Terms Evaluator → Risk Report Generator
  - Legal compliance audit: Contract Parser → Legal Terminology Validator → Jurisdiction Compliance Checker → Industry Standards Checker → Cross Reference Analyzer

  **Complex plans:**
  - Comprehensive due diligence: All 17 tools in sequence for complete contract analysis
  - Multi-contract comparison: Contract Parser (×3) → Clause Categorizer (×3) → Contract Comparison Tool → Risk Scoring Engine → Risk Report Generator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Contract Parser",
    "tool_description": "Extracts and structures individual clauses from contract documents, identifying clause boundaries and basic metadata.",
    "parameters": {
      "contract_text": {
        "type": "string",
        "required": true,
        "description": "Full text content of the contract document to be parsed"
      },
      "document_format": {
        "type": "string",
        "required": false,
        "description": "Format of the input document: pdf, docx, txt, or html",
        "default": "txt"
      },
      "parsing_mode": {
        "type": "string",
        "required": false,
        "description": "Parsing approach: standard, detailed, or minimal",
        "default": "standard"
      }
    },
    "error_messages": [
      "Empty contract text: Provide non-empty contract content for parsing.",
      "Unsupported document format: Use one of [pdf, docx, txt, html].",
      "Invalid parsing mode: Use one of [standard, detailed, minimal].",
      "Corrupted document structure: The document appears to be corrupted or improperly formatted."
    ],
    "usage": "Provide the contract_text as a string, optionally specify document_format and parsing_mode. The tool returns structured clauses with metadata.",
    "output_details": {
      "total_clauses": {
        "type": "integer",
        "description": "Total number of clauses identified in the contract"
      },
      "clause_texts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of extracted clause text content"
      },
      "clause_positions": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Character positions where each clause begins in the original document"
      },
      "parsing_confidence": {
        "type": "number",
        "description": "Confidence score for the parsing accuracy (0.0 to 1.0)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clause Categorizer",
    "tool_description": "Classifies contract clauses into standard legal categories such as payment terms, liability, termination, IP rights, and compliance requirements.",
    "parameters": {
      "clause_texts": {
        "type": "array",
        "required": true,
        "description": "Array of clause text strings to be categorized",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "contract_type": {
        "type": "string",
        "required": false,
        "description": "Type of contract: service, employment, sale, license, partnership, or general",
        "default": "general"
      },
      "classification_depth": {
        "type": "string",
        "required": false,
        "description": "Classification detail level: basic, standard, or comprehensive",
        "default": "standard"
      },
      "custom_categories": {
        "type": "array",
        "required": false,
        "description": "Additional custom categories to include in classification",
        "items": {
          "type": "string"
        },
        "default": "None"
      }
    },
    "error_messages": [
      "Empty clause array: Provide at least one clause text for categorization.",
      "Invalid contract type: Use one of [service, employment, sale, license, partnership, general].",
      "Invalid classification depth: Use one of [basic, standard, comprehensive].",
      "Clause text too long: Individual clauses should not exceed 5000 characters.",
      "Too many clauses: Maximum 200 clauses can be processed in a single request."
    ],
    "usage": "Provide an array of clause_texts, optionally specify contract_type, classification_depth, and custom_categories. Returns categorized clauses with confidence scores.",
    "output_details": {
      "categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Assigned category for each clause in the input order"
      },
      "confidence_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Confidence score for each categorization (0.0 to 1.0)"
      },
      "category_summary": {
        "type": "string",
        "description": "Summary of clause distribution across categories"
      },
      "uncategorized_count": {
        "type": "integer",
        "description": "Number of clauses that could not be categorized"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Legal Terminology Validator",
    "tool_description": "Validates legal terminology usage, identifies ambiguous language, and flags potentially problematic phrasing that could lead to interpretation disputes.",
    "parameters": {
      "clause_text": {
        "type": "string",
        "required": true,
        "description": "Single clause text to validate for legal terminology"
      },
      "jurisdiction": {
        "type": "string",
        "required": false,
        "description": "Legal jurisdiction: US, EU, UK, CA, AU, or international",
        "default": "US"
      },
      "validation_strictness": {
        "type": "string",
        "required": false,
        "description": "Validation level: lenient, moderate, or strict",
        "default": "moderate"
      }
    },
    "error_messages": [
      "Empty clause text: Provide clause content for terminology validation.",
      "Invalid jurisdiction: Use one of [US, EU, UK, CA, AU, international].",
      "Invalid validation strictness: Use one of [lenient, moderate, strict].",
      "Clause text too long: Clause should not exceed 3000 characters for optimal analysis."
    ],
    "usage": "Provide clause_text for analysis, optionally specify jurisdiction and validation_strictness. Returns terminology assessment with specific issues identified.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the clause passes terminology validation"
      },
      "ambiguous_terms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of ambiguous or problematic terms identified"
      },
      "suggested_improvements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific suggestions for improving terminology clarity"
      },
      "risk_level": {
        "type": "string",
        "description": "Overall terminology risk level: low, medium, or high"
      },
      "validation_score": {
        "type": "number",
        "description": "Overall terminology validation score (0.0 to 1.0)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Scoring Engine",
    "tool_description": "Assigns comprehensive risk scores to contract clauses based on potential legal, financial, and operational impact using multi-factor analysis.",
    "parameters": {
      "clause_texts": {
        "type": "array",
        "required": true,
        "description": "Array of clause texts to score for risk",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "clause_categories": {
        "type": "array",
        "required": true,
        "description": "Corresponding category for each clause",
        "items": {
          "type": "string"
        }
      },
      "contract_value": {
        "type": "number",
        "required": false,
        "description": "Total contract value in USD for contextual risk assessment",
        "default": "None"
      },
      "business_sector": {
        "type": "string",
        "required": false,
        "description": "Industry sector: technology, healthcare, finance, manufacturing, retail, or other",
        "default": "other"
      },
      "risk_tolerance": {
        "type": "string",
        "required": false,
        "description": "Organization's risk tolerance: conservative, moderate, or aggressive",
        "default": "moderate"
      },
      "scoring_method": {
        "type": "string",
        "required": false,
        "description": "Scoring approach: standard, weighted, or comprehensive",
        "default": "standard"
      }
    },
    "error_messages": [
      "Mismatched arrays: clause_texts and clause_categories must have the same length.",
      "Invalid business sector: Use one of [technology, healthcare, finance, manufacturing, retail, other].",
      "Invalid risk tolerance: Use one of [conservative, moderate, aggressive].",
      "Invalid scoring method: Use one of [standard, weighted, comprehensive].",
      "Negative contract value: Contract value must be positive if specified."
    ],
    "usage": "Provide clause_texts and corresponding clause_categories arrays, optionally specify contract_value, business_sector, risk_tolerance, and scoring_method. Returns detailed risk analysis for each clause.",
    "output_details": {
      "risk_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Risk score for each clause (0.0 to 10.0, higher is riskier)"
      },
      "risk_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Risk category for each clause: low, medium, high, or critical"
      },
      "high_risk_indices": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Indices of clauses with high or critical risk scores"
      },
      "overall_risk_score": {
        "type": "number",
        "description": "Weighted average risk score for the entire contract"
      },
      "risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Primary risk factors identified across all clauses"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Industry Standards Checker",
    "tool_description": "Compares contract clauses against industry-specific standard practices and regulatory requirements to identify non-compliance issues.",
    "parameters": {
      "clause_texts": {
        "type": "array",
        "required": true,
        "description": "Array of clause texts to check against industry standards",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "industry_type": {
        "type": "string",
        "required": true,
        "description": "Industry sector: healthcare, finance, technology, manufacturing, energy, retail, telecommunications, or automotive"
      },
      "regulatory_frameworks": {
        "type": "array",
        "required": false,
        "description": "Specific regulatory frameworks to check: GDPR, HIPAA, SOX, PCI-DSS, SOC2, ISO27001",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "compliance_level": {
        "type": "string",
        "required": false,
        "description": "Required compliance strictness: basic, standard, or strict",
        "default": "standard"
      }
    },
    "error_messages": [
      "Invalid industry type: Use one of [healthcare, finance, technology, manufacturing, energy, retail, telecommunications, automotive].",
      "Invalid regulatory framework: Use valid frameworks from [GDPR, HIPAA, SOX, PCI-DSS, SOC2, ISO27001].",
      "Invalid compliance level: Use one of [basic, standard, strict].",
      "Empty clause array: Provide at least one clause for standards checking."
    ],
    "usage": "Provide clause_texts and industry_type, optionally specify regulatory_frameworks and compliance_level. Returns compliance assessment with specific violations identified.",
    "output_details": {
      "compliance_status": {
        "type": "boolean",
        "description": "Whether clauses meet industry standards overall"
      },
      "violations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific standard violations identified"
      },
      "compliant_clause_count": {
        "type": "integer",
        "description": "Number of clauses that meet industry standards"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific recommendations for achieving compliance"
      },
      "compliance_score": {
        "type": "number",
        "description": "Overall compliance score (0.0 to 1.0)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross Reference Analyzer",
    "tool_description": "Identifies conflicts, inconsistencies, and contradictions between different clauses within the same contract or across multiple contract documents.",
    "parameters": {
      "clause_texts": {
        "type": "array",
        "required": true,
        "description": "Array of all clause texts to analyze for cross-references and conflicts",
        "items": {
          "type": "string"
        },
        "minItems": 2,
        "maxItems": 150
      },
      "clause_categories": {
        "type": "array",
        "required": true,
        "description": "Category labels for each clause to aid conflict detection",
        "items": {
          "type": "string"
        }
      },
      "analysis_scope": {
        "type": "string",
        "required": false,
        "description": "Scope of analysis: basic, comprehensive, or detailed",
        "default": "comprehensive"
      },
      "conflict_sensitivity": {
        "type": "string",
        "required": false,
        "description": "Sensitivity level for detecting conflicts: low, medium, or high",
        "default": "medium"
      }
    },
    "error_messages": [
      "Insufficient clauses: Provide at least 2 clauses for cross-reference analysis.",
      "Mismatched arrays: clause_texts and clause_categories must have the same length.",
      "Invalid analysis scope: Use one of [basic, comprehensive, detailed].",
      "Invalid conflict sensitivity: Use one of [low, medium, high].",
      "Too many clauses: Maximum 150 clauses can be processed for cross-reference analysis."
    ],
    "usage": "Provide clause_texts and clause_categories arrays, optionally specify analysis_scope and conflict_sensitivity. Returns detailed conflict analysis between clauses.",
    "output_details": {
      "conflicts_found": {
        "type": "boolean",
        "description": "Whether any conflicts were identified between clauses"
      },
      "conflict_pairs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Description of specific clause pairs that conflict with each other"
      },
      "inconsistency_count": {
        "type": "integer",
        "description": "Total number of inconsistencies identified"
      },
      "severity_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Severity level for each identified conflict: minor, moderate, or severe"
      },
      "resolution_suggestions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Suggested approaches for resolving identified conflicts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Financial Impact Calculator",
    "tool_description": "Calculates potential financial exposure and impact from risky contract clauses, including penalties, liabilities, and opportunity costs.",
    "parameters": {
      "risky_clauses": {
        "type": "array",
        "required": true,
        "description": "Array of clause texts identified as financially risky",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "contract_value": {
        "type": "number",
        "required": true,
        "description": "Total contract value in USD"
      },
      "annual_revenue": {
        "type": "number",
        "required": false,
        "description": "Annual company revenue in USD for context",
        "default": "None"
      },
      "risk_scores": {
        "type": "array",
        "required": true,
        "description": "Risk score for each risky clause (0.0 to 10.0)",
        "items": {
          "type": "number"
        }
      },
      "calculation_method": {
        "type": "string",
        "required": false,
        "description": "Calculation approach: conservative, moderate, or aggressive",
        "default": "moderate"
      }
    },
    "error_messages": [
      "Empty risky clauses: Provide at least one risky clause for financial impact calculation.",
      "Invalid contract value: Contract value must be a positive number.",
      "Mismatched arrays: risky_clauses and risk_scores must have the same length.",
      "Invalid risk scores: All risk scores must be between 0.0 and 10.0.",
      "Invalid calculation method: Use one of [conservative, moderate, aggressive].",
      "Negative annual revenue: Annual revenue must be positive if specified."
    ],
    "usage": "Provide risky_clauses, contract_value, and risk_scores arrays, optionally specify annual_revenue and calculation_method. Returns detailed financial impact assessment.",
    "output_details": {
      "total_exposure": {
        "type": "number",
        "description": "Total potential financial exposure in USD"
      },
      "exposure_by_clause": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Financial exposure amount for each risky clause"
      },
      "probability_adjusted_exposure": {
        "type": "number",
        "description": "Total exposure adjusted for likelihood of occurrence"
      },
      "exposure_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Type of financial impact for each clause: penalty, liability, opportunity_cost, or damages"
      },
      "risk_mitigation_cost": {
        "type": "number",
        "description": "Estimated cost of mitigating identified financial risks"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Jurisdiction Compliance Checker",
    "tool_description": "Verifies contract clauses comply with specific legal jurisdiction requirements and identifies potential enforceability issues.",
    "parameters": {
      "clause_texts": {
        "type": "array",
        "required": true,
        "description": "Array of clause texts to check for jurisdiction compliance",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "primary_jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Primary legal jurisdiction: US_federal, california, new_york, texas, UK, germany, france, canada, australia, or singapore"
      },
      "secondary_jurisdictions": {
        "type": "array",
        "required": false,
        "description": "Additional jurisdictions where contract may be enforced",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "contract_type": {
        "type": "string",
        "required": false,
        "description": "Contract type for jurisdiction-specific rules: employment, commercial, consumer, or general",
        "default": "general"
      }
    },
    "error_messages": [
      "Invalid primary jurisdiction: Use valid jurisdiction codes like US_federal, california, new_york, UK, etc.",
      "Invalid secondary jurisdiction: All secondary jurisdictions must be valid jurisdiction codes.",
      "Invalid contract type: Use one of [employment, commercial, consumer, general].",
      "Empty clause array: Provide at least one clause for jurisdiction compliance checking.",
      "Jurisdiction conflict: Some clauses may not be enforceable across specified jurisdictions."
    ],
    "usage": "Provide clause_texts and primary_jurisdiction, optionally specify secondary_jurisdictions and contract_type. Returns compliance status and enforceability assessment.",
    "output_details": {
      "overall_compliance": {
        "type": "boolean",
        "description": "Whether all clauses comply with jurisdiction requirements"
      },
      "non_compliant_clauses": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Indices of clauses that fail jurisdiction compliance"
      },
      "enforceability_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific enforceability concerns identified"
      },
      "jurisdiction_conflicts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Conflicts between primary and secondary jurisdictions"
      },
      "compliance_recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommendations for achieving jurisdiction compliance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Deadline Tracker",
    "tool_description": "Extracts and analyzes all temporal elements, deadlines, and time-sensitive obligations from contract clauses to identify scheduling risks.",
    "parameters": {
      "contract_clauses": {
        "type": "array",
        "required": true,
        "description": "Array of contract clauses to scan for temporal elements",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "contract_start_date": {
        "type": "string",
        "required": false,
        "description": "Contract effective start date in ISO 8601 format",
        "format": "date-time",
        "default": "None"
      },
      "analysis_date": {
        "type": "string",
        "required": false,
        "description": "Reference date for deadline analysis in ISO 8601 format",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Empty clause array: Provide at least one clause containing temporal elements.",
      "Invalid date format: Use ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ) for dates.",
      "Invalid date range: contract_start_date must be before analysis_date if both are specified.",
      "No temporal elements found: No deadlines or time-sensitive obligations were identified."
    ],
    "usage": "Provide contract_clauses array, optionally specify contract_start_date and analysis_date. Returns comprehensive temporal analysis with deadline identification.",
    "output_details": {
      "total_deadlines": {
        "type": "integer",
        "description": "Total number of deadlines and temporal obligations identified"
      },
      "deadline_descriptions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Description of each identified deadline or temporal obligation"
      },
      "urgency_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Urgency level for each deadline: immediate, short_term, medium_term, or long_term"
      },
      "critical_deadlines": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most critical or time-sensitive deadlines requiring immediate attention"
      },
      "temporal_risk_score": {
        "type": "number",
        "description": "Overall temporal risk score based on deadline complexity and urgency (0.0 to 10.0)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Liability Assessor",
    "tool_description": "Analyzes liability and indemnification clauses to assess exposure levels, coverage gaps, and potential unlimited liability scenarios.",
    "parameters": {
      "liability_clauses": {
        "type": "array",
        "required": true,
        "description": "Array of liability and indemnification clause texts",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "contract_value": {
        "type": "number",
        "required": true,
        "description": "Total contract value in USD for liability context"
      },
      "party_role": {
        "type": "string",
        "required": true,
        "description": "Role in contract: vendor, client, contractor, or partner"
      },
      "insurance_coverage": {
        "type": "number",
        "required": false,
        "description": "Available insurance coverage amount in USD",
        "default": "None"
      },
      "liability_caps_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether liability caps are required by company policy",
        "default": true
      }
    },
    "error_messages": [
      "Empty liability clauses: Provide at least one liability clause for assessment.",
      "Invalid contract value: Contract value must be a positive number.",
      "Invalid party role: Use one of [vendor, client, contractor, partner].",
      "Negative insurance coverage: Insurance coverage amount must be positive if specified.",
      "Unlimited liability detected: Contract contains unlimited liability exposure which requires attention."
    ],
    "usage": "Provide liability_clauses, contract_value, and party_role, optionally specify insurance_coverage and liability_caps_required. Returns detailed liability risk assessment.",
    "output_details": {
      "liability_exposure": {
        "type": "string",
        "description": "Overall liability exposure level: low, moderate, high, or unlimited"
      },
      "maximum_liability": {
        "type": "number",
        "description": "Maximum potential liability amount in USD, or -1 if unlimited"
      },
      "coverage_gaps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified gaps in liability coverage or protection"
      },
      "indemnification_scope": {
        "type": "string",
        "description": "Scope of indemnification obligations: narrow, standard, broad, or mutual"
      },
      "liability_recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Specific recommendations for improving liability protection"
      },
      "insurance_adequacy": {
        "type": "boolean",
        "description": "Whether available insurance coverage is adequate for identified liability exposure"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Termination Clause Analyzer",
    "tool_description": "Evaluates contract termination provisions, exit procedures, and associated costs or penalties to assess termination risk and flexibility.",
    "parameters": {
      "termination_clauses": {
        "type": "array",
        "required": true,
        "description": "Array of termination and exit-related clause texts",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "contract_duration": {
        "type": "integer",
        "required": false,
        "description": "Contract duration in months",
        "default": "None"
      },
      "termination_flexibility_required": {
        "type": "string",
        "required": false,
        "description": "Required termination flexibility: high, medium, or low",
        "default": "medium"
      }
    },
    "error_messages": [
      "Empty termination clauses: Provide at least one termination clause for analysis.",
      "Invalid contract duration: Contract duration must be a positive integer representing months.",
      "Invalid flexibility requirement: Use one of [high, medium, low].",
      "No termination provisions found: No clear termination procedures were identified in the provided clauses."
    ],
    "usage": "Provide termination_clauses array, optionally specify contract_duration and termination_flexibility_required. Returns comprehensive termination risk analysis.",
    "output_details": {
      "termination_ease": {
        "type": "string",
        "description": "Ease of contract termination: easy, moderate, difficult, or very_difficult"
      },
      "notice_requirements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Required notice periods an
