field_name: financial_trading
subfield: risk_management_and_assessment
task: Credit risk evaluation and scoring
tool_description: |-
  **STEP 1 — Rate task difficulty**

  Credit risk evaluation and scoring is a **hard** task due to its high regulatory requirements, complex multi-dimensional data analysis needs, significant financial impact of errors, and the requirement to integrate diverse data sources while ensuring compliance with fair lending practices and model governance standards.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to cover data preprocessing, feature engineering, model development, validation, regulatory compliance, and monitoring components.

  **STEP 3 — List all tool names and dependencies**

  **Tools and Data Flow:**
  1. **Credit Data Validator** → validates raw credit data
  2. **Financial Ratio Calculator** → computes financial health metrics
  3. **Credit History Analyzer** → analyzes payment patterns and history
  4. **Industry Risk Assessor** → evaluates sector-specific risks
  5. **Feature Engineering Pipeline** → creates predictive features from validated data
  6. **Credit Scoring Model Trainer** → builds scoring models using engineered features
  7. **Model Performance Evaluator** → assesses model accuracy and discrimination
  8. **Regulatory Compliance Checker** → ensures fair lending compliance
  9. **Score Calibrator** → calibrates probability scores to actual default rates
  10. **Risk Grade Mapper** → maps scores to risk categories
  11. **Portfolio Risk Analyzer** → analyzes portfolio-level risk concentration
  12. **Stress Test Simulator** → tests model performance under adverse scenarios
  13. **Model Monitoring System** → tracks model performance drift over time
  14. **Credit Decision Engine** → makes final credit decisions using multiple inputs
  15. **Regulatory Report Generator** → creates compliance and performance reports
  16. **Model Validation Framework** → performs independent model validation
  17. **Credit Limit Optimizer** → determines optimal credit limits based on risk scores

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - **Basic Credit Scoring:** Credit Data Validator → Financial Ratio Calculator → Credit Scoring Model Trainer → Score Calibrator
  - **Quick Risk Assessment:** Credit History Analyzer → Risk Grade Mapper → Credit Decision Engine

  **Medium Plans:**
  - **Model Development & Validation:** Credit Data Validator → Feature Engineering Pipeline → Credit Scoring Model Trainer → Model Performance Evaluator → Model Validation Framework → Regulatory Compliance Checker
  - **Portfolio Analysis:** Credit Data Validator → Portfolio Risk Analyzer → Stress Test Simulator → Regulatory Report Generator

  **Complex Plans:**
  - **Full Credit Risk System:** Credit Data Validator → Financial Ratio Calculator → Credit History Analyzer → Industry Risk Assessor → Feature Engineering Pipeline → Credit Scoring Model Trainer → Model Performance Evaluator → Score Calibrator → Risk Grade Mapper → Credit Decision Engine → Credit Limit Optimizer
  - **Comprehensive Risk Management:** All tools in sequence for complete credit risk evaluation, monitoring, and regulatory compliance

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Credit Data Validator",
    "tool_description": "Validates and cleanses raw credit application and bureau data, checking for completeness, consistency, and data quality issues before analysis.",
    "parameters": {
      "applicant_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the credit applicant"
      },
      "credit_bureau_data": {
        "type": "array",
        "required": true,
        "description": "Array of credit bureau report fields",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "application_data": {
        "type": "array",
        "required": true,
        "description": "Array of credit application fields",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "validation_rules": {
        "type": "array",
        "required": false,
        "description": "Custom validation rules to apply",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Missing required data fields: Ensure all mandatory credit application and bureau fields are provided.",
      "Invalid data format: Check that numeric fields contain valid numbers and dates are in proper format.",
      "Data consistency violation: Resolve conflicts between application data and bureau data.",
      "Applicant ID not found: Provide a valid unique identifier for the applicant."
    ],
    "usage": "Provide applicant_id, credit_bureau_data array, and application_data array. Optionally specify custom validation_rules. The tool returns validation status and cleaned data.",
    "output_details": {
      "validation_status": {
        "type": "string",
        "description": "Overall validation result (PASSED, FAILED, WARNING)"
      },
      "cleaned_data_fields": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of cleaned and validated data fields"
      },
      "data_quality_score": {
        "type": "number",
        "description": "Data quality score from 0 to 100"
      },
      "validation_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of validation errors found"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Financial Ratio Calculator",
    "tool_description": "Calculates key financial ratios and metrics from income, balance sheet, and cash flow data to assess financial health and creditworthiness.",
    "parameters": {
      "annual_income": {
        "type": "number",
        "required": true,
        "description": "Applicant's annual gross income"
      },
      "monthly_debt_payments": {
        "type": "number",
        "required": true,
        "description": "Total monthly debt obligations"
      },
      "total_assets": {
        "type": "number",
        "required": false,
        "description": "Total value of assets",
        "default": null
      },
      "total_liabilities": {
        "type": "number",
        "required": false,
        "description": "Total outstanding liabilities",
        "default": null
      },
      "liquid_assets": {
        "type": "number",
        "required": false,
        "description": "Cash and easily convertible assets",
        "default": null
      },
      "housing_expenses": {
        "type": "number",
        "required": false,
        "description": "Monthly housing costs",
        "default": null
      },
      "employment_length_months": {
        "type": "integer",
        "required": false,
        "description": "Length of current employment in months",
        "default": null
      }
    },
    "error_messages": [
      "Invalid income value: Annual income must be a positive number greater than zero.",
      "Invalid debt payments: Monthly debt payments must be zero or positive.",
      "Negative asset values: Asset values cannot be negative.",
      "Data inconsistency: Total liabilities cannot exceed total assets by an unreasonable margin.",
      "Employment length invalid: Employment length must be zero or positive integer."
    ],
    "usage": "Provide annual_income and monthly_debt_payments as required fields. Include additional financial data like assets, liabilities, and housing expenses for more comprehensive ratio analysis.",
    "output_details": {
      "debt_to_income_ratio": {
        "type": "number",
        "description": "Monthly debt payments divided by monthly income"
      },
      "debt_to_asset_ratio": {
        "type": "number",
        "description": "Total liabilities divided by total assets"
      },
      "liquidity_ratio": {
        "type": "number",
        "description": "Liquid assets divided by monthly expenses"
      },
      "housing_expense_ratio": {
        "type": "number",
        "description": "Housing expenses divided by monthly income"
      },
      "financial_stability_score": {
        "type": "number",
        "description": "Composite financial stability score from 0 to 100"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Credit History Analyzer",
    "tool_description": "Analyzes credit bureau data to extract payment patterns, account management behavior, and credit utilization trends for risk assessment.",
    "parameters": {
      "credit_accounts": {
        "type": "array",
        "required": true,
        "description": "Array of credit account identifiers",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "payment_history": {
        "type": "array",
        "required": true,
        "description": "Array of payment history records",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 240
      },
      "account_balances": {
        "type": "array",
        "required": true,
        "description": "Current balances for each account",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 50
      },
      "credit_limits": {
        "type": "array",
        "required": true,
        "description": "Credit limits for each account",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 50
      },
      "account_open_dates": {
        "type": "array",
        "required": true,
        "description": "Account opening dates in ISO format",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "analysis_period_months": {
        "type": "integer",
        "required": false,
        "description": "Number of months to analyze (12-240)",
        "default": 24
      }
    },
    "error_messages": [
      "Mismatched array lengths: Ensure credit_accounts, account_balances, credit_limits, and account_open_dates have the same length.",
      "Invalid payment history format: Payment history should contain valid payment status codes.",
      "Invalid date format: Account open dates must be in ISO 8601 format.",
      "Analysis period out of range: Analysis period must be between 12 and 240 months.",
      "Insufficient credit history: At least 6 months of payment history required for meaningful analysis."
    ],
    "usage": "Provide arrays of credit_accounts, payment_history, account_balances, credit_limits, and account_open_dates. All arrays must have matching lengths. Optionally specify analysis_period_months for focused analysis.",
    "output_details": {
      "payment_performance_score": {
        "type": "number",
        "description": "Payment reliability score from 0 to 100"
      },
      "credit_utilization_rate": {
        "type": "number",
        "description": "Average credit utilization percentage"
      },
      "account_management_score": {
        "type": "number",
        "description": "Account management quality score from 0 to 100"
      },
      "delinquency_indicators": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of identified delinquency patterns"
      },
      "credit_age_months": {
        "type": "number",
        "description": "Average age of credit accounts in months"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Industry Risk Assessor",
    "tool_description": "Evaluates industry-specific credit risk factors by analyzing sector performance, economic sensitivity, and business cycle impacts.",
    "parameters": {
      "industry_code": {
        "type": "string",
        "required": true,
        "description": "NAICS industry classification code"
      },
      "company_size": {
        "type": "string",
        "required": true,
        "description": "Business size: small, medium, large, enterprise"
      },
      "geographic_region": {
        "type": "string",
        "required": true,
        "description": "Primary business location/region"
      },
      "business_age_years": {
        "type": "number",
        "required": false,
        "description": "Years in business",
        "default": null
      },
      "economic_indicators": {
        "type": "array",
        "required": false,
        "description": "Relevant economic indicator values",
        "items": {"type": "number"},
        "default": null
      }
    },
    "error_messages": [
      "Invalid industry code: Provide a valid NAICS industry classification code.",
      "Invalid company size: Use one of [small, medium, large, enterprise].",
      "Geographic region not recognized: Provide a valid geographic region identifier.",
      "Business age invalid: Business age must be zero or positive.",
      "Economic indicators format error: Economic indicators must be numeric values."
    ],
    "usage": "Provide industry_code, company_size, and geographic_region as required fields. Include business_age_years and economic_indicators for enhanced risk assessment.",
    "output_details": {
      "industry_risk_score": {
        "type": "number",
        "description": "Industry-specific risk score from 0 to 100"
      },
      "cyclical_risk_factor": {
        "type": "number",
        "description": "Business cycle sensitivity score"
      },
      "regional_risk_adjustment": {
        "type": "number",
        "description": "Geographic risk adjustment factor"
      },
      "sector_outlook": {
        "type": "string",
        "description": "Industry outlook assessment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Feature Engineering Pipeline",
    "tool_description": "Creates and transforms features for credit scoring models by combining raw data elements into predictive variables with proper scaling and encoding.",
    "parameters": {
      "raw_features": {
        "type": "array",
        "required": true,
        "description": "Array of raw feature values",
        "items": {"type": "number"},
        "minItems": 5,
        "maxItems": 200
      },
      "feature_names": {
        "type": "array",
        "required": true,
        "description": "Names corresponding to raw features",
        "items": {"type": "string"},
        "minItems": 5,
        "maxItems": 200
      },
      "categorical_features": {
        "type": "array",
        "required": false,
        "description": "Names of categorical features to encode",
        "items": {"type": "string"},
        "default": null
      },
      "scaling_method": {
        "type": "string",
        "required": false,
        "description": "Feature scaling method: standard, minmax, robust",
        "default": "standard"
      },
      "interaction_features": {
        "type": "boolean",
        "required": false,
        "description": "Whether to create interaction features",
        "default": false
      },
      "polynomial_degree": {
        "type": "integer",
        "required": false,
        "description": "Degree for polynomial features (1-3)",
        "default": 1
      },
      "feature_selection": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform automatic feature selection",
        "default": true
      }
    },
    "error_messages": [
      "Feature array mismatch: raw_features and feature_names must have the same length.",
      "Invalid scaling method: Use one of [standard, minmax, robust].",
      "Polynomial degree out of range: Polynomial degree must be between 1 and 3.",
      "Categorical feature not found: Specified categorical features must exist in feature_names.",
      "Insufficient features: At least 5 features required for meaningful feature engineering."
    ],
    "usage": "Provide raw_features array and corresponding feature_names. Specify categorical_features for proper encoding. Configure scaling_method, interaction_features, and polynomial_degree as needed.",
    "output_details": {
      "engineered_features": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Transformed and engineered feature values"
      },
      "feature_importance_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Feature importance rankings"
      },
      "selected_feature_names": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Names of selected features after engineering"
      },
      "transformation_summary": {
        "type": "string",
        "description": "Summary of transformations applied"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Credit Scoring Model Trainer",
    "tool_description": "Trains machine learning models for credit scoring using prepared features and labels, with support for various algorithms and hyperparameter optimization.",
    "parameters": {
      "training_features": {
        "type": "array",
        "required": true,
        "description": "Training feature matrix as flattened array",
        "items": {"type": "number"},
        "minItems": 100,
        "maxItems": 100000
      },
      "training_labels": {
        "type": "array",
        "required": true,
        "description": "Binary labels (0=good, 1=default)",
        "items": {"type": "integer"},
        "minItems": 10,
        "maxItems": 10000
      },
      "model_type": {
        "type": "string",
        "required": true,
        "description": "Model type: logistic_regression, random_forest, xgboost, neural_network"
      },
      "validation_split": {
        "type": "number",
        "required": false,
        "description": "Validation set proportion (0.1-0.4)",
        "default": 0.2
      },
      "class_weights": {
        "type": "string",
        "required": false,
        "description": "Class weighting strategy: balanced, none",
        "default": "balanced"
      },
      "hyperparameter_tuning": {
        "type": "boolean",
        "required": false,
        "description": "Whether to perform hyperparameter optimization",
        "default": true
      },
      "cross_validation_folds": {
        "type": "integer",
        "required": false,
        "description": "Number of CV folds (3-10)",
        "default": 5
      },
      "random_seed": {
        "type": "integer",
        "required": false,
        "description": "Random seed for reproducibility",
        "default": 42
      },
      "max_training_time_minutes": {
        "type": "integer",
        "required": false,
        "description": "Maximum training time in minutes",
        "default": 60
      }
    },
    "error_messages": [
      "Feature-label mismatch: Number of samples in training_features and training_labels must match.",
      "Invalid model type: Use one of [logistic_regression, random_forest, xgboost, neural_network].",
      "Validation split out of range: Validation split must be between 0.1 and 0.4.",
      "Invalid class weights: Use 'balanced' or 'none' for class weighting.",
      "Cross validation folds invalid: CV folds must be between 3 and 10.",
      "Insufficient training data: At least 100 samples required for model training.",
      "Training timeout: Model training exceeded maximum allowed time."
    ],
    "usage": "Provide training_features and training_labels arrays with matching sample counts. Specify model_type and configure training parameters like validation_split and hyperparameter_tuning as needed.",
    "output_details": {
      "model_performance_metrics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of performance metrics [AUC, accuracy, precision, recall]"
      },
      "feature_coefficients": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Model coefficients or feature importances"
      },
      "training_history": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Training loss/score history"
      },
      "best_hyperparameters": {
        "type": "string",
        "description": "Optimal hyperparameters found"
      },
      "model_summary": {
        "type": "string",
        "description": "Model architecture and training summary"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Model Performance Evaluator",
    "tool_description": "Evaluates credit scoring model performance using comprehensive metrics including discrimination, calibration, and stability measures.",
    "parameters": {
      "predicted_scores": {
        "type": "array",
        "required": true,
        "description": "Model predicted probability scores",
        "items": {"type": "number"},
        "minItems": 50,
        "maxItems": 10000
      },
      "actual_outcomes": {
        "type": "array",
        "required": true,
        "description": "Actual binary outcomes (0=good, 1=default)",
        "items": {"type": "integer"},
        "minItems": 50,
        "maxItems": 10000
      },
      "evaluation_metrics": {
        "type": "array",
        "required": false,
        "description": "Metrics to calculate",
        "items": {"type": "string"},
        "default": ["auc", "gini", "ks", "accuracy", "precision", "recall"]
      }
    },
    "error_messages": [
      "Prediction-outcome mismatch: predicted_scores and actual_outcomes must have the same length.",
      "Invalid score range: Predicted scores must be between 0 and 1.",
      "Invalid outcomes: Actual outcomes must be 0 or 1.",
      "Insufficient data: At least 50 observations required for reliable evaluation.",
      "Invalid evaluation metrics: Use supported metrics [auc, gini, ks, accuracy, precision, recall, f1]."
    ],
    "usage": "Provide predicted_scores and actual_outcomes arrays with matching lengths. Optionally specify which evaluation_metrics to calculate.",
    "output_details": {
      "auc_score": {
        "type": "number",
        "description": "Area Under ROC Curve"
      },
      "gini_coefficient": {
        "type": "number",
        "description": "Gini coefficient (2*AUC-1)"
      },
      "ks_statistic": {
        "type": "number",
        "description": "Kolmogorov-Smirnov statistic"
      },
      "confusion_matrix": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Confusion matrix [TP, FP, TN, FN]"
      },
      "performance_summary": {
        "type": "string",
        "description": "Overall model performance assessment"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Regulatory Compliance Checker",
    "tool_description": "Validates credit scoring models and decisions for compliance with fair lending regulations, ECOA, and other regulatory requirements.",
    "parameters": {
      "model_features": {
        "type": "array",
        "required": true,
        "description": "Features used in the credit scoring model",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "protected_characteristics": {
        "type": "array",
        "required": true,
        "description": "Protected class information for disparate impact testing",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "approval_decisions": {
        "type": "array",
        "required": true,
        "description": "Credit approval decisions (0=deny, 1=approve)",
        "items": {"type": "integer"},
        "minItems": 100,
        "maxItems": 10000
      },
      "regulatory_framework": {
        "type": "string",
        "required": false,
        "description": "Regulatory framework: ECOA, FCRA, HMDA, GDPR",
        "default": "ECOA"
      }
    },
    "error_messages": [
      "Protected characteristics mismatch: Length must match approval_decisions array.",
      "Invalid approval decisions: Values must be 0 (deny) or 1 (approve).",
      "Prohibited features detected: Model contains potentially discriminatory features.",
      "Insufficient sample size: At least 100 decisions required for disparate impact analysis.",
      "Invalid regulatory framework: Use one of [ECOA, FCRA, HMDA, GDPR]."
    ],
    "usage": "Provide model_features, protected_characteristics, and approval_decisions arrays. Specify regulatory_framework for targeted compliance checking.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status (COMPLIANT, NON_COMPLIANT, WARNING)"
      },
      "disparate_impact_ratio": {
        "type": "number",
        "description": "Adverse impact ratio for protected classes"
      },
      "prohibited_features_found": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of potentially prohibited features"
      },
      "compliance_recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommendations for achieving compliance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Score Calibrator",
    "tool_description": "Calibrates raw model scores to actual default probabilities using historical performance data to ensure accurate risk quantification.",
    "parameters": {
      "raw_scores": {
        "type": "array",
        "required": true,
        "description": "Raw model scores to calibrate",
        "items": {"type": "number"},
        "minItems": 100,
        "maxItems": 100000
      },
      "historical_outcomes": {
        "type": "array",
        "required": true,
        "description": "Historical default outcomes for calibration",
        "items": {"type": "integer"},
        "minItems": 100,
        "maxItems": 100000
      },
      "calibration_method": {
        "type": "string",
        "required": false,
        "description": "Calibration method: platt, isotonic, binning",
        "default": "platt"
      },
      "number_of_bins": {
        "type": "integer",
        "required": false,
        "description": "Number of bins for binning method (5-20)",
        "default": 10
      }
    },
    "error_messages": [
      "Score-outcome mismatch: raw_scores and historical_outcomes must have the same length.",
      "Invalid calibration method: Use one of [platt, isotonic, binning].",
      "Invalid number of bins: Must be between 5 and 20 for binning method.",
      "Insufficient calibration data: At least 100 historical observations required.",
      "Invalid outcomes format: Historical outcomes must be 0 or 1."
    ],
    "usage": "Provide raw_scores and historical_outcomes arrays of equal length. Choose calibration_method and set number_of_bins if using binning approach.",
    "output_details": {
      "calibrated_probabilities": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Calibrated probability scores"
      },
      "calibration_curve": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Calibration curve points for validation"
      },
      "calibration_quality_score": {
        "type": "number",
        "description": "Quality measure of calibration (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Risk Grade Mapper",
    "tool_description": "Maps continuous credit scores to discrete risk grades and assigns corresponding risk parameters like default probabilities and pricing tiers.",
    "parameters": {
      "credit_scores": {
        "type": "array",
        "required": true,
        "description": "Array of calibrated credit scores",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 10000
      },
      "grade_boundaries": {
        "type": "array",
        "required": true,
        "description": "Score thresholds for risk grades",
        "items": {"type": "number"},
        "minItems": 3,
        "maxItems": 15
      },
      "grade_labels": {
        "type": "array",
        "required": false,
        "description": "Labels for risk grades (A, B, C, etc.)",
        "items": {"type": "string"},
        "default": null
      }
    },
    "error_messages": [
      "Grade boundaries not sorted: Boundaries must be in ascending order.",
      "Label-boundary mismatch: Number of grade_labels must equal number of grade boundaries plus one.",
      "Invalid score range: Credit scores must be between 0 and 1.",
      "Insufficient boundaries: At least 3 grade boundaries required.",
      "Duplicate boundaries: Grade boundaries must be unique values."
    ],
    "usage": "Provide credit_scores array and grade_boundaries in ascending order. Optionally provide grade_labels for custom risk grade naming.",
    "output_details": {
      "risk_grades": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Assigned risk grades for each score"
      },
      "grade_statistics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Count of observations in each grade"
      },
      "average_scores_by_grade": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Average score within each risk grade"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Portfolio Risk Analyzer",
    "tool_description": "Analyzes portfolio-level credit risk including concentration risk, correlation effects, and expected loss calculations across the credit portfolio.",
    "parameters": {
      "portfolio_exposures": {
        "type": "array",
        "required": true,
        "description": "Credit exposures for each obligor",
        "items": {"type": "number"},
        "minItems": 10,
        "maxItems": 10000
      },
      "default_probabilities": {
        "type": "array",
        "required": true,
        "description": "Default probabilities for each obligor",
        "items": {"type": "number"},
        "minItems": 10,
        "maxItems": 10000
      },
      "industry_sectors": {
        "type": "array",
        "required": true,
        "description": "Industry classification for each obligor",
        "items": {"type": "string"},
        "minItems": 10,
        "maxItems": 10000
      },
      "loss_given_default": {
        "type": "array",
        "required": false,
        "description": "Loss given default rates",
        "items": {"type": "number"},
        "default": null
      },
      "correlation_assumptions": {
        "type": "number",
        "required": false,
        "description": "Asset correlation assumption (0-1)",
        "default": 0.15
      }
    },
    "error_messages": [
      "Array length mismatch: All input arrays must have the same length.",
      "Invalid exposure values: Exposures must be positive numbers.",
      "Invalid probability range: Default probabilities must be between 0 and 1.",
      "Invalid LGD values: Loss given default rates
