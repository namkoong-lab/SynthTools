field_name: calendar_management
subfield: appointment_scheduling
task: Schedule new appointments with availability checking and conflict detection
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task involves moderate complexity with multiple interconnected components: checking availability across multiple calendars, detecting conflicts, handling time zones, managing recurring appointments, and coordinating with external participants. The scope includes validation, conflict resolution, and notification workflows. I rate this as **medium difficulty** due to the coordination requirements and potential for cascading effects from scheduling conflicts.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target **12 tools** within the 10-15 range. This allows for comprehensive coverage of availability checking, conflict detection, scheduling logic, and supporting workflows while maintaining tool composability.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Calendar Availability Checker** - Consumes: calendar_id, time_range → Produces: available_slots
  2. **Time Slot Validator** - Consumes: start_time, end_time, duration → Produces: validation_status
  3. **Conflict Detector** - Consumes: calendar_ids, proposed_time → Produces: conflict_report
  4. **Recurring Pattern Generator** - Consumes: base_appointment, recurrence_rules → Produces: appointment_series
  5. **Time Zone Converter** - Consumes: datetime, source_tz, target_tz → Produces: converted_datetime
  6. **Participant Availability Checker** - Consumes: participant_emails, time_range → Produces: availability_matrix
  7. **Appointment Creator** - Consumes: appointment_details → Produces: appointment_record
  8. **Meeting Room Finder** - Consumes: location_preferences, time_slot → Produces: available_rooms
  9. **Notification Scheduler** - Consumes: appointment_id, notification_rules → Produces: scheduled_notifications
  10. **Buffer Time Calculator** - Consumes: appointments, buffer_requirements → Produces: adjusted_times
  11. **Priority Conflict Resolver** - Consumes: conflicting_appointments, priority_rules → Produces: resolution_suggestions
  12. **Appointment Validator** - Consumes: appointment_data → Produces: validation_result

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Availability Check**: Time Slot Validator → Calendar Availability Checker → Appointment Creator
  2. **Time Zone Scheduling**: Time Zone Converter → Time Slot Validator → Appointment Creator

  **Medium Plans:**
  1. **Multi-Calendar Scheduling**: Calendar Availability Checker → Conflict Detector → Buffer Time Calculator → Appointment Creator → Notification Scheduler
  2. **External Participant Coordination**: Participant Availability Checker → Time Zone Converter → Meeting Room Finder → Appointment Creator

  **Complex Plans:**
  1. **Full Conflict Resolution Workflow**: Time Slot Validator → Calendar Availability Checker → Participant Availability Checker → Conflict Detector → Priority Conflict Resolver → Buffer Time Calculator → Appointment Creator → Notification Scheduler
  2. **Recurring Appointment Series**: Time Zone Converter → Recurring Pattern Generator → Calendar Availability Checker → Conflict Detector → Meeting Room Finder → Appointment Creator → Notification Scheduler

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Calendar Availability Checker",
    "tool_description": "Checks calendar availability for specified time ranges and returns available time slots based on existing appointments and calendar settings.",
    "parameters": {
      "calendar_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the calendar to check"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for availability check",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for availability check",
        "format": "date-time"
      },
      "minimum_duration": {
        "type": "integer",
        "required": false,
        "description": "Minimum duration in minutes for available slots",
        "default": 30
      },
      "working_hours_only": {
        "type": "boolean",
        "required": false,
        "description": "Limit search to working hours",
        "default": true
      }
    },
    "error_messages": [
      "Invalid calendar ID: The provided calendar_id does not exist or is not accessible.",
      "Invalid date range: start_date must be before end_date and both must be valid ISO 8601 datetime strings.",
      "Duration too small: minimum_duration must be at least 15 minutes.",
      "Date range too large: Cannot check availability for periods longer than 365 days."
    ],
    "usage": "Provide calendar_id, start_date, and end_date to get available time slots. Optionally specify minimum_duration and working_hours_only to filter results.",
    "output_details": {
      "available_slots": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of available time slot ranges in ISO 8601 format"
      },
      "total_free_minutes": {
        "type": "integer",
        "description": "Total minutes of free time found"
      },
      "working_hours_start": {
        "type": "string",
        "description": "Calendar working hours start time"
      },
      "working_hours_end": {
        "type": "string",
        "description": "Calendar working hours end time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Time Slot Validator",
    "tool_description": "Validates proposed appointment times against business rules, time constraints, and calendar policies.",
    "parameters": {
      "start_time": {
        "type": "string",
        "required": true,
        "description": "Proposed appointment start time",
        "format": "date-time"
      },
      "end_time": {
        "type": "string",
        "required": true,
        "description": "Proposed appointment end time",
        "format": "date-time"
      },
      "time_zone": {
        "type": "string",
        "required": true,
        "description": "Time zone identifier (e.g., America/New_York)"
      }
    },
    "error_messages": [
      "Invalid time format: Times must be valid ISO 8601 datetime strings.",
      "Invalid time range: start_time must be before end_time.",
      "Invalid timezone: Provide a valid IANA timezone identifier.",
      "Time in past: Cannot schedule appointments in the past."
    ],
    "usage": "Provide start_time, end_time, and time_zone to validate the proposed time slot against scheduling rules.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the time slot passes validation"
      },
      "duration_minutes": {
        "type": "integer",
        "description": "Duration of the proposed time slot in minutes"
      },
      "validation_warnings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of warning messages about the time slot"
      },
      "business_hours_compliant": {
        "type": "boolean",
        "description": "Whether the slot falls within standard business hours"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Conflict Detector",
    "tool_description": "Detects scheduling conflicts across multiple calendars for a proposed appointment time and identifies overlapping events.",
    "parameters": {
      "calendar_ids": {
        "type": "array",
        "required": true,
        "description": "List of calendar IDs to check for conflicts",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "proposed_start": {
        "type": "string",
        "required": true,
        "description": "Proposed appointment start time",
        "format": "date-time"
      },
      "proposed_end": {
        "type": "string",
        "required": true,
        "description": "Proposed appointment end time",
        "format": "date-time"
      },
      "include_tentative": {
        "type": "boolean",
        "required": false,
        "description": "Include tentative appointments in conflict detection",
        "default": true
      },
      "buffer_minutes": {
        "type": "integer",
        "required": false,
        "description": "Buffer time in minutes to consider around appointments",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid calendar list: At least one valid calendar_id is required.",
      "Invalid time range: proposed_start must be before proposed_end with valid datetime formats.",
      "Calendar access denied: One or more calendars cannot be accessed.",
      "Buffer time invalid: buffer_minutes must be between 0 and 120."
    ],
    "usage": "Provide calendar_ids array and proposed time range to detect conflicts. Optionally set include_tentative and buffer_minutes for more precise conflict detection.",
    "output_details": {
      "has_conflicts": {
        "type": "boolean",
        "description": "Whether any conflicts were detected"
      },
      "conflicting_events": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of conflicting event titles and times"
      },
      "conflict_severity": {
        "type": "string",
        "description": "Severity level: none, minor, major, blocking"
      },
      "affected_calendars": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Calendar IDs that have conflicts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recurring Pattern Generator",
    "tool_description": "Generates a series of recurring appointment instances based on recurrence rules and patterns for scheduling repeating events.",
    "parameters": {
      "base_start_time": {
        "type": "string",
        "required": true,
        "description": "Start time of the first appointment instance",
        "format": "date-time"
      },
      "base_end_time": {
        "type": "string",
        "required": true,
        "description": "End time of the first appointment instance",
        "format": "date-time"
      },
      "recurrence_type": {
        "type": "string",
        "required": true,
        "description": "Type of recurrence: daily, weekly, monthly, yearly"
      },
      "interval": {
        "type": "integer",
        "required": false,
        "description": "Interval between occurrences (e.g., every 2 weeks)",
        "default": 1
      },
      "occurrence_count": {
        "type": "integer",
        "required": false,
        "description": "Total number of occurrences to generate",
        "default": null
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "Date when recurrence should stop",
        "format": "date-time",
        "default": null
      },
      "weekdays": {
        "type": "array",
        "required": false,
        "description": "Days of week for weekly recurrence (1=Monday, 7=Sunday)",
        "items": {
          "type": "integer"
        },
        "default": null
      },
      "exclude_dates": {
        "type": "array",
        "required": false,
        "description": "Dates to exclude from the series",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "include_weekends": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include weekend dates",
        "default": true
      },
      "time_zone": {
        "type": "string",
        "required": true,
        "description": "Time zone for the recurring appointments"
      }
    },
    "error_messages": [
      "Invalid recurrence type: Use daily, weekly, monthly, or yearly.",
      "Invalid time range: base_start_time must be before base_end_time.",
      "Invalid interval: Interval must be a positive integer between 1 and 52.",
      "Invalid occurrence settings: Provide either occurrence_count or end_date, not both.",
      "Invalid weekdays: Weekday values must be integers between 1 and 7.",
      "Date exclusion error: exclude_dates must contain valid date strings.",
      "Invalid timezone: Provide a valid IANA timezone identifier.",
      "Too many occurrences: Cannot generate more than 1000 recurring appointments."
    ],
    "usage": "Provide base appointment times, recurrence_type, and time_zone. Optionally specify interval, occurrence limits, weekday restrictions, and exclusion dates to customize the recurring pattern.",
    "output_details": {
      "appointment_instances": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of generated appointment datetime ranges"
      },
      "total_instances": {
        "type": "integer",
        "description": "Total number of instances generated"
      },
      "pattern_summary": {
        "type": "string",
        "description": "Human-readable description of the recurrence pattern"
      },
      "next_instance": {
        "type": "string",
        "description": "Date and time of the next upcoming instance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Time Zone Converter",
    "tool_description": "Converts datetime values between different time zones and handles daylight saving time transitions for accurate scheduling.",
    "parameters": {
      "datetime_value": {
        "type": "string",
        "required": true,
        "description": "Datetime value to convert",
        "format": "date-time"
      },
      "source_timezone": {
        "type": "string",
        "required": true,
        "description": "Source timezone identifier (e.g., America/New_York)"
      },
      "target_timezone": {
        "type": "string",
        "required": true,
        "description": "Target timezone identifier (e.g., Europe/London)"
      }
    },
    "error_messages": [
      "Invalid datetime format: Provide a valid ISO 8601 datetime string.",
      "Invalid source timezone: Source timezone identifier not recognized.",
      "Invalid target timezone: Target timezone identifier not recognized.",
      "Ambiguous datetime: Datetime falls during DST transition, specify UTC offset."
    ],
    "usage": "Provide datetime_value with source_timezone and target_timezone to convert between time zones with automatic DST handling.",
    "output_details": {
      "converted_datetime": {
        "type": "string",
        "description": "Datetime converted to target timezone"
      },
      "time_difference_hours": {
        "type": "number",
        "description": "Hours difference between source and target timezones"
      },
      "dst_active_source": {
        "type": "boolean",
        "description": "Whether daylight saving time is active in source timezone"
      },
      "dst_active_target": {
        "type": "boolean",
        "description": "Whether daylight saving time is active in target timezone"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Participant Availability Checker",
    "tool_description": "Checks availability of external participants by querying their free/busy information and identifies optimal meeting times for groups.",
    "parameters": {
      "participant_emails": {
        "type": "array",
        "required": true,
        "description": "Email addresses of participants to check",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for availability window",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for availability window",
        "format": "date-time"
      },
      "meeting_duration": {
        "type": "integer",
        "required": true,
        "description": "Required meeting duration in minutes"
      },
      "required_attendees": {
        "type": "array",
        "required": false,
        "description": "Email addresses of attendees who must be available",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "preferred_times": {
        "type": "array",
        "required": false,
        "description": "Preferred time ranges in format HH:MM-HH:MM",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "error_messages": [
      "Invalid email format: One or more participant emails are not valid.",
      "Invalid date range: start_date must be before end_date with valid datetime formats.",
      "Duration invalid: meeting_duration must be between 15 and 480 minutes.",
      "Too many participants: Cannot check availability for more than 50 participants.",
      "Access denied: Cannot access free/busy information for some participants.",
      "Invalid time format: preferred_times must be in HH:MM-HH:MM format."
    ],
    "usage": "Provide participant_emails, date range, and meeting_duration to check group availability. Optionally specify required_attendees and preferred_times for more targeted results.",
    "output_details": {
      "common_free_slots": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Time slots when all participants are available"
      },
      "participant_availability": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Individual availability status for each participant"
      },
      "best_meeting_times": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended meeting times ranked by participant availability"
      },
      "availability_percentage": {
        "type": "number",
        "description": "Percentage of requested time when all participants are free"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Appointment Creator",
    "tool_description": "Creates new appointment records in the calendar system with all necessary details, attendees, and metadata after validation.",
    "parameters": {
      "title": {
        "type": "string",
        "required": true,
        "description": "Appointment title or subject"
      },
      "start_time": {
        "type": "string",
        "required": true,
        "description": "Appointment start time",
        "format": "date-time"
      },
      "end_time": {
        "type": "string",
        "required": true,
        "description": "Appointment end time",
        "format": "date-time"
      },
      "calendar_id": {
        "type": "string",
        "required": true,
        "description": "Target calendar ID for the appointment"
      },
      "description": {
        "type": "string",
        "required": false,
        "description": "Detailed appointment description",
        "default": ""
      },
      "location": {
        "type": "string",
        "required": false,
        "description": "Meeting location or room",
        "default": ""
      },
      "attendee_emails": {
        "type": "array",
        "required": false,
        "description": "Email addresses of attendees",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "reminder_minutes": {
        "type": "array",
        "required": false,
        "description": "Reminder times in minutes before appointment",
        "items": {
          "type": "integer"
        },
        "default": [15]
      },
      "is_private": {
        "type": "boolean",
        "required": false,
        "description": "Whether the appointment should be marked as private",
        "default": false
      },
      "allow_conflicts": {
        "type": "boolean",
        "required": false,
        "description": "Whether to allow creation despite conflicts",
        "default": false
      }
    },
    "error_messages": [
      "Invalid time range: start_time must be before end_time with valid datetime formats.",
      "Calendar not found: The specified calendar_id does not exist or is not accessible.",
      "Title too long: Appointment title cannot exceed 255 characters.",
      "Invalid attendee email: One or more attendee email addresses are invalid.",
      "Scheduling conflict: Appointment conflicts with existing events and allow_conflicts is false.",
      "Permission denied: Insufficient permissions to create appointments in this calendar.",
      "Invalid reminder: Reminder minutes must be positive integers less than 10080 (1 week)."
    ],
    "usage": "Provide required fields title, start_time, end_time, and calendar_id. Optionally add description, location, attendees, and reminder settings to create a complete appointment.",
    "output_details": {
      "appointment_id": {
        "type": "string",
        "description": "Unique identifier of the created appointment"
      },
      "creation_status": {
        "type": "string",
        "description": "Status of creation: success, warning, or error"
      },
      "calendar_link": {
        "type": "string",
        "description": "Direct link to view the appointment in calendar"
      },
      "attendee_invites_sent": {
        "type": "boolean",
        "description": "Whether invitations were sent to attendees"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Meeting Room Finder",
    "tool_description": "Searches for and reserves available meeting rooms based on capacity, location, and equipment requirements for scheduled appointments.",
    "parameters": {
      "start_time": {
        "type": "string",
        "required": true,
        "description": "Meeting start time",
        "format": "date-time"
      },
      "end_time": {
        "type": "string",
        "required": true,
        "description": "Meeting end time",
        "format": "date-time"
      },
      "capacity": {
        "type": "integer",
        "required": true,
        "description": "Minimum number of people the room must accommodate"
      },
      "building": {
        "type": "string",
        "required": false,
        "description": "Preferred building or location",
        "default": ""
      },
      "equipment_needed": {
        "type": "array",
        "required": false,
        "description": "Required equipment like projector, whiteboard, video conference",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "floor_preference": {
        "type": "integer",
        "required": false,
        "description": "Preferred floor number",
        "default": null
      }
    },
    "error_messages": [
      "Invalid time range: start_time must be before end_time with valid datetime formats.",
      "Invalid capacity: Capacity must be a positive integer between 1 and 500.",
      "No rooms available: No meeting rooms match the criteria for the specified time.",
      "Building not found: The specified building identifier is not recognized.",
      "Equipment not available: Requested equipment is not available in any rooms.",
      "Booking conflict: Selected room has a scheduling conflict."
    ],
    "usage": "Provide start_time, end_time, and capacity to find available meeting rooms. Optionally specify building, equipment_needed, and floor_preference to narrow the search.",
    "output_details": {
      "available_rooms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of available rooms with details and capacity"
      },
      "recommended_room": {
        "type": "string",
        "description": "Best matching room based on criteria"
      },
      "room_features": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Available features and equipment in recommended room"
      },
      "booking_url": {
        "type": "string",
        "description": "URL to complete room reservation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Notification Scheduler",
    "tool_description": "Schedules and manages appointment notifications including reminders, updates, and cancellations for organizers and attendees.",
    "parameters": {
      "appointment_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier of the appointment"
      },
      "notification_types": {
        "type": "array",
        "required": true,
        "description": "Types of notifications to schedule",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "reminder_times": {
        "type": "array",
        "required": false,
        "description": "Minutes before appointment to send reminders",
        "items": {
          "type": "integer"
        },
        "default": [15, 60]
      },
      "recipient_emails": {
        "type": "array",
        "required": false,
        "description": "Additional email addresses to notify",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "error_messages": [
      "Appointment not found: The specified appointment_id does not exist.",
      "Invalid notification type: Use valid types like reminder, update, cancellation, invitation.",
      "Invalid reminder time: Reminder times must be positive integers representing minutes.",
      "Invalid email format: One or more recipient email addresses are invalid.",
      "Notification limit exceeded: Cannot schedule more than 10 notifications per appointment."
    ],
    "usage": "Provide appointment_id and notification_types to schedule notifications. Optionally specify reminder_times and additional recipient_emails for customized notifications.",
    "output_details": {
      "scheduled_notifications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of scheduled notifications with send times"
      },
      "notification_count": {
        "type": "integer",
        "description": "Total number of notifications scheduled"
      },
      "next_notification": {
        "type": "string",
        "description": "DateTime of the next scheduled notification"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Buffer Time Calculator",
    "tool_description": "Calculates and applies buffer time between appointments to account for travel time, preparation, and transitions between meetings.",
    "parameters": {
      "appointments": {
        "type": "array",
        "required": true,
        "description": "List of appointment time ranges to analyze",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "default_buffer_minutes": {
        "type": "integer",
        "required": false,
        "description": "Default buffer time in minutes between appointments",
        "default": 15
      },
      "travel_time_minutes": {
        "type": "integer",
        "required": false,
        "description": "Additional travel time between different locations",
        "default": 0
      },
      "appointment_types": {
        "type": "array",
        "required": false,
        "description": "Types of appointments for custom buffer rules",
        "items": {
          "type": "string"
        },
        "default": []
      }
    },
    "error_messages": [
      "Invalid appointment format: Appointments must be valid datetime range strings.",
      "Buffer time invalid: Buffer minutes must be between 0 and 120.",
      "Travel time invalid: Travel time must be between 0 and 240 minutes.",
      "Too many appointments: Cannot process more than 20 appointments at once.",
      "Appointment overlap detected: Some appointments overlap even before buffer calculation."
    ],
    "usage": "Provide appointments array with optional buffer and travel time settings to calculate optimal spacing between meetings.",
    "output_details": {
      "adjusted_appointments": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Appointments with buffer time adjustments applied"
      },
      "buffer_conflicts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Appointments that cannot accommodate requested buffer time"
      },
      "total_buffer_time": {
        "type": "integer",
        "description": "Total buffer time added across all appointments"
      },
      "scheduling_efficiency": {
        "type": "number",
        "description": "Percentage of time used for actual meetings vs buffer"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Priority Conflict Resolver",
    "tool_description": "Analyzes conflicting appointments and provides resolution suggestions based on priority rules, importance levels, and rescheduling options.",
    "parameters": {
      "conflicting_appointments": {
        "type": "array",
        "required": true,
        "description": "List of conflicting appointment IDs",
        "items": {
          "type": "string"
        },
        "minItems": 2,
        "maxItems": 10
      },
      "priority_criteria": {
        "type": "array",
        "required": true,
        "description": "Priority factors to consider",
        "items": {
          "type": "string"
        },
        "minItems": 1
      },
      "resolution_preferences": {
        "type": "array",
        "required": false,
        "description": "Preferred resolution methods",
        "items": {
          "type": "string"
        },
        "default": ["reschedule", "shorten", "decline"]
      },
      "stakeholder_importance": {
        "type": "array",
        "required": false,
        "description": "Importance ratings for different stakeholders",
        "items": {
          "type": "string"
        },
        "default": []
      },
      "business_impact": {
        "type": "string",
        "required": false,
        "description": "Business impact level: low, medium, high, critical",
        "default": "medium"
      },
      "flexibility_window_hours": {
        "type": "integer",
        "required": false,
        "description": "Hours window for rescheduling flexibility",
        "default": 24
      },
      "auto_resolve": {
        "type": "boolean",
        "required": false,
        "description": "Whether to automatically apply the best resolution",
        "default": false
      }
    },
    "error_messages": [
      "Insufficient conflicts: At least 2 conflicting appointments required.",
      "Invalid appointment ID: One or more appointment IDs not found.",
      "Invalid priority criteria: Use recognized criteria like urgency, stakeholder, deadline, revenue.",
      "Invalid business impact: Use low, medium, high, or critical.",
      "Resolution preference invalid: Use reschedule, shorten, decline, or delegate.",
      "Flexibility window invalid: Hours must be between 1 and 168 (1 week).",
      "Auto-resolve failed: Could not automatically resolve conflicts with given constraints."
    ],
    "usage": "Provide conflicting_appointments and priority_criteria to get resolution recommendations. Optionally set resolution preferences, stakeholder
