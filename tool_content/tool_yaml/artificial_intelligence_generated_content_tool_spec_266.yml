field_name: artificial_intelligence_generated_content
subfield: Image Creation and Visual Art
task: Generate images from text descriptions and prompts
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to the complexity of translating natural language into high-quality visual content. It requires understanding diverse artistic styles, managing multi-modal transformations, handling varied prompt complexities, coordinating multiple generation parameters, and ensuring output quality across different use cases with significant computational requirements.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to cover the comprehensive workflow from prompt engineering to final image generation and post-processing.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Prompt Analyzer** - Consumes: raw text prompts → Produces: structured prompt components
  2. **Style Reference Extractor** - Consumes: reference images/descriptions → Produces: style parameters
  3. **Negative Prompt Generator** - Consumes: generation goals → Produces: negative prompt terms
  4. **Prompt Optimizer** - Consumes: basic prompts → Produces: enhanced prompts
  5. **Model Selector** - Consumes: task requirements → Produces: optimal model recommendations
  6. **Parameter Calculator** - Consumes: quality/style requirements → Produces: generation parameters
  7. **Seed Manager** - Consumes: reproducibility needs → Produces: seed values and management
  8. **Batch Prompt Creator** - Consumes: base prompts → Produces: prompt variations
  9. **Image Generator** - Consumes: optimized prompts + parameters → Produces: generated images
  10. **Quality Assessor** - Consumes: generated images → Produces: quality metrics
  11. **Style Consistency Checker** - Consumes: images + style requirements → Produces: consistency scores
  12. **Resolution Upscaler** - Consumes: low-res images → Produces: high-res images
  13. **Image Compositor** - Consumes: multiple images → Produces: composite images
  14. **Watermark Embedder** - Consumes: images + watermark specs → Produces: watermarked images
  15. **Metadata Extractor** - Consumes: generated images → Produces: generation metadata
  16. **Format Converter** - Consumes: images in various formats → Produces: converted images
  17. **Generation Logger** - Consumes: all generation data → Produces: detailed logs

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic generation: Prompt Analyzer → Image Generator → Format Converter
  2. Quality check: Image Generator → Quality Assessor → Resolution Upscaler

  **Medium Plans:**
  1. Enhanced generation: Prompt Analyzer → Prompt Optimizer → Model Selector → Parameter Calculator → Image Generator → Quality Assessor
  2. Batch processing: Batch Prompt Creator → Image Generator → Style Consistency Checker → Watermark Embedder

  **Complex Plans:**
  1. Professional workflow: Style Reference Extractor → Prompt Analyzer → Negative Prompt Generator → Prompt Optimizer → Model Selector → Parameter Calculator → Seed Manager → Image Generator → Quality Assessor → Resolution Upscaler → Image Compositor → Watermark Embedder → Generation Logger
  2. Iterative refinement: Prompt Analyzer → Image Generator → Quality Assessor → Prompt Optimizer → Parameter Calculator → Image Generator → Style Consistency Checker → Resolution Upscaler → Metadata Extractor

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Prompt Analyzer",
    "tool_description": "Analyzes and parses text prompts to extract key components like subjects, styles, lighting, composition, and technical specifications for image generation.",
    "parameters": {
      "prompt_text": {
        "type": "string",
        "required": true,
        "description": "The input text prompt to analyze"
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "description": "Level of analysis: basic, detailed, comprehensive",
        "default": "detailed"
      }
    },
    "error_messages": [
      "Empty prompt: Provide a non-empty text prompt for analysis.",
      "Invalid analysis depth: Use one of [basic, detailed, comprehensive].",
      "Prompt too long: Maximum 2000 characters allowed to ensure proper processing."
    ],
    "usage": "Input a text prompt and optionally specify analysis depth. The tool extracts and categorizes prompt elements to help optimize image generation.",
    "output_details": {
      "subjects": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Main subjects identified in the prompt"
      },
      "style_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Artistic style and aesthetic keywords"
      },
      "technical_specs": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Technical specifications like lighting, composition, camera settings"
      },
      "complexity_score": {
        "type": "number",
        "description": "Complexity rating from 1-10"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Style Reference Extractor",
    "tool_description": "Extracts style parameters and characteristics from reference images or detailed style descriptions to guide image generation.",
    "parameters": {
      "reference_source": {
        "type": "string",
        "required": true,
        "description": "Path to reference image or detailed style description"
      },
      "extraction_focus": {
        "type": "array",
        "required": false,
        "items": {
          "type": "string"
        },
        "description": "Specific aspects to extract: color_palette, composition, lighting, texture, brushwork",
        "default": ["color_palette", "composition", "lighting"]
      },
      "style_strength": {
        "type": "number",
        "required": false,
        "description": "Influence strength of extracted style (0.1-2.0)",
        "default": 1.0
      }
    },
    "error_messages": [
      "Invalid reference source: Provide valid image path or detailed style description.",
      "Unsupported extraction focus: Use values from [color_palette, composition, lighting, texture, brushwork].",
      "Invalid style strength: Value must be between 0.1 and 2.0."
    ],
    "usage": "Provide a reference image path or style description, optionally specify extraction focus areas and style strength. Returns structured style parameters for generation.",
    "output_details": {
      "color_palette": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Dominant colors in hex format"
      },
      "style_tags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Style characteristic tags"
      },
      "composition_notes": {
        "type": "string",
        "description": "Composition and layout characteristics"
      },
      "recommended_model": {
        "type": "string",
        "description": "Suggested model for this style"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Negative Prompt Generator",
    "tool_description": "Generates negative prompts to exclude unwanted elements and improve image quality based on the intended generation goals.",
    "parameters": {
      "generation_goal": {
        "type": "string",
        "required": true,
        "description": "Primary goal: photorealistic, artistic, portrait, landscape, abstract, technical"
      },
      "quality_focus": {
        "type": "string",
        "required": false,
        "description": "Quality priority: general, high_detail, clean_composition, color_accuracy",
        "default": "general"
      },
      "exclude_elements": {
        "type": "array",
        "required": false,
        "items": {
          "type": "string"
        },
        "description": "Specific elements to exclude",
        "default": []
      }
    },
    "error_messages": [
      "Invalid generation goal: Use one of [photorealistic, artistic, portrait, landscape, abstract, technical].",
      "Invalid quality focus: Use one of [general, high_detail, clean_composition, color_accuracy].",
      "Too many exclusions: Maximum 20 exclude elements allowed for optimal performance."
    ],
    "usage": "Specify the generation goal and quality focus, optionally add specific elements to exclude. Returns optimized negative prompt terms.",
    "output_details": {
      "negative_prompt": {
        "type": "string",
        "description": "Complete negative prompt string"
      },
      "exclusion_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Categories of excluded elements"
      },
      "strength_recommendation": {
        "type": "number",
        "description": "Recommended negative prompt strength (0.5-1.5)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Prompt Optimizer",
    "tool_description": "Enhances and optimizes prompts by adding effective keywords, adjusting structure, and incorporating best practices for better image generation results.",
    "parameters": {
      "original_prompt": {
        "type": "string",
        "required": true,
        "description": "The original prompt to optimize"
      },
      "target_style": {
        "type": "string",
        "required": false,
        "description": "Desired artistic style or approach",
        "default": "general"
      },
      "optimization_level": {
        "type": "string",
        "required": false,
        "description": "Enhancement level: light, moderate, aggressive",
        "default": "moderate"
      },
      "preserve_intent": {
        "type": "boolean",
        "required": false,
        "description": "Whether to strictly preserve original creative intent",
        "default": true
      },
      "model_compatibility": {
        "type": "string",
        "required": false,
        "description": "Target model type for optimization",
        "default": "stable_diffusion"
      }
    },
    "error_messages": [
      "Empty original prompt: Provide a non-empty prompt to optimize.",
      "Invalid optimization level: Use one of [light, moderate, aggressive].",
      "Unsupported model compatibility: Specify a supported model type.",
      "Prompt too long: Original prompt exceeds 1500 character limit."
    ],
    "usage": "Input the original prompt with optional style and optimization preferences. The tool returns an enhanced version with improved structure and keywords.",
    "output_details": {
      "optimized_prompt": {
        "type": "string",
        "description": "The enhanced and optimized prompt"
      },
      "added_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Keywords added during optimization"
      },
      "improvement_score": {
        "type": "number",
        "description": "Estimated improvement score (1-10)"
      },
      "optimization_notes": {
        "type": "string",
        "description": "Explanation of changes made"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Model Selector",
    "tool_description": "Recommends the most suitable AI model for image generation based on prompt characteristics, style requirements, and quality expectations.",
    "parameters": {
      "prompt_complexity": {
        "type": "number",
        "required": true,
        "description": "Prompt complexity score (1-10)"
      },
      "style_category": {
        "type": "string",
        "required": true,
        "description": "Primary style: photorealistic, anime, artistic, abstract, technical, fantasy"
      },
      "quality_requirement": {
        "type": "string",
        "required": false,
        "description": "Quality level: draft, standard, high, professional",
        "default": "standard"
      },
      "speed_priority": {
        "type": "boolean",
        "required": false,
        "description": "Whether generation speed is prioritized over quality",
        "default": false
      },
      "resolution_target": {
        "type": "string",
        "required": false,
        "description": "Target resolution: 512x512, 768x768, 1024x1024, 1536x1024",
        "default": "1024x1024"
      }
    },
    "error_messages": [
      "Invalid complexity score: Must be between 1 and 10.",
      "Unsupported style category: Use one of [photorealistic, anime, artistic, abstract, technical, fantasy].",
      "Invalid quality requirement: Use one of [draft, standard, high, professional].",
      "Unsupported resolution: Use one of [512x512, 768x768, 1024x1024, 1536x1024]."
    ],
    "usage": "Provide prompt complexity and style category, optionally set quality requirements and preferences. Returns model recommendations with rationale.",
    "output_details": {
      "recommended_model": {
        "type": "string",
        "description": "Primary recommended model"
      },
      "alternative_models": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Alternative model options"
      },
      "confidence_score": {
        "type": "number",
        "description": "Recommendation confidence (0.7-1.0)"
      },
      "rationale": {
        "type": "string",
        "description": "Explanation for the recommendation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Parameter Calculator",
    "tool_description": "Calculates optimal generation parameters including steps, guidance scale, and sampling settings based on quality requirements and computational constraints.",
    "parameters": {
      "quality_target": {
        "type": "string",
        "required": true,
        "description": "Desired quality level: draft, good, high, maximum"
      },
      "style_complexity": {
        "type": "number",
        "required": true,
        "description": "Style complexity rating (1-10)"
      },
      "computational_budget": {
        "type": "string",
        "required": false,
        "description": "Available compute: low, medium, high, unlimited",
        "default": "medium"
      },
      "sampler_preference": {
        "type": "string",
        "required": false,
        "description": "Preferred sampler: euler, dpm, ddim, plms, auto",
        "default": "auto"
      },
      "generation_mode": {
        "type": "string",
        "required": false,
        "description": "Mode: single, batch, iterative",
        "default": "single"
      }
    },
    "error_messages": [
      "Invalid quality target: Use one of [draft, good, high, maximum].",
      "Invalid complexity rating: Must be between 1 and 10.",
      "Unsupported computational budget: Use one of [low, medium, high, unlimited].",
      "Invalid sampler preference: Use one of [euler, dpm, ddim, plms, auto].",
      "Unsupported generation mode: Use one of [single, batch, iterative]."
    ],
    "usage": "Specify quality target and style complexity, optionally set computational constraints and preferences. Returns optimized parameter settings.",
    "output_details": {
      "inference_steps": {
        "type": "integer",
        "description": "Recommended number of inference steps"
      },
      "guidance_scale": {
        "type": "number",
        "description": "Optimal guidance scale value"
      },
      "sampler": {
        "type": "string",
        "description": "Recommended sampler algorithm"
      },
      "eta": {
        "type": "number",
        "description": "Sampling eta parameter"
      },
      "estimated_time": {
        "type": "number",
        "description": "Estimated generation time in seconds"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Seed Manager",
    "tool_description": "Manages random seeds for reproducible image generation, including seed generation, validation, and batch seed creation for consistent results.",
    "parameters": {
      "operation": {
        "type": "string",
        "required": true,
        "description": "Seed operation: generate, validate, batch_create, increment"
      },
      "base_seed": {
        "type": "integer",
        "required": false,
        "description": "Base seed value for operations",
        "default": null
      },
      "batch_size": {
        "type": "integer",
        "required": false,
        "description": "Number of seeds for batch operations (1-100)",
        "default": 1
      },
      "increment_step": {
        "type": "integer",
        "required": false,
        "description": "Step size for incremental seed generation",
        "default": 1
      }
    },
    "error_messages": [
      "Invalid operation: Use one of [generate, validate, batch_create, increment].",
      "Invalid seed value: Seed must be a positive integer within valid range.",
      "Invalid batch size: Must be between 1 and 100.",
      "Missing base seed: Base seed required for validate and increment operations."
    ],
    "usage": "Specify the desired operation and relevant parameters. For batch operations, set batch_size. For incremental seeds, provide base_seed and increment_step.",
    "output_details": {
      "seeds": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Generated or processed seed values"
      },
      "validation_status": {
        "type": "boolean",
        "description": "Seed validation result when applicable"
      },
      "seed_range": {
        "type": "string",
        "description": "Description of the seed range or pattern"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Batch Prompt Creator",
    "tool_description": "Creates multiple prompt variations from a base prompt using systematic variation techniques like parameter substitution, style mixing, and creative expansion.",
    "parameters": {
      "base_prompt": {
        "type": "string",
        "required": true,
        "description": "The original prompt to create variations from"
      },
      "variation_count": {
        "type": "integer",
        "required": true,
        "description": "Number of variations to generate (2-50)"
      },
      "variation_type": {
        "type": "string",
        "required": false,
        "description": "Type of variations: style, subject, lighting, composition, random",
        "default": "style"
      },
      "creativity_level": {
        "type": "number",
        "required": false,
        "description": "How creative variations should be (0.1-2.0)",
        "default": 0.7
      },
      "preserve_core": {
        "type": "boolean",
        "required": false,
        "description": "Whether to preserve core prompt elements",
        "default": true
      },
      "style_references": {
        "type": "array",
        "required": false,
        "items": {
          "type": "string"
        },
        "description": "Reference styles for variation generation",
        "default": []
      },
      "exclusion_terms": {
        "type": "array",
        "required": false,
        "items": {
          "type": "string"
        },
        "description": "Terms to avoid in variations",
        "default": []
      }
    },
    "error_messages": [
      "Empty base prompt: Provide a non-empty base prompt for variations.",
      "Invalid variation count: Must be between 2 and 50.",
      "Invalid variation type: Use one of [style, subject, lighting, composition, random].",
      "Invalid creativity level: Must be between 0.1 and 2.0.",
      "Too many exclusions: Maximum 15 exclusion terms allowed."
    ],
    "usage": "Provide base prompt and variation count, optionally specify variation type and creativity settings. Returns an array of prompt variations with metadata.",
    "output_details": {
      "variations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Generated prompt variations"
      },
      "variation_tags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Tags describing each variation's focus"
      },
      "creativity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Creativity score for each variation"
      },
      "generation_summary": {
        "type": "string",
        "description": "Summary of the variation generation process"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Image Generator",
    "tool_description": "Generates images from text prompts using specified AI models and parameters, handling the core image creation process with comprehensive parameter control.",
    "parameters": {
      "prompt": {
        "type": "string",
        "required": true,
        "description": "Text prompt describing the desired image"
      },
      "negative_prompt": {
        "type": "string",
        "required": false,
        "description": "Negative prompt to exclude unwanted elements",
        "default": ""
      },
      "model_name": {
        "type": "string",
        "required": true,
        "description": "AI model to use for generation"
      },
      "width": {
        "type": "integer",
        "required": false,
        "description": "Image width in pixels (512, 768, 1024, 1536)",
        "default": 1024
      },
      "height": {
        "type": "integer",
        "required": false,
        "description": "Image height in pixels (512, 768, 1024, 1536)",
        "default": 1024
      },
      "steps": {
        "type": "integer",
        "required": false,
        "description": "Number of inference steps (10-150)",
        "default": 30
      },
      "guidance_scale": {
        "type": "number",
        "required": false,
        "description": "Prompt adherence strength (1.0-20.0)",
        "default": 7.5
      },
      "seed": {
        "type": "integer",
        "required": false,
        "description": "Random seed for reproducible results",
        "default": null
      },
      "sampler": {
        "type": "string",
        "required": false,
        "description": "Sampling algorithm to use",
        "default": "euler"
      },
      "batch_count": {
        "type": "integer",
        "required": false,
        "description": "Number of images to generate (1-10)",
        "default": 1
      }
    },
    "error_messages": [
      "Empty prompt: Provide a non-empty text prompt for image generation.",
      "Invalid dimensions: Width and height must be from [512, 768, 1024, 1536].",
      "Invalid steps: Must be between 10 and 150.",
      "Invalid guidance scale: Must be between 1.0 and 20.0.",
      "Model not found: Specified model is not available or accessible.",
      "Invalid batch count: Must be between 1 and 10.",
      "Generation failed: Image generation process encountered an error, try adjusting parameters."
    ],
    "usage": "Provide prompt and model name, optionally adjust generation parameters like dimensions, steps, and guidance scale. Returns generated images with metadata.",
    "output_details": {
      "image_paths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "File paths to generated images"
      },
      "generation_time": {
        "type": "number",
        "description": "Total generation time in seconds"
      },
      "used_parameters": {
        "type": "string",
        "description": "Summary of parameters used for generation"
      },
      "model_version": {
        "type": "string",
        "description": "Version of the model used"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Quality Assessor",
    "tool_description": "Evaluates generated images across multiple quality dimensions including technical quality, aesthetic appeal, and prompt adherence.",
    "parameters": {
      "image_path": {
        "type": "string",
        "required": true,
        "description": "Path to the image file to assess"
      },
      "original_prompt": {
        "type": "string",
        "required": false,
        "description": "Original prompt used for generation",
        "default": ""
      },
      "assessment_criteria": {
        "type": "array",
        "required": false,
        "items": {
          "type": "string"
        },
        "description": "Specific criteria to evaluate: technical, aesthetic, prompt_adherence, composition, color",
        "default": ["technical", "aesthetic", "prompt_adherence"]
      },
      "detail_level": {
        "type": "string",
        "required": false,
        "description": "Assessment detail level: basic, detailed, comprehensive",
        "default": "detailed"
      }
    },
    "error_messages": [
      "Image not found: Specified image path does not exist or is inaccessible.",
      "Invalid image format: Image must be in a supported format (JPEG, PNG, WebP).",
      "Invalid assessment criteria: Use values from [technical, aesthetic, prompt_adherence, composition, color].",
      "Invalid detail level: Use one of [basic, detailed, comprehensive]."
    ],
    "usage": "Provide image path and optionally the original prompt and assessment criteria. Returns comprehensive quality scores and detailed feedback.",
    "output_details": {
      "overall_score": {
        "type": "number",
        "description": "Overall quality score (0-100)"
      },
      "technical_score": {
        "type": "number",
        "description": "Technical quality score (0-100)"
      },
      "aesthetic_score": {
        "type": "number",
        "description": "Aesthetic appeal score (0-100)"
      },
      "prompt_adherence_score": {
        "type": "number",
        "description": "How well image matches prompt (0-100)"
      },
      "detailed_feedback": {
        "type": "string",
        "description": "Detailed assessment feedback and suggestions"
      },
      "quality_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified quality issues or artifacts"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Style Consistency Checker",
    "tool_description": "Analyzes multiple images to evaluate style consistency, comparing visual elements, color schemes, and artistic approaches across a set of images.",
    "parameters": {
      "image_paths": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Paths to images for consistency analysis",
        "minItems": 2,
        "maxItems": 20
      },
      "reference_style": {
        "type": "string",
        "required": false,
        "description": "Reference style or image path for comparison",
        "default": ""
      },
      "consistency_aspects": {
        "type": "array",
        "required": false,
        "items": {
          "type": "string"
        },
        "description": "Aspects to check: color_palette, brushwork, lighting, composition, subject_style",
        "default": ["color_palette", "lighting", "subject_style"]
      },
      "tolerance_level": {
        "type": "number",
        "required": false,
        "description": "Consistency tolerance (0.1-1.0, lower = stricter)",
        "default": 0.7
      }
    },
    "error_messages": [
      "Insufficient images: Provide at least 2 images for consistency analysis.",
      "Too many images: Maximum 20 images supported for analysis.",
      "Images not found: One or more specified image paths are invalid.",
      "Invalid consistency aspects: Use values from [color_palette, brushwork, lighting, composition, subject_style].",
      "Invalid tolerance level: Must be between 0.1 and 1.0."
    ],
    "usage": "Provide array of image paths and optionally specify consistency aspects and tolerance level. Returns consistency scores and detailed analysis.",
    "output_details": {
      "overall_consistency": {
        "type": "number",
        "description": "Overall consistency score (0-100)"
      },
      "aspect_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Consistency scores for each checked aspect"
      },
      "outlier_images": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Image paths that deviate from the consistent style"
      },
      "consistency_report": {
        "type": "string",
        "description": "Detailed consistency analysis report"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Resolution Upscaler",
    "tool_description": "Upscales images to higher resolutions using AI-enhanced algorithms while preserving and enhancing image quality and details.",
    "parameters": {
      "input_path": {
        "type": "string",
        "required": true,
        "description": "Path to the input image to upscale"
      },
      "scale_factor": {
        "type": "number",
        "required": false,
        "description": "Upscaling factor (1.5, 2.0, 3.0, 4.0)",
        "default": 2.0
      },
      "upscale_method": {
        "type": "string",
        "required": false,
        "description": "Upscaling algorithm: esrgan, real_esrgan, swinir, bicubic",
        "default": "real_esrgan"
      },
      "preserve_style": {
        "type": "boolean",
        "required": false,
        "description": "Whether to preserve original artistic style",
        "default": true
      },
      "enhance_details": {
        "type": "boolean",
        "required": false,
        "description": "Whether to enhance fine details during upscaling",
        "default": true
      }
    },
    "error_messages": [
      "Input image not found: Specified image path does not exist.",
      "Invalid scale factor: Use one of [1.5, 2.0, 3.0, 4.0].",
      "Unsupported upscale method: Use one of [esrgan, real_esrgan, swinir, bicubic].",
      "Image too large: Input image exceeds maximum size limit for upscaling.",
      "Upscaling failed: Process encountered an error, try a different method or smaller scale factor."
    ],
    "usage": "Provide input image path and optionally specify scale factor and upscaling method. Returns path to upscaled image with processing details.",
    "output_details": {
      "output_path": {
        "type": "string",
        "description": "Path to the upscaled image"
      },
      "original_dimensions": {
        "type": "string",
        "description": "Original image dimensions (WxH)"
      },
      "final_dimensions": {
        "type
