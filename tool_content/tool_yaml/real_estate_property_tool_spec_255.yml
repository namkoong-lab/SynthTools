field_name: real_estate_property
subfield: residential_sales_and_marketing
task: Market analysis and comparative property valuation
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves complex market analysis requiring integration of multiple data sources (property records, market trends, neighborhood analytics), sophisticated valuation methodologies, and handling of various property types and market conditions. The task has medium-to-high complexity due to data dependencies, multiple analytical workflows, and the critical importance of accuracy in financial valuations. **Medium-Hard difficulty**.

  ## STEP 2 — Set a tool budget

  Given the medium-hard complexity involving multiple data integration points, various analytical methodologies, and comprehensive reporting requirements, I'll target **16 tools** to cover data acquisition, preprocessing, analysis, valuation, and reporting workflows.

  ## STEP 3 — List all tool names with dependencies and affordances

  1. **Property Data Extractor** - Consumes: property identifiers → Produces: raw property data
  2. **Market Data Aggregator** - Consumes: location parameters → Produces: market statistics
  3. **Comparable Property Finder** - Consumes: target property specs → Produces: comparable listings
  4. **Property Feature Normalizer** - Consumes: raw property data → Produces: standardized features
  5. **Market Trend Analyzer** - Consumes: historical data → Produces: trend metrics
  6. **Neighborhood Score Calculator** - Consumes: location data → Produces: area ratings
  7. **Valuation Model Runner** - Consumes: property features, comparables → Produces: estimated values
  8. **Price Adjustment Calculator** - Consumes: base values, market factors → Produces: adjusted prices
  9. **Statistical Validator** - Consumes: analysis results → Produces: validation metrics
  10. **Competition Analyzer** - Consumes: market data → Produces: competitive insights
  11. **Investment Metrics Calculator** - Consumes: property data, financials → Produces: ROI metrics
  12. **Risk Assessment Generator** - Consumes: property/market data → Produces: risk scores
  13. **Market Report Builder** - Consumes: all analysis outputs → Produces: formatted reports
  14. **Valuation Confidence Scorer** - Consumes: model results → Produces: confidence intervals
  15. **Property Image Analyzer** - Consumes: image URLs → Produces: condition scores
  16. **Valuation Report Generator** - Consumes: all outputs → Produces: final valuation report

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  - Basic Property Valuation: Property Data Extractor → Property Feature Normalizer → Comparable Property Finder → Valuation Model Runner
  - Quick Market Overview: Market Data Aggregator → Market Trend Analyzer → Market Report Builder

  **Medium Plans:**
  - Comprehensive Property Analysis: Property Data Extractor → Property Feature Normalizer → Property Image Analyzer → Comparable Property Finder → Neighborhood Score Calculator → Valuation Model Runner → Price Adjustment Calculator → Valuation Confidence Scorer
  - Investment Analysis: Property Data Extractor → Market Data Aggregator → Investment Metrics Calculator → Risk Assessment Generator → Competition Analyzer → Market Report Builder

  **Complex Plans:**
  - Full Market Analysis & Valuation: All tools in sequence for complete property assessment, market analysis, risk evaluation, and comprehensive reporting
  - Multi-Property Portfolio Analysis: Property Data Extractor → Property Feature Normalizer → Comparable Property Finder → Market Data Aggregator → Market Trend Analyzer → Competition Analyzer → Investment Metrics Calculator → Risk Assessment Generator → Statistical Validator → Valuation Report Generator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Property Data Extractor",
    "tool_description": "Extracts comprehensive property information including physical characteristics, transaction history, and ownership details from property databases and public records.",
    "parameters": {
      "property_id": {
        "type": "string",
        "required": true,
        "description": "Unique property identifier (MLS number, APN, or address)"
      },
      "data_sources": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": ["mls", "public_records"],
        "description": "Data sources to query: mls, public_records, assessor, zillow"
      },
      "include_history": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include transaction and price history"
      }
    },
    "error_messages": [
      "Property not found: The provided property_id does not match any records in the specified data sources.",
      "Invalid data source: Use only supported sources [mls, public_records, assessor, zillow].",
      "Access denied: Insufficient permissions to access requested data sources.",
      "Data incomplete: Some requested property information is not available from current sources."
    ],
    "usage": "Provide a valid property_id and optionally specify data_sources and include_history. The tool returns structured property information including physical characteristics and transaction history.",
    "output_details": {
      "property_address": {
        "type": "string",
        "description": "Full property address"
      },
      "square_footage": {
        "type": "integer",
        "description": "Total living area in square feet"
      },
      "bedrooms": {
        "type": "integer",
        "description": "Number of bedrooms"
      },
      "bathrooms": {
        "type": "number",
        "description": "Number of bathrooms"
      },
      "year_built": {
        "type": "integer",
        "description": "Year the property was constructed"
      },
      "lot_size": {
        "type": "number",
        "description": "Lot size in acres"
      },
      "transaction_history": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of past transaction records with dates and prices"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Market Data Aggregator",
    "tool_description": "Aggregates current market statistics, pricing trends, and inventory levels for specified geographic areas and property types.",
    "parameters": {
      "location": {
        "type": "string",
        "required": true,
        "description": "Geographic area (zip code, city, or neighborhood name)"
      },
      "property_type": {
        "type": "string",
        "required": true,
        "description": "Property type: single_family, condo, townhouse, multi_family"
      },
      "time_period": {
        "type": "string",
        "required": false,
        "default": "6_months",
        "description": "Analysis period: 3_months, 6_months, 1_year, 2_years"
      },
      "price_range_min": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Minimum price filter in dollars"
      },
      "price_range_max": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Maximum price filter in dollars"
      }
    },
    "error_messages": [
      "Location not found: The specified location cannot be identified or lacks sufficient market data.",
      "Invalid property type: Use one of [single_family, condo, townhouse, multi_family].",
      "Invalid time period: Use one of [3_months, 6_months, 1_year, 2_years].",
      "Invalid price range: price_range_min must be less than price_range_max, both must be positive integers.",
      "Insufficient market data: Not enough transactions found for reliable market statistics."
    ],
    "usage": "Specify location and property_type, optionally set time_period and price filters. Returns market statistics including median prices, days on market, and inventory levels.",
    "output_details": {
      "median_sale_price": {
        "type": "integer",
        "description": "Median sale price in the specified area and time period"
      },
      "average_days_on_market": {
        "type": "integer",
        "description": "Average number of days properties stay on market"
      },
      "total_sales": {
        "type": "integer",
        "description": "Total number of sales in the time period"
      },
      "price_per_sqft": {
        "type": "number",
        "description": "Average price per square foot"
      },
      "inventory_count": {
        "type": "integer",
        "description": "Current number of active listings"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Comparable Property Finder",
    "tool_description": "Identifies and ranks comparable properties based on location proximity, physical characteristics, and recent sale dates for accurate property valuation.",
    "parameters": {
      "target_address": {
        "type": "string",
        "required": true,
        "description": "Address of the subject property"
      },
      "target_sqft": {
        "type": "integer",
        "required": true,
        "description": "Square footage of target property"
      },
      "target_bedrooms": {
        "type": "integer",
        "required": true,
        "description": "Number of bedrooms in target property"
      },
      "target_bathrooms": {
        "type": "number",
        "required": true,
        "description": "Number of bathrooms in target property"
      },
      "search_radius_miles": {
        "type": "number",
        "required": false,
        "default": 1.0,
        "description": "Search radius in miles (0.25 to 5.0)"
      },
      "max_age_months": {
        "type": "integer",
        "required": false,
        "default": 6,
        "description": "Maximum age of comparable sales in months (1 to 24)"
      },
      "sqft_variance_percent": {
        "type": "number",
        "required": false,
        "default": 20.0,
        "description": "Allowed square footage variance percentage (5.0 to 50.0)"
      },
      "max_comparables": {
        "type": "integer",
        "required": false,
        "default": 10,
        "description": "Maximum number of comparables to return (3 to 20)"
      }
    },
    "error_messages": [
      "Invalid target address: The provided address cannot be geocoded or found.",
      "Invalid property specifications: target_sqft must be positive, bedrooms/bathrooms must be non-negative.",
      "Search parameters out of range: search_radius_miles must be 0.25-5.0, max_age_months must be 1-24, sqft_variance_percent must be 5.0-50.0.",
      "Insufficient comparables found: Fewer than 3 comparable properties found within specified criteria.",
      "Invalid max_comparables: Must be between 3 and 20."
    ],
    "usage": "Provide target property details and optionally adjust search parameters. Returns ranked list of comparable properties with similarity scores and key differences.",
    "output_details": {
      "comparable_count": {
        "type": "integer",
        "description": "Number of comparable properties found"
      },
      "comparable_addresses": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Addresses of comparable properties"
      },
      "sale_prices": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Sale prices of comparable properties"
      },
      "similarity_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Similarity scores (0-1) for each comparable"
      },
      "average_price_per_sqft": {
        "type": "number",
        "description": "Average price per square foot of comparables"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Property Feature Normalizer",
    "tool_description": "Standardizes and normalizes property features for consistent analysis, handling missing values and converting categorical variables to numerical representations.",
    "parameters": {
      "raw_property_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing raw property characteristics"
      },
      "normalization_method": {
        "type": "string",
        "required": false,
        "default": "z_score",
        "description": "Normalization approach: z_score, min_max, robust"
      }
    },
    "error_messages": [
      "Invalid JSON format: raw_property_data must be valid JSON string.",
      "Missing required fields: Property data must include address, square_footage, bedrooms, bathrooms.",
      "Invalid normalization method: Use one of [z_score, min_max, robust].",
      "Data type mismatch: Numerical fields contain non-numeric values that cannot be converted."
    ],
    "usage": "Pass raw property data as JSON string and optionally specify normalization method. Returns standardized property features ready for analysis and modeling.",
    "output_details": {
      "normalized_sqft": {
        "type": "number",
        "description": "Normalized square footage value"
      },
      "normalized_age": {
        "type": "number",
        "description": "Normalized property age"
      },
      "bedroom_score": {
        "type": "number",
        "description": "Standardized bedroom count score"
      },
      "bathroom_score": {
        "type": "number",
        "description": "Standardized bathroom count score"
      },
      "feature_completeness": {
        "type": "number",
        "description": "Percentage of complete feature data (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Market Trend Analyzer",
    "tool_description": "Analyzes historical market data to identify pricing trends, seasonal patterns, and market momentum for informed valuation adjustments.",
    "parameters": {
      "location": {
        "type": "string",
        "required": true,
        "description": "Geographic location for trend analysis"
      },
      "analysis_period_years": {
        "type": "integer",
        "required": false,
        "default": 3,
        "description": "Years of historical data to analyze (1 to 10)"
      },
      "trend_granularity": {
        "type": "string",
        "required": false,
        "default": "monthly",
        "description": "Analysis granularity: weekly, monthly, quarterly"
      },
      "include_forecasting": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include 6-month trend forecasting"
      }
    },
    "error_messages": [
      "Location not found: Unable to retrieve historical data for specified location.",
      "Invalid analysis period: analysis_period_years must be between 1 and 10.",
      "Invalid granularity: Use one of [weekly, monthly, quarterly].",
      "Insufficient historical data: Not enough data points for reliable trend analysis.",
      "Forecasting failed: Unable to generate reliable trend forecasts with available data."
    ],
    "usage": "Specify location and optionally adjust analysis parameters. Returns trend metrics, seasonal patterns, and optional forecasts for market direction.",
    "output_details": {
      "trend_direction": {
        "type": "string",
        "description": "Overall trend direction: increasing, decreasing, stable"
      },
      "annual_appreciation_rate": {
        "type": "number",
        "description": "Average annual price appreciation percentage"
      },
      "volatility_index": {
        "type": "number",
        "description": "Market volatility score (0-1)"
      },
      "seasonal_adjustment_factors": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Monthly seasonal adjustment factors (12 values)"
      },
      "forecast_6_month_change": {
        "type": "number",
        "description": "Predicted 6-month price change percentage"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Neighborhood Score Calculator",
    "tool_description": "Calculates comprehensive neighborhood quality scores based on schools, crime rates, amenities, walkability, and economic indicators to adjust property valuations.",
    "parameters": {
      "address": {
        "type": "string",
        "required": true,
        "description": "Property address for neighborhood analysis"
      },
      "score_categories": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": ["schools", "safety", "amenities", "walkability", "economic"],
        "description": "Categories to include in scoring"
      },
      "weight_schools": {
        "type": "number",
        "required": false,
        "default": 0.25,
        "description": "Weight for school quality (0-1)"
      },
      "weight_safety": {
        "type": "number",
        "required": false,
        "default": 0.25,
        "description": "Weight for safety/crime scores (0-1)"
      },
      "weight_amenities": {
        "type": "number",
        "required": false,
        "default": 0.20,
        "description": "Weight for amenities access (0-1)"
      },
      "weight_walkability": {
        "type": "number",
        "required": false,
        "default": 0.15,
        "description": "Weight for walkability score (0-1)"
      },
      "weight_economic": {
        "type": "number",
        "required": false,
        "default": 0.15,
        "description": "Weight for economic indicators (0-1)"
      }
    },
    "error_messages": [
      "Invalid address: Cannot geocode the provided address for neighborhood analysis.",
      "Invalid score categories: Use only supported categories [schools, safety, amenities, walkability, economic].",
      "Weight sum error: All weight parameters must sum to 1.0 and be between 0 and 1.",
      "Data unavailable: Insufficient neighborhood data available for comprehensive scoring.",
      "Geocoding failed: Unable to determine precise location for neighborhood boundary analysis."
    ],
    "usage": "Provide property address and optionally customize scoring categories and weights. Returns comprehensive neighborhood scores and individual category ratings.",
    "output_details": {
      "overall_score": {
        "type": "number",
        "description": "Overall neighborhood score (0-100)"
      },
      "school_score": {
        "type": "number",
        "description": "School quality score (0-100)"
      },
      "safety_score": {
        "type": "number",
        "description": "Safety and crime score (0-100)"
      },
      "amenity_score": {
        "type": "number",
        "description": "Amenities accessibility score (0-100)"
      },
      "walkability_score": {
        "type": "number",
        "description": "Walkability score (0-100)"
      },
      "economic_score": {
        "type": "number",
        "description": "Economic indicators score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Valuation Model Runner",
    "tool_description": "Executes multiple valuation models including comparative market analysis, cost approach, and income approach to generate property value estimates.",
    "parameters": {
      "property_features": {
        "type": "string",
        "required": true,
        "description": "JSON string of normalized property features"
      },
      "comparable_data": {
        "type": "string",
        "required": true,
        "description": "JSON string of comparable properties data"
      },
      "market_conditions": {
        "type": "string",
        "required": true,
        "description": "JSON string of current market conditions"
      },
      "valuation_methods": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": ["cma", "cost", "income"],
        "description": "Valuation methods to apply: cma, cost, income, automated"
      },
      "cma_weight": {
        "type": "number",
        "required": false,
        "default": 0.6,
        "description": "Weight for comparative market analysis (0-1)"
      },
      "cost_weight": {
        "type": "number",
        "required": false,
        "default": 0.25,
        "description": "Weight for cost approach (0-1)"
      },
      "income_weight": {
        "type": "number",
        "required": false,
        "default": 0.15,
        "description": "Weight for income approach (0-1)"
      }
    },
    "error_messages": [
      "Invalid JSON input: One or more input parameters contain malformed JSON data.",
      "Insufficient comparable data: Need at least 3 comparable properties for reliable CMA valuation.",
      "Invalid valuation methods: Use only supported methods [cma, cost, income, automated].",
      "Weight validation error: All weight parameters must sum to 1.0 when corresponding methods are selected.",
      "Missing required data: Property features or market conditions lack essential valuation parameters.",
      "Model execution failed: Unable to complete valuation due to data inconsistencies or model errors."
    ],
    "usage": "Provide property features, comparable data, and market conditions as JSON strings. Optionally specify valuation methods and their weights. Returns weighted valuation estimates and individual method results.",
    "output_details": {
      "final_valuation": {
        "type": "integer",
        "description": "Weighted final property valuation estimate"
      },
      "cma_valuation": {
        "type": "integer",
        "description": "Comparative market analysis valuation"
      },
      "cost_valuation": {
        "type": "integer",
        "description": "Cost approach valuation"
      },
      "income_valuation": {
        "type": "integer",
        "description": "Income approach valuation"
      },
      "valuation_range_low": {
        "type": "integer",
        "description": "Lower bound of valuation range"
      },
      "valuation_range_high": {
        "type": "integer",
        "description": "Upper bound of valuation range"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Price Adjustment Calculator",
    "tool_description": "Applies market-based adjustments to base valuations considering current conditions, property condition, location premiums, and timing factors.",
    "parameters": {
      "base_valuation": {
        "type": "integer",
        "required": true,
        "description": "Base property valuation amount"
      },
      "market_condition_adjustment": {
        "type": "number",
        "required": false,
        "default": 0.0,
        "description": "Market condition adjustment percentage (-20 to 20)"
      },
      "condition_adjustment": {
        "type": "number",
        "required": false,
        "default": 0.0,
        "description": "Property condition adjustment percentage (-30 to 15)"
      },
      "location_premium": {
        "type": "number",
        "required": false,
        "default": 0.0,
        "description": "Location-specific premium percentage (-15 to 25)"
      },
      "timing_adjustment": {
        "type": "number",
        "required": false,
        "default": 0.0,
        "description": "Seasonal/timing adjustment percentage (-10 to 10)"
      }
    },
    "error_messages": [
      "Invalid base valuation: base_valuation must be a positive integer.",
      "Market adjustment out of range: market_condition_adjustment must be between -20 and 20.",
      "Condition adjustment out of range: condition_adjustment must be between -30 and 15.",
      "Location premium out of range: location_premium must be between -15 and 25.",
      "Timing adjustment out of range: timing_adjustment must be between -10 and 10."
    ],
    "usage": "Provide base_valuation and optionally specify adjustment percentages for market conditions, property condition, location premiums, and timing. Returns adjusted valuation with breakdown of adjustments applied.",
    "output_details": {
      "adjusted_valuation": {
        "type": "integer",
        "description": "Final adjusted property valuation"
      },
      "total_adjustment_percent": {
        "type": "number",
        "description": "Total adjustment percentage applied"
      },
      "adjustment_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed breakdown of each adjustment applied"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Statistical Validator",
    "tool_description": "Validates analysis results using statistical tests and quality checks to ensure reliability and accuracy of valuation outputs.",
    "parameters": {
      "valuation_results": {
        "type": "string",
        "required": true,
        "description": "JSON string containing valuation analysis results"
      },
      "comparable_prices": {
        "type": "array",
        "items": {"type": "integer"},
        "required": true,
        "description": "Array of comparable property prices for validation"
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "default": 0.95,
        "description": "Statistical confidence level (0.90, 0.95, or 0.99)"
      }
    },
    "error_messages": [
      "Invalid valuation results: valuation_results must be valid JSON containing required fields.",
      "Insufficient comparable data: Need at least 5 comparable prices for statistical validation.",
      "Invalid confidence level: Use one of [0.90, 0.95, 0.99].",
      "Statistical test failed: Unable to complete validation due to data distribution issues.",
      "Outlier detection failed: Extreme values detected that may compromise validation accuracy."
    ],
    "usage": "Provide valuation results and comparable prices array, optionally set confidence level. Returns validation metrics and reliability indicators for the analysis.",
    "output_details": {
      "validation_passed": {
        "type": "boolean",
        "description": "Whether the valuation passes statistical validation"
      },
      "confidence_interval_low": {
        "type": "integer",
        "description": "Lower bound of confidence interval"
      },
      "confidence_interval_high": {
        "type": "integer",
        "description": "Upper bound of confidence interval"
      },
      "r_squared": {
        "type": "number",
        "description": "R-squared goodness of fit measure"
      },
      "mean_absolute_error": {
        "type": "number",
        "description": "Mean absolute error of the valuation model"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Competition Analyzer",
    "tool_description": "Analyzes competing listings and recent sales to identify market positioning opportunities and pricing strategies for optimal market performance.",
    "parameters": {
      "target_property_data": {
        "type": "string",
        "required": true,
        "description": "JSON string with target property characteristics"
      },
      "search_area": {
        "type": "string",
        "required": true,
        "description": "Geographic area for competition analysis"
      },
      "analysis_radius_miles": {
        "type": "number",
        "required": false,
        "default": 2.0,
        "description": "Search radius in miles (0.5 to 10.0)"
      },
      "include_active_listings": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Include currently active competing listings"
      },
      "include_pending_sales": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Include pending sales in competition analysis"
      }
    },
    "error_messages": [
      "Invalid property data: target_property_data must be valid JSON with required property fields.",
      "Search area not found: Unable to identify the specified geographic search area.",
      "Invalid radius: analysis_radius_miles must be between 0.5 and 10.0.",
      "No competition found: Insufficient competing properties found within specified criteria.",
      "Data access error: Unable to retrieve current listing or sales data for competition analysis."
    ],
    "usage": "Provide target property data and search area, optionally adjust radius and specify what types of competition to include. Returns competitive analysis with positioning recommendations.",
    "output_details": {
      "competing_properties_count": {
        "type": "integer",
        "description": "Number of competing properties identified"
      },
      "average_competitor_price": {
        "type": "integer",
        "description": "Average price of competing properties"
      },
      "price_position_percentile": {
        "type": "number",
        "description": "Target property's price position percentile (0-100)"
      },
      "days_on_market_comparison": {
        "type": "string",
        "description": "Comparison of target property's marketing time vs competitors"
      },
      "competitive_advantages": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified competitive advantages of target property"
      },
      "pricing_recommendation": {
        "type": "string",
        "description": "Recommended pricing strategy based on competition"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Investment Metrics Calculator",
    "tool_description": "Calculates key real estate investment metrics including ROI, cap rates, cash flow projections, and break-even analysis for investment property evaluation.",
    "parameters": {
      "purchase_price": {
        "type": "integer",
        "required": true,
        "description": "Property purchase price in dollars"
      },
      "monthly_rent": {
        "type": "integer",
        "required": true,
        "description": "Expected monthly rental income"
      },
      "down_payment_percent": {
        "type": "number",
        "required": false,
        "default": 20.0,
        "description": "Down payment percentage (5.0 to 100.0)"
      },
      "interest_rate": {
        "type": "number",
        "required": false,
        "default": 6.5,
        "description": "Mortgage interest rate percentage"
      },
      "loan_term_years": {
        "type": "integer",
        "required": false,
        "default": 30,
        "description": "Mortgage loan term in years (15, 20, or 30)"
      },
      "annual_expenses": {
        "type": "integer",
        "required": false,
        "default": null,
        "description": "Annual property expenses (taxes, insurance, maintenance)"
      },
      "vacancy_rate_percent": {
        "type": "number",
        "required": false,
        "default": 5.0,
        "description": "Expected vacancy rate percentage (0 to 25)"
      },
      "appreciation_rate_percent": {
        "type": "number",
        "required": false,
        "default": 3.0,
        "description": "Expected annual appreciation rate (0 to 15)"
      },
      "holding_period_years": {
        "type": "integer",
        "required": false,
        "default": 10,
        "description": "Investment holding period in years (1 to 30)"
      }
    },
    "error_messages": [
      "Invalid purchase price: purchase_price must be a positive integer.",
      "Invalid rental income: monthly_rent must be a positive integer.",
      "Down payment out of range: down_payment_percent must be between 5.0 and 100.0.",
      "Invalid interest rate: interest_rate must be between 0.1 and 20.0.",
      "Invali
