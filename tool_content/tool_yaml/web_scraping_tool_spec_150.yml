field_name: web_scraping
subfield: real estate listing aggregation
task: Property data extraction from multiple listing websites
tool_description: "**STEP 1 — Rate task difficulty**\n\nThis task is **hard** due to multiple complex challenges: handling diverse website structures and anti-bot measures, coordinating data extraction across multiple sources with different formats, managing high risk of errors from website changes, and requiring robust data processing infrastructure to handle large-scale scraping operations.\n\n**STEP 2 — Set a tool budget**\n\nGiven the hard difficulty rating, I'm targeting **17 tools** to handle the comprehensive workflow of multi-site property data extraction, from web scraping and parsing to data validation and aggregation.\n\n**STEP 3 — List all tool names and dependencies**\n\n**Tools and Dependencies:**\n1. **Website Health Checker** → produces site status → consumed by scrapers\n2. **HTML Content Extractor** → produces raw HTML → consumed by parsers  \n3. **Property Data Parser** → consumes HTML → produces structured data\n4. **Image URL Extractor** → consumes HTML → produces image links\n5. **Contact Info Extractor** → consumes HTML → produces contact details\n6. **Price Format Standardizer** → consumes raw prices → produces normalized prices\n7. **Address Geocoder** → consumes addresses → produces coordinates\n8. **Property Deduplicator** → consumes multiple listings → produces unique entries\n9. **Data Quality Validator** → consumes parsed data → produces validation results\n10. **Listing Status Tracker** → consumes property IDs → produces status updates\n11. **Rate Limit Manager** → manages request timing → consumed by all scrapers\n12. **Captcha Solver** → handles anti-bot measures → enables continued scraping\n13. **Proxy Rotator** → manages IP rotation → consumed by scrapers\n14. **Data Aggregator** → consumes validated data → produces consolidated datasets\n15. **Export Formatter** → consumes aggregated data → produces final outputs\n16. **Scraping Session Monitor** → tracks scraping progress → produces session reports\n17. **Error Recovery Handler** → handles failures → enables retry mechanisms\n\n**STEP 4 — Multi-tool plans**\n\n**Simple Plans:**\n1. **Basic single-site scraping**: Website Health Checker → HTML Content Extractor → Property Data Parser → Export Formatter\n2. **Price normalization**: Property Data Parser → Price Format Standardizer → Export Formatter\n\n**Medium Plans:**  \n1. **Enhanced data extraction**: HTML Content Extractor → Property Data Parser + Image URL Extractor + Contact Info Extractor → Data Quality Validator → Export Formatter\n2. **Geographic enrichment**: Property Data Parser → Address Geocoder → Data Aggregator → Export Formatter\n\n**Complex Plans:**\n1. **Full multi-site aggregation**: Website Health Checker → Rate Limit Manager + Proxy Rotator → HTML Content Extractor → Property Data Parser + Image URL Extractor + Contact Info Extractor → Price Format Standardizer + Address Geocoder → Property Deduplicator → Data Quality Validator → Data Aggregator → Export Formatter\n2. **Robust scraping with monitoring**: Scraping Session Monitor → Rate Limit Manager + Proxy Rotator + Captcha Solver → HTML Content Extractor → all parsers → validators → Error Recovery Handler → final aggregation and export\n\n**STEP 5 — Produce tools**\n\n```json\n{\n  \"tool_name\": \"Website Health Checker\",\n  \"tool_description\": \"Checks the availability and response time of target real estate websites before initiating scraping operations.\",\n  \"parameters\": {\n    \"website_urls\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of real estate website URLs to check\",\n      \"minItems\": 1,\n      \"maxItems\": 50\n    },\n    \"timeout_seconds\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 10,\n      \"description\": \"Maximum time to wait for response in seconds\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid URL format: Ensure all URLs start with http:// or https:// and are properly formatted.\",\n    \"Timeout too low: timeout_seconds must be at least 5 seconds to\
  \ allow proper connection.\",\n    \"Too many URLs: Maximum 50 URLs can be checked in a single request.\"\n  ],\n  \"usage\": \"Provide an array of website URLs to check their availability. Use this before starting any scraping operations to ensure targets are accessible.\",\n  \"output_details\": {\n    \"results\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Status results for each website (available/unavailable)\"\n    },\n    \"response_times\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Response times in seconds for each website\"\n    },\n    \"total_available\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of websites that are currently available\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"HTML Content Extractor\",\n  \"tool_description\": \"Extracts HTML content from real estate listing pages with support for dynamic content loading and common anti-bot measures.\",\n  \"parameters\": {\n    \"target_url\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"URL of the property listing page to scrape\"\n    },\n    \"user_agent\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36\",\n      \"description\": \"User agent string to use for requests\"\n    },\n    \"wait_for_js\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to wait for JavaScript content to load\"\n    },\n    \"proxy_ip\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Proxy IP address to use for the request\"\n    },\n    \"headers\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Additional HTTP headers as key:value pairs\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid URL: Provide a valid HTTP/HTTPS URL starting with proper protocol.\",\n    \"Connection failed: Unable to establish connection to target URL. Check network connectivity.\",\n    \"Access blocked: Website is blocking requests. Try different user agent or proxy.\",\n    \"Content load timeout: JavaScript content failed to load within timeout period.\"\n  ],\n  \"usage\": \"Provide target_url and optionally configure user_agent, proxy_ip, and other parameters. Use wait_for_js=true for sites with dynamic content.\",\n  \"output_details\": {\n    \"html_content\": {\n      \"type\": \"string\",\n      \"description\": \"Extracted HTML content from the webpage\"\n    },\n    \"response_code\": {\n      \"type\": \"integer\",\n      \"description\": \"HTTP response status code\"\n    },\n    \"content_length\": {\n      \"type\": \"integer\",\n      \"description\": \"Length of extracted content in bytes\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Property Data Parser\",\n  \"tool_description\": \"Parses HTML content to extract structured property information including price, bedrooms, bathrooms, square footage, and property type.\",\n  \"parameters\": {\n    \"html_content\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"HTML content containing property information\"\n    },\n    \"website_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of real estate website (zillow, realtor, redfin, apartments, custom)\"\n    },\n    \"custom_selectors\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Custom CSS selectors for data extraction if website_type is custom\"\n    },\n    \"extract_description\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to extract property description text\"\n    },\n    \"max_description_length\"\
  : {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 1000,\n      \"description\": \"Maximum length of property description to extract\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty HTML content: Provide valid HTML content containing property information.\",\n    \"Unsupported website type: Use one of [zillow, realtor, redfin, apartments, custom].\",\n    \"Missing custom selectors: When website_type is 'custom', provide custom_selectors array.\",\n    \"Invalid selector format: Custom selectors must be valid CSS selector strings.\",\n    \"No property data found: HTML content does not contain recognizable property information.\"\n  ],\n  \"usage\": \"Provide html_content from a property listing and specify the website_type. For unsupported sites, use website_type='custom' with custom_selectors.\",\n  \"output_details\": {\n    \"property_id\": {\n      \"type\": \"string\",\n      \"description\": \"Unique identifier for the property listing\"\n    },\n    \"price\": {\n      \"type\": \"string\",\n      \"description\": \"Property price as extracted from the listing\"\n    },\n    \"bedrooms\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of bedrooms\"\n    },\n    \"bathrooms\": {\n      \"type\": \"number\",\n      \"description\": \"Number of bathrooms (can be decimal)\"\n    },\n    \"square_feet\": {\n      \"type\": \"integer\",\n      \"description\": \"Property size in square feet\"\n    },\n    \"property_type\": {\n      \"type\": \"string\",\n      \"description\": \"Type of property (house, apartment, condo, etc.)\"\n    },\n    \"address\": {\n      \"type\": \"string\",\n      \"description\": \"Full property address\"\n    },\n    \"description\": {\n      \"type\": \"string\",\n      \"description\": \"Property description text\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Image URL Extractor\",\n  \"tool_description\": \"Extracts and validates image URLs from property listing HTML content, filtering for property photos and removing thumbnails.\",\n  \"parameters\": {\n    \"html_content\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"HTML content containing property images\"\n    },\n    \"min_image_size\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 300,\n      \"description\": \"Minimum image dimension in pixels to include\"\n    },\n    \"max_images\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 20,\n      \"description\": \"Maximum number of images to extract\"\n    },\n    \"exclude_thumbnails\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to exclude thumbnail images\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty HTML content: Provide valid HTML content containing images.\",\n    \"Invalid size parameters: min_image_size must be positive integer, max_images must be between 1 and 100.\",\n    \"No images found: HTML content does not contain any valid image URLs.\"\n  ],\n  \"usage\": \"Provide html_content from property listings and configure filtering parameters. The tool will extract high-quality property image URLs.\",\n  \"output_details\": {\n    \"image_urls\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of extracted property image URLs\"\n    },\n    \"image_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of images extracted\"\n    },\n    \"thumbnails_filtered\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of thumbnail images that were filtered out\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Contact Info Extractor\",\n  \"tool_description\": \"Extracts contact information including phone numbers, email addresses, and agent details from property listing HTML.\",\n  \"parameters\": {\n    \"html_content\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"HTML content containing contact\
  \ information\"\n    },\n    \"extract_emails\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to extract email addresses\"\n    },\n    \"extract_phones\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to extract phone numbers\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty HTML content: Provide valid HTML content containing contact information.\",\n    \"No contact information found: HTML content does not contain recognizable contact details.\"\n  ],\n  \"usage\": \"Provide html_content from property listings and specify which contact information types to extract.\",\n  \"output_details\": {\n    \"agent_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the listing agent or contact person\"\n    },\n    \"phone_numbers\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of extracted phone numbers\"\n    },\n    \"email_addresses\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of extracted email addresses\"\n    },\n    \"agency_name\": {\n      \"type\": \"string\",\n      \"description\": \"Name of the real estate agency\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Price Format Standardizer\",\n  \"tool_description\": \"Standardizes property prices from various formats into consistent numerical values with currency codes.\",\n  \"parameters\": {\n    \"raw_prices\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of raw price strings in various formats\",\n      \"minItems\": 1\n    },\n    \"target_currency\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"USD\",\n      \"description\": \"Target currency code for standardization\"\n    },\n    \"remove_outliers\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to flag potential price outliers\"\n    },\n    \"handle_ranges\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"How to handle price ranges (use average if true, minimum if false)\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty price array: Provide at least one price string to standardize.\",\n    \"Invalid currency code: Use standard 3-letter currency codes like USD, EUR, GBP.\",\n    \"Unparseable price format: Some prices contain unrecognizable format or characters.\"\n  ],\n  \"usage\": \"Provide an array of raw price strings from property listings. The tool will convert them to standardized numerical values.\",\n  \"output_details\": {\n    \"standardized_prices\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Array of standardized price values\"\n    },\n    \"currency_code\": {\n      \"type\": \"string\",\n      \"description\": \"Currency code used for standardization\"\n    },\n    \"outlier_flags\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"boolean\"},\n      \"description\": \"Boolean array indicating potential outlier prices\"\n    },\n    \"parsing_errors\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of prices that could not be parsed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Address Geocoder\",\n  \"tool_description\": \"Converts property addresses to geographic coordinates and standardizes address formatting using geocoding services.\",\n  \"parameters\": {\n    \"addresses\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of property addresses to geocode\",\n      \"minItems\": 1,\n      \"maxItems\": 100\n    },\n    \"country_code\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"US\"\
  ,\n      \"description\": \"Country code to help with geocoding accuracy\"\n    },\n    \"include_timezone\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to include timezone information\"\n    },\n    \"geocoding_service\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"nominatim\",\n      \"description\": \"Geocoding service to use (nominatim, google, mapbox)\"\n    },\n    \"rate_limit_delay\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 1.0,\n      \"description\": \"Delay in seconds between geocoding requests\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty addresses array: Provide at least one address to geocode.\",\n    \"Too many addresses: Maximum 100 addresses can be processed in one request.\",\n    \"Invalid country code: Use standard ISO 3166-1 alpha-2 country codes.\",\n    \"Geocoding service unavailable: Selected geocoding service is not responding.\",\n    \"Rate limit exceeded: Reduce rate_limit_delay or try again later.\",\n    \"Address not found: Some addresses could not be geocoded to coordinates.\"\n  ],\n  \"usage\": \"Provide an array of property addresses to convert to coordinates. Configure geocoding_service and rate_limit_delay based on your service limits.\",\n  \"output_details\": {\n    \"coordinates\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of latitude,longitude coordinate pairs\"\n    },\n    \"standardized_addresses\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of standardized address formats\"\n    },\n    \"geocoding_confidence\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"number\"},\n      \"description\": \"Confidence scores for each geocoding result (0-1)\"\n    },\n    \"failed_addresses\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of addresses that could not be geocoded\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Property Deduplicator\",\n  \"tool_description\": \"Identifies and removes duplicate property listings from aggregated data using address matching, price comparison, and feature analysis.\",\n  \"parameters\": {\n    \"property_data\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of JSON strings containing property data\",\n      \"minItems\": 1\n    },\n    \"match_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.85,\n      \"description\": \"Similarity threshold for duplicate detection (0-1)\"\n    },\n    \"address_weight\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.4,\n      \"description\": \"Weight given to address matching in similarity score\"\n    },\n    \"price_weight\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.3,\n      \"description\": \"Weight given to price matching in similarity score\"\n    },\n    \"features_weight\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.3,\n      \"description\": \"Weight given to property features in similarity score\"\n    },\n    \"keep_newest\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to keep newest listing when duplicates found\"\n    },\n    \"price_tolerance\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 0.05,\n      \"description\": \"Price difference tolerance as percentage (e.g., 0.05 = 5%)\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty property data: Provide at least one property record to process.\",\n    \"Invalid JSON format: Property data must be valid JSON strings.\",\n    \"Invalid threshold: match_threshold must be between 0 and 1.\",\n    \"Invalid weights: All weight parameters must be between\
  \ 0 and 1 and should sum to 1.\",\n    \"Invalid price tolerance: price_tolerance must be between 0 and 1.\"\n  ],\n  \"usage\": \"Provide an array of property data as JSON strings. Configure matching weights and threshold based on your deduplication requirements.\",\n  \"output_details\": {\n    \"unique_properties\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of unique property records after deduplication\"\n    },\n    \"duplicates_removed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of duplicate properties that were removed\"\n    },\n    \"duplicate_groups\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Groups of properties that were identified as duplicates\"\n    },\n    \"final_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Final number of unique properties\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Quality Validator\",\n  \"tool_description\": \"Validates property data quality by checking for missing values, invalid formats, and data consistency across multiple fields.\",\n  \"parameters\": {\n    \"property_records\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of JSON property records to validate\",\n      \"minItems\": 1\n    },\n    \"required_fields\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"List of fields that must be present in each record\",\n      \"minItems\": 1\n    },\n    \"price_range_min\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 1000,\n      \"description\": \"Minimum acceptable price value\"\n    },\n    \"price_range_max\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 50000000,\n      \"description\": \"Maximum acceptable price value\"\n    },\n    \"check_coordinates\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to validate geographic coordinates\"\n    },\n    \"strict_validation\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to apply strict validation rules\"\n    },\n    \"allow_partial_records\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to accept records with some missing non-required fields\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty records array: Provide at least one property record to validate.\",\n    \"Invalid JSON format: Property records must be valid JSON strings.\",\n    \"Missing required fields: Specify at least one required field for validation.\",\n    \"Invalid price range: price_range_min must be less than price_range_max.\",\n    \"Validation configuration error: Check validation parameter combinations.\"\n  ],\n  \"usage\": \"Provide property records as JSON strings and specify required_fields. Configure validation rules based on your data quality requirements.\",\n  \"output_details\": {\n    \"valid_records\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of property records that passed validation\"\n    },\n    \"invalid_records\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Array of property records that failed validation\"\n    },\n    \"validation_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of validation results and issues found\"\n    },\n    \"error_counts\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"description\": \"Count of each type of validation error found\"\n    },\n    \"pass_rate\": {\n      \"type\": \"number\",\n      \"description\": \"Percentage of records that passed validation\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\"\
  : \"Rate Limit Manager\",\n  \"tool_description\": \"Manages request timing and rate limiting to comply with website scraping policies and avoid being blocked.\",\n  \"parameters\": {\n    \"requests_per_minute\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Maximum number of requests allowed per minute\"\n    },\n    \"burst_limit\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 5,\n      \"description\": \"Maximum number of requests allowed in quick succession\"\n    },\n    \"backoff_multiplier\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"default\": 2.0,\n      \"description\": \"Multiplier for delay increase when rate limited\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid rate limit: requests_per_minute must be a positive integer.\",\n    \"Invalid burst limit: burst_limit must be a positive integer less than or equal to requests_per_minute.\",\n    \"Invalid backoff multiplier: backoff_multiplier must be greater than 1.0.\"\n  ],\n  \"usage\": \"Configure rate limiting parameters based on target website policies. Call before each scraping request to get appropriate delay timing.\",\n  \"output_details\": {\n    \"delay_seconds\": {\n      \"type\": \"number\",\n      \"description\": \"Number of seconds to wait before next request\"\n    },\n    \"requests_remaining\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of requests remaining in current time window\"\n    },\n    \"reset_time\": {\n      \"type\": \"string\",\n      \"description\": \"Time when rate limit window resets\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Proxy Rotator\",\n  \"tool_description\": \"Manages proxy server rotation to distribute requests across multiple IP addresses and avoid detection.\",\n  \"parameters\": {\n    \"proxy_list\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of proxy server addresses (IP:PORT format)\",\n      \"minItems\": 1\n    },\n    \"rotation_strategy\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"round_robin\",\n      \"description\": \"Proxy rotation strategy (round_robin, random, weighted)\"\n    },\n    \"health_check\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": true,\n      \"description\": \"Whether to check proxy health before use\"\n    },\n    \"timeout_seconds\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"default\": 10,\n      \"description\": \"Timeout for proxy health checks\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty proxy list: Provide at least one proxy server address.\",\n    \"Invalid proxy format: Proxy addresses must be in IP:PORT format.\",\n    \"Invalid rotation strategy: Use one of [round_robin, random, weighted].\",\n    \"Health check failed: All proxies failed health check. Verify proxy list.\"\n  ],\n  \"usage\": \"Provide a list of proxy servers and configure rotation strategy. The tool will manage proxy selection and health monitoring.\",\n  \"output_details\": {\n    \"selected_proxy\": {\n      \"type\": \"string\",\n      \"description\": \"Currently selected proxy address\"\n    },\n    \"healthy_proxies\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of proxies that passed health check\"\n    },\n    \"next_rotation\": {\n      \"type\": \"string\",\n      \"description\": \"Time of next proxy rotation\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Data Aggregator\",\n  \"tool_description\": \"Combines property data from multiple sources into unified datasets with consistent schema and removes conflicts.\",\n  \"parameters\": {\n    \"data_sources\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": true,\n      \"description\": \"Array of JSON strings containing property data from different sources\",\n      \"minItems\"\
  : 1\n    },\n    \"source_priorities\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Priority order for resolving conflicting data between sources\"\n    },\n    \"merge_strategy\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"union\",\n      \"description\": \"Strategy for combining data (union, intersection, priority_based)\"\n    },\n    \"handle_conflicts\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"prefer_first\",\n      \"description\": \"How to handle conflicting values (prefer_first, prefer_last, average, manual)\"\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"json\",\n      \"description\": \"Output format for aggregated data (json, csv, xml)\"\n    }\n  },\n  \"error_messages\": [\n    \"Empty data sources: Provide at least one data source to aggregate.\",\n    \"Invalid JSON format: All data sources must contain valid JSON.\",\n    \"Invalid merge strategy: Use one of [union, intersection, priority_based].\",\n    \"Invalid conflict handling: Use one of [prefer_first, prefer_last, average, manual].\",\n    \"Invalid output format: Use one of [json, csv, xml].\",\n    \"Priority mismatch: Number of source_priorities must match number of data_sources.\"\n  ],\n  \"usage\": \"Provide multiple data sources as JSON strings and configure aggregation strategy. The tool will create a unified dataset.\",\n  \"output_details\": {\n    \"aggregated_data\": {\n      \"type\": \"string\",\n      \"description\": \"Unified property dataset in specified format\"\n    },\n    \"total_records\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of records in aggregated dataset\"\n    },\n    \"conflicts_resolved\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data conflicts that were resolved\"\n    },\n    \"sources_processed\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of data sources successfully processed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Export Formatter\",\n  \"tool_description\": \"Formats and exports property data to various file formats with customizable field selection and filtering options.\",\n  \"parameters\": {\n    \"property_data\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"JSON string containing property data to export\"\n    },\n    \"output_format\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Desired output format (csv, json, xml, excel, parquet)\"\n    },\n    \"selected_fields\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Specific fields to include in export (all fields if not specified)\"\n    },\n    \"sort_by\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Field name to sort results by\"\n    },\n    \"filter_criteria\": {\n      \"type\": \"array\",\n      \"items\": {\"type\": \"string\"},\n      \"required\": false,\n      \"default\": \"None\",\n      \"description\": \"Filter conditions in format field:operator:value\"\n    },\n    \"include_metadata\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"default\": false,\n      \"description\": \"Whether to"
