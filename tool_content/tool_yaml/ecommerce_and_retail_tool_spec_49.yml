field_name: ecommerce_and_retail
subfield: Payment Processing and Financial Transactions
task: Execute refunds, chargebacks, and payment dispute resolution
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to its high complexity across multiple dimensions: it involves intricate financial workflows with strict regulatory compliance, complex dispute resolution processes with multiple stakeholders, significant risk of financial loss from errors, and requires coordination between payment processors, banks, merchants, and customers with varying timelines and requirements.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to comprehensively cover payment dispute workflows, refund processing, chargeback management, compliance tracking, and resolution coordination.

  **STEP 3 — List all tool names and dependencies**

  1. **Payment Transaction Validator** - Consumes: transaction IDs, validation criteria → Produces: validation status, transaction details
  2. **Refund Request Processor** - Consumes: transaction details, refund amounts → Produces: refund authorization, processing status
  3. **Chargeback Notification Parser** - Consumes: chargeback notifications, raw data → Produces: structured chargeback data
  4. **Dispute Evidence Collector** - Consumes: transaction IDs, evidence types → Produces: compiled evidence packages
  5. **Payment Gateway Interface** - Consumes: gateway credentials, transaction operations → Produces: gateway responses, status updates
  6. **Compliance Rule Validator** - Consumes: transaction data, regulatory requirements → Produces: compliance status, violations
  7. **Customer Communication Generator** - Consumes: dispute details, templates → Produces: formatted communications
  8. **Chargeback Response Builder** - Consumes: evidence, dispute reason codes → Produces: formatted responses
  9. **Financial Impact Calculator** - Consumes: dispute amounts, fees → Produces: cost analysis, projections
  10. **Timeline Tracker** - Consumes: dispute dates, deadlines → Produces: schedule management, alerts
  11. **Document Verification Tool** - Consumes: evidence documents, verification criteria → Produces: verification results
  12. **Merchant Account Manager** - Consumes: merchant details, account operations → Produces: account status, configurations
  13. **Dispute Status Monitor** - Consumes: dispute IDs, tracking parameters → Produces: real-time status updates
  14. **Fraud Detection Analyzer** - Consumes: transaction patterns, fraud indicators → Produces: fraud risk assessments
  15. **Settlement Reconciliation Tool** - Consumes: settlement data, transaction records → Produces: reconciliation reports
  16. **Regulatory Reporting Generator** - Consumes: dispute data, reporting requirements → Produces: compliance reports
  17. **Escalation Manager** - Consumes: dispute complexity, escalation rules → Produces: escalation recommendations

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. Basic Refund Processing: Payment Transaction Validator → Refund Request Processor → Customer Communication Generator
  2. Chargeback Notification Handling: Chargeback Notification Parser → Timeline Tracker → Dispute Status Monitor

  **Medium Plans:**
  1. Standard Dispute Response: Chargeback Notification Parser → Dispute Evidence Collector → Document Verification Tool → Chargeback Response Builder → Payment Gateway Interface
  2. Fraud Chargeback Investigation: Payment Transaction Validator → Fraud Detection Analyzer → Dispute Evidence Collector → Compliance Rule Validator → Chargeback Response Builder

  **Complex Plans:**
  1. Full Dispute Resolution Workflow: Chargeback Notification Parser → Timeline Tracker → Dispute Evidence Collector → Document Verification Tool → Fraud Detection Analyzer → Compliance Rule Validator → Chargeback Response Builder → Payment Gateway Interface → Financial Impact Calculator → Customer Communication Generator → Dispute Status Monitor → Settlement Reconciliation Tool
  2. Comprehensive Compliance Management: Payment Transaction Validator → Compliance Rule Validator → Merchant Account Manager → Regulatory Reporting Generator → Escalation Manager → Timeline Tracker → Financial Impact Calculator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Payment Transaction Validator",
    "tool_description": "Validates payment transaction details and retrieves comprehensive transaction information for dispute processing.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the payment transaction"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "validation_type": {
        "type": "string",
        "required": false,
        "default": "basic",
        "description": "Type of validation: basic, comprehensive, or fraud_check"
      }
    },
    "error_messages": [
      "Transaction not found: The provided transaction_id does not exist in the system. Verify the transaction ID is correct and try again.",
      "Invalid merchant access: The merchant_id does not have permission to access this transaction. Ensure you're using the correct merchant credentials.",
      "Unsupported validation type: Use one of [basic, comprehensive, fraud_check]. Check the validation_type parameter spelling and capitalization."
    ],
    "usage": "Provide transaction_id and merchant_id to validate and retrieve transaction details. Optionally specify validation_type for different levels of verification depth.",
    "output_details": {
      "is_valid": {
        "type": "boolean",
        "description": "Whether the transaction is valid and accessible"
      },
      "transaction_amount": {
        "type": "number",
        "description": "Original transaction amount in cents"
      },
      "currency": {
        "type": "string",
        "description": "Three-letter currency code"
      },
      "transaction_date": {
        "type": "string",
        "description": "Transaction timestamp in ISO 8601 format"
      },
      "payment_method": {
        "type": "string",
        "description": "Payment method used (card, bank_transfer, etc.)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Refund Request Processor",
    "tool_description": "Processes refund requests for payment transactions with validation and authorization workflows.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Original transaction identifier for refund"
      },
      "refund_amount": {
        "type": "number",
        "required": true,
        "description": "Amount to refund in cents"
      },
      "refund_reason": {
        "type": "string",
        "required": true,
        "description": "Reason for refund: customer_request, duplicate, fraud, error, or chargeback_prevention"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "partial_refund": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether this is a partial refund"
      },
      "notify_customer": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to send customer notification"
      }
    },
    "error_messages": [
      "Refund amount exceeds original transaction: The refund_amount cannot exceed the original transaction amount. Verify the amount and ensure it's within acceptable limits.",
      "Transaction not refundable: The transaction status or age prevents refunding. Check if the transaction is settled and within the refund window.",
      "Invalid refund reason: Use one of [customer_request, duplicate, fraud, error, chargeback_prevention]. Ensure the reason code matches exactly.",
      "Insufficient merchant balance: The merchant account lacks sufficient funds for this refund. Check account balance and funding sources."
    ],
    "usage": "Provide transaction_id, refund_amount, refund_reason, and merchant_id to process a refund. Set partial_refund to true for partial amounts and notify_customer to control customer communications.",
    "output_details": {
      "refund_id": {
        "type": "string",
        "description": "Unique identifier for the refund transaction"
      },
      "status": {
        "type": "string",
        "description": "Refund processing status: pending, approved, rejected, or processing"
      },
      "estimated_completion": {
        "type": "string",
        "description": "Expected completion date in ISO 8601 format"
      },
      "fees_refunded": {
        "type": "number",
        "description": "Processing fees refunded in cents"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Chargeback Notification Parser",
    "tool_description": "Parses and structures incoming chargeback notifications from various payment networks and processors.",
    "parameters": {
      "notification_data": {
        "type": "string",
        "required": true,
        "description": "Raw chargeback notification data in JSON or XML format"
      },
      "processor_type": {
        "type": "string",
        "required": true,
        "description": "Payment processor: visa, mastercard, amex, discover, stripe, square, or paypal"
      },
      "notification_format": {
        "type": "string",
        "required": false,
        "default": "json",
        "description": "Format of notification data: json, xml, or csv"
      }
    },
    "error_messages": [
      "Invalid notification format: The notification_data cannot be parsed in the specified format. Verify the data structure and format parameter match.",
      "Unsupported processor: Use one of [visa, mastercard, amex, discover, stripe, square, paypal]. Check processor_type spelling and ensure it's supported.",
      "Missing required fields: The notification lacks mandatory chargeback fields like transaction ID or reason code. Ensure the notification is complete and properly formatted."
    ],
    "usage": "Provide raw notification_data and specify the processor_type to parse chargeback notifications into structured format. Set notification_format if different from JSON.",
    "output_details": {
      "chargeback_id": {
        "type": "string",
        "description": "Unique chargeback case identifier"
      },
      "original_transaction_id": {
        "type": "string",
        "description": "Associated transaction identifier"
      },
      "reason_code": {
        "type": "string",
        "description": "Chargeback reason code from card network"
      },
      "chargeback_amount": {
        "type": "number",
        "description": "Disputed amount in cents"
      },
      "due_date": {
        "type": "string",
        "description": "Response deadline in ISO 8601 format"
      },
      "case_type": {
        "type": "string",
        "description": "Type of chargeback case: retrieval, chargeback, or pre_arbitration"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Dispute Evidence Collector",
    "tool_description": "Collects and organizes evidence documents and data required for chargeback dispute responses.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Transaction identifier for evidence collection"
      },
      "chargeback_reason": {
        "type": "string",
        "required": true,
        "description": "Chargeback reason code requiring specific evidence types"
      },
      "evidence_types": {
        "type": "array",
        "required": true,
        "description": "Types of evidence to collect",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier"
      },
      "customer_id": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Customer identifier for personalized evidence"
      },
      "date_range_start": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Start date for evidence collection in ISO 8601 format"
      },
      "date_range_end": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "End date for evidence collection in ISO 8601 format"
      },
      "include_metadata": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include document metadata and timestamps"
      }
    },
    "error_messages": [
      "Evidence not found: Some requested evidence types are not available for this transaction. Review available evidence types and adjust the request accordingly.",
      "Invalid evidence type: One or more evidence_types are not recognized. Use valid evidence types like receipt, shipping_proof, authorization_proof, etc.",
      "Access denied: Insufficient permissions to collect evidence for this merchant or transaction. Verify merchant_id credentials and access rights.",
      "Date range invalid: The date_range_start must be before date_range_end, and both must be valid ISO 8601 dates. Check the date format and logical ordering."
    ],
    "usage": "Provide transaction_id, chargeback_reason, evidence_types array, and merchant_id to collect relevant dispute evidence. Optionally specify customer_id, date ranges, and metadata preferences.",
    "output_details": {
      "evidence_package_id": {
        "type": "string",
        "description": "Unique identifier for the collected evidence package"
      },
      "collected_evidence": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of successfully collected evidence document types"
      },
      "missing_evidence": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of requested evidence types that could not be found"
      },
      "evidence_strength": {
        "type": "string",
        "description": "Assessment of evidence quality: strong, moderate, or weak"
      },
      "total_documents": {
        "type": "integer",
        "description": "Total number of evidence documents collected"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Payment Gateway Interface",
    "tool_description": "Interfaces with payment gateway APIs to submit dispute responses, process refunds, and manage transaction states.",
    "parameters": {
      "gateway_provider": {
        "type": "string",
        "required": true,
        "description": "Payment gateway: stripe, square, paypal, authorize_net, braintree, or adyen"
      },
      "api_key": {
        "type": "string",
        "required": true,
        "description": "Gateway API authentication key"
      },
      "operation_type": {
        "type": "string",
        "required": true,
        "description": "Operation: submit_dispute_response, process_refund, update_transaction, or query_status"
      },
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Transaction identifier for the operation"
      },
      "payload_data": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "JSON string containing operation-specific data"
      },
      "environment": {
        "type": "string",
        "required": false,
        "default": "production",
        "description": "Gateway environment: production, sandbox, or test"
      }
    },
    "error_messages": [
      "Gateway authentication failed: Invalid API key or insufficient permissions. Verify the api_key is correct and has required scope for the operation.",
      "Unsupported gateway: Use one of [stripe, square, paypal, authorize_net, braintree, adyen]. Ensure gateway_provider is spelled correctly.",
      "Invalid operation: Use one of [submit_dispute_response, process_refund, update_transaction, query_status]. Check operation_type parameter.",
      "Gateway API error: The payment gateway returned an error response. Review payload_data format and ensure all required fields are provided.",
      "Rate limit exceeded: Too many requests to the gateway API. Implement exponential backoff and retry the operation after the specified delay."
    ],
    "usage": "Provide gateway_provider, api_key, operation_type, and transaction_id to interact with payment gateways. Include payload_data for operations requiring additional parameters.",
    "output_details": {
      "operation_success": {
        "type": "boolean",
        "description": "Whether the gateway operation completed successfully"
      },
      "gateway_response": {
        "type": "string",
        "description": "Raw response from payment gateway API"
      },
      "operation_id": {
        "type": "string",
        "description": "Gateway-specific operation identifier for tracking"
      },
      "status_code": {
        "type": "integer",
        "description": "HTTP status code from gateway response"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Rule Validator",
    "tool_description": "Validates payment disputes and transactions against regulatory compliance requirements and industry standards.",
    "parameters": {
      "transaction_data": {
        "type": "string",
        "required": true,
        "description": "JSON string containing transaction details for validation"
      },
      "compliance_frameworks": {
        "type": "array",
        "required": true,
        "description": "Regulatory frameworks to validate against",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Legal jurisdiction: US, EU, UK, CA, AU, or international"
      },
      "merchant_category": {
        "type": "string",
        "required": true,
        "description": "Merchant category code for industry-specific rules"
      },
      "validation_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Validation depth: basic, standard, or comprehensive"
      }
    },
    "error_messages": [
      "Invalid transaction data: The transaction_data JSON is malformed or missing required fields. Ensure proper JSON formatting and include all mandatory transaction details.",
      "Unsupported compliance framework: One or more frameworks in compliance_frameworks are not recognized. Use valid frameworks like PCI-DSS, GDPR, PSD2, etc.",
      "Invalid jurisdiction: Use one of [US, EU, UK, CA, AU, international]. Ensure jurisdiction matches the merchant's operating region.",
      "Unknown merchant category: The merchant_category code is not recognized. Provide a valid MCC (Merchant Category Code) for proper rule application."
    ],
    "usage": "Provide transaction_data as JSON string, specify compliance_frameworks array, jurisdiction, and merchant_category to validate regulatory compliance. Adjust validation_level for different audit depths.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status: compliant, non_compliant, or warning"
      },
      "violations_found": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of compliance violations detected"
      },
      "risk_score": {
        "type": "integer",
        "description": "Compliance risk score from 0 (low risk) to 100 (high risk)"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended actions to address compliance issues"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Customer Communication Generator",
    "tool_description": "Generates customer-facing communications for dispute resolution, refund notifications, and chargeback updates.",
    "parameters": {
      "communication_type": {
        "type": "string",
        "required": true,
        "description": "Type of communication: refund_notification, dispute_update, chargeback_resolved, or investigation_started"
      },
      "customer_email": {
        "type": "string",
        "required": true,
        "description": "Customer's email address"
      },
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Related transaction identifier"
      },
      "template_language": {
        "type": "string",
        "required": false,
        "default": "en",
        "description": "Communication language code (en, es, fr, de, etc.)"
      },
      "personalization_data": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "JSON string with customer-specific data for personalization"
      }
    },
    "error_messages": [
      "Invalid communication type: Use one of [refund_notification, dispute_update, chargeback_resolved, investigation_started]. Check the communication_type parameter spelling.",
      "Invalid email format: The customer_email must be a valid email address format. Verify the email syntax and domain structure.",
      "Unsupported language: The template_language is not available. Use supported language codes or default to 'en' for English.",
      "Personalization data error: The personalization_data JSON is malformed. Ensure proper JSON formatting for customer-specific variables."
    ],
    "usage": "Specify communication_type, customer_email, and transaction_id to generate appropriate customer communications. Optionally provide template_language and personalization_data for customized messaging.",
    "output_details": {
      "email_subject": {
        "type": "string",
        "description": "Generated email subject line"
      },
      "email_body": {
        "type": "string",
        "description": "Complete email body content"
      },
      "communication_id": {
        "type": "string",
        "description": "Unique identifier for tracking this communication"
      },
      "delivery_status": {
        "type": "string",
        "description": "Delivery status: queued, sent, or failed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Chargeback Response Builder",
    "tool_description": "Constructs formatted chargeback dispute responses with evidence attachments for submission to card networks.",
    "parameters": {
      "chargeback_id": {
        "type": "string",
        "required": true,
        "description": "Chargeback case identifier"
      },
      "reason_code": {
        "type": "string",
        "required": true,
        "description": "Chargeback reason code from card network"
      },
      "evidence_package_id": {
        "type": "string",
        "required": true,
        "description": "Evidence package identifier from evidence collector"
      },
      "response_strategy": {
        "type": "string",
        "required": true,
        "description": "Response approach: accept_liability, dispute_with_evidence, or partial_refund"
      },
      "merchant_statement": {
        "type": "string",
        "required": false,
        "default": "None",
        "description": "Custom merchant statement for the response"
      },
      "submission_deadline": {
        "type": "string",
        "required": true,
        "description": "Response deadline in ISO 8601 format"
      },
      "card_network": {
        "type": "string",
        "required": true,
        "description": "Card network: visa, mastercard, amex, or discover"
      },
      "auto_submit": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to automatically submit the response"
      },
      "liability_shift_request": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to request liability shift to issuer"
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "default": "normal",
        "description": "Processing priority: low, normal, or high"
      }
    },
    "error_messages": [
      "Evidence package not found: The evidence_package_id does not exist or is not accessible. Verify the package ID and ensure evidence collection completed successfully.",
      "Invalid response strategy: Use one of [accept_liability, dispute_with_evidence, partial_refund]. Ensure the strategy aligns with available evidence strength.",
      "Deadline passed: The submission_deadline has already passed. Chargeback responses cannot be submitted after the deadline.",
      "Unsupported card network: Use one of [visa, mastercard, amex, discover]. Verify the card_network parameter matches the chargeback source.",
      "Insufficient evidence: The selected evidence package lacks required documentation for the chosen response_strategy. Collect additional evidence or adjust strategy."
    ],
    "usage": "Provide chargeback_id, reason_code, evidence_package_id, response_strategy, submission_deadline, and card_network to build dispute responses. Optionally include merchant_statement and configure auto_submit preferences.",
    "output_details": {
      "response_id": {
        "type": "string",
        "description": "Unique identifier for the generated response"
      },
      "formatted_response": {
        "type": "string",
        "description": "Complete formatted response ready for submission"
      },
      "evidence_count": {
        "type": "integer",
        "description": "Number of evidence documents included"
      },
      "submission_status": {
        "type": "string",
        "description": "Response status: draft, ready, submitted, or rejected"
      },
      "win_probability": {
        "type": "number",
        "description": "Estimated probability of successful dispute resolution (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Financial Impact Calculator",
    "tool_description": "Calculates comprehensive financial impact of chargebacks, refunds, and dispute resolution activities including fees and projections.",
    "parameters": {
      "calculation_type": {
        "type": "string",
        "required": true,
        "description": "Type of calculation: single_dispute, monthly_summary, or annual_projection"
      },
      "dispute_amount": {
        "type": "number",
        "required": true,
        "description": "Primary dispute amount in cents"
      },
      "merchant_id": {
        "type": "string",
        "required": true,
        "description": "Merchant account identifier for fee structure"
      },
      "chargeback_fee": {
        "type": "number",
        "required": false,
        "default": 1500,
        "description": "Chargeback processing fee in cents"
      },
      "dispute_resolution_cost": {
        "type": "number",
        "required": false,
        "default": 2000,
        "description": "Internal cost of dispute resolution in cents"
      }
    },
    "error_messages": [
      "Invalid calculation type: Use one of [single_dispute, monthly_summary, annual_projection]. Verify the calculation_type parameter spelling.",
      "Negative amounts not allowed: dispute_amount, chargeback_fee, and dispute_resolution_cost must be positive values. Check all monetary parameters.",
      "Merchant not found: The merchant_id does not exist in the system. Verify the merchant identifier and ensure account access."
    ],
    "usage": "Specify calculation_type, dispute_amount, and merchant_id to calculate financial impact. Optionally adjust chargeback_fee and dispute_resolution_cost for accurate cost modeling.",
    "output_details": {
      "total_financial_impact": {
        "type": "number",
        "description": "Total calculated financial impact in cents"
      },
      "breakdown_fees": {
        "type": "number",
        "description": "Sum of all processing fees in cents"
      },
      "lost_revenue": {
        "type": "number",
        "description": "Revenue lost from disputed transactions in cents"
      },
      "recovery_probability": {
        "type": "number",
        "description": "Estimated probability of recovering disputed amount (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Timeline Tracker",
    "tool_description": "Tracks dispute resolution timelines, deadlines, and milestone progress for chargeback cases.",
    "parameters": {
      "case_id": {
        "type": "string",
        "required": true,
        "description": "Dispute or chargeback case identifier"
      },
      "case_type": {
        "type": "string",
        "required": true,
        "description": "Type of case: chargeback, retrieval_request, pre_arbitration, or arbitration"
      },
      "initial_date": {
        "type": "string",
        "required": true,
        "description": "Case initiation date in ISO 8601 format"
      },
      "response_deadline": {
        "type": "string",
        "required": true,
        "description": "Response deadline in ISO 8601 format"
      },
      "card_network": {
        "type": "string",
        "required": true,
        "description": "Card network with specific timeline rules: visa, mastercard, amex, or discover"
      }
    },
    "error_messages": [
      "Invalid case type: Use one of [chargeback, retrieval_request, pre_arbitration, arbitration]. Check case_type parameter spelling and ensure it matches the actual case.",
      "Invalid date format: initial_date and response_deadline must be valid ISO 8601 date-time strings. Verify date formatting and ensure logical chronological order.",
      "Deadline in past: The response_deadline has already passed. Timeline tracking requires future deadlines for effective case management.",
      "Unsupported card network: Use one of [visa, mastercard, amex, discover]. Different networks have varying timeline requirements and milestone definitions."
    ],
    "usage": "Provide case_id, case_type, initial_date, response_deadline, and card_network to track dispute timelines. The tool monitors progress and provides deadline alerts.",
    "output_details": {
      "days_remaining": {
        "type": "integer",
        "description": "Number of days until response deadline"
      },
      "timeline_status": {
        "type": "string",
        "description": "Current timeline status: on_track, at_risk, or overdue"
      },
      "next_milestone": {
        "type": "string",
        "description": "Description of the next required action or milestone"
      },
      "urgency_level": {
        "type": "string",
        "description": "Case urgency based on timeline: low, medium, high, or critical"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Document Verification Tool",
    "tool_description": "Verifies authenticity and completeness of evidence documents for dispute resolution processes.",
    "parameters": {
      "document_urls": {
        "type": "array",
        "required": true,
        "description": "URLs or paths to documents for verification",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "verification_criteria": {
        "type": "array",
        "required": true,
        "description": "Verification checks to perform",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 15
      },
      "document_types": {
        "type": "array",
        "required": true,
        "description": "Expected document types for each URL",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "quality_threshold": {
        "type": "number",
        "required": false,
        "default": 0.8,
        "description": "Minimum quality score for verification (0.0-1.0)"
