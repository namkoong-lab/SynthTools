field_name: healthcare_medical
subfield: Electronic Health Records Management
task: Medical history documentation and clinical note entry
tool_description: |-
  STEP 1 — Rate task difficulty

  This task has medium difficulty. While individual documentation actions are straightforward, the scope involves multiple clinical workflows (patient encounters, diagnoses, treatments, follow-ups), requires coordination between different types of medical data, and has high impact from errors that could affect patient care and legal compliance.

  STEP 2 — Set a tool budget

  Given the medium complexity, I'll target 12 tools to cover the various aspects of medical documentation, clinical note entry, data validation, and EHR workflow management.

  STEP 3 — List all tool names with dependencies and affordances

  1. **Patient_Record_Initializer** - Consumes: patient demographics → Produces: new patient record structure
  2. **Clinical_Note_Entry** - Consumes: encounter details, provider info → Produces: structured clinical notes
  3. **Diagnosis_Code_Validator** - Consumes: diagnosis descriptions → Produces: validated ICD-10 codes
  4. **Medication_Entry_Manager** - Consumes: medication details → Produces: structured medication records
  5. **Vital_Signs_Recorder** - Consumes: vital measurements → Produces: timestamped vital signs data
  6. **Medical_History_Compiler** - Consumes: historical data points → Produces: comprehensive medical history
  7. **Allergy_Alert_Manager** - Consumes: allergy information → Produces: allergy alerts and contraindications
  8. **Procedure_Documentation_Tool** - Consumes: procedure details → Produces: coded procedure records
  9. **Clinical_Assessment_Builder** - Consumes: symptoms, observations → Produces: structured assessments
  10. **Treatment_Plan_Generator** - Consumes: diagnoses, patient factors → Produces: treatment recommendations
  11. **Documentation_Quality_Checker** - Consumes: clinical notes → Produces: quality scores and compliance flags
  12. **EHR_Data_Synchronizer** - Consumes: various record components → Produces: synchronized EHR entries

  STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Patient Registration**: Patient_Record_Initializer → Allergy_Alert_Manager → Vital_Signs_Recorder
  2. **Medication Review**: Medication_Entry_Manager → Allergy_Alert_Manager → Documentation_Quality_Checker

  **Medium Plans:**
  1. **Routine Visit Documentation**: Patient_Record_Initializer → Vital_Signs_Recorder → Clinical_Note_Entry → Diagnosis_Code_Validator → Treatment_Plan_Generator → EHR_Data_Synchronizer
  2. **Comprehensive Assessment**: Medical_History_Compiler → Clinical_Assessment_Builder → Diagnosis_Code_Validator → Procedure_Documentation_Tool → Documentation_Quality_Checker

  **Complex Plans:**
  1. **Complete New Patient Workup**: Patient_Record_Initializer → Medical_History_Compiler → Allergy_Alert_Manager → Vital_Signs_Recorder → Clinical_Assessment_Builder → Diagnosis_Code_Validator → Treatment_Plan_Generator → Medication_Entry_Manager → Procedure_Documentation_Tool → Clinical_Note_Entry → Documentation_Quality_Checker → EHR_Data_Synchronizer
  2. **Emergency Department Visit**: Patient_Record_Initializer → Vital_Signs_Recorder → Allergy_Alert_Manager → Clinical_Assessment_Builder → Diagnosis_Code_Validator → Treatment_Plan_Generator → Procedure_Documentation_Tool → Medication_Entry_Manager → Clinical_Note_Entry → EHR_Data_Synchronizer

  STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Patient_Record_Initializer",
    "tool_description": "Creates a new patient record structure with demographic information, medical record number assignment, and basic administrative data entry for EHR systems.",
    "parameters": {
      "first_name": {
        "type": "string",
        "required": true,
        "description": "Patient's first name"
      },
      "last_name": {
        "type": "string",
        "required": true,
        "description": "Patient's last name"
      },
      "date_of_birth": {
        "type": "string",
        "required": true,
        "description": "Patient's date of birth",
        "format": "date-time"
      },
      "gender": {
        "type": "string",
        "required": true,
        "description": "Patient's gender (male, female, other, unknown)"
      },
      "insurance_id": {
        "type": "string",
        "required": false,
        "description": "Insurance identification number",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid name format: First and last names must contain only letters, spaces, hyphens, and apostrophes.",
      "Invalid date of birth: Must be a valid date in the past using ISO 8601 format.",
      "Invalid gender specification: Must be one of [male, female, other, unknown].",
      "Insurance ID format error: Insurance ID must be alphanumeric and between 6-20 characters if provided."
    ],
    "usage": "Provide patient demographics including first_name, last_name, date_of_birth, and gender. Optionally include insurance_id. The tool creates a structured patient record with generated medical record number.",
    "output_details": {
      "medical_record_number": {
        "type": "string",
        "description": "Unique identifier assigned to the patient record"
      },
      "patient_id": {
        "type": "string",
        "description": "System-generated patient identifier"
      },
      "record_status": {
        "type": "string",
        "description": "Current status of the patient record (active, inactive, pending)"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "Date and time when the record was created",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clinical_Note_Entry",
    "tool_description": "Captures structured clinical notes during patient encounters, including chief complaint, history of present illness, physical examination findings, and provider assessments.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "provider_id": {
        "type": "string",
        "required": true,
        "description": "Healthcare provider identifier"
      },
      "encounter_date": {
        "type": "string",
        "required": true,
        "description": "Date and time of the clinical encounter",
        "format": "date-time"
      },
      "chief_complaint": {
        "type": "string",
        "required": true,
        "description": "Primary reason for the patient's visit"
      },
      "history_present_illness": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the current medical issue"
      },
      "physical_examination": {
        "type": "string",
        "required": true,
        "description": "Physical examination findings"
      },
      "assessment": {
        "type": "string",
        "required": true,
        "description": "Clinical assessment and impression"
      },
      "plan": {
        "type": "string",
        "required": true,
        "description": "Treatment plan and next steps"
      },
      "encounter_type": {
        "type": "string",
        "required": false,
        "description": "Type of encounter (office_visit, emergency, inpatient, telehealth)",
        "default": "office_visit"
      },
      "note_template": {
        "type": "string",
        "required": false,
        "description": "Template type for note structure (soap, hpi, consultation)",
        "default": "soap"
      }
    },
    "error_messages": [
      "Missing required field: All required clinical note sections must be completed.",
      "Invalid patient or provider ID: Identifiers must be valid and exist in the system.",
      "Invalid encounter date: Date must be in valid ISO 8601 format and not in the future.",
      "Invalid encounter type: Must be one of [office_visit, emergency, inpatient, telehealth].",
      "Invalid note template: Must be one of [soap, hpi, consultation].",
      "Text length exceeded: Clinical note sections must be between 10 and 5000 characters."
    ],
    "usage": "Provide patient_id, provider_id, encounter_date, and all required clinical note sections (chief_complaint, history_present_illness, physical_examination, assessment, plan). Optionally specify encounter_type and note_template.",
    "output_details": {
      "note_id": {
        "type": "string",
        "description": "Unique identifier for the clinical note"
      },
      "note_status": {
        "type": "string",
        "description": "Status of the note (draft, final, amended)"
      },
      "word_count": {
        "type": "integer",
        "description": "Total word count of the clinical note"
      },
      "completion_timestamp": {
        "type": "string",
        "description": "Date and time when the note was completed",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Diagnosis_Code_Validator",
    "tool_description": "Validates and converts diagnostic descriptions into standardized ICD-10 codes, ensuring proper medical coding compliance and accuracy for billing and documentation.",
    "parameters": {
      "diagnosis_description": {
        "type": "string",
        "required": true,
        "description": "Clinical description of the diagnosis"
      },
      "diagnosis_type": {
        "type": "string",
        "required": true,
        "description": "Type of diagnosis (primary, secondary, rule_out, differential)"
      },
      "specialty": {
        "type": "string",
        "required": false,
        "description": "Medical specialty context for coding accuracy",
        "default": "general_medicine"
      }
    },
    "error_messages": [
      "Invalid diagnosis description: Description must be medically relevant and between 3-200 characters.",
      "Invalid diagnosis type: Must be one of [primary, secondary, rule_out, differential].",
      "Unknown specialty: Specialty must be a recognized medical specialty or general_medicine.",
      "No matching ICD-10 code found: The diagnosis description cannot be mapped to a valid ICD-10 code."
    ],
    "usage": "Provide diagnosis_description and diagnosis_type. Optionally specify medical specialty for more accurate coding. The tool returns validated ICD-10 codes with confidence scores.",
    "output_details": {
      "icd10_code": {
        "type": "string",
        "description": "Primary ICD-10 code for the diagnosis"
      },
      "icd10_description": {
        "type": "string",
        "description": "Official ICD-10 code description"
      },
      "confidence_score": {
        "type": "number",
        "description": "Confidence level of the code match (0.0 to 1.0)"
      },
      "alternative_codes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of alternative ICD-10 codes that may apply"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medication_Entry_Manager",
    "tool_description": "Manages medication entries in patient records, including prescription details, dosage information, drug interactions checking, and medication reconciliation for comprehensive medication management.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "medication_name": {
        "type": "string",
        "required": true,
        "description": "Generic or brand name of the medication"
      },
      "dosage": {
        "type": "string",
        "required": true,
        "description": "Medication dosage (e.g., 10mg, 500mg)"
      },
      "frequency": {
        "type": "string",
        "required": true,
        "description": "Frequency of administration (e.g., once daily, twice daily, as needed)"
      },
      "route": {
        "type": "string",
        "required": true,
        "description": "Route of administration (oral, IV, IM, topical, etc.)"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Date medication was started",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": false,
        "description": "Date medication should be discontinued",
        "format": "date-time",
        "default": "None"
      },
      "prescriber_id": {
        "type": "string",
        "required": true,
        "description": "Healthcare provider who prescribed the medication"
      },
      "indication": {
        "type": "string",
        "required": false,
        "description": "Medical reason for prescribing the medication",
        "default": "None"
      },
      "quantity": {
        "type": "integer",
        "required": false,
        "description": "Quantity prescribed (number of pills, ml, etc.)",
        "default": "None"
      },
      "refills": {
        "type": "integer",
        "required": false,
        "description": "Number of refills authorized",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid patient or prescriber ID: Identifiers must exist in the system.",
      "Medication not found: The specified medication name is not recognized in the drug database.",
      "Invalid dosage format: Dosage must include amount and unit (e.g., 10mg, 500ml).",
      "Invalid frequency: Frequency must be a recognized dosing schedule.",
      "Invalid route: Route must be a valid administration method.",
      "Invalid date range: Start date must be before end date, and dates must be in valid ISO 8601 format.",
      "Drug interaction detected: This medication may interact with existing patient medications.",
      "Allergy conflict: Patient has a documented allergy to this medication or drug class."
    ],
    "usage": "Provide patient_id, medication details (name, dosage, frequency, route), start_date, and prescriber_id. Optionally include end_date, indication, quantity, and refills. The tool checks for interactions and allergies.",
    "output_details": {
      "medication_id": {
        "type": "string",
        "description": "Unique identifier for this medication entry"
      },
      "drug_interactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of potential drug interactions detected"
      },
      "allergy_alerts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of allergy conflicts identified"
      },
      "status": {
        "type": "string",
        "description": "Medication status (active, completed, discontinued, on_hold)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vital_Signs_Recorder",
    "tool_description": "Records and validates patient vital signs measurements with automatic flagging of abnormal values and trending analysis for clinical monitoring.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "measurement_datetime": {
        "type": "string",
        "required": true,
        "description": "Date and time when vitals were measured",
        "format": "date-time"
      },
      "systolic_bp": {
        "type": "integer",
        "required": false,
        "description": "Systolic blood pressure in mmHg",
        "default": "None"
      },
      "diastolic_bp": {
        "type": "integer",
        "required": false,
        "description": "Diastolic blood pressure in mmHg",
        "default": "None"
      },
      "heart_rate": {
        "type": "integer",
        "required": false,
        "description": "Heart rate in beats per minute",
        "default": "None"
      },
      "temperature": {
        "type": "number",
        "required": false,
        "description": "Body temperature in Fahrenheit",
        "default": "None"
      },
      "respiratory_rate": {
        "type": "integer",
        "required": false,
        "description": "Respiratory rate in breaths per minute",
        "default": "None"
      },
      "oxygen_saturation": {
        "type": "integer",
        "required": false,
        "description": "Oxygen saturation percentage",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid patient ID: Patient identifier must exist in the system.",
      "Invalid measurement datetime: Must be valid ISO 8601 format and not in the future.",
      "Vital signs out of range: Blood pressure must be 50-300 mmHg, heart rate 20-300 bpm, temperature 90-110°F, respiratory rate 5-60 bpm, oxygen saturation 50-100%.",
      "No vital signs provided: At least one vital sign measurement must be included.",
      "Blood pressure incomplete: If providing blood pressure, both systolic and diastolic values are required."
    ],
    "usage": "Provide patient_id and measurement_datetime, then include at least one vital sign measurement. Blood pressure requires both systolic and diastolic values. The tool validates ranges and flags abnormal values.",
    "output_details": {
      "vital_signs_id": {
        "type": "string",
        "description": "Unique identifier for this vital signs record"
      },
      "abnormal_flags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of vital signs flagged as abnormal"
      },
      "critical_alerts": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of critical values requiring immediate attention"
      },
      "trend_analysis": {
        "type": "string",
        "description": "Summary of trending patterns compared to previous measurements"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Medical_History_Compiler",
    "tool_description": "Compiles comprehensive medical history from various sources including past illnesses, surgeries, family history, social history, and review of systems into a structured format.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "past_medical_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of past medical conditions and illnesses",
        "default": "None"
      },
      "surgical_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of previous surgeries with dates",
        "default": "None"
      },
      "family_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Significant family medical history",
        "default": "None"
      },
      "social_history_smoking": {
        "type": "string",
        "required": false,
        "description": "Smoking history (never, former, current)",
        "default": "unknown"
      },
      "social_history_alcohol": {
        "type": "string",
        "required": false,
        "description": "Alcohol use history",
        "default": "unknown"
      },
      "occupation": {
        "type": "string",
        "required": false,
        "description": "Patient's occupation",
        "default": "None"
      },
      "review_of_systems": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Review of systems findings",
        "default": "None"
      },
      "immunizations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Immunization history",
        "default": "None"
      },
      "hospitalizations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Previous hospitalizations",
        "default": "None"
      },
      "emergency_contact": {
        "type": "string",
        "required": false,
        "description": "Emergency contact information",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid patient ID: Patient identifier must exist in the system.",
      "Invalid smoking history: Must be one of [never, former, current, unknown].",
      "History entry too long: Individual history entries must be less than 500 characters.",
      "Invalid array format: History arrays must contain string entries only.",
      "Duplicate history entries: Remove duplicate entries within the same history category."
    ],
    "usage": "Provide patient_id and any combination of medical history components. All parameters except patient_id are optional. The tool compiles available information into a structured medical history document.",
    "output_details": {
      "history_id": {
        "type": "string",
        "description": "Unique identifier for the compiled medical history"
      },
      "completeness_score": {
        "type": "number",
        "description": "Percentage score indicating completeness of medical history (0.0 to 1.0)"
      },
      "missing_elements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of medical history components not provided"
      },
      "last_updated": {
        "type": "string",
        "description": "Timestamp of when the medical history was compiled",
        "format": "date-time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Allergy_Alert_Manager",
    "tool_description": "Manages patient allergy information, creates allergy alerts, and checks for contraindications with medications and procedures to prevent adverse reactions.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "allergen": {
        "type": "string",
        "required": true,
        "description": "Substance causing the allergic reaction"
      },
      "reaction_type": {
        "type": "string",
        "required": true,
        "description": "Type of allergic reaction (mild, moderate, severe, anaphylaxis)"
      },
      "reaction_description": {
        "type": "string",
        "required": false,
        "description": "Detailed description of the allergic reaction",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid patient ID: Patient identifier must exist in the system.",
      "Invalid allergen format: Allergen name must be between 2-100 characters and medically relevant.",
      "Invalid reaction type: Must be one of [mild, moderate, severe, anaphylaxis].",
      "Duplicate allergy entry: This allergy already exists for the patient.",
      "Description too long: Reaction description must be less than 1000 characters."
    ],
    "usage": "Provide patient_id, allergen name, and reaction_type. Optionally include reaction_description for more detailed documentation. The tool creates allergy alerts and checks for contraindications.",
    "output_details": {
      "allergy_id": {
        "type": "string",
        "description": "Unique identifier for the allergy record"
      },
      "alert_level": {
        "type": "string",
        "description": "Priority level of the allergy alert (low, medium, high, critical)"
      },
      "contraindicated_medications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of medications contraindicated due to this allergy"
      },
      "cross_reactions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of substances with potential cross-reactions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Procedure_Documentation_Tool",
    "tool_description": "Documents medical procedures performed on patients with appropriate CPT coding, procedure details, outcomes, and complications for comprehensive procedure tracking.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "procedure_name": {
        "type": "string",
        "required": true,
        "description": "Name or description of the procedure performed"
      },
      "procedure_date": {
        "type": "string",
        "required": true,
        "description": "Date and time when procedure was performed",
        "format": "date-time"
      },
      "performing_provider": {
        "type": "string",
        "required": true,
        "description": "Healthcare provider who performed the procedure"
      },
      "procedure_location": {
        "type": "string",
        "required": true,
        "description": "Location where procedure was performed (OR, clinic, bedside, etc.)"
      },
      "anesthesia_type": {
        "type": "string",
        "required": false,
        "description": "Type of anesthesia used (local, general, regional, none)",
        "default": "none"
      },
      "procedure_notes": {
        "type": "string",
        "required": false,
        "description": "Detailed procedure notes and findings",
        "default": "None"
      },
      "complications": {
        "type": "string",
        "required": false,
        "description": "Any complications encountered during the procedure",
        "default": "none"
      },
      "estimated_duration": {
        "type": "integer",
        "required": false,
        "description": "Estimated duration of procedure in minutes",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid patient or provider ID: Identifiers must exist in the system.",
      "Invalid procedure date: Date must be in valid ISO 8601 format and not in the future.",
      "Procedure name too short: Procedure name must be at least 5 characters and medically relevant.",
      "Invalid anesthesia type: Must be one of [local, general, regional, none].",
      "Procedure notes too long: Procedure notes must be less than 5000 characters.",
      "Invalid duration: Duration must be a positive integer representing minutes.",
      "Location not recognized: Procedure location must be a valid clinical area."
    ],
    "usage": "Provide patient_id, procedure_name, procedure_date, performing_provider, and procedure_location. Optionally include anesthesia_type, procedure_notes, complications, and estimated_duration for comprehensive documentation.",
    "output_details": {
      "procedure_id": {
        "type": "string",
        "description": "Unique identifier for the procedure record"
      },
      "cpt_code": {
        "type": "string",
        "description": "Appropriate CPT code for the procedure"
      },
      "billing_eligible": {
        "type": "boolean",
        "description": "Whether the procedure is eligible for billing"
      },
      "follow_up_required": {
        "type": "boolean",
        "description": "Whether follow-up care is recommended"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Clinical_Assessment_Builder",
    "tool_description": "Builds structured clinical assessments by organizing symptoms, physical findings, diagnostic test results, and clinical reasoning into comprehensive patient evaluations.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "symptoms": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of patient-reported symptoms",
        "minItems": 1
      },
      "physical_findings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Physical examination findings",
        "default": "None"
      },
      "diagnostic_results": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Laboratory and diagnostic test results",
        "default": "None"
      },
      "assessment_type": {
        "type": "string",
        "required": false,
        "description": "Type of clinical assessment (initial, follow_up, consultation, emergency)",
        "default": "initial"
      }
    },
    "error_messages": [
      "Invalid patient ID: Patient identifier must exist in the system.",
      "No symptoms provided: At least one symptom must be documented.",
      "Invalid symptom format: Symptoms must be medically relevant descriptions.",
      "Invalid assessment type: Must be one of [initial, follow_up, consultation, emergency].",
      "Findings too detailed: Individual findings must be less than 500 characters."
    ],
    "usage": "Provide patient_id and symptoms array. Optionally include physical_findings, diagnostic_results, and assessment_type. The tool organizes information into a structured clinical assessment.",
    "output_details": {
      "assessment_id": {
        "type": "string",
        "description": "Unique identifier for the clinical assessment"
      },
      "differential_diagnoses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of potential differential diagnoses based on assessment"
      },
      "recommended_tests": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended diagnostic tests or procedures"
      },
      "severity_level": {
        "type": "string",
        "description": "Overall severity assessment (mild, moderate, severe, critical)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Treatment_Plan_Generator",
    "tool_description": "Generates evidence-based treatment plans incorporating patient diagnoses, medical history, allergies, and current medications to provide comprehensive care recommendations.",
    "parameters": {
      "patient_id": {
        "type": "string",
        "required": true,
        "description": "Unique patient identifier"
      },
      "primary_diagnosis": {
        "type": "string",
        "required": true,
        "description": "Primary diagnosis for treatment planning"
      },
      "secondary_diagnoses": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Secondary diagnoses affecting treatment",
        "default": "None"
      },
      "treatment_goals": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Specific treatment objectives",
        "minItems": 1
      },
      "patient_preferences": {
        "type": "string",
        "require
