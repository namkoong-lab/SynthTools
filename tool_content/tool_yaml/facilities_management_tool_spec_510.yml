field_name: facilities_management
subfield: Building Maintenance and Repair
task: Schedule and track preventive maintenance activities for building systems and equipment
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **medium** difficulty. It involves coordinating multiple building systems, managing dependencies between maintenance activities, tracking equipment lifecycles, and ensuring compliance with safety regulations. The scope includes HVAC, electrical, plumbing, fire safety, and structural systems, with moderate complexity in scheduling optimization and resource allocation.

  **STEP 2 — Set a tool budget**

  Based on medium difficulty, I'm targeting **12 tools** to cover asset management, scheduling, work order management, compliance tracking, resource allocation, and reporting functionalities.

  **STEP 3 — List all tool names and dependencies**

  1. **Equipment Registry Manager** - Consumes: equipment details → Produces: asset inventory
  2. **Maintenance Schedule Generator** - Consumes: equipment data, maintenance rules → Produces: scheduled tasks
  3. **Work Order Creator** - Consumes: maintenance schedules, priorities → Produces: work orders
  4. **Resource Availability Checker** - Consumes: staff schedules, tool inventory → Produces: availability status
  5. **Task Assignment Optimizer** - Consumes: work orders, resources → Produces: optimized assignments
  6. **Compliance Rule Validator** - Consumes: maintenance plans, regulations → Produces: compliance status
  7. **Maintenance History Tracker** - Consumes: completed work data → Produces: historical records
  8. **Cost Estimator** - Consumes: maintenance tasks, resource rates → Produces: cost projections
  9. **Equipment Condition Assessor** - Consumes: inspection data → Produces: condition reports
  10. **Schedule Conflict Resolver** - Consumes: overlapping schedules → Produces: resolved schedules
  11. **Performance Analytics Generator** - Consumes: maintenance data → Produces: KPI reports
  12. **Notification Dispatcher** - Consumes: schedule events → Produces: alerts and reminders

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  - Equipment registration + maintenance scheduling: Register new HVAC unit and create basic maintenance schedule
  - Work order creation + resource checking: Create emergency repair order and verify technician availability

  **Medium Plans:**
  - Full preventive maintenance setup: Equipment registry → Schedule generation → Work order creation → Task assignment
  - Compliance audit preparation: Equipment registry → Maintenance history → Compliance validation → Performance analytics

  **Complex Plans:**
  - Complete maintenance optimization: All tools working together for quarterly maintenance planning with cost optimization, conflict resolution, and compliance verification
  - Annual maintenance review: Historical tracking → Condition assessment → Performance analytics → Schedule optimization → Cost estimation → Compliance validation

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Equipment Registry Manager",
    "tool_description": "Manages building equipment inventory with detailed specifications, location tracking, and maintenance requirements for systematic asset management.",
    "parameters": {
      "equipment_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the equipment"
      },
      "equipment_type": {
        "type": "string",
        "required": true,
        "description": "Category of equipment (HVAC, electrical, plumbing, fire_safety, structural, elevator, security)"
      },
      "location": {
        "type": "string",
        "required": true,
        "description": "Physical location within the building (e.g., Floor 2 Room 201)"
      },
      "manufacturer": {
        "type": "string",
        "required": true,
        "description": "Equipment manufacturer name"
      },
      "model_number": {
        "type": "string",
        "required": true,
        "description": "Manufacturer model number"
      },
      "installation_date": {
        "type": "string",
        "required": true,
        "description": "Date equipment was installed",
        "format": "date-time"
      },
      "warranty_expiration": {
        "type": "string",
        "required": false,
        "description": "Warranty expiration date",
        "format": "date-time",
        "default": "None"
      },
      "criticality_level": {
        "type": "string",
        "required": false,
        "description": "Equipment criticality (low, medium, high, critical)",
        "default": "medium"
      }
    },
    "error_messages": [
      "Invalid equipment type: Use one of [HVAC, electrical, plumbing, fire_safety, structural, elevator, security]",
      "Invalid criticality level: Use one of [low, medium, high, critical]",
      "Invalid date format: Provide dates in ISO 8601 format",
      "Duplicate equipment ID: Equipment with this ID already exists",
      "Missing required field: All required parameters must be provided"
    ],
    "usage": "Provide equipment_id, equipment_type, location, manufacturer, model_number, and installation_date. Optionally specify warranty_expiration and criticality_level. Use to register new equipment or update existing equipment records.",
    "output_details": {
      "equipment_id": {
        "type": "string",
        "description": "Confirmed equipment identifier"
      },
      "registration_status": {
        "type": "string",
        "description": "Status of registration (registered, updated, failed)"
      },
      "next_inspection_due": {
        "type": "string",
        "description": "Calculated next inspection date"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Maintenance Schedule Generator",
    "tool_description": "Creates comprehensive preventive maintenance schedules based on equipment specifications, manufacturer recommendations, and regulatory requirements.",
    "parameters": {
      "equipment_ids": {
        "type": "array",
        "required": true,
        "description": "List of equipment IDs to schedule maintenance for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "schedule_start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for maintenance schedule",
        "format": "date-time"
      },
      "schedule_duration_months": {
        "type": "integer",
        "required": true,
        "description": "Duration of schedule in months (1-24)"
      },
      "maintenance_frequency": {
        "type": "string",
        "required": false,
        "description": "Override frequency (weekly, monthly, quarterly, semi_annual, annual)",
        "default": "None"
      },
      "include_inspections": {
        "type": "boolean",
        "required": false,
        "description": "Include routine inspections in schedule",
        "default": true
      }
    },
    "error_messages": [
      "Invalid schedule duration: Duration must be between 1 and 24 months",
      "Invalid maintenance frequency: Use one of [weekly, monthly, quarterly, semi_annual, annual]",
      "Equipment not found: One or more equipment IDs not in registry",
      "Invalid date range: Schedule start date must be in the future",
      "Empty equipment list: At least one equipment ID must be provided"
    ],
    "usage": "Provide equipment_ids, schedule_start_date, and schedule_duration_months. Optionally override maintenance_frequency and toggle include_inspections. Returns a structured maintenance calendar.",
    "output_details": {
      "schedule_id": {
        "type": "string",
        "description": "Generated unique schedule identifier"
      },
      "total_tasks": {
        "type": "integer",
        "description": "Total number of maintenance tasks scheduled"
      },
      "next_due_date": {
        "type": "string",
        "description": "Next upcoming maintenance date"
      },
      "task_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of all scheduled maintenance dates"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Work Order Creator",
    "tool_description": "Generates detailed work orders for maintenance tasks with priority assignment, resource requirements, and safety considerations.",
    "parameters": {
      "task_description": {
        "type": "string",
        "required": true,
        "description": "Detailed description of maintenance task to be performed"
      },
      "equipment_id": {
        "type": "string",
        "required": true,
        "description": "Equipment identifier for the maintenance task"
      },
      "priority_level": {
        "type": "string",
        "required": true,
        "description": "Task priority (low, normal, high, emergency)"
      },
      "estimated_duration_hours": {
        "type": "number",
        "required": true,
        "description": "Estimated time to complete task in hours (0.5-24)"
      },
      "required_skills": {
        "type": "array",
        "required": true,
        "description": "Skills required for task completion",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "safety_requirements": {
        "type": "array",
        "required": false,
        "description": "Safety protocols and PPE requirements",
        "items": {"type": "string"},
        "default": "None"
      },
      "scheduled_date": {
        "type": "string",
        "required": true,
        "description": "Planned execution date",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Invalid priority level: Use one of [low, normal, high, emergency]",
      "Invalid duration: Duration must be between 0.5 and 24 hours",
      "Equipment not found: Equipment ID not in registry",
      "Invalid scheduled date: Date must be in the future",
      "Empty skills array: At least one required skill must be specified",
      "Task description too short: Provide detailed task description (minimum 10 characters)"
    ],
    "usage": "Provide task_description, equipment_id, priority_level, estimated_duration_hours, required_skills, and scheduled_date. Optionally add safety_requirements. Creates actionable work order with all necessary details.",
    "output_details": {
      "work_order_id": {
        "type": "string",
        "description": "Unique work order identifier"
      },
      "creation_timestamp": {
        "type": "string",
        "description": "Work order creation date and time"
      },
      "estimated_cost": {
        "type": "number",
        "description": "Preliminary cost estimate for the work"
      },
      "status": {
        "type": "string",
        "description": "Current work order status"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Resource Availability Checker",
    "tool_description": "Verifies availability of maintenance staff, tools, and materials for scheduled maintenance activities with conflict detection.",
    "parameters": {
      "check_date": {
        "type": "string",
        "required": true,
        "description": "Date to check resource availability",
        "format": "date-time"
      },
      "duration_hours": {
        "type": "number",
        "required": true,
        "description": "Required resource duration in hours (0.5-16)"
      },
      "required_skills": {
        "type": "array",
        "required": true,
        "description": "Skills needed for the task",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "required_tools": {
        "type": "array",
        "required": false,
        "description": "Specific tools or equipment needed",
        "items": {"type": "string"},
        "default": "None"
      },
      "materials_needed": {
        "type": "array",
        "required": false,
        "description": "Materials or parts required",
        "items": {"type": "string"},
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid duration: Duration must be between 0.5 and 16 hours",
      "Invalid check date: Date must be within the next 365 days",
      "Empty skills array: At least one skill must be specified",
      "Resource check failed: Unable to verify resource availability",
      "Past date provided: Cannot check availability for past dates"
    ],
    "usage": "Provide check_date, duration_hours, and required_skills. Optionally specify required_tools and materials_needed. Returns comprehensive availability status for all requested resources.",
    "output_details": {
      "overall_availability": {
        "type": "boolean",
        "description": "Whether all required resources are available"
      },
      "available_staff_count": {
        "type": "integer",
        "description": "Number of qualified staff available"
      },
      "conflicting_appointments": {
        "type": "integer",
        "description": "Number of scheduling conflicts found"
      },
      "alternative_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggested alternative dates if unavailable"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Task Assignment Optimizer",
    "tool_description": "Optimizes maintenance task assignments to available staff based on skills, workload, location proximity, and efficiency metrics.",
    "parameters": {
      "work_order_ids": {
        "type": "array",
        "required": true,
        "description": "List of work orders to assign",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "assignment_date": {
        "type": "string",
        "required": true,
        "description": "Target date for task assignments",
        "format": "date-time"
      },
      "optimization_criteria": {
        "type": "string",
        "required": false,
        "description": "Primary optimization goal (minimize_time, balance_workload, maximize_efficiency, minimize_cost)",
        "default": "balance_workload"
      },
      "max_assignments_per_person": {
        "type": "integer",
        "required": false,
        "description": "Maximum tasks per person (1-8)",
        "default": 4
      },
      "consider_location": {
        "type": "boolean",
        "required": false,
        "description": "Factor in physical location for efficiency",
        "default": true
      }
    },
    "error_messages": [
      "Invalid optimization criteria: Use one of [minimize_time, balance_workload, maximize_efficiency, minimize_cost]",
      "Invalid max assignments: Value must be between 1 and 8",
      "Work orders not found: One or more work order IDs are invalid",
      "Insufficient resources: Not enough qualified staff for assignments",
      "Assignment date too early: Date must allow adequate preparation time"
    ],
    "usage": "Provide work_order_ids and assignment_date. Optionally specify optimization_criteria, max_assignments_per_person, and consider_location. Returns optimized assignment plan with efficiency metrics.",
    "output_details": {
      "assignment_plan_id": {
        "type": "string",
        "description": "Unique identifier for the assignment plan"
      },
      "total_assigned_tasks": {
        "type": "integer",
        "description": "Number of successfully assigned tasks"
      },
      "unassigned_tasks": {
        "type": "integer",
        "description": "Number of tasks that couldn't be assigned"
      },
      "efficiency_score": {
        "type": "number",
        "description": "Overall assignment efficiency rating (0-100)"
      },
      "staff_assignments": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of staff member assignments"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Rule Validator",
    "tool_description": "Validates maintenance schedules and procedures against building codes, safety regulations, and industry standards for compliance assurance.",
    "parameters": {
      "maintenance_schedule_id": {
        "type": "string",
        "required": true,
        "description": "Schedule to validate for compliance"
      },
      "regulation_types": {
        "type": "array",
        "required": true,
        "description": "Types of regulations to check against",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "building_type": {
        "type": "string",
        "required": true,
        "description": "Type of building (commercial, residential, industrial, healthcare, educational)"
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Local jurisdiction for applicable codes"
      },
      "strict_mode": {
        "type": "boolean",
        "required": false,
        "description": "Apply strictest interpretation of regulations",
        "default": false
      }
    },
    "error_messages": [
      "Invalid building type: Use one of [commercial, residential, industrial, healthcare, educational]",
      "Schedule not found: Maintenance schedule ID does not exist",
      "Unknown regulation type: Specify valid regulation types",
      "Jurisdiction not recognized: Provide valid local jurisdiction",
      "Validation timeout: Complex validation taking too long"
    ],
    "usage": "Provide maintenance_schedule_id, regulation_types, building_type, and jurisdiction. Optionally enable strict_mode for enhanced compliance checking. Returns detailed compliance report.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status (compliant, non_compliant, needs_review)"
      },
      "violations_found": {
        "type": "integer",
        "description": "Number of compliance violations identified"
      },
      "warnings_count": {
        "type": "integer",
        "description": "Number of compliance warnings"
      },
      "required_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Actions needed to achieve compliance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Maintenance History Tracker",
    "tool_description": "Records and maintains detailed history of completed maintenance activities with outcomes, costs, and performance metrics.",
    "parameters": {
      "work_order_id": {
        "type": "string",
        "required": true,
        "description": "Work order identifier for completed task"
      },
      "completion_date": {
        "type": "string",
        "required": true,
        "description": "Date and time of task completion",
        "format": "date-time"
      },
      "actual_duration_hours": {
        "type": "number",
        "required": true,
        "description": "Actual time spent on task (0.1-24)"
      },
      "work_performed": {
        "type": "string",
        "required": true,
        "description": "Detailed description of work completed"
      },
      "parts_used": {
        "type": "array",
        "required": false,
        "description": "Parts and materials consumed",
        "items": {"type": "string"},
        "default": "None"
      },
      "issues_found": {
        "type": "array",
        "required": false,
        "description": "Problems discovered during maintenance",
        "items": {"type": "string"},
        "default": "None"
      },
      "total_cost": {
        "type": "number",
        "required": false,
        "description": "Total cost including labor and materials",
        "default": 0
      },
      "quality_rating": {
        "type": "integer",
        "required": false,
        "description": "Work quality rating (1-5 scale)",
        "default": 3
      },
      "follow_up_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether additional work is needed",
        "default": false
      },
      "technician_notes": {
        "type": "string",
        "required": false,
        "description": "Additional technician observations",
        "default": "None"
      },
      "next_maintenance_date": {
        "type": "string",
        "required": false,
        "description": "Recommended next maintenance date",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid duration: Actual duration must be between 0.1 and 24 hours",
      "Work order not found: Work order ID does not exist",
      "Invalid completion date: Date cannot be in the future",
      "Invalid quality rating: Rating must be between 1 and 5",
      "Negative cost: Total cost cannot be negative",
      "Work description too short: Provide detailed work description"
    ],
    "usage": "Provide work_order_id, completion_date, actual_duration_hours, and work_performed. Include optional details like parts_used, issues_found, total_cost, quality_rating, follow_up_required, technician_notes, and next_maintenance_date for comprehensive tracking.",
    "output_details": {
      "history_record_id": {
        "type": "string",
        "description": "Unique identifier for the history record"
      },
      "record_status": {
        "type": "string",
        "description": "Status of record creation (saved, updated, failed)"
      },
      "equipment_total_hours": {
        "type": "number",
        "description": "Cumulative maintenance hours for the equipment"
      },
      "efficiency_variance": {
        "type": "number",
        "description": "Percentage variance from estimated duration"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cost Estimator",
    "tool_description": "Calculates estimated costs for maintenance tasks including labor, materials, tools, and overhead with budget tracking capabilities.",
    "parameters": {
      "task_type": {
        "type": "string",
        "required": true,
        "description": "Type of maintenance task (inspection, repair, replacement, upgrade, emergency)"
      },
      "equipment_category": {
        "type": "string",
        "required": true,
        "description": "Equipment category (HVAC, electrical, plumbing, fire_safety, structural, elevator, security)"
      },
      "estimated_hours": {
        "type": "number",
        "required": true,
        "description": "Estimated labor hours (0.5-40)"
      },
      "required_skill_level": {
        "type": "string",
        "required": true,
        "description": "Skill level required (apprentice, journeyman, expert, specialist)"
      },
      "materials_list": {
        "type": "array",
        "required": false,
        "description": "List of materials needed",
        "items": {"type": "string"},
        "default": "None"
      },
      "urgency_multiplier": {
        "type": "number",
        "required": false,
        "description": "Cost multiplier for urgent work (1.0-3.0)",
        "default": 1.0
      }
    },
    "error_messages": [
      "Invalid task type: Use one of [inspection, repair, replacement, upgrade, emergency]",
      "Invalid equipment category: Use one of [HVAC, electrical, plumbing, fire_safety, structural, elevator, security]",
      "Invalid hours estimate: Hours must be between 0.5 and 40",
      "Invalid skill level: Use one of [apprentice, journeyman, expert, specialist]",
      "Invalid urgency multiplier: Value must be between 1.0 and 3.0"
    ],
    "usage": "Provide task_type, equipment_category, estimated_hours, and required_skill_level. Optionally include materials_list and urgency_multiplier for more accurate estimates. Returns comprehensive cost breakdown.",
    "output_details": {
      "total_estimated_cost": {
        "type": "number",
        "description": "Total estimated cost for the maintenance task"
      },
      "labor_cost": {
        "type": "number",
        "description": "Estimated labor costs"
      },
      "materials_cost": {
        "type": "number",
        "description": "Estimated materials costs"
      },
      "overhead_cost": {
        "type": "number",
        "description": "Overhead and administrative costs"
      },
      "confidence_level": {
        "type": "string",
        "description": "Confidence in estimate accuracy (low, medium, high)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Equipment Condition Assessor",
    "tool_description": "Evaluates equipment condition based on inspection data, performance metrics, and historical trends to predict maintenance needs.",
    "parameters": {
      "equipment_id": {
        "type": "string",
        "required": true,
        "description": "Equipment identifier for assessment"
      },
      "inspection_date": {
        "type": "string",
        "required": true,
        "description": "Date of condition assessment",
        "format": "date-time"
      },
      "visual_condition_score": {
        "type": "integer",
        "required": true,
        "description": "Visual condition rating (1-10 scale)"
      },
      "performance_metrics": {
        "type": "array",
        "required": true,
        "description": "Performance measurements and readings",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 20
      },
      "observed_issues": {
        "type": "array",
        "required": false,
        "description": "Issues identified during inspection",
        "items": {"type": "string"},
        "default": "None"
      },
      "operating_hours": {
        "type": "number",
        "required": false,
        "description": "Equipment operating hours since last assessment",
        "default": 0
      }
    },
    "error_messages": [
      "Equipment not found: Equipment ID not in registry",
      "Invalid condition score: Score must be between 1 and 10",
      "Invalid inspection date: Date cannot be in the future",
      "Empty performance metrics: At least one metric must be provided",
      "Invalid operating hours: Hours cannot be negative"
    ],
    "usage": "Provide equipment_id, inspection_date, visual_condition_score, and performance_metrics. Optionally add observed_issues and operating_hours. Returns comprehensive condition assessment with recommendations.",
    "output_details": {
      "overall_condition_grade": {
        "type": "string",
        "description": "Overall equipment condition (excellent, good, fair, poor, critical)"
      },
      "estimated_remaining_life": {
        "type": "number",
        "description": "Estimated remaining useful life in months"
      },
      "maintenance_urgency": {
        "type": "string",
        "description": "Maintenance priority level (immediate, high, medium, low)"
      },
      "recommended_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific maintenance recommendations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Schedule Conflict Resolver",
    "tool_description": "Identifies and resolves scheduling conflicts between maintenance tasks, resource availability, and facility operations.",
    "parameters": {
      "schedule_ids": {
        "type": "array",
        "required": true,
        "description": "Schedule IDs to check for conflicts",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 10
      },
      "resolution_priority": {
        "type": "string",
        "required": true,
        "description": "Priority for conflict resolution (safety_first, cost_minimize, time_optimize, resource_balance)"
      },
      "conflict_window_hours": {
        "type": "number",
        "required": false,
        "description": "Time window to check for conflicts in hours (1-168)",
        "default": 24
      },
      "allow_overtime": {
        "type": "boolean",
        "required": false,
        "description": "Allow overtime assignments to resolve conflicts",
        "default": false
      }
    },
    "error_messages": [
      "Invalid resolution priority: Use one of [safety_first, cost_minimize, time_optimize, resource_balance]",
      "Invalid conflict window: Window must be between 1 and 168 hours",
      "Insufficient schedules: At least 2 schedule IDs required",
      "Schedules not found: One or more schedule IDs are invalid",
      "Unresolvable conflicts: Some conflicts cannot be automatically resolved"
    ],
    "usage": "Provide schedule_ids and resolution_priority. Optionally set conflict_window_hours and allow_overtime. Returns resolved schedule with conflict resolution details.",
    "output_details": {
      "conflicts_found": {
        "type": "integer",
        "description": "Number of conflicts identified"
      },
      "conflicts_resolved": {
        "type": "integer",
        "description": "Number of conflicts successfully resolved"
      },
      "resolution_summary": {
        "type": "string",
        "description": "Summary of resolution actions taken"
      },
      "updated_schedule_id": {
        "type": "string",
        "description": "ID of the new conflict-free schedule"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Performance Analytics Generator",
    "tool_description": "Generates comprehensive analytics and KPI reports on maintenance performance, costs, efficiency, and equipment reliability trends.",
    "parameters": {
      "analysis_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date for analysis period",
        "format": "date-time"
      },
      "analysis_period_end": {
        "type": "string",
        "required": true,
        "description": "End date for analysis period",
        "format": "date-time"
      },
      "report_type": {
        "type": "string",
        "required": true,
        "description": "Type of report to generate (summary, detailed, trend_analysis, cost_breakdown, efficiency, compliance)"
      },
      "equipment_filter": {
        "type": "array",
        "required": false,
        "description": "Filter by specific equipment types",
        "items": {"type": "string"},
        "default": "None"
      },
      "include_forecasting": {
        "type": "boolean",
        "required": false,
        "description": "Include predictive forecasting in report",
        "default": false
      }
    },
    "error_messages": [
      "Invalid date range: End date must be after start date",
      "Invalid report type: Use one of [summary, detailed, trend_analysis, cost_breakdown, efficiency, compliance]",
      "Analysis period too long: Maximum analysis period is 24 months",
      "Insufficient data: Not enough data for meaningful analysis",
      "Invalid equipment filter: Specified equipment types not recognized"
    ],
    "usage": "Provide analysis_period_start, analysis_period_end, and report_type. Optionally filter by equipment_filter and enable include_forecasting. Returns comprehensive performance analytics report.",
    "output_details": {
      "report_id": {
        "type": "string",
        "description": "Unique identifier for the generated report"
      },
      "key_metrics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Array of key performance indicator values"
      },
      "trend_direction": {
        "type": "string",
        "description": "Overall performance trend (improving, stable, declining)"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Strategic recommendations based on analysis"
      }
    }
  }
  ```
