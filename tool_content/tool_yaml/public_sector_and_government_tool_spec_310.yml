field_name: public_sector_and_government
subfield: Tax Administration and Revenue Collection
task: Tax return processing and validation
tool_description: |-
  **STEP 1 — Rate task difficulty**

  Tax return processing and validation is a **hard** task due to its broad scope covering multiple tax types and complex regulations, high ambiguity from varying taxpayer situations and interpretation requirements, significant coordination dependencies between validation steps, high risk of errors affecting taxpayer outcomes and government revenue, and substantial data infrastructure requirements for handling sensitive financial information at scale.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'll target **17 tools** within the 15-20 range to adequately cover the comprehensive workflow of tax return processing and validation.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  1. **Tax Return Parser** - Consumes: raw return data → Produces: structured tax data
  2. **Taxpayer Identity Validator** - Consumes: taxpayer info → Produces: identity verification status
  3. **Form Completeness Checker** - Consumes: parsed return → Produces: completeness report
  4. **Income Source Validator** - Consumes: income data → Produces: validation results
  5. **Deduction Eligibility Verifier** - Consumes: claimed deductions → Produces: eligibility status
  6. **Tax Calculation Engine** - Consumes: validated data → Produces: computed tax amounts
  7. **Cross-Reference Matcher** - Consumes: return data, third-party records → Produces: discrepancy report
  8. **Business Rules Validator** - Consumes: structured return → Produces: rule compliance status
  9. **Audit Risk Assessor** - Consumes: complete return → Produces: risk score and flags
  10. **Refund Calculator** - Consumes: tax calculations → Produces: refund/payment amounts
  11. **Electronic Signature Verifier** - Consumes: signature data → Produces: authentication status
  12. **Schedule Consistency Checker** - Consumes: multiple schedules → Produces: consistency report
  13. **Prior Year Comparator** - Consumes: current and historical returns → Produces: comparison analysis
  14. **Status Tracker** - Consumes: processing events → Produces: status updates
  15. **Error Report Generator** - Consumes: validation results → Produces: structured error reports
  16. **Processing Queue Manager** - Consumes: return submissions → Produces: prioritized queue
  17. **Final Validation Orchestrator** - Consumes: all validation outputs → Produces: final approval/rejection

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  1. Basic validation: Tax Return Parser → Form Completeness Checker → Error Report Generator
  2. Identity check: Taxpayer Identity Validator → Electronic Signature Verifier → Status Tracker

  **Medium plans:**
  1. Income validation: Tax Return Parser → Income Source Validator → Cross-Reference Matcher → Business Rules Validator → Error Report Generator
  2. Deduction processing: Form Completeness Checker → Deduction Eligibility Verifier → Tax Calculation Engine → Refund Calculator → Status Tracker

  **Complex plans:**
  1. Full processing pipeline: Processing Queue Manager → Tax Return Parser → Taxpayer Identity Validator → Form Completeness Checker → Income Source Validator → Deduction Eligibility Verifier → Schedule Consistency Checker → Tax Calculation Engine → Cross-Reference Matcher → Business Rules Validator → Prior Year Comparator → Audit Risk Assessor → Refund Calculator → Final Validation Orchestrator → Status Tracker
  2. Comprehensive audit preparation: All validation tools feeding into Audit Risk Assessor and Error Report Generator for complete risk assessment

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Tax Return Parser",
    "tool_description": "Extracts and structures tax return data from various input formats into standardized fields for processing and validation.",
    "parameters": {
      "return_data": {
        "type": "string",
        "required": true,
        "description": "Raw tax return data in XML, JSON, or delimited format"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for the return (e.g., 2023)"
      },
      "return_type": {
        "type": "string",
        "required": true,
        "description": "Type of tax return: individual, corporate, partnership, estate"
      },
      "input_format": {
        "type": "string",
        "required": false,
        "default": "XML",
        "description": "Format of input data: XML, JSON, CSV"
      }
    },
    "error_messages": [
      "Invalid return data format: Ensure data matches specified input_format and contains required tax fields",
      "Unsupported tax year: Tax year must be within supported range (current year - 7 to current year + 1)",
      "Invalid return type: Use one of [individual, corporate, partnership, estate]",
      "Malformed input data: Data structure is corrupted or incomplete for parsing"
    ],
    "usage": "Provide raw return_data, tax_year, and return_type. Optionally specify input_format. Returns structured tax data with all forms and schedules organized by type.",
    "output_details": {
      "taxpayer_id": {
        "type": "string",
        "description": "Primary taxpayer identification number"
      },
      "parsed_forms": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of successfully parsed form names"
      },
      "field_count": {
        "type": "integer",
        "description": "Total number of fields extracted"
      },
      "parsing_status": {
        "type": "string",
        "description": "Overall parsing result: success, partial, failed"
      },
      "structured_data_id": {
        "type": "string",
        "description": "Reference ID for accessing parsed structured data"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Taxpayer Identity Validator",
    "tool_description": "Verifies taxpayer identity information against official records and databases to ensure authenticity and prevent fraud.",
    "parameters": {
      "taxpayer_id": {
        "type": "string",
        "required": true,
        "description": "Primary taxpayer identification number (SSN, EIN, ITIN)"
      },
      "full_name": {
        "type": "string",
        "required": true,
        "description": "Complete legal name of taxpayer"
      },
      "date_of_birth": {
        "type": "string",
        "required": true,
        "format": "date-time",
        "description": "Taxpayer's date of birth"
      },
      "address": {
        "type": "string",
        "required": true,
        "description": "Current mailing address"
      },
      "validation_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Validation intensity: basic, standard, enhanced"
      }
    },
    "error_messages": [
      "Invalid taxpayer ID format: ID must match standard format for SSN, EIN, or ITIN",
      "Identity verification failed: Provided information does not match official records",
      "Date format error: Use ISO 8601 date-time format for date_of_birth",
      "Validation level not supported: Use one of [basic, standard, enhanced]",
      "Database connectivity error: Unable to access identity verification services"
    ],
    "usage": "Provide taxpayer_id, full_name, date_of_birth, and address. Set validation_level for different verification depths. Returns verification status and confidence score.",
    "output_details": {
      "verification_status": {
        "type": "string",
        "description": "Identity verification result: verified, failed, partial"
      },
      "confidence_score": {
        "type": "number",
        "description": "Confidence level from 0.0 to 1.0"
      },
      "matched_fields": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of fields that matched official records"
      },
      "verification_timestamp": {
        "type": "string",
        "description": "When verification was completed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Form Completeness Checker",
    "tool_description": "Analyzes tax return forms to identify missing required fields, incomplete sections, and mandatory attachments based on tax regulations.",
    "parameters": {
      "structured_data_id": {
        "type": "string",
        "required": true,
        "description": "Reference ID for parsed tax return data"
      },
      "return_type": {
        "type": "string",
        "required": true,
        "description": "Type of return being checked: individual, corporate, partnership, estate"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for applying appropriate completeness rules"
      },
      "filing_status": {
        "type": "string",
        "required": false,
        "default": "single",
        "description": "Filing status: single, married_joint, married_separate, head_of_household"
      },
      "check_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Completeness check depth: basic, standard, comprehensive"
      }
    },
    "error_messages": [
      "Invalid structured data reference: Cannot locate parsed return data with provided ID",
      "Unsupported return type: Use one of [individual, corporate, partnership, estate]",
      "Invalid filing status: Use one of [single, married_joint, married_separate, head_of_household]",
      "Tax year rules unavailable: Completeness rules not defined for specified tax year",
      "Check level not recognized: Use one of [basic, standard, comprehensive]"
    ],
    "usage": "Provide structured_data_id from parsed return, return_type, and tax_year. Optionally specify filing_status and check_level. Returns detailed completeness analysis with missing field identification.",
    "output_details": {
      "completeness_score": {
        "type": "number",
        "description": "Percentage of required fields completed (0.0 to 100.0)"
      },
      "missing_required_fields": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of required fields that are missing or empty"
      },
      "incomplete_sections": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Form sections that are partially completed"
      },
      "missing_schedules": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Required schedules that are not included"
      },
      "overall_status": {
        "type": "string",
        "description": "Complete, incomplete, or requires_attention"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Income Source Validator",
    "tool_description": "Validates reported income sources against expected formats, ranges, and regulatory requirements for different income types.",
    "parameters": {
      "income_data": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "description": "List of income entries in format 'source_type:amount:description'"
      },
      "taxpayer_type": {
        "type": "string",
        "required": true,
        "description": "Type of taxpayer: individual, business, trust, estate"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for income validation rules"
      },
      "validation_threshold": {
        "type": "number",
        "required": false,
        "default": 10000.0,
        "description": "Minimum income amount requiring enhanced validation"
      },
      "cross_check_required": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to perform third-party income verification"
      }
    },
    "error_messages": [
      "Invalid income data format: Each entry must follow 'source_type:amount:description' pattern",
      "Unsupported taxpayer type: Use one of [individual, business, trust, estate]",
      "Income amount validation failed: Amounts must be non-negative numbers with appropriate precision",
      "Unknown income source type: Income source not recognized in tax code classifications",
      "Validation threshold error: Threshold must be a positive number"
    ],
    "usage": "Provide income_data array with structured entries, taxpayer_type, and tax_year. Optionally set validation_threshold and cross_check_required. Returns validation results for each income source.",
    "output_details": {
      "total_income_reported": {
        "type": "number",
        "description": "Sum of all reported income amounts"
      },
      "validated_sources": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Income sources that passed validation"
      },
      "flagged_sources": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Income sources requiring additional review"
      },
      "validation_status": {
        "type": "string",
        "description": "Overall validation result: passed, failed, review_required"
      },
      "unusual_patterns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detected unusual income patterns or anomalies"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Deduction Eligibility Verifier",
    "tool_description": "Verifies taxpayer eligibility for claimed deductions based on income levels, filing status, and specific deduction requirements.",
    "parameters": {
      "claimed_deductions": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "description": "List of claimed deductions in format 'deduction_type:amount:supporting_info'"
      },
      "adjusted_gross_income": {
        "type": "number",
        "required": true,
        "description": "Taxpayer's adjusted gross income for eligibility calculations"
      },
      "filing_status": {
        "type": "string",
        "required": true,
        "description": "Filing status: single, married_joint, married_separate, head_of_household"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for applying deduction rules and limits"
      },
      "itemize_vs_standard": {
        "type": "string",
        "required": true,
        "description": "Deduction method: itemized or standard"
      },
      "dependent_count": {
        "type": "integer",
        "required": false,
        "default": 0,
        "description": "Number of dependents claimed"
      },
      "verification_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Verification depth: basic, standard, detailed"
      }
    },
    "error_messages": [
      "Invalid deduction format: Each deduction must follow 'deduction_type:amount:supporting_info' pattern",
      "AGI out of range: Adjusted gross income must be a valid positive or zero value",
      "Unsupported filing status: Use one of [single, married_joint, married_separate, head_of_household]",
      "Invalid deduction method: Use either 'itemized' or 'standard'",
      "Deduction amount exceeds limits: Some claimed deductions exceed statutory limits for the tax year",
      "Dependent count error: Number of dependents must be a non-negative integer"
    ],
    "usage": "Provide claimed_deductions, adjusted_gross_income, filing_status, tax_year, and itemize_vs_standard. Optionally specify dependent_count and verification_level. Returns eligibility status for each deduction.",
    "output_details": {
      "total_eligible_deductions": {
        "type": "number",
        "description": "Sum of all eligible deduction amounts"
      },
      "eligible_deductions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Deductions that passed eligibility verification"
      },
      "ineligible_deductions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Deductions that failed eligibility requirements"
      },
      "reduced_deductions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Deductions reduced due to income limitations or caps"
      },
      "verification_summary": {
        "type": "string",
        "description": "Overall deduction verification result"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Tax Calculation Engine",
    "tool_description": "Performs comprehensive tax calculations including regular tax, alternative minimum tax, credits, and penalties based on validated return data.",
    "parameters": {
      "structured_data_id": {
        "type": "string",
        "required": true,
        "description": "Reference ID for validated tax return data"
      },
      "calculation_type": {
        "type": "string",
        "required": true,
        "description": "Type of calculation: full, income_tax_only, amt_only, penalties_only"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for applying correct tax rates and rules"
      },
      "include_estimates": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to include estimated tax payments in calculations"
      },
      "precision_level": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Calculation precision: standard, high, audit_level"
      }
    },
    "error_messages": [
      "Invalid data reference: Cannot access validated return data with provided structured_data_id",
      "Unsupported calculation type: Use one of [full, income_tax_only, amt_only, penalties_only]",
      "Tax year not supported: Calculation rules not available for specified tax year",
      "Calculation precision error: Use one of [standard, high, audit_level]",
      "Incomplete data for calculation: Required fields missing from validated return data"
    ],
    "usage": "Provide structured_data_id for validated return, calculation_type, and tax_year. Optionally set include_estimates and precision_level. Returns comprehensive tax calculation results.",
    "output_details": {
      "regular_tax": {
        "type": "number",
        "description": "Calculated regular income tax amount"
      },
      "alternative_minimum_tax": {
        "type": "number",
        "description": "AMT calculation result"
      },
      "total_credits": {
        "type": "number",
        "description": "Sum of all applicable tax credits"
      },
      "penalties_and_interest": {
        "type": "number",
        "description": "Calculated penalties and interest charges"
      },
      "tax_due_or_refund": {
        "type": "number",
        "description": "Final tax owed (positive) or refund due (negative)"
      },
      "calculation_details": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Step-by-step calculation breakdown"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross-Reference Matcher",
    "tool_description": "Matches taxpayer-reported information against third-party documents like W-2s, 1099s, and other information returns to identify discrepancies.",
    "parameters": {
      "taxpayer_id": {
        "type": "string",
        "required": true,
        "description": "Taxpayer identification number"
      },
      "reported_amounts": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "description": "Taxpayer-reported amounts in format 'document_type:payer_id:amount'"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for matching third-party documents"
      },
      "match_tolerance": {
        "type": "number",
        "required": false,
        "default": 1.0,
        "description": "Acceptable difference threshold for matching (dollars)"
      },
      "document_types": {
        "type": "array",
        "required": false,
        "default": ["W2", "1099"],
        "items": {"type": "string"},
        "description": "Types of documents to match against"
      },
      "include_prior_year": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to include prior year document matching"
      }
    },
    "error_messages": [
      "Invalid taxpayer ID: ID format not recognized or not found in system",
      "Malformed reported amounts: Each entry must follow 'document_type:payer_id:amount' format",
      "Match tolerance error: Tolerance must be a non-negative number",
      "Unsupported document type: Document type not available for cross-referencing",
      "Third-party data unavailable: Cannot access information return database for specified tax year"
    ],
    "usage": "Provide taxpayer_id, reported_amounts array, and tax_year. Optionally set match_tolerance, document_types, and include_prior_year. Returns detailed matching results and discrepancies.",
    "output_details": {
      "matched_documents": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Successfully matched third-party documents"
      },
      "discrepancies": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Identified discrepancies between reported and third-party amounts"
      },
      "missing_documents": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Third-party documents not reported by taxpayer"
      },
      "unreported_income": {
        "type": "number",
        "description": "Total amount of potentially unreported income identified"
      },
      "match_confidence": {
        "type": "number",
        "description": "Overall confidence score for matching process (0.0 to 1.0)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Business Rules Validator",
    "tool_description": "Validates tax return data against complex business rules, regulatory requirements, and logical consistency checks specific to tax law.",
    "parameters": {
      "structured_data_id": {
        "type": "string",
        "required": true,
        "description": "Reference ID for tax return data to validate"
      },
      "rule_categories": {
        "type": "array",
        "required": true,
        "items": {"type": "string"},
        "description": "Categories of rules to apply: mathematical, legal, logical, cross_form"
      },
      "tax_year": {
        "type": "integer",
        "required": true,
        "description": "Tax year for applying appropriate business rules"
      },
      "return_type": {
        "type": "string",
        "required": true,
        "description": "Return type: individual, corporate, partnership, estate"
      },
      "severity_threshold": {
        "type": "string",
        "required": false,
        "default": "warning",
        "description": "Minimum severity to report: info, warning, error, critical"
      },
      "custom_rules": {
        "type": "array",
        "required": false,
        "default": [],
        "items": {"type": "string"},
        "description": "Additional custom rule identifiers to apply"
      },
      "exclude_rules": {
        "type": "array",
        "required": false,
        "default": [],
        "items": {"type": "string"},
        "description": "Rule identifiers to exclude from validation"
      },
      "parallel_processing": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to run rule validation in parallel for performance"
      }
    },
    "error_messages": [
      "Invalid data reference: Cannot access return data with provided structured_data_id",
      "Unsupported rule category: Use categories from [mathematical, legal, logical, cross_form]",
      "Invalid return type: Use one of [individual, corporate, partnership, estate]",
      "Severity threshold error: Use one of [info, warning, error, critical]",
      "Custom rule not found: One or more custom rule identifiers not recognized",
      "Rule processing error: Error occurred during business rule validation execution"
    ],
    "usage": "Provide structured_data_id, rule_categories array, tax_year, and return_type. Optionally set severity_threshold, custom_rules, exclude_rules, and parallel_processing. Returns comprehensive rule validation results.",
    "output_details": {
      "rules_passed": {
        "type": "integer",
        "description": "Number of business rules that passed validation"
      },
      "rules_failed": {
        "type": "integer",
        "description": "Number of business rules that failed validation"
      },
      "validation_errors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed descriptions of failed rule validations"
      },
      "warnings": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Non-critical issues identified during validation"
      },
      "overall_compliance": {
        "type": "string",
        "description": "Overall compliance status: compliant, non_compliant, review_required"
      },
      "critical_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Critical compliance issues requiring immediate attention"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audit Risk Assessor",
    "tool_description": "Analyzes completed tax returns to calculate audit risk scores and identify factors that may trigger examination selection.",
    "parameters": {
      "taxpayer_id": {
        "type": "string",
        "required": true,
        "description": "Taxpayer identification number"
      },
      "return_data_id": {
        "type": "string",
        "required": true,
        "description": "Reference ID for complete validated tax return"
      },
      "assessment_model": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Risk assessment model: standard, enhanced, industry_specific"
      },
      "include_historical": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include historical return patterns in assessment"
      }
    },
    "error_messages": [
      "Invalid taxpayer ID: ID not found or format not recognized",
      "Return data not accessible: Cannot locate validated return data with provided ID",
      "Assessment model not available: Use one of [standard, enhanced, industry_specific]",
      "Insufficient data for assessment: Return data incomplete for risk calculation"
    ],
    "usage": "Provide taxpayer_id and return_data_id for validated return. Optionally specify assessment_model and include_historical settings. Returns comprehensive audit risk analysis.",
    "output_details": {
      "overall_risk_score": {
        "type": "number",
        "description": "Composite audit risk score from 0.0 (low) to 100.0 (high)"
      },
      "risk_factors": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific factors contributing to audit risk"
      },
      "risk_category": {
        "type": "string",
        "description": "Risk classification: low, medium, high, very_high"
      },
      "recommended_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended follow-up actions based on risk assessment"
      },
      "comparison_to_peers": {
        "type": "string",
        "description": "How this return compares to similar taxpayers"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Refund Calculator",
    "tool_description": "Calculates tax refund or balance due amounts considering withholdings, estimated payments, credits, and penalties.",
    "parameters": {
      "total_tax_liability": {
        "type": "number",
        "required": true,
        "description": "Final calculated tax liability amount"
      },
      "withholding_amounts": {
        "type": "array",
        "required": true,
        "items": {"type": "number"},
        "description": "Federal tax withholding amounts from all sources"
      },
      "estimated_payments": {
        "type": "array",
        "required": false,
        "default": [],
        "items": {"type": "number"},
        "description": "Quarterly estimated tax payments made"
      },
      "prior_year_overpayment": {
        "type": "number",
        "required": false,
        "default": 0.0,
        "description": "Prior year overpayment applied to current year"
      },
      "refundable_credits": {
        "type": "number",
        "required": false,
        "default": 0.0,
        "description": "Total refundable credit amounts"
      }
    },
    "error_messages": [
      "Invalid tax liability: Total tax liability must be a non-negative number",
      "Withholding amount error: All withholding amounts must be non-negative numbers",
      "Estimated payment error: Estimated payment amounts must be non-negative",
      "Prior year overpayment error: Amount must be non-negative",
      "Refundable credits error: Credit amount must be non-negative"
    ],
    "usage": "Provide total_tax_liability and withholding_amounts array. Optionally include estimated_payments, prior_year_overpayment, and refundable_credits. Returns refund/balance due calculation.",
    "output_details": {
      "total_payments": {
        "type": "number",
        "description": "Sum of all payments and credits"
      },
      "refund_amount": {
        "type": "number",
        "description": "Refund due to taxpayer (0 if balance due)"
      },
      "balance_due": {
        "type": "number",
        "description": "Amount owed by taxpayer (0 if refund due)"
      },
      "payment_breakdown": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed breakdown of all payment components"
      },
      "calculation_summary": {
        "type": "string",
        "description": "Summary of refund/balance due calculation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Electronic Signature Verifier",
    "tool_description": "Verifies electronic signatures and digital authentication methods used for tax return submissions to ensure authenticity and non-repudiation.",
    "parameters": {
      "signature_data": {
        "type": "string",
        "required": true,
        "description": "Electronic signature data or certificate information"
      },
      "taxpayer_id": {
        "type": "string",
        "required": true,
        "description": "Taxpayer identification associated with signature"
