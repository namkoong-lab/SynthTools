field_name: food_and_beverage_services
subfield: food_safety_and_compliance
task: Conduct digital food safety inspections and generate compliance reports
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **medium** difficulty. It involves coordinating multiple inspection workflows, managing compliance standards across various food safety domains, handling data validation and verification processes, and generating comprehensive reports that must meet regulatory requirements. The task requires systematic data collection, risk assessment, and documentation but follows established protocols.

  ## STEP 2 — Set a tool budget

  Given the medium complexity, I'm targeting **12 tools** to cover the comprehensive workflow of digital food safety inspections and compliance reporting.

  ## STEP 3 — List all tool names and dependencies

  **Tool Names and Dependencies:**
  1. **Inspection Checklist Generator** - Consumes: facility type, regulations → Produces: customized checklists
  2. **Temperature Data Collector** - Consumes: equipment IDs, time ranges → Produces: temperature logs
  3. **Equipment Status Auditor** - Consumes: equipment list → Produces: maintenance/calibration status
  4. **Food Storage Evaluator** - Consumes: storage areas, inventory → Produces: storage compliance assessment
  5. **HACCP Point Analyzer** - Consumes: process steps, control points → Produces: critical control point evaluation
  6. **Staff Training Verifier** - Consumes: employee IDs, certification requirements → Produces: training compliance status
  7. **Cleaning Schedule Tracker** - Consumes: facility areas, cleaning protocols → Produces: sanitation compliance data
  8. **Violation Risk Assessor** - Consumes: inspection findings → Produces: risk scores and priority levels
  9. **Photo Evidence Manager** - Consumes: images, locations, timestamps → Produces: organized evidence documentation
  10. **Corrective Action Planner** - Consumes: violations, timelines → Produces: remediation plans
  11. **Compliance Score Calculator** - Consumes: all inspection data → Produces: overall compliance metrics
  12. **Inspection Report Generator** - Consumes: all inspection outputs → Produces: final compliance reports

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Temperature Check** (3 tools): Inspection Checklist Generator → Temperature Data Collector → Compliance Score Calculator
  2. **Equipment Audit** (3 tools): Equipment Status Auditor → Photo Evidence Manager → Inspection Report Generator

  **Medium Plans:**
  1. **Storage Compliance Review** (5 tools): Inspection Checklist Generator → Food Storage Evaluator → Photo Evidence Manager → Violation Risk Assessor → Corrective Action Planner
  2. **Staff Certification Audit** (4 tools): Staff Training Verifier → Violation Risk Assessor → Corrective Action Planner → Inspection Report Generator

  **Complex Plans:**
  1. **Full HACCP Inspection** (8 tools): Inspection Checklist Generator → HACCP Point Analyzer → Temperature Data Collector → Equipment Status Auditor → Violation Risk Assessor → Corrective Action Planner → Compliance Score Calculator → Inspection Report Generator
  2. **Comprehensive Facility Audit** (10 tools): All tools except Photo Evidence Manager and Cleaning Schedule Tracker, culminating in complete compliance assessment

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Inspection Checklist Generator",
    "tool_description": "Generates customized inspection checklists based on facility type, applicable regulations, and inspection scope to ensure comprehensive coverage of all required compliance areas.",
    "parameters": {
      "facility_type": {
        "type": "string",
        "required": true,
        "description": "Type of food facility (restaurant, grocery_store, food_processing, catering, food_truck)"
      },
      "regulation_standards": {
        "type": "array",
        "required": true,
        "description": "Applicable food safety regulations",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "inspection_scope": {
        "type": "string",
        "required": false,
        "description": "Scope of inspection (routine, complaint_based, follow_up, pre_opening)",
        "default": "routine"
      }
    },
    "error_messages": [
      "Invalid facility type: Use one of [restaurant, grocery_store, food_processing, catering, food_truck].",
      "Empty regulation standards: Provide at least one applicable regulation standard.",
      "Invalid inspection scope: Use one of [routine, complaint_based, follow_up, pre_opening]."
    ],
    "usage": "Specify the facility_type and regulation_standards array, optionally set inspection_scope. The tool returns a structured checklist with all required inspection items organized by category.",
    "output_details": {
      "checklist_id": {
        "type": "string",
        "description": "Unique identifier for the generated checklist"
      },
      "total_items": {
        "type": "integer",
        "description": "Total number of inspection items in the checklist"
      },
      "categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of inspection categories covered"
      },
      "checklist_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed list of all inspection items to be checked"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Temperature Data Collector",
    "tool_description": "Collects and validates temperature readings from refrigeration units, freezers, cooking equipment, and holding areas to verify compliance with food safety temperature requirements.",
    "parameters": {
      "equipment_ids": {
        "type": "array",
        "required": true,
        "description": "List of equipment identifiers to collect temperature data from",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "start_time": {
        "type": "string",
        "required": true,
        "description": "Start of data collection period (ISO 8601 format)",
        "format": "date-time"
      },
      "end_time": {
        "type": "string",
        "required": true,
        "description": "End of data collection period (ISO 8601 format)",
        "format": "date-time"
      },
      "temperature_unit": {
        "type": "string",
        "required": false,
        "description": "Temperature unit for readings (celsius, fahrenheit)",
        "default": "fahrenheit"
      }
    },
    "error_messages": [
      "Invalid time range: Ensure start_time is before end_time and both are valid ISO 8601 timestamps.",
      "Equipment not found: One or more equipment_ids do not exist or are not accessible.",
      "Invalid temperature unit: Use either 'celsius' or 'fahrenheit'.",
      "Data collection failed: Unable to retrieve temperature data for specified time range."
    ],
    "usage": "Provide equipment_ids array, start_time, and end_time for the data collection period. Optionally specify temperature_unit. The tool returns temperature readings with compliance status for each piece of equipment.",
    "output_details": {
      "collection_summary": {
        "type": "string",
        "description": "Summary of temperature data collection results"
      },
      "compliant_equipment": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of equipment IDs with temperatures within acceptable ranges"
      },
      "non_compliant_equipment": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of equipment IDs with temperature violations"
      },
      "average_temperatures": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Average temperature readings for each equipment unit"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Equipment Status Auditor",
    "tool_description": "Audits the operational status, maintenance records, and calibration compliance of food service equipment to ensure proper functioning and regulatory compliance.",
    "parameters": {
      "equipment_list": {
        "type": "array",
        "required": true,
        "description": "List of equipment to audit",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "maintenance_threshold_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days before maintenance is considered overdue",
        "default": 30
      },
      "calibration_threshold_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days before calibration is considered overdue",
        "default": 365
      },
      "include_warranty_status": {
        "type": "boolean",
        "required": false,
        "description": "Include warranty status in the audit",
        "default": false
      }
    },
    "error_messages": [
      "Empty equipment list: Provide at least one equipment item to audit.",
      "Invalid threshold values: maintenance_threshold_days and calibration_threshold_days must be positive integers.",
      "Equipment access error: Unable to access maintenance records for one or more equipment items.",
      "Data inconsistency: Conflicting information found in equipment records."
    ],
    "usage": "Provide equipment_list array and optionally set maintenance_threshold_days, calibration_threshold_days, and include_warranty_status. The tool returns comprehensive equipment status information with compliance indicators.",
    "output_details": {
      "audit_summary": {
        "type": "string",
        "description": "Overall summary of equipment audit results"
      },
      "compliant_equipment_count": {
        "type": "integer",
        "description": "Number of equipment items in full compliance"
      },
      "maintenance_overdue": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of equipment with overdue maintenance"
      },
      "calibration_overdue": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of equipment with overdue calibration"
      },
      "operational_status": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Current operational status of each equipment item"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Food Storage Evaluator",
    "tool_description": "Evaluates food storage areas for proper temperature control, organization, labeling, and compliance with first-in-first-out (FIFO) principles and cross-contamination prevention.",
    "parameters": {
      "storage_areas": {
        "type": "array",
        "required": true,
        "description": "List of storage areas to evaluate",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "check_expiration_dates": {
        "type": "boolean",
        "required": false,
        "description": "Include expiration date compliance in evaluation",
        "default": true
      },
      "fifo_compliance": {
        "type": "boolean",
        "required": false,
        "description": "Check first-in-first-out compliance",
        "default": true
      }
    },
    "error_messages": [
      "Invalid storage areas: Provide at least one valid storage area identifier.",
      "Storage area not accessible: Unable to access one or more specified storage areas.",
      "Incomplete inventory data: Storage area inventory information is missing or incomplete."
    ],
    "usage": "Specify storage_areas array and optionally set check_expiration_dates and fifo_compliance flags. The tool evaluates each storage area and returns detailed compliance assessment.",
    "output_details": {
      "evaluation_summary": {
        "type": "string",
        "description": "Overall storage evaluation summary"
      },
      "compliant_areas": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of storage areas meeting all requirements"
      },
      "violation_count": {
        "type": "integer",
        "description": "Total number of storage violations found"
      },
      "expired_items_found": {
        "type": "boolean",
        "description": "Whether expired items were discovered"
      },
      "temperature_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Areas with temperature control issues"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "HACCP Point Analyzer",
    "tool_description": "Analyzes Hazard Analysis Critical Control Points (HACCP) system implementation by evaluating critical control points, monitoring procedures, corrective actions, and record-keeping for food safety compliance.",
    "parameters": {
      "process_steps": {
        "type": "array",
        "required": true,
        "description": "List of food production/service process steps to analyze",
        "items": {"type": "string"},
        "minItems": 3,
        "maxItems": 50
      },
      "critical_control_points": {
        "type": "array",
        "required": true,
        "description": "Identified critical control points in the process",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "monitoring_frequency": {
        "type": "string",
        "required": false,
        "description": "Required monitoring frequency (continuous, hourly, daily, weekly)",
        "default": "continuous"
      },
      "include_verification": {
        "type": "boolean",
        "required": false,
        "description": "Include HACCP verification procedures in analysis",
        "default": true
      },
      "record_retention_days": {
        "type": "integer",
        "required": false,
        "description": "Required record retention period in days",
        "default": 365
      },
      "hazard_types": {
        "type": "array",
        "required": true,
        "description": "Types of hazards to analyze (biological, chemical, physical)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 3
      },
      "temperature_critical_limits": {
        "type": "array",
        "required": false,
        "description": "Critical temperature limits for control points",
        "items": {"type": "number"},
        "default": null
      },
      "corrective_action_protocols": {
        "type": "array",
        "required": false,
        "description": "Established corrective action procedures",
        "items": {"type": "string"},
        "default": null
      },
      "staff_training_current": {
        "type": "boolean",
        "required": false,
        "description": "Whether staff HACCP training is current",
        "default": true
      },
      "documentation_complete": {
        "type": "boolean",
        "required": false,
        "description": "Whether HACCP documentation is complete",
        "default": true
      },
      "external_verification_date": {
        "type": "string",
        "required": false,
        "description": "Date of last external HACCP verification (ISO 8601 format)",
        "format": "date-time",
        "default": null
      }
    },
    "error_messages": [
      "Insufficient process steps: Provide at least 3 process steps for meaningful HACCP analysis.",
      "Invalid monitoring frequency: Use one of [continuous, hourly, daily, weekly].",
      "Invalid hazard types: Use combinations of [biological, chemical, physical].",
      "Mismatched control points: Number of critical_control_points must not exceed process_steps.",
      "Invalid record retention: record_retention_days must be a positive integer.",
      "Missing critical limits: temperature_critical_limits required when temperature is a critical control point.",
      "Invalid verification date: external_verification_date must be valid ISO 8601 format if provided."
    ],
    "usage": "Provide process_steps, critical_control_points, and hazard_types arrays. Optionally configure monitoring_frequency, include_verification, record_retention_days, and other HACCP-specific parameters. The tool analyzes HACCP implementation and returns compliance assessment.",
    "output_details": {
      "haccp_compliance_score": {
        "type": "number",
        "description": "Overall HACCP compliance score (0-100)"
      },
      "critical_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of critical HACCP violations found"
      },
      "monitoring_compliance": {
        "type": "boolean",
        "description": "Whether monitoring procedures are properly implemented"
      },
      "documentation_status": {
        "type": "string",
        "description": "Status of HACCP documentation completeness"
      },
      "corrective_actions_needed": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Required corrective actions for HACCP compliance"
      },
      "verification_due": {
        "type": "boolean",
        "description": "Whether HACCP system verification is due"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Staff Training Verifier",
    "tool_description": "Verifies staff food safety training, certification status, and compliance with regulatory training requirements for food handling personnel.",
    "parameters": {
      "employee_ids": {
        "type": "array",
        "required": true,
        "description": "List of employee identifiers to verify",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 200
      },
      "required_certifications": {
        "type": "array",
        "required": true,
        "description": "Required food safety certifications",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "certification_validity_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days certifications remain valid",
        "default": 1095
      }
    },
    "error_messages": [
      "Empty employee list: Provide at least one employee ID to verify.",
      "Missing certification requirements: Specify at least one required certification.",
      "Invalid validity period: certification_validity_days must be a positive integer.",
      "Employee record not found: One or more employee IDs do not exist in the system."
    ],
    "usage": "Provide employee_ids and required_certifications arrays, optionally set certification_validity_days. The tool verifies training status and returns compliance information for each employee.",
    "output_details": {
      "verification_summary": {
        "type": "string",
        "description": "Summary of staff training verification results"
      },
      "compliant_employees": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of employees with current, valid training"
      },
      "non_compliant_employees": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of employees with expired or missing training"
      },
      "training_expiring_soon": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of employees with training expiring within 30 days"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cleaning Schedule Tracker",
    "tool_description": "Tracks and evaluates cleaning and sanitation schedule compliance for different facility areas, equipment, and surfaces according to established protocols.",
    "parameters": {
      "facility_areas": {
        "type": "array",
        "required": true,
        "description": "List of facility areas to track cleaning for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 30
      },
      "schedule_period_days": {
        "type": "integer",
        "required": false,
        "description": "Number of days to review cleaning schedule compliance",
        "default": 30
      }
    },
    "error_messages": [
      "Empty area list: Provide at least one facility area to track.",
      "Invalid schedule period: schedule_period_days must be between 1 and 365.",
      "Missing cleaning records: No cleaning records found for specified areas and time period."
    ],
    "usage": "Specify facility_areas array and optionally set schedule_period_days. The tool tracks cleaning schedule adherence and returns compliance status for each area.",
    "output_details": {
      "overall_compliance_rate": {
        "type": "number",
        "description": "Overall cleaning schedule compliance percentage"
      },
      "compliant_areas": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Areas with satisfactory cleaning compliance"
      },
      "missed_cleanings": {
        "type": "integer",
        "description": "Total number of missed cleaning sessions"
      },
      "areas_needing_attention": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Areas with poor cleaning compliance"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Violation Risk Assessor",
    "tool_description": "Assesses and prioritizes food safety violations based on severity, potential health impact, and regulatory consequences to guide corrective action planning.",
    "parameters": {
      "violation_descriptions": {
        "type": "array",
        "required": true,
        "description": "Descriptions of identified violations",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "violation_locations": {
        "type": "array",
        "required": true,
        "description": "Locations where violations were found",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "assessment_framework": {
        "type": "string",
        "required": false,
        "description": "Risk assessment framework to use (FDA, HACCP, ISO22000)",
        "default": "FDA"
      }
    },
    "error_messages": [
      "Mismatched arrays: violation_descriptions and violation_locations must have the same length.",
      "Empty violation data: Provide at least one violation to assess.",
      "Invalid assessment framework: Use one of [FDA, HACCP, ISO22000].",
      "Violation description too vague: Provide specific, detailed violation descriptions for accurate risk assessment."
    ],
    "usage": "Provide violation_descriptions and violation_locations arrays of equal length, optionally specify assessment_framework. The tool evaluates each violation and returns risk scores with priority recommendations.",
    "output_details": {
      "high_priority_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Violations requiring immediate attention"
      },
      "medium_priority_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Violations requiring timely correction"
      },
      "low_priority_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Violations requiring routine correction"
      },
      "overall_risk_score": {
        "type": "number",
        "description": "Overall facility risk score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Photo Evidence Manager",
    "tool_description": "Organizes and manages photographic evidence of violations, compliance issues, and facility conditions with proper documentation and metadata.",
    "parameters": {
      "image_paths": {
        "type": "array",
        "required": true,
        "description": "File paths or URLs of inspection photos",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "photo_locations": {
        "type": "array",
        "required": true,
        "description": "Locations where each photo was taken",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "photo_timestamps": {
        "type": "array",
        "required": true,
        "description": "Timestamps when photos were captured (ISO 8601 format)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      }
    },
    "error_messages": [
      "Mismatched array lengths: image_paths, photo_locations, and photo_timestamps must have equal lengths.",
      "Invalid image paths: One or more image files cannot be accessed or do not exist.",
      "Invalid timestamp format: All timestamps must be in valid ISO 8601 format.",
      "Empty photo data: Provide at least one photo with complete metadata."
    ],
    "usage": "Provide image_paths, photo_locations, and photo_timestamps arrays of equal length. The tool organizes photos with metadata and returns structured evidence documentation.",
    "output_details": {
      "total_photos_processed": {
        "type": "integer",
        "description": "Total number of photos successfully processed"
      },
      "evidence_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Categories of evidence documented in photos"
      },
      "photo_manifest": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Organized list of photos with reference identifiers"
      },
      "documentation_complete": {
        "type": "boolean",
        "description": "Whether all required photo documentation is complete"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Corrective Action Planner",
    "tool_description": "Develops comprehensive corrective action plans for food safety violations with timelines, responsible parties, and verification procedures.",
    "parameters": {
      "violations": {
        "type": "array",
        "required": true,
        "description": "List of violations requiring corrective action",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "priority_levels": {
        "type": "array",
        "required": true,
        "description": "Priority level for each violation (critical, major, minor)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "default_timeline_days": {
        "type": "integer",
        "required": false,
        "description": "Default number of days for corrective action completion",
        "default": 30
      },
      "include_verification": {
        "type": "boolean",
        "required": false,
        "description": "Include verification procedures in the plan",
        "default": true
      }
    },
    "error_messages": [
      "Mismatched arrays: violations and priority_levels must have the same length.",
      "Invalid priority levels: Use only [critical, major, minor] for priority levels.",
      "Invalid timeline: default_timeline_days must be a positive integer between 1 and 365.",
      "Empty violation list: Provide at least one violation to create corrective action plan."
    ],
    "usage": "Provide violations and priority_levels arrays of equal length, optionally set default_timeline_days and include_verification. The tool generates a structured corrective action plan with timelines and procedures.",
    "output_details": {
      "total_actions_planned": {
        "type": "integer",
        "description": "Total number of corrective actions planned"
      },
      "immediate_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Actions requiring immediate implementation"
      },
      "short_term_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Actions to be completed within 30 days"
      },
      "long_term_actions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Actions requiring extended implementation time"
      },
      "estimated_completion_date": {
        "type": "string",
        "format": "date-time",
        "description": "Estimated completion date for all corrective actions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Compliance Score Calculator",
    "tool_description": "Calculates overall compliance scores based on inspection findings, violation severity, and regulatory requirements to provide quantitative assessment of food safety compliance.",
    "parameters": {
      "inspection_categories": {
        "type": "array",
        "required": true,
        "description": "Categories of inspection performed",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "category_scores": {
        "type": "array",
        "required": true,
        "description": "Individual scores for each inspection category (0-100)",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 20
      },
      "category_weights": {
        "type": "array",
        "required": false,
        "description": "Weight factors for each category (0.1-1.0)",
        "items": {"type": "number"},
        "default": null
      },
      "scoring_system": {
        "type": "string",
        "required": false,
        "description": "Scoring system to use (percentage, letter_grade, pass_fail)",
        "default": "percentage"
      }
    },
    "error_messages": [
      "Mismatched arrays: All provided arrays must have the same length.",
      "Invalid scores: category_scores must be numbers between 0 and 100.",
      "Invalid weights: category_weights must be numbers between 0.1 and 1.0.",
      "Invalid scoring system: Use one of [percentage, letter_grade, pass_fail].",
      "Empty category data: Provide at least one inspection category with score."
    ],
    "usage": "Provide inspection_categories and category_scores arrays of equal length, optionally specify category_weights and scoring_system. The tool calculates weighted compliance scores and returns comprehensive scoring analysis.",
    "output_details": {
      "overall_compliance_score": {
        "type": "number",
        "description": "Overall weighted compliance score"
      },
      "compliance_grade": {
        "type": "string",
        "description": "Letter grade or pass/fail status based on scoring system"
      },
      "strongest_areas": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Inspection categories with highest scores"
      },
      "improvement_needed": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Inspection categories requiring improvement"
      },
      "meets_minimum_standards": {
        "type": "boolean",
        "description": "Whether facility meets minimum compliance standards"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Inspection Report Generator",
    "tool_description": "Generates comprehensive food safety inspection reports combining all inspection data, findings, scores, and corrective actions into formatted compliance documentation.",
    "parameters": {
      "facility_name": {
        "type": "string",
        "required": true,
        "description": "Name of the inspected food facility"
      },
      "inspection_date": {
        "type": "string",
        "required": true,
        "description": "Date of inspection (ISO 8601 format)",
        "format": "date-time"
      },
      "inspector_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the conducting inspector"
      },
      "overall_score": {
        "type": "number",
        "required": true,
        "description": "Overall compliance score (0-100)"
      },
      "
