field_name: cooking_and_recipes
subfield: Meal Planning and Menu Design
task: Create weekly or monthly meal plans based on dietary preferences, restrictions, and nutritional goals
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is of medium difficulty. It involves coordinating multiple dietary constraints, nutritional requirements, and preferences while ensuring meal variety and practical feasibility. The complexity comes from balancing nutritional targets, accommodating restrictions, managing ingredient availability, and creating realistic shopping and preparation workflows.

  **STEP 2 — Set a tool budget**

  Given the medium difficulty, I'll target 12 tools to handle the various aspects of meal planning: dietary analysis, recipe selection, nutritional calculation, shopping list generation, meal scheduling, and constraint management.

  **STEP 3 — List all tool names and dependencies**

  1. **Dietary Profile Creator** - consumes user preferences/restrictions → produces dietary profile
  2. **Nutritional Target Calculator** - consumes demographics/goals → produces daily nutritional targets
  3. **Recipe Database Query** - consumes dietary filters → produces filtered recipe list
  4. **Meal Nutritional Analyzer** - consumes recipe data → produces nutritional breakdown
  5. **Weekly Meal Scheduler** - consumes recipes/preferences → produces meal schedule
  6. **Shopping List Generator** - consumes meal plan → produces ingredient list
  7. **Ingredient Substitution Finder** - consumes original ingredient/restrictions → produces alternatives
  8. **Meal Prep Planner** - consumes meal schedule → produces prep timeline
  9. **Nutritional Gap Analyzer** - consumes meal plan/targets → produces deficiency report
  10. **Recipe Portion Adjuster** - consumes recipe/servings → produces scaled recipe
  11. **Meal Plan Optimizer** - consumes current plan/constraints → produces improved plan
  12. **Cost Calculator** - consumes shopping list/prices → produces budget breakdown

  **STEP 4 — Multi-tool plans**

  Simple plans:
  - Basic meal planning: Dietary Profile Creator → Recipe Database Query → Weekly Meal Scheduler
  - Shopping preparation: Weekly Meal Scheduler → Shopping List Generator → Cost Calculator

  Medium plans:
  - Nutritionally balanced planning: Dietary Profile Creator → Nutritional Target Calculator → Recipe Database Query → Meal Nutritional Analyzer → Weekly Meal Scheduler → Nutritional Gap Analyzer
  - Allergy-friendly meal prep: Dietary Profile Creator → Recipe Database Query → Ingredient Substitution Finder → Recipe Portion Adjuster → Meal Prep Planner

  Complex plans:
  - Complete meal planning workflow: All tools integrated - Profile creation → target setting → recipe filtering → nutritional analysis → scheduling → gap analysis → optimization → shopping list generation → prep planning
  - Budget-optimized nutritional planning: Dietary Profile Creator → Nutritional Target Calculator → Recipe Database Query → Meal Nutritional Analyzer → Meal Plan Optimizer → Shopping List Generator → Cost Calculator → iterative optimization

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Dietary Profile Creator",
    "tool_description": "Creates a comprehensive dietary profile based on user preferences, restrictions, and lifestyle factors to guide meal planning decisions.",
    "parameters": {
      "dietary_restrictions": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of dietary restrictions (e.g., vegetarian, vegan, gluten-free, dairy-free, nut-free, kosher, halal)"
      },
      "food_preferences": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": [],
        "description": "List of preferred cuisines or foods (e.g., mediterranean, asian, italian, seafood, spicy)"
      },
      "dislikes": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": [],
        "description": "List of disliked foods or ingredients to avoid"
      },
      "cooking_skill": {
        "type": "string",
        "required": true,
        "description": "Cooking skill level: beginner, intermediate, or advanced"
      },
      "time_availability": {
        "type": "integer",
        "required": true,
        "description": "Average minutes available for meal preparation per day (15-180)"
      }
    },
    "error_messages": [
      "Invalid dietary restriction: Use recognized restrictions like vegetarian, vegan, gluten-free, dairy-free, nut-free, kosher, halal.",
      "Invalid cooking skill level: Must be one of [beginner, intermediate, advanced].",
      "Invalid time availability: Must be between 15 and 180 minutes.",
      "Conflicting dietary restrictions: Some combinations may be incompatible (e.g., vegan and specific meat preferences)."
    ],
    "usage": "Provide dietary_restrictions, cooking_skill, and time_availability as minimum requirements. Optionally add food_preferences and dislikes for more personalized recommendations.",
    "output_details": {
      "profile_id": {
        "type": "string",
        "description": "Unique identifier for the created dietary profile"
      },
      "restriction_summary": {
        "type": "string",
        "description": "Summary of all dietary restrictions and preferences"
      },
      "recommended_cuisines": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Cuisines that match the dietary profile"
      },
      "complexity_level": {
        "type": "string",
        "description": "Recommended recipe complexity based on skill and time"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Nutritional Target Calculator",
    "tool_description": "Calculates daily nutritional targets based on demographic information, activity level, and health goals for meal planning optimization.",
    "parameters": {
      "age": {
        "type": "integer",
        "required": true,
        "description": "Age in years (1-120)"
      },
      "gender": {
        "type": "string",
        "required": true,
        "description": "Gender: male, female, or other"
      },
      "weight_kg": {
        "type": "number",
        "required": true,
        "description": "Current weight in kilograms (20-300)"
      },
      "height_cm": {
        "type": "number",
        "required": true,
        "description": "Height in centimeters (100-250)"
      },
      "activity_level": {
        "type": "string",
        "required": true,
        "description": "Activity level: sedentary, lightly_active, moderately_active, very_active, or extremely_active"
      },
      "health_goal": {
        "type": "string",
        "required": true,
        "description": "Primary health goal: maintain_weight, lose_weight, gain_weight, build_muscle, or improve_health"
      },
      "medical_conditions": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": [],
        "description": "Relevant medical conditions affecting nutrition (e.g., diabetes, hypertension, heart_disease)"
      }
    },
    "error_messages": [
      "Invalid demographic data: Age must be 1-120, weight 20-300kg, height 100-250cm.",
      "Invalid activity level: Must be one of [sedentary, lightly_active, moderately_active, very_active, extremely_active].",
      "Invalid health goal: Must be one of [maintain_weight, lose_weight, gain_weight, build_muscle, improve_health].",
      "Invalid gender: Must be one of [male, female, other].",
      "Unrealistic parameters: Check that age, weight, and height values are realistic and consistent."
    ],
    "usage": "Provide all demographic information (age, gender, weight_kg, height_cm) along with activity_level and health_goal. Optionally include medical_conditions for more precise recommendations.",
    "output_details": {
      "daily_calories": {
        "type": "integer",
        "description": "Recommended daily calorie intake"
      },
      "protein_grams": {
        "type": "number",
        "description": "Daily protein target in grams"
      },
      "carbs_grams": {
        "type": "number",
        "description": "Daily carbohydrate target in grams"
      },
      "fat_grams": {
        "type": "number",
        "description": "Daily fat target in grams"
      },
      "fiber_grams": {
        "type": "number",
        "description": "Daily fiber target in grams"
      },
      "sodium_mg": {
        "type": "number",
        "description": "Daily sodium limit in milligrams"
      },
      "bmr": {
        "type": "integer",
        "description": "Basal metabolic rate in calories"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recipe Database Query",
    "tool_description": "Searches and filters recipes from a comprehensive database based on dietary requirements, preferences, and constraints.",
    "parameters": {
      "dietary_profile": {
        "type": "string",
        "required": true,
        "description": "Dietary profile ID from Dietary Profile Creator"
      },
      "meal_type": {
        "type": "string",
        "required": true,
        "description": "Type of meal: breakfast, lunch, dinner, snack, or dessert"
      },
      "max_prep_time": {
        "type": "integer",
        "required": false,
        "default": 60,
        "description": "Maximum preparation time in minutes (5-300)"
      },
      "cuisine_preference": {
        "type": "string",
        "required": false,
        "default": "any",
        "description": "Preferred cuisine type or 'any' for no preference"
      },
      "max_results": {
        "type": "integer",
        "required": false,
        "default": 20,
        "description": "Maximum number of recipes to return (1-100)"
      }
    },
    "error_messages": [
      "Invalid dietary profile: Profile ID not found or invalid format.",
      "Invalid meal type: Must be one of [breakfast, lunch, dinner, snack, dessert].",
      "Invalid prep time: Must be between 5 and 300 minutes.",
      "Invalid max results: Must be between 1 and 100.",
      "No recipes found: No recipes match the specified criteria. Try broadening your search parameters."
    ],
    "usage": "Provide dietary_profile and meal_type as required parameters. Optionally specify max_prep_time, cuisine_preference, and max_results to refine the search.",
    "output_details": {
      "recipe_count": {
        "type": "integer",
        "description": "Number of recipes found"
      },
      "recipe_ids": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of unique recipe identifiers"
      },
      "recipe_names": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of recipe names corresponding to the IDs"
      },
      "prep_times": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Preparation times in minutes for each recipe"
      },
      "difficulty_levels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Difficulty level for each recipe (easy, medium, hard)"
      },
      "cuisines": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Cuisine type for each recipe"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Meal Nutritional Analyzer",
    "tool_description": "Analyzes the nutritional content of recipes or complete meals, providing detailed macronutrient and micronutrient breakdowns.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Recipe identifier from Recipe Database Query"
      },
      "serving_size": {
        "type": "number",
        "required": false,
        "default": 1.0,
        "description": "Serving size multiplier (0.25-10.0)"
      }
    },
    "error_messages": [
      "Invalid recipe ID: Recipe not found in database.",
      "Invalid serving size: Must be between 0.25 and 10.0.",
      "Missing nutritional data: Recipe lacks sufficient nutritional information for analysis.",
      "Calculation error: Unable to compute nutritional values due to incomplete ingredient data."
    ],
    "usage": "Provide a valid recipe_id from the recipe database. Optionally specify serving_size to scale nutritional values proportionally.",
    "output_details": {
      "recipe_name": {
        "type": "string",
        "description": "Name of the analyzed recipe"
      },
      "calories_per_serving": {
        "type": "number",
        "description": "Total calories per serving"
      },
      "protein_grams": {
        "type": "number",
        "description": "Protein content in grams"
      },
      "carbs_grams": {
        "type": "number",
        "description": "Carbohydrate content in grams"
      },
      "fat_grams": {
        "type": "number",
        "description": "Fat content in grams"
      },
      "fiber_grams": {
        "type": "number",
        "description": "Fiber content in grams"
      },
      "sodium_mg": {
        "type": "number",
        "description": "Sodium content in milligrams"
      },
      "sugar_grams": {
        "type": "number",
        "description": "Sugar content in grams"
      },
      "nutritional_density_score": {
        "type": "number",
        "description": "Overall nutritional quality score (0-100)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weekly Meal Scheduler",
    "tool_description": "Creates a structured weekly meal schedule by assigning selected recipes to specific days and meal times based on preferences and constraints.",
    "parameters": {
      "recipe_ids": {
        "type": "array",
        "items": {"type": "string"},
        "required": true,
        "description": "List of recipe IDs to include in the meal plan",
        "minItems": 7,
        "maxItems": 50
      },
      "start_date": {
        "type": "string",
        "format": "date-time",
        "required": true,
        "description": "Start date for the meal plan (ISO 8601 format)"
      },
      "meals_per_day": {
        "type": "integer",
        "required": false,
        "default": 3,
        "description": "Number of main meals per day (2-5)"
      },
      "include_snacks": {
        "type": "boolean",
        "required": false,
        "default": false,
        "description": "Whether to include snacks in the schedule"
      },
      "prep_day": {
        "type": "string",
        "required": false,
        "default": "sunday",
        "description": "Preferred meal prep day (monday-sunday or none)"
      },
      "repeat_meals": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Allow repeating meals during the week"
      },
      "dietary_profile": {
        "type": "string",
        "required": true,
        "description": "Dietary profile ID for consistency checking"
      }
    },
    "error_messages": [
      "Insufficient recipes: Need at least 7 recipe IDs for a weekly plan.",
      "Invalid date format: Use ISO 8601 format (YYYY-MM-DDTHH:MM:SSZ).",
      "Invalid meals per day: Must be between 2 and 5.",
      "Invalid prep day: Must be a day of the week (monday-sunday) or 'none'.",
      "Recipe mismatch: Some recipes don't match the dietary profile requirements.",
      "Scheduling conflict: Unable to create balanced schedule with provided recipes."
    ],
    "usage": "Provide recipe_ids array, start_date, and dietary_profile. Optionally customize meals_per_day, include_snacks, prep_day, and repeat_meals preferences.",
    "output_details": {
      "schedule_id": {
        "type": "string",
        "description": "Unique identifier for the created meal schedule"
      },
      "week_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of dates covered by the meal plan"
      },
      "daily_schedules": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Daily meal schedules with assigned recipes"
      },
      "prep_schedule": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommended preparation timeline"
      },
      "total_unique_recipes": {
        "type": "integer",
        "description": "Number of unique recipes used in the plan"
      },
      "estimated_weekly_prep_time": {
        "type": "integer",
        "description": "Total estimated preparation time in minutes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Shopping List Generator",
    "tool_description": "Generates a consolidated shopping list from a meal plan, organizing ingredients by store category and eliminating duplicates.",
    "parameters": {
      "meal_schedule_id": {
        "type": "string",
        "required": true,
        "description": "Schedule ID from Weekly Meal Scheduler"
      },
      "household_size": {
        "type": "integer",
        "required": true,
        "description": "Number of people the meals will serve (1-12)"
      },
      "pantry_staples": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": [],
        "description": "List of ingredients already available at home"
      },
      "store_layout": {
        "type": "string",
        "required": false,
        "default": "standard",
        "description": "Store organization preference: standard, alphabetical, or custom"
      },
      "include_quantities": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to include specific quantities and units"
      }
    },
    "error_messages": [
      "Invalid schedule ID: Meal schedule not found or invalid.",
      "Invalid household size: Must be between 1 and 12 people.",
      "Invalid store layout: Must be 'standard', 'alphabetical', or 'custom'.",
      "Missing recipe data: Some recipes in the schedule lack ingredient information.",
      "Quantity calculation error: Unable to calculate proper quantities for some ingredients."
    ],
    "usage": "Provide meal_schedule_id and household_size. Optionally specify pantry_staples to exclude, preferred store_layout, and whether to include_quantities.",
    "output_details": {
      "total_items": {
        "type": "integer",
        "description": "Total number of items on the shopping list"
      },
      "produce_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Fresh produce items needed"
      },
      "protein_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Meat, fish, and protein items"
      },
      "dairy_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Dairy and refrigerated items"
      },
      "pantry_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Shelf-stable pantry items"
      },
      "frozen_items": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Frozen food items"
      },
      "estimated_total_cost": {
        "type": "number",
        "description": "Estimated total cost in local currency"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Ingredient Substitution Finder",
    "tool_description": "Finds suitable ingredient substitutions based on dietary restrictions, allergies, or ingredient availability while maintaining recipe integrity.",
    "parameters": {
      "original_ingredient": {
        "type": "string",
        "required": true,
        "description": "The ingredient that needs to be substituted"
      },
      "substitution_reason": {
        "type": "string",
        "required": true,
        "description": "Reason for substitution: allergy, dietary_restriction, unavailable, preference, or cost"
      },
      "recipe_type": {
        "type": "string",
        "required": true,
        "description": "Type of recipe: baking, cooking, sauce, salad, or beverage"
      },
      "dietary_restrictions": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": [],
        "description": "Applicable dietary restrictions to consider"
      },
      "quantity_needed": {
        "type": "string",
        "required": false,
        "default": "1 unit",
        "description": "Amount of original ingredient needed (e.g., '2 cups', '200g')"
      },
      "max_alternatives": {
        "type": "integer",
        "required": false,
        "default": 5,
        "description": "Maximum number of alternatives to suggest (1-10)"
      }
    },
    "error_messages": [
      "Unknown ingredient: Original ingredient not recognized in database.",
      "Invalid substitution reason: Must be one of [allergy, dietary_restriction, unavailable, preference, cost].",
      "Invalid recipe type: Must be one of [baking, cooking, sauce, salad, beverage].",
      "Invalid max alternatives: Must be between 1 and 10.",
      "No suitable substitutes: No alternatives found that meet the specified criteria.",
      "Incompatible requirements: Dietary restrictions conflict with available substitutions."
    ],
    "usage": "Provide original_ingredient, substitution_reason, and recipe_type. Optionally include dietary_restrictions, quantity_needed, and max_alternatives for more precise recommendations.",
    "output_details": {
      "substitute_ingredients": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of suitable substitute ingredients"
      },
      "conversion_ratios": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Conversion ratios for each substitute (e.g., '1:1', '2:1')"
      },
      "flavor_impact": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Expected flavor changes for each substitute"
      },
      "availability_scores": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Availability scores (1-10) for each substitute"
      },
      "preparation_notes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Special preparation notes for each substitute"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Meal Prep Planner",
    "tool_description": "Creates a detailed meal preparation timeline and strategy to optimize cooking efficiency and food freshness throughout the week.",
    "parameters": {
      "meal_schedule_id": {
        "type": "string",
        "required": true,
        "description": "Schedule ID from Weekly Meal Scheduler"
      },
      "prep_time_available": {
        "type": "integer",
        "required": true,
        "description": "Total time available for meal prep in minutes (60-480)"
      },
      "prep_sessions": {
        "type": "integer",
        "required": false,
        "default": 1,
        "description": "Number of prep sessions per week (1-3)"
      },
      "storage_capacity": {
        "type": "string",
        "required": false,
        "default": "medium",
        "description": "Storage capacity: small, medium, or large"
      },
      "cooking_equipment": {
        "type": "array",
        "items": {"type": "string"},
        "required": false,
        "default": ["stovetop", "oven", "refrigerator"],
        "description": "Available cooking equipment and appliances"
      },
      "freshness_priority": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to prioritize ingredient freshness over convenience"
      }
    },
    "error_messages": [
      "Invalid schedule ID: Meal schedule not found or invalid.",
      "Invalid prep time: Must be between 60 and 480 minutes.",
      "Invalid prep sessions: Must be between 1 and 3 sessions per week.",
      "Invalid storage capacity: Must be 'small', 'medium', or 'large'.",
      "Insufficient time: Not enough prep time for the planned meals.",
      "Equipment mismatch: Some recipes require equipment not in the available list."
    ],
    "usage": "Provide meal_schedule_id and prep_time_available. Optionally specify prep_sessions, storage_capacity, cooking_equipment, and freshness_priority for customized planning.",
    "output_details": {
      "prep_timeline": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Step-by-step preparation timeline with time estimates"
      },
      "batch_cooking_groups": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Groups of recipes that can be prepared together"
      },
      "storage_instructions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Storage instructions for prepared components"
      },
      "daily_finishing_tasks": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Quick finishing tasks for each day"
      },
      "total_prep_time": {
        "type": "integer",
        "description": "Actual total preparation time needed in minutes"
      },
      "time_savings": {
        "type": "integer",
        "description": "Estimated time saved during the week in minutes"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Nutritional Gap Analyzer",
    "tool_description": "Analyzes a meal plan against nutritional targets to identify deficiencies or excesses and suggests improvements.",
    "parameters": {
      "meal_schedule_id": {
        "type": "string",
        "required": true,
        "description": "Schedule ID from Weekly Meal Scheduler"
      },
      "nutritional_targets": {
        "type": "string",
        "required": true,
        "description": "Target profile ID from Nutritional Target Calculator"
      },
      "analysis_period": {
        "type": "string",
        "required": false,
        "default": "weekly",
        "description": "Analysis timeframe: daily or weekly"
      },
      "tolerance_percentage": {
        "type": "number",
        "required": false,
        "default": 10.0,
        "description": "Acceptable variance from targets as percentage (5.0-25.0)"
      }
    },
    "error_messages": [
      "Invalid schedule ID: Meal schedule not found or invalid.",
      "Invalid nutritional targets: Target profile not found or invalid.",
      "Invalid analysis period: Must be 'daily' or 'weekly'.",
      "Invalid tolerance percentage: Must be between 5.0 and 25.0.",
      "Incomplete nutritional data: Some recipes lack sufficient nutritional information.",
      "Calculation error: Unable to compute nutritional gaps due to missing data."
    ],
    "usage": "Provide meal_schedule_id and nutritional_targets. Optionally specify analysis_period and tolerance_percentage for customized analysis sensitivity.",
    "output_details": {
      "overall_score": {
        "type": "integer",
        "description": "Overall nutritional adequacy score (0-100)"
      },
      "calorie_status": {
        "type": "string",
        "description": "Calorie status: deficit, adequate, or excess"
      },
      "protein_gap": {
        "type": "number",
        "description": "Protein gap in grams (negative = deficit, positive = excess)"
      },
      "carb_gap": {
        "type": "number",
        "description": "Carbohydrate gap in grams"
      },
      "fat_gap": {
        "type": "number",
        "description": "Fat gap in grams"
      },
      "fiber_gap": {
        "type": "number",
        "description": "Fiber gap in grams"
      },
      "micronutrient_concerns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of concerning micronutrient levels"
      },
      "improvement_suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific suggestions to address nutritional gaps"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recipe Portion Adjuster",
    "tool_description": "Scales recipe ingredients and cooking instructions to accommodate different serving sizes while maintaining proper proportions and cooking techniques.",
    "parameters": {
      "recipe_id": {
        "type": "string",
        "required": true,
        "description": "Recipe identifier from database"
      },
      "target_servings": {
        "type": "number",
        "required": true,
        "description": "Desired number of servings (0.25-20.0)"
      },
      "original_servings": {
        "type": "number",
        "required": false,
        "default": 0,
        "description": "Original recipe servings (auto-detected if 0)"
      },
      "preserve_ratios": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to preserve ingredient ratios exactly"
      },
      "round_measurements": {
        "type": "boolean",
        "required": false,
        "default": true,
        "description": "Whether to round measurements to practical values"
      }
    },
    "error_messages": [
      "Invalid recipe ID: Recipe not found in database.",
      "Invalid target servings: Must be between 0.25 and 20.0 servings.",
      "Invalid original servings: Must be positive number or 0 for auto-detection.",
      "Scaling impossible: Recipe cannot be scaled due to technique constraints.",
      "Measurement error: Some ingredients cannot be accurately scaled to requested size."
    ],
    "usage": "Provide recipe_id and target_servings. Optionally specify original_servings if different from recipe default, and set preserve_ratios and round_measurements preferences.",
    "output_details": {
      "scaled_recipe_id": {
        "type": "string",
        "description": "New recipe identifier for scaled version"
      },
      "scaling_factor": {
        "type": "number",
        "description": "Applied scaling factor (target/original)"
      },
      "adjusted_ingredients": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of ingredients with scaled quantities"
      },
      "cooking_time_adjustments": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Adjusted cooking times
