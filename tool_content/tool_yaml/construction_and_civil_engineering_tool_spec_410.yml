field_name: construction_and_civil_engineering
subfield: geotechnical_engineering_and_soil_analysis
task: Soil sampling and field testing coordination
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **medium** difficulty. It involves coordinating multiple field activities, managing logistics, ensuring quality control, and handling safety protocols. The scope includes sample collection, in-situ testing, equipment management, and data coordination across multiple stakeholders, with moderate dependencies between activities and moderate risk from improper sampling or testing procedures.

  **STEP 2 — Set a tool budget**

  Based on medium difficulty, I'm targeting **12 tools** to cover the various aspects of soil sampling coordination, field testing management, quality control, and data integration.

  **STEP 3 — List all tool names and dependencies**

  Tools and their data flow:
  1. **Site Survey Planner** - Consumes: site parameters → Produces: sampling locations
  2. **Sampling Schedule Generator** - Consumes: locations, resources → Produces: scheduling plan
  3. **Equipment Status Checker** - Consumes: equipment list → Produces: availability status
  4. **Field Team Coordinator** - Consumes: personnel, schedules → Produces: team assignments
  5. **Sample Collection Logger** - Consumes: field data → Produces: collection records
  6. **In-Situ Test Manager** - Consumes: test parameters → Produces: test results
  7. **Quality Control Validator** - Consumes: samples, standards → Produces: validation status
  8. **Chain of Custody Tracker** - Consumes: sample records → Produces: custody documentation
  9. **Weather Impact Assessor** - Consumes: weather data → Produces: feasibility assessment
  10. **Safety Protocol Monitor** - Consumes: site conditions → Produces: safety clearance
  11. **Progress Report Generator** - Consumes: field data → Produces: status reports
  12. **Lab Coordination Manager** - Consumes: samples, requirements → Produces: lab schedules

  **STEP 4 — Multi-tool plans**

  **Simple plans:**
  - Basic sampling: Site Survey Planner → Sample Collection Logger → Chain of Custody Tracker
  - Equipment check: Equipment Status Checker → Safety Protocol Monitor → Field Team Coordinator

  **Medium plans:**
  - Daily operations: Weather Impact Assessor → Field Team Coordinator → Sample Collection Logger → Quality Control Validator → Progress Report Generator
  - Test coordination: Site Survey Planner → In-Situ Test Manager → Quality Control Validator → Lab Coordination Manager

  **Complex plans:**
  - Full project setup: Site Survey Planner → Sampling Schedule Generator → Equipment Status Checker → Field Team Coordinator → Weather Impact Assessor → Safety Protocol Monitor → Sample Collection Logger → In-Situ Test Manager → Quality Control Validator → Chain of Custody Tracker → Lab Coordination Manager → Progress Report Generator
  - Quality assurance workflow: Sample Collection Logger → Quality Control Validator → Chain of Custody Tracker → Lab Coordination Manager → Progress Report Generator

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Site Survey Planner",
    "tool_description": "Plans optimal sampling locations and depths based on site characteristics, project requirements, and geotechnical standards.",
    "parameters": {
      "site_area_length": {
        "type": "number",
        "required": true,
        "description": "Length of the site area in meters"
      },
      "site_area_width": {
        "type": "number",
        "required": true,
        "description": "Width of the site area in meters"
      },
      "project_type": {
        "type": "string",
        "required": true,
        "description": "Type of construction project (foundation, road, embankment, retaining_wall, other)"
      },
      "soil_investigation_standard": {
        "type": "string",
        "required": true,
        "description": "Applicable standard (ASTM_D1586, ISO_22476, BS_1377, other)"
      },
      "target_depth": {
        "type": "number",
        "required": true,
        "description": "Maximum investigation depth in meters"
      }
    },
    "error_messages": [
      "Invalid site dimensions: Site area length and width must be positive numbers greater than 0.",
      "Unsupported project type: Use one of [foundation, road, embankment, retaining_wall, other].",
      "Unknown standard: Use one of [ASTM_D1586, ISO_22476, BS_1377, other].",
      "Invalid target depth: Depth must be a positive number between 1 and 100 meters."
    ],
    "usage": "Provide site dimensions, project type, investigation standard, and target depth. The tool generates optimal sampling locations and depths based on geotechnical best practices.",
    "output_details": {
      "total_locations": {
        "type": "integer",
        "description": "Total number of recommended sampling locations"
      },
      "location_coordinates": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of coordinate pairs for each sampling location (x,y format)"
      },
      "sampling_depths": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Array of recommended sampling depths in meters for each location"
      },
      "survey_plan_id": {
        "type": "string",
        "description": "Unique identifier for the generated survey plan"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sampling Schedule Generator",
    "tool_description": "Creates detailed schedules for soil sampling activities, coordinating equipment, personnel, and logistics across multiple locations.",
    "parameters": {
      "sampling_locations": {
        "type": "array",
        "required": true,
        "description": "Array of sampling location identifiers",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 50
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Project start date",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "Project completion deadline",
        "format": "date-time"
      },
      "crew_size": {
        "type": "integer",
        "required": true,
        "description": "Number of available crew members"
      },
      "equipment_list": {
        "type": "array",
        "required": true,
        "description": "Available equipment types",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "working_hours_per_day": {
        "type": "integer",
        "required": false,
        "description": "Daily working hours",
        "default": 8
      },
      "weather_buffer_days": {
        "type": "integer",
        "required": false,
        "description": "Buffer days for weather delays",
        "default": 2
      },
      "priority_locations": {
        "type": "array",
        "required": false,
        "description": "High-priority location identifiers",
        "items": {
          "type": "string"
        },
        "default": "None"
      },
      "mobilization_time_hours": {
        "type": "number",
        "required": false,
        "description": "Equipment setup time per location in hours",
        "default": 2
      },
      "samples_per_location": {
        "type": "integer",
        "required": false,
        "description": "Expected samples per location",
        "default": 3
      },
      "testing_time_per_sample_hours": {
        "type": "number",
        "required": false,
        "description": "Time required per sample in hours",
        "default": 1.5
      }
    },
    "error_messages": [
      "Invalid date range: Start date must be before end date and both must be valid ISO 8601 format.",
      "Insufficient resources: Crew size must be at least 2 and equipment list cannot be empty.",
      "Invalid time parameters: Working hours must be between 4 and 12, mobilization time must be positive.",
      "Schedule conflict: Not enough time to complete all locations within the specified date range.",
      "Priority location mismatch: All priority locations must exist in the sampling locations list."
    ],
    "usage": "Provide sampling locations, date range, crew size, and equipment list. Optionally specify working hours, weather buffers, and priority locations. The tool generates an optimized schedule.",
    "output_details": {
      "schedule_id": {
        "type": "string",
        "description": "Unique identifier for the generated schedule"
      },
      "daily_activities": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of daily activity descriptions with dates and locations"
      },
      "total_duration_days": {
        "type": "integer",
        "description": "Total project duration in days"
      },
      "resource_utilization": {
        "type": "number",
        "description": "Percentage of resource utilization"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Equipment Status Checker",
    "tool_description": "Monitors availability, maintenance status, and operational readiness of soil sampling and testing equipment.",
    "parameters": {
      "equipment_ids": {
        "type": "array",
        "required": true,
        "description": "List of equipment identifiers to check",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 30
      },
      "required_date": {
        "type": "string",
        "required": true,
        "description": "Date when equipment is needed",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Empty equipment list: At least one equipment ID must be provided.",
      "Invalid date format: Required date must be in ISO 8601 date-time format.",
      "Equipment ID not found: One or more equipment IDs are not recognized in the system."
    ],
    "usage": "Provide equipment IDs and required date. The tool checks availability and maintenance status for each piece of equipment.",
    "output_details": {
      "available_equipment": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of equipment IDs that are available and operational"
      },
      "unavailable_equipment": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of equipment IDs that are not available"
      },
      "maintenance_required": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of equipment IDs requiring maintenance"
      },
      "availability_percentage": {
        "type": "number",
        "description": "Percentage of requested equipment that is available"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Field Team Coordinator",
    "tool_description": "Assigns field personnel to sampling locations and coordinates team activities based on skills, availability, and project requirements.",
    "parameters": {
      "team_members": {
        "type": "array",
        "required": true,
        "description": "Available team member identifiers",
        "items": {
          "type": "string"
        },
        "minItems": 2,
        "maxItems": 20
      },
      "schedule_id": {
        "type": "string",
        "required": true,
        "description": "Reference to sampling schedule"
      },
      "skill_requirements": {
        "type": "array",
        "required": true,
        "description": "Required skills for the project",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      }
    },
    "error_messages": [
      "Insufficient team size: At least 2 team members are required for safe field operations.",
      "Schedule not found: The provided schedule ID is not valid or does not exist.",
      "Skill mismatch: Available team members do not have the required skills for this project.",
      "Team member not found: One or more team member IDs are not recognized."
    ],
    "usage": "Provide team member list, schedule ID, and skill requirements. The tool assigns personnel to appropriate tasks and locations.",
    "output_details": {
      "team_assignments": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of team assignments with member IDs and assigned tasks"
      },
      "coordination_plan": {
        "type": "string",
        "description": "Overall coordination strategy and communication plan"
      },
      "skill_coverage": {
        "type": "number",
        "description": "Percentage of required skills covered by assigned team"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sample Collection Logger",
    "tool_description": "Records detailed information about soil sample collection including location, depth, conditions, and visual observations.",
    "parameters": {
      "location_id": {
        "type": "string",
        "required": true,
        "description": "Sampling location identifier"
      },
      "collection_date": {
        "type": "string",
        "required": true,
        "description": "Date and time of sample collection",
        "format": "date-time"
      },
      "sample_depth": {
        "type": "number",
        "required": true,
        "description": "Sample collection depth in meters"
      },
      "collector_id": {
        "type": "string",
        "required": true,
        "description": "ID of person collecting the sample"
      },
      "soil_type_visual": {
        "type": "string",
        "required": true,
        "description": "Visual classification of soil type"
      },
      "moisture_condition": {
        "type": "string",
        "required": true,
        "description": "Moisture condition (dry, moist, wet, saturated)"
      },
      "sample_container_type": {
        "type": "string",
        "required": true,
        "description": "Type of container used for sample storage"
      },
      "drilling_method": {
        "type": "string",
        "required": false,
        "description": "Method used for drilling or excavation",
        "default": "hand_auger"
      },
      "groundwater_depth": {
        "type": "number",
        "required": false,
        "description": "Depth to groundwater in meters",
        "default": "None"
      },
      "weather_conditions": {
        "type": "string",
        "required": false,
        "description": "Weather conditions during sampling",
        "default": "clear"
      },
      "field_notes": {
        "type": "string",
        "required": false,
        "description": "Additional field observations",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid sample depth: Depth must be a positive number between 0.1 and 50 meters.",
      "Invalid moisture condition: Use one of [dry, moist, wet, saturated].",
      "Invalid date format: Collection date must be in ISO 8601 date-time format.",
      "Missing required field: Location ID, collector ID, soil type, moisture condition, and container type are required.",
      "Invalid drilling method: Use a recognized drilling or excavation method."
    ],
    "usage": "Provide location ID, collection date, sample depth, collector ID, soil type, moisture condition, and container type. Optionally add drilling method, groundwater depth, weather, and field notes.",
    "output_details": {
      "sample_id": {
        "type": "string",
        "description": "Unique identifier assigned to the collected sample"
      },
      "collection_record": {
        "type": "string",
        "description": "Formatted collection record with all sample details"
      },
      "qr_code": {
        "type": "string",
        "description": "QR code for sample tracking"
      },
      "collection_status": {
        "type": "string",
        "description": "Status of the sample collection (completed, pending_lab_transfer, etc.)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "In-Situ Test Manager",
    "tool_description": "Manages and records results from in-situ soil tests including SPT, CPT, and permeability tests performed in the field.",
    "parameters": {
      "location_id": {
        "type": "string",
        "required": true,
        "description": "Testing location identifier"
      },
      "test_type": {
        "type": "string",
        "required": true,
        "description": "Type of in-situ test (SPT, CPT, permeability, vane_shear, plate_load)"
      },
      "test_depth": {
        "type": "number",
        "required": true,
        "description": "Depth at which test is performed in meters"
      },
      "operator_id": {
        "type": "string",
        "required": true,
        "description": "ID of test operator"
      },
      "equipment_id": {
        "type": "string",
        "required": true,
        "description": "Equipment used for testing"
      },
      "test_results": {
        "type": "array",
        "required": true,
        "description": "Array of numerical test results",
        "items": {
          "type": "number"
        },
        "minItems": 1,
        "maxItems": 50
      }
    },
    "error_messages": [
      "Invalid test type: Use one of [SPT, CPT, permeability, vane_shear, plate_load].",
      "Invalid test depth: Depth must be positive and between 0.1 and 30 meters.",
      "Empty test results: At least one numerical result must be provided.",
      "Equipment not calibrated: The specified equipment requires calibration before use.",
      "Operator not certified: The operator is not certified for this type of test."
    ],
    "usage": "Provide location ID, test type, depth, operator ID, equipment ID, and test results array. The tool records and validates the in-situ test data.",
    "output_details": {
      "test_id": {
        "type": "string",
        "description": "Unique identifier for the test record"
      },
      "processed_results": {
        "type": "string",
        "description": "Processed and interpreted test results"
      },
      "test_validity": {
        "type": "boolean",
        "description": "Whether the test results are valid according to standards"
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of recommendations based on test results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Quality Control Validator",
    "tool_description": "Validates sampling procedures and test results against quality standards and project specifications.",
    "parameters": {
      "sample_ids": {
        "type": "array",
        "required": true,
        "description": "Array of sample identifiers to validate",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 100
      },
      "quality_standard": {
        "type": "string",
        "required": true,
        "description": "Quality control standard to apply (ASTM, ISO, BS, internal)"
      },
      "project_specifications": {
        "type": "string",
        "required": true,
        "description": "Project-specific quality requirements"
      }
    },
    "error_messages": [
      "Sample not found: One or more sample IDs do not exist in the system.",
      "Unknown quality standard: Use one of [ASTM, ISO, BS, internal].",
      "Invalid project specifications: Project specifications must be clearly defined.",
      "Quality check failed: One or more samples do not meet the specified quality standards."
    ],
    "usage": "Provide sample IDs, quality standard, and project specifications. The tool validates samples against quality requirements and flags any issues.",
    "output_details": {
      "validation_report": {
        "type": "string",
        "description": "Comprehensive validation report with pass/fail status"
      },
      "passed_samples": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of sample IDs that passed quality validation"
      },
      "failed_samples": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of sample IDs that failed quality validation"
      },
      "overall_quality_score": {
        "type": "number",
        "description": "Overall quality score as percentage"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Chain of Custody Tracker",
    "tool_description": "Maintains chain of custody documentation for soil samples from collection through laboratory analysis.",
    "parameters": {
      "sample_id": {
        "type": "string",
        "required": true,
        "description": "Unique sample identifier"
      },
      "transfer_type": {
        "type": "string",
        "required": true,
        "description": "Type of transfer (collection, transport, lab_receipt, storage, analysis)"
      },
      "from_person": {
        "type": "string",
        "required": true,
        "description": "Person transferring custody"
      },
      "to_person": {
        "type": "string",
        "required": true,
        "description": "Person receiving custody"
      },
      "transfer_time": {
        "type": "string",
        "required": true,
        "description": "Date and time of custody transfer",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Invalid transfer type: Use one of [collection, transport, lab_receipt, storage, analysis].",
      "Sample ID not found: The specified sample ID does not exist in the system.",
      "Invalid transfer time: Time must be in ISO 8601 date-time format.",
      "Custody violation: From_person must have current custody of the sample.",
      "Personnel not authorized: To_person is not authorized to receive custody of samples."
    ],
    "usage": "Record each custody transfer by providing sample ID, transfer type, involved personnel, and transfer time. Maintain complete documentation chain.",
    "output_details": {
      "custody_record_id": {
        "type": "string",
        "description": "Unique identifier for the custody record"
      },
      "chain_status": {
        "type": "string",
        "description": "Current status of the chain of custody (intact, broken, pending)"
      },
      "current_custodian": {
        "type": "string",
        "description": "Person currently having custody of the sample"
      },
      "custody_history": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of historical custody transfers for this sample"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weather Impact Assessor",
    "tool_description": "Evaluates weather conditions and their impact on field sampling activities, providing recommendations for scheduling.",
    "parameters": {
      "location_coordinates": {
        "type": "string",
        "required": true,
        "description": "Geographic coordinates of the site (latitude,longitude format)"
      },
      "planned_date": {
        "type": "string",
        "required": true,
        "description": "Planned date for field activities",
        "format": "date-time"
      },
      "activity_type": {
        "type": "string",
        "required": true,
        "description": "Type of field activity (drilling, sampling, testing, surveying)"
      }
    },
    "error_messages": [
      "Invalid coordinates: Provide coordinates in latitude,longitude format (e.g., '40.7128,-74.0060').",
      "Invalid date format: Planned date must be in ISO 8601 date-time format.",
      "Unknown activity type: Use one of [drilling, sampling, testing, surveying].",
      "Weather data unavailable: Unable to retrieve weather forecast for the specified location and date."
    ],
    "usage": "Provide site coordinates, planned date, and activity type. The tool assesses weather impact and provides scheduling recommendations.",
    "output_details": {
      "weather_suitability": {
        "type": "string",
        "description": "Suitability rating for planned activities (excellent, good, fair, poor, unsuitable)"
      },
      "weather_forecast": {
        "type": "string",
        "description": "Weather forecast summary for the planned date"
      },
      "risk_factors": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of weather-related risk factors"
      },
      "recommendations": {
        "type": "string",
        "description": "Recommendations for proceeding or rescheduling activities"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Safety Protocol Monitor",
    "tool_description": "Monitors safety conditions and ensures compliance with safety protocols during soil sampling and testing operations.",
    "parameters": {
      "site_id": {
        "type": "string",
        "required": true,
        "description": "Site identifier for safety assessment"
      },
      "activity_types": {
        "type": "array",
        "required": true,
        "description": "Types of activities to be performed",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 10
      },
      "team_size": {
        "type": "integer",
        "required": true,
        "description": "Number of personnel on site"
      },
      "equipment_in_use": {
        "type": "array",
        "required": true,
        "description": "Equipment being used at the site",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 15
      }
    },
    "error_messages": [
      "Site not found: The specified site ID is not recognized in the safety database.",
      "Invalid team size: Team size must be between 1 and 50 personnel.",
      "Unknown activity type: All activity types must be recognized safety categories.",
      "Equipment safety violation: One or more pieces of equipment require safety certification.",
      "Insufficient safety measures: Additional safety protocols are required for the specified activities."
    ],
    "usage": "Provide site ID, activity types, team size, and equipment list. The tool assesses safety conditions and provides clearance or recommendations.",
    "output_details": {
      "safety_clearance": {
        "type": "boolean",
        "description": "Whether site activities are cleared for safety"
      },
      "safety_score": {
        "type": "number",
        "description": "Overall safety assessment score (0-100)"
      },
      "required_ppe": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of required personal protective equipment"
      },
      "safety_warnings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of safety warnings and precautions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Progress Report Generator",
    "tool_description": "Generates comprehensive progress reports summarizing field activities, sample collection status, and project milestones.",
    "parameters": {
      "project_id": {
        "type": "string",
        "required": true,
        "description": "Project identifier for report generation"
      },
      "report_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date of reporting period",
        "format": "date-time"
      },
      "report_period_end": {
        "type": "string",
        "required": true,
        "description": "End date of reporting period",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Project not found: The specified project ID does not exist in the system.",
      "Invalid date range: Report period start must be before end date and both must be valid ISO 8601 format.",
      "No data available: No field activities or data found for the specified project and time period.",
      "Report generation failed: Unable to compile report due to incomplete data."
    ],
    "usage": "Provide project ID and reporting period dates. The tool compiles all relevant project data into a comprehensive progress report.",
    "output_details": {
      "report_id": {
        "type": "string",
        "description": "Unique identifier for the generated report"
      },
      "completion_percentage": {
        "type": "number",
        "description": "Overall project completion percentage"
      },
      "samples_collected": {
        "type": "integer",
        "description": "Total number of samples collected during the reporting period"
      },
      "tests_completed": {
        "type": "integer",
        "description": "Total number of in-situ tests completed"
      },
      "report_summary": {
        "type": "string",
        "description": "Executive summary of progress and key findings"
      },
      "next_milestones": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of upcoming project milestones"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Lab Coordination Manager",
    "tool_description": "Coordinates sample delivery to laboratories, manages testing schedules, and tracks analysis progress.",
    "parameters": {
      "sample_batch": {
        "type": "array",
        "required": true,
        "description": "Array of sample IDs to be sent to laboratory",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 200
      },
      "laboratory_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of the receiving laboratory"
      },
      "requested_tests": {
        "type": "array",
        "required": true,
        "description": "Types of laboratory tests requested",
        "items": {
          "type": "string"
        },
        "minItems": 1,
        "maxItems": 20
      },
      "priority_level": {
        "type": "string",
        "required": true,
        "description": "Priority level for testing (standard, expedited, rush)"
      },
      "delivery_date": {
        "type": "string",
        "required": true,
        "description": "Date samples will be delivered to lab",
        "format": "date-time"
      },
      "required_completion_date": {
        "type": "string",
        "required": false,
        "description": "Required date for test completion",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Sample not found: One or more sample IDs in the batch do not exist or are not ready for lab transfer.",
      "Laboratory not available: The specified laboratory ID is not recognized or not currently accepting samples.",
      "Invalid test types: One or more requested test types are not available at the selected laboratory.",
      "Priority level invalid: Use one of [standard, expedited, rush]
