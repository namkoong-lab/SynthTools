field_name: transportation_logistics
subfield: freight_and_cargo_management
task: Route planning and optimization for freight shipments
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to the complex multi-objective optimization involving cost, time, capacity, regulatory constraints, real-time conditions, and multiple stakeholders. It requires sophisticated algorithms, extensive data integration, and has high impact on business operations and customer satisfaction.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to handle the complexity of freight route optimization with adequate granularity and composability.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Shipment Data Validator** - Consumes: raw shipment requirements → Produces: validated shipment specifications
  2. **Route Distance Calculator** - Consumes: origin/destination coordinates → Produces: distance and time estimates
  3. **Vehicle Capacity Matcher** - Consumes: cargo specifications, vehicle fleet → Produces: compatible vehicle options
  4. **Traffic Condition Analyzer** - Consumes: route segments, time windows → Produces: traffic delay predictions
  5. **Cost Estimation Engine** - Consumes: route details, vehicle specs → Produces: comprehensive cost breakdown
  6. **Regulatory Compliance Checker** - Consumes: cargo type, route jurisdictions → Produces: compliance requirements
  7. **Weather Impact Assessor** - Consumes: route coordinates, timeframe → Produces: weather-related delays/risks
  8. **Delivery Window Optimizer** - Consumes: customer preferences, operational constraints → Produces: optimal time slots
  9. **Multi-Stop Route Planner** - Consumes: multiple destinations, priorities → Produces: optimized stop sequence
  10. **Fuel Consumption Estimator** - Consumes: route details, vehicle specs → Produces: fuel usage predictions
  11. **Driver Assignment Matcher** - Consumes: route requirements, driver qualifications → Produces: optimal driver assignments
  12. **Load Consolidation Optimizer** - Consumes: multiple shipments → Produces: consolidation opportunities
  13. **Risk Assessment Calculator** - Consumes: cargo value, route hazards → Produces: risk scores and mitigation
  14. **Performance Metrics Tracker** - Consumes: route execution data → Produces: KPI measurements
  15. **Route Alternative Generator** - Consumes: primary route, constraints → Produces: backup route options
  16. **Capacity Utilization Analyzer** - Consumes: vehicle specs, cargo details → Produces: utilization efficiency metrics
  17. **Real-time Route Adjuster** - Consumes: current conditions, original plan → Produces: dynamic route modifications

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Route Planning**: Shipment Data Validator → Route Distance Calculator → Cost Estimation Engine (validates shipment, calculates distance, estimates costs)
  2. **Vehicle Matching**: Shipment Data Validator → Vehicle Capacity Matcher → Fuel Consumption Estimator (matches appropriate vehicles for cargo)

  **Medium Plans:**
  1. **Compliance-Aware Routing**: Shipment Data Validator → Regulatory Compliance Checker → Route Distance Calculator → Weather Impact Assessor → Cost Estimation Engine (ensures regulatory compliance while optimizing routes)
  2. **Multi-Stop Optimization**: Shipment Data Validator → Multi-Stop Route Planner → Traffic Condition Analyzer → Delivery Window Optimizer (optimizes complex multi-destination routes)

  **Complex Plans:**
  1. **Comprehensive Route Optimization**: Shipment Data Validator → Vehicle Capacity Matcher → Multi-Stop Route Planner → Traffic Condition Analyzer → Weather Impact Assessor → Regulatory Compliance Checker → Cost Estimation Engine → Risk Assessment Calculator → Route Alternative Generator (full optimization considering all factors)
  2. **Dynamic Fleet Management**: Load Consolidation Optimizer → Vehicle Capacity Matcher → Driver Assignment Matcher → Multi-Stop Route Planner → Real-time Route Adjuster → Performance Metrics Tracker (manages entire fleet dynamically with real-time adjustments)

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Shipment Data Validator",
    "tool_description": "Validates and standardizes incoming shipment data to ensure completeness and accuracy before route planning begins.",
    "parameters": {
      "cargo_weight": {
        "type": "number",
        "required": true,
        "description": "Total weight of cargo in kilograms"
      },
      "cargo_volume": {
        "type": "number",
        "required": true,
        "description": "Total volume of cargo in cubic meters"
      },
      "cargo_type": {
        "type": "string",
        "required": true,
        "description": "Type of cargo (general, hazardous, perishable, fragile, oversized)"
      },
      "origin_address": {
        "type": "string",
        "required": true,
        "description": "Complete pickup address including city, state, and postal code"
      },
      "destination_address": {
        "type": "string",
        "required": true,
        "description": "Complete delivery address including city, state, and postal code"
      }
    },
    "error_messages": [
      "Invalid cargo weight: Weight must be a positive number greater than 0 and less than 50000 kg.",
      "Invalid cargo volume: Volume must be a positive number greater than 0 and less than 1000 cubic meters.",
      "Unsupported cargo type: Use one of [general, hazardous, perishable, fragile, oversized].",
      "Invalid address format: Provide complete addresses with street, city, state, and postal code.",
      "Missing required field: All cargo specifications and addresses must be provided."
    ],
    "usage": "Provide cargo specifications (weight, volume, type) and complete origin/destination addresses. The tool validates data integrity and returns standardized shipment information.",
    "output_details": {
      "validation_status": {
        "type": "boolean",
        "description": "Whether the shipment data passed validation"
      },
      "standardized_origin": {
        "type": "string",
        "description": "Standardized origin address format"
      },
      "standardized_destination": {
        "type": "string",
        "description": "Standardized destination address format"
      },
      "cargo_classification": {
        "type": "string",
        "description": "Standardized cargo classification code"
      },
      "special_requirements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of special handling requirements identified"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Route Distance Calculator",
    "tool_description": "Calculates precise distances, travel times, and route geometry between origin and destination points using multiple routing algorithms.",
    "parameters": {
      "origin_latitude": {
        "type": "number",
        "required": true,
        "description": "Origin latitude coordinate (-90 to 90)"
      },
      "origin_longitude": {
        "type": "number",
        "required": true,
        "description": "Origin longitude coordinate (-180 to 180)"
      },
      "destination_latitude": {
        "type": "number",
        "required": true,
        "description": "Destination latitude coordinate (-90 to 90)"
      },
      "destination_longitude": {
        "type": "number",
        "required": true,
        "description": "Destination longitude coordinate (-180 to 180)"
      },
      "vehicle_type": {
        "type": "string",
        "required": true,
        "description": "Vehicle classification (truck, van, semi_trailer, motorcycle)"
      },
      "route_preference": {
        "type": "string",
        "required": false,
        "description": "Routing preference (fastest, shortest, fuel_efficient)",
        "default": "fastest"
      },
      "avoid_tolls": {
        "type": "boolean",
        "required": false,
        "description": "Whether to avoid toll roads",
        "default": false
      }
    },
    "error_messages": [
      "Invalid coordinates: Latitude must be between -90 and 90, longitude between -180 and 180.",
      "Unsupported vehicle type: Use one of [truck, van, semi_trailer, motorcycle].",
      "Invalid route preference: Use one of [fastest, shortest, fuel_efficient].",
      "Route calculation failed: Unable to find viable route between specified coordinates.",
      "Same origin and destination: Origin and destination coordinates cannot be identical."
    ],
    "usage": "Provide origin and destination coordinates, vehicle type, and optional routing preferences. Returns detailed route information including distance, time, and waypoints.",
    "output_details": {
      "total_distance_km": {
        "type": "number",
        "description": "Total route distance in kilometers"
      },
      "estimated_duration_hours": {
        "type": "number",
        "description": "Estimated travel time in hours"
      },
      "route_geometry": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of coordinate pairs defining the route path"
      },
      "toll_roads_count": {
        "type": "integer",
        "description": "Number of toll road segments on route"
      },
      "highway_percentage": {
        "type": "number",
        "description": "Percentage of route on highway roads"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Vehicle Capacity Matcher",
    "tool_description": "Matches available vehicles from fleet inventory to cargo requirements based on weight, volume, and special handling capabilities.",
    "parameters": {
      "cargo_weight": {
        "type": "number",
        "required": true,
        "description": "Total cargo weight in kilograms"
      },
      "cargo_volume": {
        "type": "number",
        "required": true,
        "description": "Total cargo volume in cubic meters"
      },
      "cargo_type": {
        "type": "string",
        "required": true,
        "description": "Cargo classification requiring special equipment"
      },
      "available_vehicles": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "List of available vehicle IDs in fleet",
        "minItems": 1,
        "maxItems": 100
      },
      "vehicle_capacities": {
        "type": "array",
        "required": true,
        "items": {
          "type": "number"
        },
        "description": "Weight capacities in kg for each vehicle (same order as vehicle IDs)",
        "minItems": 1,
        "maxItems": 100
      },
      "vehicle_volumes": {
        "type": "array",
        "required": true,
        "items": {
          "type": "number"
        },
        "description": "Volume capacities in cubic meters for each vehicle",
        "minItems": 1,
        "maxItems": 100
      },
      "vehicle_types": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Vehicle type classifications for special cargo handling",
        "minItems": 1,
        "maxItems": 100
      },
      "max_results": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of vehicle matches to return",
        "default": 5
      }
    },
    "error_messages": [
      "Mismatched array lengths: All vehicle arrays (IDs, capacities, volumes, types) must have the same length.",
      "No suitable vehicles: No vehicles in fleet can handle the specified cargo requirements.",
      "Invalid cargo specifications: Weight and volume must be positive numbers.",
      "Empty vehicle fleet: At least one vehicle must be provided in available_vehicles array.",
      "Invalid max_results: Must be an integer between 1 and 20."
    ],
    "usage": "Provide cargo specifications and complete fleet information with matching array lengths. Returns ranked list of suitable vehicles with utilization metrics.",
    "output_details": {
      "matched_vehicles": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Vehicle IDs ranked by suitability"
      },
      "capacity_utilization": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Weight utilization percentages for matched vehicles"
      },
      "volume_utilization": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Volume utilization percentages for matched vehicles"
      },
      "compatibility_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Overall compatibility scores (0-100) for cargo-vehicle matching"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Traffic Condition Analyzer",
    "tool_description": "Analyzes current and predicted traffic conditions along route segments to estimate delays and optimal departure times.",
    "parameters": {
      "route_segments": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Array of route segment identifiers or coordinate pairs",
        "minItems": 1,
        "maxItems": 50
      },
      "departure_time": {
        "type": "string",
        "required": true,
        "description": "Planned departure time in ISO 8601 format",
        "format": "date-time"
      },
      "analysis_duration_hours": {
        "type": "integer",
        "required": false,
        "description": "How many hours ahead to analyze traffic patterns",
        "default": 24
      },
      "day_of_week": {
        "type": "string",
        "required": true,
        "description": "Day of week for traffic pattern analysis (monday, tuesday, wednesday, thursday, friday, saturday, sunday)"
      }
    },
    "error_messages": [
      "Invalid departure time: Provide valid ISO 8601 formatted date-time string.",
      "Invalid day of week: Use full day name in lowercase (monday through sunday).",
      "Too many route segments: Maximum 50 segments allowed for analysis.",
      "Invalid analysis duration: Duration must be between 1 and 72 hours.",
      "Traffic data unavailable: Unable to retrieve traffic information for specified route segments."
    ],
    "usage": "Provide route segments, planned departure time, and day of week. Optionally specify analysis duration. Returns traffic predictions and delay estimates for route optimization.",
    "output_details": {
      "total_delay_minutes": {
        "type": "number",
        "description": "Total expected traffic delay in minutes"
      },
      "congestion_segments": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Route segments expected to have heavy congestion"
      },
      "optimal_departure": {
        "type": "string",
        "description": "Recommended departure time to minimize delays"
      },
      "traffic_severity": {
        "type": "string",
        "description": "Overall traffic severity level (low, moderate, high, severe)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cost Estimation Engine",
    "tool_description": "Calculates comprehensive transportation costs including fuel, labor, tolls, insurance, and operational expenses for freight shipments.",
    "parameters": {
      "distance_km": {
        "type": "number",
        "required": true,
        "description": "Total route distance in kilometers"
      },
      "duration_hours": {
        "type": "number",
        "required": true,
        "description": "Expected travel duration in hours"
      },
      "vehicle_type": {
        "type": "string",
        "required": true,
        "description": "Vehicle classification for cost calculations"
      },
      "fuel_price_per_liter": {
        "type": "number",
        "required": true,
        "description": "Current fuel price per liter in local currency"
      },
      "driver_hourly_rate": {
        "type": "number",
        "required": true,
        "description": "Driver compensation per hour in local currency"
      },
      "toll_roads_count": {
        "type": "integer",
        "required": false,
        "description": "Number of toll road segments on route",
        "default": 0
      },
      "cargo_value": {
        "type": "number",
        "required": false,
        "description": "Total cargo value for insurance calculation",
        "default": 0
      },
      "priority_level": {
        "type": "string",
        "required": false,
        "description": "Delivery priority affecting costs (standard, expedited, urgent)",
        "default": "standard"
      },
      "include_return_trip": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include return trip costs",
        "default": false
      },
      "maintenance_rate": {
        "type": "number",
        "required": false,
        "description": "Vehicle maintenance cost per kilometer",
        "default": 0.15
      }
    },
    "error_messages": [
      "Invalid distance or duration: Both must be positive numbers greater than 0.",
      "Invalid fuel price: Fuel price must be a positive number.",
      "Invalid driver rate: Hourly rate must be a positive number.",
      "Invalid priority level: Use one of [standard, expedited, urgent].",
      "Negative cargo value: Cargo value cannot be negative.",
      "Invalid maintenance rate: Must be a positive number representing cost per km."
    ],
    "usage": "Provide route distance, duration, vehicle type, fuel price, and driver rate. Optional parameters include tolls, cargo value, priority, return trip, and maintenance rate for comprehensive cost calculation.",
    "output_details": {
      "total_cost": {
        "type": "number",
        "description": "Total estimated transportation cost"
      },
      "fuel_cost": {
        "type": "number",
        "description": "Estimated fuel expenses"
      },
      "labor_cost": {
        "type": "number",
        "description": "Driver labor costs"
      },
      "toll_cost": {
        "type": "number",
        "description": "Estimated toll road fees"
      },
      "insurance_cost": {
        "type": "number",
        "description": "Cargo insurance expenses"
      },
      "maintenance_cost": {
        "type": "number",
        "description": "Vehicle maintenance allocation"
      },
      "cost_per_km": {
        "type": "number",
        "description": "Cost efficiency metric per kilometer"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Regulatory Compliance Checker",
    "tool_description": "Verifies compliance requirements for cargo types and routing through different jurisdictions, including permits and restrictions.",
    "parameters": {
      "cargo_classification": {
        "type": "string",
        "required": true,
        "description": "Official cargo classification code or type"
      },
      "route_jurisdictions": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "List of states, provinces, or countries on route",
        "minItems": 1,
        "maxItems": 20
      },
      "vehicle_weight": {
        "type": "number",
        "required": true,
        "description": "Total vehicle weight including cargo in kilograms"
      },
      "hazmat_class": {
        "type": "string",
        "required": false,
        "description": "Hazardous materials classification if applicable",
        "default": "none"
      }
    },
    "error_messages": [
      "Invalid cargo classification: Provide standard cargo classification code or recognized type.",
      "Unknown jurisdiction: One or more jurisdictions not recognized in regulatory database.",
      "Invalid vehicle weight: Weight must be a positive number in kilograms.",
      "Missing hazmat classification: Hazardous cargo requires proper classification code.",
      "Route restrictions found: Current cargo-vehicle combination cannot travel through specified jurisdictions."
    ],
    "usage": "Provide cargo classification, route jurisdictions, vehicle weight, and hazmat class if applicable. Returns compliance status and required permits or restrictions.",
    "output_details": {
      "compliance_status": {
        "type": "boolean",
        "description": "Whether route and cargo combination is compliant"
      },
      "required_permits": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of permits needed for this shipment"
      },
      "route_restrictions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Routing restrictions or prohibited areas"
      },
      "compliance_cost": {
        "type": "number",
        "description": "Estimated cost of permits and compliance measures"
      },
      "violation_risks": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Potential regulatory violations if non-compliant"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Weather Impact Assessor",
    "tool_description": "Evaluates weather conditions along the route and timeframe to predict delays, safety risks, and operational impacts on freight delivery.",
    "parameters": {
      "route_coordinates": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Key coordinate points along route in 'lat,lon' format",
        "minItems": 2,
        "maxItems": 25
      },
      "departure_time": {
        "type": "string",
        "required": true,
        "description": "Planned departure time",
        "format": "date-time"
      },
      "estimated_duration": {
        "type": "number",
        "required": true,
        "description": "Expected trip duration in hours"
      }
    },
    "error_messages": [
      "Invalid coordinates: Provide coordinates in 'latitude,longitude' format with valid ranges.",
      "Invalid departure time: Use ISO 8601 date-time format.",
      "Invalid duration: Duration must be a positive number of hours.",
      "Weather data unavailable: Unable to retrieve weather forecasts for specified time and location.",
      "Too many coordinate points: Maximum 25 coordinate points allowed for weather analysis."
    ],
    "usage": "Provide route coordinates, departure time, and trip duration. The tool analyzes weather forecasts and returns impact assessment for route planning.",
    "output_details": {
      "overall_risk_level": {
        "type": "string",
        "description": "Overall weather risk assessment (low, moderate, high, severe)"
      },
      "expected_delays_hours": {
        "type": "number",
        "description": "Anticipated weather-related delays in hours"
      },
      "hazardous_conditions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of dangerous weather conditions expected"
      },
      "recommended_actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Recommended actions to mitigate weather risks"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Delivery Window Optimizer",
    "tool_description": "Optimizes delivery time windows based on customer preferences, business hours, traffic patterns, and operational constraints to maximize efficiency.",
    "parameters": {
      "customer_preferred_times": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Customer preferred delivery time windows in 'HH:MM-HH:MM' format",
        "minItems": 1,
        "maxItems": 10
      },
      "business_hours": {
        "type": "string",
        "required": true,
        "description": "Customer business hours in 'HH:MM-HH:MM' format"
      },
      "travel_time_hours": {
        "type": "number",
        "required": true,
        "description": "Expected travel time to destination in hours"
      },
      "service_duration_minutes": {
        "type": "integer",
        "required": true,
        "description": "Time needed for loading/unloading in minutes"
      },
      "driver_shift_start": {
        "type": "string",
        "required": true,
        "description": "Driver shift start time in 'HH:MM' format"
      },
      "driver_shift_end": {
        "type": "string",
        "required": true,
        "description": "Driver shift end time in 'HH:MM' format"
      },
      "delivery_date": {
        "type": "string",
        "required": true,
        "description": "Target delivery date",
        "format": "date-time"
      },
      "priority_weight": {
        "type": "number",
        "required": false,
        "description": "Customer priority weighting (0.1 to 1.0)",
        "default": 0.5
      },
      "allow_overtime": {
        "type": "boolean",
        "required": false,
        "description": "Whether driver overtime is permitted",
        "default": false
      }
    },
    "error_messages": [
      "Invalid time format: Use 'HH:MM' or 'HH:MM-HH:MM' format for all time inputs.",
      "Conflicting time windows: Customer preferences conflict with business hours or driver availability.",
      "Invalid travel time: Travel time must be a positive number of hours.",
      "Invalid service duration: Service time must be a positive integer in minutes.",
      "Invalid priority weight: Priority weight must be between 0.1 and 1.0.",
      "Impossible scheduling: No feasible delivery window exists with given constraints."
    ],
    "usage": "Provide customer preferences, business hours, travel time, service duration, driver schedule, delivery date, and optional priority settings. Returns optimized delivery windows with efficiency scores.",
    "output_details": {
      "optimal_departure_time": {
        "type": "string",
        "description": "Recommended departure time in HH:MM format"
      },
      "optimal_delivery_window": {
        "type": "string",
        "description": "Recommended delivery time window"
      },
      "efficiency_score": {
        "type": "number",
        "description": "Optimization efficiency score (0-100)"
      },
      "alternative_windows": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Alternative delivery windows if optimal is unavailable"
      },
      "overtime_required": {
        "type": "boolean",
        "description": "Whether overtime is needed for optimal delivery"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Multi-Stop Route Planner",
    "tool_description": "Plans optimal sequence and routing for multiple pickup and delivery stops to minimize total distance, time, and costs while meeting delivery constraints.",
    "parameters": {
      "stop_locations": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Array of stop locations in 'lat,lon' format",
        "minItems": 2,
        "maxItems": 15
      },
      "stop_types": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Stop types: pickup, delivery, or both (same order as locations)",
        "minItems": 2,
        "maxItems": 15
      },
      "service_times": {
        "type": "array",
        "required": true,
        "items": {
          "type": "integer"
        },
        "description": "Service time at each stop in minutes",
        "minItems": 2,
        "maxItems": 15
      },
      "time_windows": {
        "type": "array",
        "required": true,
        "items": {
          "type": "string"
        },
        "description": "Time windows for each stop in 'HH:MM-HH:MM' format",
        "minItems": 2,
        "maxItems": 15
      },
      "priorities": {
        "type": "array",
        "required": false,
        "items": {
          "type": "integer"
        },
        "description": "Priority levels for each stop (1-10, higher is more important)",
        "default": "None",
        "minItems": 2,
        "maxItems": 15
      },
      "depot_location": {
        "type": "string",
        "required": true,
        "description": "Starting depot location in 'lat,lon' format"
      },
      "return_to_depot": {
        "type": "boolean",
        "required": false,
        "description": "Whether to return to depot after final stop",
        "default": true
      },
      "optimization_objective": {
        "type": "string",
        "required": false,
        "description": "Primary optimization goal (distance, time, cost)",
        "default": "distance"
      }
    },
    "error_messages": [
      "Mismatched array lengths: All stop arrays (locations, types, service_times, time_windows, priorities) must have same length.",
      "Invalid coordinates: Provide coordinates in 'lat,lon' format with valid latitude (-90 to 90) and longitude (-180 to 180).",
      "Invalid stop type: Use 'pickup', 'delivery', or 'both' for each stop.",
      "Invalid time windows: Use 'HH:MM-HH:MM' format with start time before end time.",
      "Too many stops: Maximum 15 stops allowed for multi-stop optimization.",
      "Infeasible route: Cannot create route that satisfies all time windows and constraints.",
      "Invalid priority values: Priorities must be integers between 1 and 10.",
      "Invalid optimization objective: Use 'distance', 'time', or 'cost'."
    ],
    "usage": "Provide stop locations, types, service times, and time windows with matching array lengths. Include depot location and optimization preferences. Returns optimized stop sequence and route details.",
    "output_details": {
      "optimized_sequence": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Optimal stop sequence (indices corresponding to input arrays)"
      },
      "total_distance_km": {
        "type": "number",
        "description": "Total route distance in kilometers"
      },
      "total_duration_hours": {
        "type": "number",
        "description": "Total route time including service times"
      },
      "route_efficiency": {
        "type": "number",
        "description": "Route efficiency score (0-100)"
      },
      "time_window_violations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of stops with time window constraint violations"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Fuel Consumption Estimator",
    "tool_description": "Calculates expected fuel consumption based on route characteristics, vehicle specifications, load weight, and driving conditions.",
    "parameters": {
      "distance_km": {
        "type": "number",
        "required": true,
        "description": "Total route distance in kilometers"
      },
      "vehicle_type": {
        "type": "string",
        "
