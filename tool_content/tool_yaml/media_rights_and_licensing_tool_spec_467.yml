field_name: media_rights_and_licensing
subfield: Film and Television Distribution Rights
task: Revenue tracking and royalty calculation for distributed content
tool_description: |-
  **STEP 1 — Rate task difficulty**

  This task is **hard** due to the complex web of distribution agreements, multiple revenue streams across territories and platforms, intricate royalty calculation formulas with cascading splits, high financial impact requiring accuracy, and the need to coordinate data from diverse sources while managing contractual dependencies and compliance requirements.

  **STEP 2 — Set a tool budget**

  Given the hard difficulty rating, I'll target **17 tools** within the 15-20 range to handle the complexity of revenue tracking, royalty calculations, contract management, and compliance across multiple distribution channels and territories.

  **STEP 3 — List all tool names and dependencies**

  1. **Contract Parser** - Consumes: contract documents → Produces: structured contract terms
  2. **Revenue Data Aggregator** - Consumes: raw revenue reports → Produces: consolidated revenue data
  3. **Territory Rights Validator** - Consumes: distribution requests, territory data → Produces: rights validation status
  4. **Royalty Rate Calculator** - Consumes: contract terms, revenue amounts → Produces: calculated royalty rates
  5. **Waterfall Distribution Engine** - Consumes: revenue data, participant hierarchies → Produces: distribution allocations
  6. **Currency Converter** - Consumes: amounts, currencies, dates → Produces: converted amounts
  7. **Revenue Report Generator** - Consumes: processed revenue data → Produces: formatted reports
  8. **Audit Trail Logger** - Consumes: transaction data → Produces: audit records
  9. **Payment Schedule Builder** - Consumes: royalty calculations, contract terms → Produces: payment schedules
  10. **Rights Expiry Monitor** - Consumes: contract data, current date → Produces: expiry alerts
  11. **Platform Revenue Mapper** - Consumes: platform data, content IDs → Produces: mapped revenue streams
  12. **Tax Withholding Calculator** - Consumes: payment amounts, jurisdictions → Produces: tax calculations
  13. **Dispute Tracker** - Consumes: dispute data, resolutions → Produces: dispute status
  14. **Performance Analytics Engine** - Consumes: revenue data, time periods → Produces: performance metrics
  15. **Contract Amendment Processor** - Consumes: original contracts, amendments → Produces: updated contract terms
  16. **Compliance Checker** - Consumes: distribution data, regulatory rules → Produces: compliance status
  17. **Revenue Reconciliation Tool** - Consumes: expected vs actual revenue → Produces: reconciliation reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Revenue Report** (3-4 tools): Revenue Data Aggregator → Currency Converter → Revenue Report Generator → Audit Trail Logger
  2. **Rights Validation** (2-3 tools): Territory Rights Validator → Rights Expiry Monitor → Compliance Checker

  **Medium Plans:**
  1. **Standard Royalty Processing** (6-8 tools): Contract Parser → Revenue Data Aggregator → Royalty Rate Calculator → Currency Converter → Payment Schedule Builder → Tax Withholding Calculator → Audit Trail Logger
  2. **Platform Revenue Analysis** (5-7 tools): Platform Revenue Mapper → Revenue Data Aggregator → Performance Analytics Engine → Currency Converter → Revenue Report Generator → Compliance Checker

  **Complex Plans:**
  1. **Complete Revenue Distribution** (10-12 tools): Contract Parser → Revenue Data Aggregator → Platform Revenue Mapper → Royalty Rate Calculator → Waterfall Distribution Engine → Currency Converter → Tax Withholding Calculator → Payment Schedule Builder → Revenue Report Generator → Audit Trail Logger → Compliance Checker
  2. **Full Audit and Reconciliation** (8-10 tools): Revenue Data Aggregator → Revenue Reconciliation Tool → Dispute Tracker → Contract Amendment Processor → Waterfall Distribution Engine → Tax Withholding Calculator → Performance Analytics Engine → Audit Trail Logger → Compliance Checker

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Contract Parser",
    "tool_description": "Extracts and structures key terms from media distribution contracts including royalty rates, territory rights, and payment terms.",
    "parameters": {
      "contract_text": {
        "type": "string",
        "required": true,
        "description": "The full text content of the contract to be parsed"
      },
      "contract_type": {
        "type": "string",
        "required": true,
        "description": "Type of contract: distribution, licensing, production, talent"
      },
      "extract_fields": {
        "type": "array",
        "required": false,
        "description": "Specific fields to extract from contract",
        "items": {"type": "string"},
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid contract format: Contract text must be readable and contain standard legal formatting.",
      "Unsupported contract type: Use one of [distribution, licensing, production, talent].",
      "Missing critical clauses: Contract must contain revenue or royalty terms to be processed.",
      "Extraction field not found: One or more requested fields are not present in the contract."
    ],
    "usage": "Provide the contract text and specify the contract type. Optionally specify particular fields to extract. The tool will return structured contract terms.",
    "output_details": {
      "parties": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of contracting parties"
      },
      "royalty_rates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Extracted royalty percentages"
      },
      "territories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Licensed territories or regions"
      },
      "term_start": {
        "type": "string",
        "description": "Contract start date in ISO format"
      },
      "term_end": {
        "type": "string",
        "description": "Contract end date in ISO format"
      },
      "payment_terms": {
        "type": "string",
        "description": "Payment schedule and terms summary"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Revenue Data Aggregator",
    "tool_description": "Consolidates revenue data from multiple distribution platforms and sources into a unified format for processing.",
    "parameters": {
      "data_sources": {
        "type": "array",
        "required": true,
        "description": "List of revenue data source identifiers",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "content_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the content being tracked"
      },
      "reporting_period_start": {
        "type": "string",
        "required": true,
        "description": "Start date for revenue reporting period",
        "format": "date-time"
      },
      "reporting_period_end": {
        "type": "string",
        "required": true,
        "description": "End date for revenue reporting period",
        "format": "date-time"
      },
      "include_estimates": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include estimated revenue figures",
        "default": false
      }
    },
    "error_messages": [
      "Invalid date range: End date must be after start date and both must be valid ISO dates.",
      "Data source unavailable: One or more specified data sources cannot be accessed.",
      "Content ID not found: The specified content identifier does not exist in the system.",
      "No revenue data: No revenue records found for the specified period and content."
    ],
    "usage": "Specify the data sources, content ID, and reporting period. The tool will aggregate all revenue data from the sources for the specified content and time period.",
    "output_details": {
      "total_revenue": {
        "type": "number",
        "description": "Total aggregated revenue amount"
      },
      "revenue_by_source": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Revenue amounts per data source"
      },
      "source_names": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Names of revenue sources corresponding to amounts"
      },
      "currencies": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Currency codes for each revenue amount"
      },
      "record_count": {
        "type": "integer",
        "description": "Total number of revenue records processed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Territory Rights Validator",
    "tool_description": "Validates distribution rights for specific territories and time periods against existing contracts.",
    "parameters": {
      "content_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the content"
      },
      "requested_territory": {
        "type": "string",
        "required": true,
        "description": "Territory code or name for validation"
      },
      "validation_date": {
        "type": "string",
        "required": true,
        "description": "Date to validate rights against",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Content not found: The specified content ID does not exist in the rights database.",
      "Invalid territory code: Territory must be a valid ISO country code or recognized region name.",
      "Invalid date format: Validation date must be in valid ISO 8601 format.",
      "No rights data: No distribution rights information available for this content."
    ],
    "usage": "Provide the content ID, territory, and date for validation. The tool will check if distribution rights are valid for the specified territory at the given date.",
    "output_details": {
      "rights_valid": {
        "type": "boolean",
        "description": "Whether rights are valid for the territory and date"
      },
      "license_holder": {
        "type": "string",
        "description": "Name of the entity holding distribution rights"
      },
      "expiry_date": {
        "type": "string",
        "description": "Rights expiration date in ISO format"
      },
      "restrictions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of any distribution restrictions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Royalty Rate Calculator",
    "tool_description": "Calculates royalty amounts based on contract terms, revenue figures, and applicable rates with support for tiered and conditional structures.",
    "parameters": {
      "gross_revenue": {
        "type": "number",
        "required": true,
        "description": "Total gross revenue amount before deductions"
      },
      "royalty_percentage": {
        "type": "number",
        "required": true,
        "description": "Base royalty rate as percentage (0-100)"
      },
      "deductions": {
        "type": "array",
        "required": false,
        "description": "List of deduction amounts",
        "items": {"type": "number"},
        "default": "None"
      },
      "minimum_guarantee": {
        "type": "number",
        "required": false,
        "description": "Minimum guaranteed payment amount",
        "default": 0
      },
      "tier_thresholds": {
        "type": "array",
        "required": false,
        "description": "Revenue thresholds for tiered royalty rates",
        "items": {"type": "number"},
        "default": "None"
      },
      "tier_rates": {
        "type": "array",
        "required": false,
        "description": "Royalty rates for each tier",
        "items": {"type": "number"},
        "default": "None"
      },
      "recoupment_balance": {
        "type": "number",
        "required": false,
        "description": "Outstanding recoupment amount",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid revenue amount: Gross revenue must be a positive number.",
      "Invalid royalty rate: Royalty percentage must be between 0 and 100.",
      "Mismatched tier data: Number of tier thresholds must match number of tier rates.",
      "Invalid deduction: All deduction amounts must be positive numbers.",
      "Negative recoupment: Recoupment balance cannot be negative."
    ],
    "usage": "Provide gross revenue and base royalty percentage. Optionally include deductions, minimum guarantee, tiered rates, and recoupment balance for complex calculations.",
    "output_details": {
      "net_revenue": {
        "type": "number",
        "description": "Revenue after deductions"
      },
      "calculated_royalty": {
        "type": "number",
        "description": "Calculated royalty amount before recoupment"
      },
      "payable_royalty": {
        "type": "number",
        "description": "Final payable amount after recoupment and minimums"
      },
      "remaining_recoupment": {
        "type": "number",
        "description": "Outstanding recoupment balance after this calculation"
      },
      "effective_rate": {
        "type": "number",
        "description": "Effective royalty rate applied"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Waterfall Distribution Engine",
    "tool_description": "Distributes revenue among multiple participants according to waterfall hierarchies and priority structures defined in contracts.",
    "parameters": {
      "total_available_revenue": {
        "type": "number",
        "required": true,
        "description": "Total revenue available for distribution"
      },
      "participant_names": {
        "type": "array",
        "required": true,
        "description": "Names of participants in distribution waterfall",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 50
      },
      "participant_percentages": {
        "type": "array",
        "required": true,
        "description": "Percentage shares for each participant",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 50
      },
      "priority_levels": {
        "type": "array",
        "required": true,
        "description": "Priority level for each participant (1=highest)",
        "items": {"type": "integer"},
        "minItems": 1,
        "maxItems": 50
      },
      "participant_caps": {
        "type": "array",
        "required": false,
        "description": "Maximum payment cap for each participant",
        "items": {"type": "number"},
        "default": "None"
      },
      "floors": {
        "type": "array",
        "required": false,
        "description": "Minimum payment floor for each participant",
        "items": {"type": "number"},
        "default": "None"
      },
      "recoupment_amounts": {
        "type": "array",
        "required": false,
        "description": "Outstanding recoupment for each participant",
        "items": {"type": "number"},
        "default": "None"
      },
      "waterfall_type": {
        "type": "string",
        "required": false,
        "description": "Type of waterfall: standard, cross-collateralized, corridor",
        "default": "standard"
      }
    },
    "error_messages": [
      "Mismatched array lengths: All participant arrays must have the same length.",
      "Invalid percentage: All percentages must be between 0 and 100.",
      "Invalid priority: Priority levels must be positive integers starting from 1.",
      "Negative amounts: Revenue, caps, floors, and recoupment amounts must be non-negative.",
      "Invalid waterfall type: Use one of [standard, cross-collateralized, corridor].",
      "Percentage total exceeds 100: Sum of percentages cannot exceed 100% for any priority level."
    ],
    "usage": "Provide total revenue and equal-length arrays for participant details. The tool will distribute revenue according to priority levels and percentages.",
    "output_details": {
      "participant_payments": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Final payment amount for each participant"
      },
      "remaining_revenue": {
        "type": "number",
        "description": "Undistributed revenue after waterfall"
      },
      "distribution_summary": {
        "type": "string",
        "description": "Summary of the distribution process"
      },
      "recoupment_recovered": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Amount of recoupment recovered for each participant"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Currency Converter",
    "tool_description": "Converts monetary amounts between currencies using historical exchange rates for accurate financial reporting.",
    "parameters": {
      "amount": {
        "type": "number",
        "required": true,
        "description": "Amount to be converted"
      },
      "from_currency": {
        "type": "string",
        "required": true,
        "description": "Source currency code (ISO 4217)"
      },
      "to_currency": {
        "type": "string",
        "required": true,
        "description": "Target currency code (ISO 4217)"
      },
      "conversion_date": {
        "type": "string",
        "required": true,
        "description": "Date for exchange rate lookup",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Invalid currency code: Currency codes must be valid ISO 4217 three-letter codes.",
      "Invalid amount: Amount must be a positive number.",
      "Invalid date: Conversion date must be a valid date in ISO format.",
      "Exchange rate unavailable: No exchange rate data available for the specified date and currency pair.",
      "Future date error: Cannot convert using future dates."
    ],
    "usage": "Provide the amount, source currency, target currency, and conversion date. The tool will return the converted amount using historical exchange rates.",
    "output_details": {
      "converted_amount": {
        "type": "number",
        "description": "Amount after currency conversion"
      },
      "exchange_rate": {
        "type": "number",
        "description": "Exchange rate used for conversion"
      },
      "rate_date": {
        "type": "string",
        "description": "Date of the exchange rate used"
      },
      "conversion_summary": {
        "type": "string",
        "description": "Summary of the conversion performed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Revenue Report Generator",
    "tool_description": "Generates formatted revenue reports for distribution to stakeholders with customizable layouts and data presentation.",
    "parameters": {
      "report_title": {
        "type": "string",
        "required": true,
        "description": "Title for the revenue report"
      },
      "revenue_data": {
        "type": "array",
        "required": true,
        "description": "Revenue amounts to include in report",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 1000
      },
      "data_labels": {
        "type": "array",
        "required": true,
        "description": "Labels for each revenue data point",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "report_period": {
        "type": "string",
        "required": true,
        "description": "Reporting period description"
      },
      "currency_code": {
        "type": "string",
        "required": true,
        "description": "Currency code for amounts in report"
      },
      "include_charts": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include visual charts",
        "default": false
      },
      "report_format": {
        "type": "string",
        "required": false,
        "description": "Output format: summary, detailed, executive",
        "default": "summary"
      },
      "recipient_type": {
        "type": "string",
        "required": false,
        "description": "Target audience: internal, external, regulatory",
        "default": "internal"
      }
    },
    "error_messages": [
      "Mismatched data arrays: Revenue data and labels arrays must have the same length.",
      "Invalid report format: Use one of [summary, detailed, executive].",
      "Invalid recipient type: Use one of [internal, external, regulatory].",
      "Empty data: Revenue data array cannot be empty.",
      "Invalid currency: Currency code must be a valid ISO 4217 code."
    ],
    "usage": "Provide report title, revenue data with labels, reporting period, and currency. Optionally specify format and visualization preferences.",
    "output_details": {
      "report_content": {
        "type": "string",
        "description": "Formatted report content"
      },
      "total_revenue": {
        "type": "number",
        "description": "Sum of all revenue amounts"
      },
      "report_date": {
        "type": "string",
        "description": "Date the report was generated"
      },
      "data_points": {
        "type": "integer",
        "description": "Number of data points included in report"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audit Trail Logger",
    "tool_description": "Creates immutable audit records for all revenue tracking and royalty calculation activities for compliance and accountability.",
    "parameters": {
      "transaction_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the transaction being logged"
      },
      "user_id": {
        "type": "string",
        "required": true,
        "description": "Identifier of user performing the action"
      },
      "action_type": {
        "type": "string",
        "required": true,
        "description": "Type of action: calculation, payment, adjustment, report"
      },
      "affected_entities": {
        "type": "array",
        "required": true,
        "description": "List of entities affected by this action",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "financial_impact": {
        "type": "number",
        "required": false,
        "description": "Monetary impact of the action",
        "default": 0
      },
      "description": {
        "type": "string",
        "required": false,
        "description": "Detailed description of the action taken",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid transaction ID: Transaction ID must be a non-empty unique identifier.",
      "Invalid action type: Use one of [calculation, payment, adjustment, report].",
      "Missing entities: At least one affected entity must be specified.",
      "Duplicate transaction: This transaction ID has already been logged.",
      "Invalid user ID: User ID must be a valid system user identifier."
    ],
    "usage": "Provide transaction ID, user ID, action type, and affected entities. Optionally include financial impact and description for detailed logging.",
    "output_details": {
      "audit_record_id": {
        "type": "string",
        "description": "Unique identifier for the audit record"
      },
      "timestamp": {
        "type": "string",
        "description": "Timestamp when the record was created"
      },
      "status": {
        "type": "string",
        "description": "Status of the audit log entry"
      },
      "record_hash": {
        "type": "string",
        "description": "Hash of the audit record for integrity verification"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Payment Schedule Builder",
    "tool_description": "Creates payment schedules for royalty distributions based on contract terms and calculated amounts.",
    "parameters": {
      "payee_name": {
        "type": "string",
        "required": true,
        "description": "Name of the payment recipient"
      },
      "total_amount": {
        "type": "number",
        "required": true,
        "description": "Total amount to be paid"
      },
      "payment_frequency": {
        "type": "string",
        "required": true,
        "description": "Payment frequency: monthly, quarterly, semi-annual, annual"
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "First payment date",
        "format": "date-time"
      },
      "number_of_payments": {
        "type": "integer",
        "required": false,
        "description": "Total number of payments (1-100)",
        "default": 1
      },
      "minimum_payment": {
        "type": "number",
        "required": false,
        "description": "Minimum payment amount per installment",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid payment frequency: Use one of [monthly, quarterly, semi-annual, annual].",
      "Invalid amount: Total amount must be positive.",
      "Invalid payment count: Number of payments must be between 1 and 100.",
      "Invalid date: Start date must be a valid future date in ISO format.",
      "Minimum payment too high: Minimum payment cannot exceed total amount divided by number of payments."
    ],
    "usage": "Provide payee name, total amount, payment frequency, and start date. Optionally specify number of payments and minimum payment amounts.",
    "output_details": {
      "payment_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Array of scheduled payment dates"
      },
      "payment_amounts": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Amount for each scheduled payment"
      },
      "total_scheduled": {
        "type": "number",
        "description": "Total amount across all scheduled payments"
      },
      "schedule_summary": {
        "type": "string",
        "description": "Summary of the payment schedule"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Rights Expiry Monitor",
    "tool_description": "Monitors and alerts on upcoming expiration dates for distribution rights and licensing agreements.",
    "parameters": {
      "content_ids": {
        "type": "array",
        "required": true,
        "description": "List of content identifiers to monitor",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "alert_threshold_days": {
        "type": "integer",
        "required": false,
        "description": "Days before expiry to trigger alerts (1-365)",
        "default": 30
      },
      "check_date": {
        "type": "string",
        "required": false,
        "description": "Date to check against for expiry calculation",
        "format": "date-time",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid content ID: One or more content identifiers not found in rights database.",
      "Invalid threshold: Alert threshold must be between 1 and 365 days.",
      "Invalid date: Check date must be a valid date in ISO format.",
      "Too many items: Maximum 500 content items can be monitored in one request.",
      "No rights data: No rights information available for specified content."
    ],
    "usage": "Provide array of content IDs to monitor. Optionally set alert threshold and specific check date. The tool will return expiry information and alerts.",
    "output_details": {
      "expiring_soon": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Content IDs with rights expiring within threshold"
      },
      "expiry_dates": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Expiry dates for content with upcoming expirations"
      },
      "days_remaining": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Days remaining until expiry for each flagged item"
      },
      "alert_count": {
        "type": "integer",
        "description": "Total number of expiry alerts generated"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Platform Revenue Mapper",
    "tool_description": "Maps and categorizes revenue streams from different distribution platforms to content and rights holders.",
    "parameters": {
      "platform_name": {
        "type": "string",
        "required": true,
        "description": "Name of the distribution platform"
      },
      "content_identifiers": {
        "type": "array",
        "required": true,
        "description": "Platform-specific content identifiers",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 200
      },
      "revenue_types": {
        "type": "array",
        "required": true,
        "description": "Types of revenue to map: subscription, advertising, transactional, licensing",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "mapping_date": {
        "type": "string",
        "required": true,
        "description": "Date for revenue mapping",
        "format": "date-time"
      },
      "include_estimates": {
        "type": "boolean",
        "required": false,
        "description": "Include estimated revenue figures",
        "default": false
      },
      "currency_preference": {
        "type": "string",
        "required": false,
        "description": "Preferred currency for revenue reporting",
        "default": "USD"
      },
      "territory_filter": {
        "type": "array",
        "required": false,
        "description": "Specific territories to include in mapping",
        "items": {"type": "string"},
        "default": "None"
      }
    },
    "error_messages": [
      "Platform not supported: The specified platform is not in the supported platforms list.",
      "Invalid revenue type: Use one of [subscription, advertising, transactional, licensing].",
      "Content not found: One or more content identifiers not found on the platform.",
      "Invalid date: Mapping date must be a valid date in ISO format.",
      "Currency not supported: Currency preference must be a valid ISO 4217 code.",
      "Territory not recognized: One or more territory codes are not recognized."
    ],
    "usage": "Specify platform name, content identifiers, revenue types, and mapping date. Optionally filter by territory and set currency preference.",
    "output_details": {
      "mapped_revenues": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Revenue amounts mapped to each content identifier"
      },
      "revenue_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Revenue category for each mapped amount"
      },
      "platform_fees": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Platform fees deducted for each content item"
      },
      "net_revenues": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Net revenue after platform fees"
      },
      "mapping_summary": {
        "type": "string",
        "description": "Summary of the revenue mapping process"
      }
    }
  }
  ```

  ```json
  {
    "tool
