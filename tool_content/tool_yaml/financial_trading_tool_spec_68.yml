field_name: financial_trading
subfield: risk_management_and_assessment
task: Portfolio risk analysis and stress testing
tool_description: |-
  **STEP 1 — Rate task difficulty**
  Portfolio risk analysis and stress testing is a **hard** task due to its broad scope involving multiple risk metrics, complex interdependencies between assets, high-stakes decision making where errors can lead to significant financial losses, and substantial data requirements including historical prices, correlations, volatility models, and scenario definitions.

  **STEP 2 — Set a tool budget**
  Given the hard difficulty rating, I will target **17 tools** within the 15-20 range to comprehensively cover portfolio risk analysis, stress testing, scenario modeling, and risk reporting workflows.

  **STEP 3 — List all tool names with dependencies and affordances**

  1. **Portfolio Data Loader** - Consumes: portfolio specifications → Produces: position data, asset weights
  2. **Historical Price Fetcher** - Consumes: asset identifiers, date ranges → Produces: price time series
  3. **Correlation Matrix Calculator** - Consumes: price data → Produces: correlation matrices
  4. **Volatility Estimator** - Consumes: price data → Produces: volatility measures
  5. **Value at Risk Calculator** - Consumes: portfolio data, returns → Produces: VaR estimates
  6. **Expected Shortfall Analyzer** - Consumes: portfolio data, returns → Produces: ES/CVaR metrics
  7. **Monte Carlo Simulator** - Consumes: risk parameters → Produces: simulated scenarios
  8. **Stress Scenario Generator** - Consumes: historical events, market conditions → Produces: stress scenarios
  9. **Factor Exposure Analyzer** - Consumes: portfolio data → Produces: factor loadings
  10. **Liquidity Risk Assessor** - Consumes: position data, market conditions → Produces: liquidity metrics
  11. **Concentration Risk Detector** - Consumes: portfolio weights → Produces: concentration measures
  12. **Drawdown Analyzer** - Consumes: portfolio returns → Produces: drawdown statistics
  13. **Beta Calculator** - Consumes: asset returns, benchmark returns → Produces: beta coefficients
  14. **Scenario Impact Evaluator** - Consumes: scenarios, portfolio data → Produces: impact assessments
  15. **Risk Attribution Tool** - Consumes: portfolio data, risk factors → Produces: risk contributions
  16. **Stress Test Executor** - Consumes: scenarios, portfolio → Produces: stress test results
  17. **Risk Report Generator** - Consumes: all risk metrics → Produces: comprehensive risk reports

  **STEP 4 — Multi-tool plans**

  **Simple Plans:**
  1. **Basic Portfolio Risk Assessment**: Portfolio Data Loader → Historical Price Fetcher → Volatility Estimator → Value at Risk Calculator (4 tools)
  2. **Correlation Analysis**: Portfolio Data Loader → Historical Price Fetcher → Correlation Matrix Calculator → Risk Report Generator (4 tools)

  **Medium Plans:**
  1. **Comprehensive Risk Metrics**: Portfolio Data Loader → Historical Price Fetcher → Volatility Estimator → Value at Risk Calculator → Expected Shortfall Analyzer → Drawdown Analyzer → Risk Report Generator (7 tools)
  2. **Factor-Based Analysis**: Portfolio Data Loader → Historical Price Fetcher → Factor Exposure Analyzer → Beta Calculator → Risk Attribution Tool → Risk Report Generator (6 tools)

  **Complex Plans:**
  1. **Full Stress Testing Suite**: Portfolio Data Loader → Historical Price Fetcher → Stress Scenario Generator → Monte Carlo Simulator → Scenario Impact Evaluator → Stress Test Executor → Risk Report Generator (7+ tools with multiple parallel workflows)
  2. **Complete Portfolio Risk Analysis**: All 17 tools integrated in a comprehensive workflow covering data loading, historical analysis, risk calculations, scenario testing, and reporting

  **STEP 5 — Produce tools**

  ```json
  {
    "tool_name": "Portfolio Data Loader",
    "tool_description": "Loads and validates portfolio data including asset positions, weights, and market values for risk analysis.",
    "parameters": {
      "portfolio_file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the portfolio data file (CSV, JSON, or Excel format)"
      },
      "portfolio_currency": {
        "type": "string",
        "required": true,
        "description": "Base currency for the portfolio (e.g., USD, EUR, GBP)"
      },
      "as_of_date": {
        "type": "string",
        "required": true,
        "description": "Portfolio valuation date in ISO 8601 format",
        "format": "date-time"
      }
    },
    "error_messages": [
      "File not found: The specified portfolio file path does not exist. Verify the file path and ensure the file is accessible.",
      "Invalid file format: Portfolio file must be in CSV, JSON, or Excel format with required columns: asset_id, position_size, market_value, weight.",
      "Currency not supported: Portfolio currency must be a valid ISO currency code (USD, EUR, GBP, JPY, etc.).",
      "Invalid date format: as_of_date must be in ISO 8601 date-time format (YYYY-MM-DDTHH:MM:SSZ).",
      "Missing required data: Portfolio file must contain at least one valid position with non-zero market value."
    ],
    "usage": "Provide the path to your portfolio data file, specify the base currency, and set the valuation date. The tool validates and loads position data for subsequent risk analysis.",
    "output_details": {
      "total_portfolio_value": {
        "type": "number",
        "description": "Total market value of the portfolio in base currency"
      },
      "asset_count": {
        "type": "integer",
        "description": "Number of assets in the portfolio"
      },
      "asset_symbols": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of asset identifiers/symbols in the portfolio"
      },
      "weights": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Asset weights as percentages of total portfolio value"
      },
      "validation_status": {
        "type": "string",
        "description": "Status message indicating successful validation or any warnings"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Historical Price Fetcher",
    "tool_description": "Retrieves historical price data for specified assets over a given time period for risk analysis calculations.",
    "parameters": {
      "asset_symbols": {
        "type": "array",
        "required": true,
        "description": "List of asset symbols to fetch price data for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for historical data in ISO 8601 format",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for historical data in ISO 8601 format",
        "format": "date-time"
      },
      "frequency": {
        "type": "string",
        "required": false,
        "description": "Data frequency: daily, weekly, monthly",
        "default": "daily"
      },
      "data_source": {
        "type": "string",
        "required": false,
        "description": "Data provider: yahoo, bloomberg, alpha_vantage, quandl",
        "default": "yahoo"
      }
    },
    "error_messages": [
      "Invalid date range: start_date must be before end_date and both must be valid ISO 8601 dates.",
      "Asset not found: One or more asset symbols are not recognized by the data provider. Verify symbol accuracy.",
      "Data source unavailable: The specified data source is currently unavailable. Try a different provider.",
      "Insufficient data: Not enough historical data available for the specified date range. Extend the date range or use a different frequency.",
      "Rate limit exceeded: Too many API calls to data provider. Wait and retry or use a different data source."
    ],
    "usage": "Provide asset symbols, date range, and optionally specify data frequency and source. The tool fetches historical price data for risk calculations.",
    "output_details": {
      "data_points": {
        "type": "integer",
        "description": "Number of data points retrieved per asset"
      },
      "date_range_actual": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Actual date range of retrieved data"
      },
      "missing_assets": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of assets for which data could not be retrieved"
      },
      "price_data_summary": {
        "type": "string",
        "description": "Summary of retrieved price data including any data quality issues"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Correlation Matrix Calculator",
    "tool_description": "Calculates correlation matrices between assets using historical return data with various correlation methods and time windows.",
    "parameters": {
      "calculation_method": {
        "type": "string",
        "required": true,
        "description": "Correlation calculation method: pearson, spearman, kendall"
      },
      "time_window": {
        "type": "integer",
        "required": false,
        "description": "Rolling window size in days for correlation calculation (30-1000)",
        "default": 252
      },
      "min_periods": {
        "type": "integer",
        "required": false,
        "description": "Minimum number of observations required for correlation calculation",
        "default": 20
      }
    },
    "error_messages": [
      "Invalid calculation method: Use pearson, spearman, or kendall correlation methods only.",
      "Insufficient data: Not enough price data to calculate correlations. Ensure at least min_periods observations per asset.",
      "Invalid time window: time_window must be between 30 and 1000 days.",
      "Singular matrix: Correlation matrix is singular, indicating perfect correlation between some assets."
    ],
    "usage": "Specify correlation calculation method and optionally adjust time window and minimum periods. Requires price data from Historical Price Fetcher.",
    "output_details": {
      "correlation_matrix": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Flattened correlation matrix values"
      },
      "asset_pairs": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Asset pair labels corresponding to correlation values"
      },
      "highest_correlation": {
        "type": "number",
        "description": "Highest correlation coefficient found"
      },
      "lowest_correlation": {
        "type": "number",
        "description": "Lowest correlation coefficient found"
      },
      "matrix_rank": {
        "type": "integer",
        "description": "Rank of the correlation matrix"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Volatility Estimator",
    "tool_description": "Estimates asset and portfolio volatility using multiple models including GARCH, exponential weighting, and realized volatility measures.",
    "parameters": {
      "volatility_model": {
        "type": "string",
        "required": true,
        "description": "Volatility estimation model: historical, ewma, garch, realized_vol"
      },
      "lookback_period": {
        "type": "integer",
        "required": true,
        "description": "Number of periods to use for volatility estimation (20-1000)"
      },
      "decay_factor": {
        "type": "number",
        "required": false,
        "description": "Decay factor for EWMA model (0.8-0.99)",
        "default": 0.94
      },
      "annualization_factor": {
        "type": "number",
        "required": false,
        "description": "Factor to annualize volatility (e.g., 252 for daily data)",
        "default": 252
      },
      "confidence_level": {
        "type": "number",
        "required": false,
        "description": "Confidence level for volatility bands (0.8-0.99)",
        "default": 0.95
      }
    },
    "error_messages": [
      "Invalid volatility model: Use historical, ewma, garch, or realized_vol models only.",
      "Invalid lookback period: lookback_period must be between 20 and 1000.",
      "Invalid decay factor: decay_factor must be between 0.8 and 0.99 for EWMA model.",
      "Insufficient data: Not enough price data for the specified lookback period.",
      "GARCH convergence failed: GARCH model failed to converge. Try different parameters or use alternative model."
    ],
    "usage": "Select volatility model and lookback period. Optionally adjust decay factor for EWMA, annualization factor, and confidence level. Requires return data from price data.",
    "output_details": {
      "asset_volatilities": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Annualized volatility estimates for each asset"
      },
      "portfolio_volatility": {
        "type": "number",
        "description": "Estimated portfolio volatility"
      },
      "volatility_forecast": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Forward-looking volatility forecasts"
      },
      "model_parameters": {
        "type": "string",
        "description": "Summary of model parameters used in estimation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Value at Risk Calculator",
    "tool_description": "Calculates Value at Risk (VaR) for portfolio positions using parametric, historical simulation, and Monte Carlo methods.",
    "parameters": {
      "var_method": {
        "type": "string",
        "required": true,
        "description": "VaR calculation method: parametric, historical, monte_carlo"
      },
      "confidence_levels": {
        "type": "array",
        "required": true,
        "description": "Confidence levels for VaR calculation (e.g., 0.95, 0.99)",
        "items": {"type": "number"},
        "minItems": 1,
        "maxItems": 5
      },
      "time_horizon": {
        "type": "integer",
        "required": true,
        "description": "Risk horizon in days (1-30)"
      },
      "simulation_runs": {
        "type": "integer",
        "required": false,
        "description": "Number of Monte Carlo simulations (1000-100000)",
        "default": 10000
      },
      "distribution_assumption": {
        "type": "string",
        "required": false,
        "description": "Return distribution assumption: normal, t_student, skewed_t",
        "default": "normal"
      },
      "portfolio_value": {
        "type": "number",
        "required": true,
        "description": "Total portfolio value for VaR calculation"
      }
    },
    "error_messages": [
      "Invalid VaR method: Use parametric, historical, or monte_carlo methods only.",
      "Invalid confidence level: Confidence levels must be between 0.8 and 0.999.",
      "Invalid time horizon: time_horizon must be between 1 and 30 days.",
      "Invalid simulation runs: For Monte Carlo, simulation_runs must be between 1000 and 100000.",
      "Insufficient historical data: Historical method requires at least 250 observations.",
      "Invalid portfolio value: portfolio_value must be a positive number."
    ],
    "usage": "Select VaR method, specify confidence levels and time horizon. For Monte Carlo, optionally adjust simulation runs and distribution assumption. Requires portfolio data and return statistics.",
    "output_details": {
      "var_estimates": {
        "type": "array",
        "items": {"type": "number"},
        "description": "VaR estimates for each confidence level in portfolio currency"
      },
      "var_percentages": {
        "type": "array",
        "items": {"type": "number"},
        "description": "VaR as percentages of portfolio value"
      },
      "backtesting_violations": {
        "type": "integer",
        "description": "Number of VaR violations in historical backtesting"
      },
      "model_confidence": {
        "type": "string",
        "description": "Assessment of model reliability and assumptions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Expected Shortfall Analyzer",
    "tool_description": "Calculates Expected Shortfall (Conditional VaR) to measure tail risk beyond VaR threshold using multiple estimation methods.",
    "parameters": {
      "es_method": {
        "type": "string",
        "required": true,
        "description": "ES calculation method: parametric, historical, monte_carlo"
      },
      "confidence_level": {
        "type": "number",
        "required": true,
        "description": "Confidence level for ES calculation (0.8-0.999)"
      },
      "tail_estimation": {
        "type": "string",
        "required": false,
        "description": "Tail estimation approach: standard, evt_peaks, evt_threshold",
        "default": "standard"
      }
    },
    "error_messages": [
      "Invalid ES method: Use parametric, historical, or monte_carlo methods only.",
      "Invalid confidence level: Confidence level must be between 0.8 and 0.999.",
      "Insufficient tail data: Not enough extreme observations for reliable ES estimation.",
      "EVT estimation failed: Extreme Value Theory parameters could not be estimated reliably."
    ],
    "usage": "Select ES method and confidence level. Optionally specify tail estimation approach for extreme value analysis. Requires return data and VaR calculations.",
    "output_details": {
      "expected_shortfall": {
        "type": "number",
        "description": "Expected Shortfall estimate in portfolio currency"
      },
      "es_percentage": {
        "type": "number",
        "description": "Expected Shortfall as percentage of portfolio value"
      },
      "tail_observations": {
        "type": "integer",
        "description": "Number of observations used for tail risk estimation"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Monte Carlo Simulator",
    "tool_description": "Generates Monte Carlo simulations for portfolio returns using various stochastic processes and correlation structures for risk analysis.",
    "parameters": {
      "simulation_method": {
        "type": "string",
        "required": true,
        "description": "Simulation method: geometric_brownian, jump_diffusion, regime_switching, copula"
      },
      "num_simulations": {
        "type": "integer",
        "required": true,
        "description": "Number of simulation paths (1000-100000)"
      },
      "time_steps": {
        "type": "integer",
        "required": true,
        "description": "Number of time steps in simulation (10-1000)"
      },
      "random_seed": {
        "type": "integer",
        "required": false,
        "description": "Random seed for reproducibility",
        "default": "None"
      },
      "jump_intensity": {
        "type": "number",
        "required": false,
        "description": "Jump intensity parameter for jump diffusion (0-1)",
        "default": 0.1
      },
      "jump_size_mean": {
        "type": "number",
        "required": false,
        "description": "Mean jump size for jump diffusion (-0.5 to 0.5)",
        "default": -0.02
      },
      "jump_size_std": {
        "type": "number",
        "required": false,
        "description": "Jump size standard deviation (0.01-0.5)",
        "default": 0.1
      },
      "correlation_structure": {
        "type": "string",
        "required": false,
        "description": "Correlation modeling: constant, time_varying, factor_model",
        "default": "constant"
      },
      "regime_count": {
        "type": "integer",
        "required": false,
        "description": "Number of regimes for regime switching model (2-5)",
        "default": 2
      },
      "copula_type": {
        "type": "string",
        "required": false,
        "description": "Copula type for dependency modeling: gaussian, t_copula, clayton, gumbel",
        "default": "gaussian"
      },
      "antithetic_variates": {
        "type": "boolean",
        "required": false,
        "description": "Use antithetic variates for variance reduction",
        "default": false
      },
      "control_variates": {
        "type": "boolean",
        "required": false,
        "description": "Use control variates for variance reduction",
        "default": false
      }
    },
    "error_messages": [
      "Invalid simulation method: Use geometric_brownian, jump_diffusion, regime_switching, or copula methods.",
      "Invalid number of simulations: num_simulations must be between 1000 and 100000.",
      "Invalid time steps: time_steps must be between 10 and 1000.",
      "Invalid jump parameters: jump_intensity must be 0-1, jump_size_mean must be -0.5 to 0.5, jump_size_std must be 0.01-0.5.",
      "Invalid regime count: regime_count must be between 2 and 5 for regime switching model.",
      "Copula estimation failed: Could not estimate copula parameters from data.",
      "Memory allocation error: Reduce num_simulations or time_steps to avoid memory issues."
    ],
    "usage": "Select simulation method and specify number of simulations and time steps. Adjust method-specific parameters as needed. Use variance reduction techniques for improved efficiency.",
    "output_details": {
      "simulation_summary": {
        "type": "string",
        "description": "Summary of simulation parameters and execution status"
      },
      "path_statistics": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Statistical summary of simulated paths (mean, std, skew, kurtosis)"
      },
      "final_values": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Distribution of final portfolio values"
      },
      "execution_time": {
        "type": "number",
        "description": "Simulation execution time in seconds"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stress Scenario Generator",
    "tool_description": "Creates stress testing scenarios based on historical market events, hypothetical shocks, and regulatory requirements for comprehensive portfolio stress testing.",
    "parameters": {
      "scenario_type": {
        "type": "string",
        "required": true,
        "description": "Type of stress scenario: historical_event, hypothetical_shock, regulatory_standard, custom"
      },
      "historical_event": {
        "type": "string",
        "required": false,
        "description": "Historical event: 2008_financial_crisis, covid_2020, dotcom_2000, brexit_2016, 1987_crash",
        "default": "None"
      },
      "shock_magnitude": {
        "type": "number",
        "required": false,
        "description": "Magnitude of hypothetical shock in standard deviations (1-5)",
        "default": 2.0
      },
      "affected_factors": {
        "type": "array",
        "required": false,
        "description": "Risk factors to apply shock to (equity, bond, fx, commodity, credit)",
        "items": {"type": "string"},
        "default": "None"
      },
      "correlation_breakdown": {
        "type": "boolean",
        "required": false,
        "description": "Include correlation breakdown in stress scenario",
        "default": false
      },
      "liquidity_stress": {
        "type": "boolean",
        "required": false,
        "description": "Include liquidity stress components",
        "default": false
      },
      "regulatory_framework": {
        "type": "string",
        "required": false,
        "description": "Regulatory stress test framework: basel_iii, ccar, solvency_ii, var_shock",
        "default": "None"
      },
      "time_horizon_days": {
        "type": "integer",
        "required": false,
        "description": "Stress scenario time horizon in days (1-250)",
        "default": 10
      },
      "recovery_period": {
        "type": "integer",
        "required": false,
        "description": "Market recovery period in days (0-500)",
        "default": 0
      }
    },
    "error_messages": [
      "Invalid scenario type: Use historical_event, hypothetical_shock, regulatory_standard, or custom.",
      "Historical event not found: Specified historical event is not available in the scenario library.",
      "Invalid shock magnitude: shock_magnitude must be between 1 and 5 standard deviations.",
      "Invalid affected factors: Use equity, bond, fx, commodity, or credit as factor names.",
      "Invalid time horizon: time_horizon_days must be between 1 and 250.",
      "Invalid recovery period: recovery_period must be between 0 and 500 days.",
      "Regulatory framework not supported: Use basel_iii, ccar, solvency_ii, or var_shock."
    ],
    "usage": "Select scenario type and specify relevant parameters. For historical events, choose from predefined crises. For hypothetical shocks, define magnitude and affected factors. Include correlation breakdown and liquidity stress as needed.",
    "output_details": {
      "scenario_name": {
        "type": "string",
        "description": "Name and description of generated stress scenario"
      },
      "factor_shocks": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Shock magnitudes applied to each risk factor"
      },
      "correlation_adjustments": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Correlation matrix adjustments during stress period"
      },
      "scenario_probability": {
        "type": "number",
        "description": "Estimated probability of scenario occurrence"
      },
      "liquidity_impact": {
        "type": "string",
        "description": "Description of liquidity constraints during scenario"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Factor Exposure Analyzer",
    "tool_description": "Analyzes portfolio exposures to systematic risk factors including market, style, sector, and macro-economic factors using factor models.",
    "parameters": {
      "factor_model": {
        "type": "string",
        "required": true,
        "description": "Factor model type: capm, fama_french_3, fama_french_5, carhart_4, macro_economic, custom"
      },
      "benchmark_symbol": {
        "type": "string",
        "required": false,
        "description": "Benchmark index symbol for market factor",
        "default": "SPY"
      },
      "estimation_window": {
        "type": "integer",
        "required": false,
        "description": "Estimation window in days for factor loadings (60-1000)",
        "default": 252
      },
      "macro_factors": {
        "type": "array",
        "required": false,
        "description": "Macro-economic factors to include (gdp_growth, inflation, interest_rates, unemployment)",
        "items": {"type": "string"},
        "default": "None"
      },
      "rolling_analysis": {
        "type": "boolean",
        "required": false,
        "description": "Perform rolling window factor analysis",
        "default": false
      }
    },
    "error_messages": [
      "Invalid factor model: Use capm, fama_french_3, fama_french_5, carhart_4, macro_economic, or custom.",
      "Benchmark not found: Specified benchmark symbol is not available or invalid.",
      "Invalid estimation window: estimation_window must be between 60 and 1000 days.",
      "Insufficient data: Not enough data for factor model estimation over specified window.",
      "Macro factor data unavailable: Some requested macro-economic factors are not available for the analysis period."
    ],
    "usage": "Select factor model and optionally specify benchmark, estimation window, and macro factors. Enable rolling analysis for time-varying factor exposures. Requires return data for assets and factors.",
    "output_details": {
      "factor_loadings": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Factor loading coefficients for each risk factor"
      },
      "factor_names": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Names of risk factors in the model"
      },
      "r_squared": {
        "type": "number",
        "description": "Model explanatory power (R-squared)"
      },
      "idiosyncratic_risk": {
        "type": "number",
        "description": "Portfolio-specific risk not explained by factors"
      },
      "active_exposures": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Active factor exposures relative to benchmark"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Liquidity Risk Assessor",
    "tool_description": "Evaluates portfolio liquidity risk by analyzing bid-ask spreads, trading volumes, market depth, and liquidation timeframes under normal and stressed market conditions.",
    "parameters": {
      "liquidity_horizon": {
        "type": "integer",
        "required": true,
        "description": "Target liquidation timeframe in days (1-90)"
      },
      "market_impact_model": {
        "type": "string",
        "required": true,
        "description": "Market impact model: linear, square_root, almgren_chriss, participation_rate"
      },
      "participation_rate": {
        "type": "number",
        "required": false,
        "description": "Maximum daily volume participation rate (0.01-0.3)",
        "default": 0.1
      },
      "risk_aversion": {
        "type": "number",
        "required": false,
        "description": "Risk aversion parameter for optimal execution (0.001-0.1)",
        "default": 0.01
      },
      "stress_scenario": {
        "type": "boolean",
        "required": false,
        "description": "Apply stressed market conditions to liquidity analysis",
        "default": false
      }
    },
    "error_messages": [
      "Invalid liquidity horizon: liquidity_horizon must be between 1 and 90 days.",
      "Invalid market impact model: Use linear, square_root, almgren_chriss, or participation_rate models.",
      "Invalid participation rate: participation_rate must be between 0.01 and 0.3 (1% to 30%).",
      "Invalid risk aversion: risk_aversion must be between 0.001 and 0.1.",
      "Missing market data: Trading volume and bid-ask spread data required for liquidity analysis."
    ],
    "usage": "Specify liquidation horizon and market impact model. Adjust participation rate and risk aversion for execution constraints. Enable stress scenario for crisis liquidity conditions.",
    "output_details": {
      "liquidity_cost": {
        "type": "number",
        "description": "Total estimated liquidity cost as percentage of portfolio value"
      },
      "execution_shortfall": {
