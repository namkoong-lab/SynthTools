field_name: ecommerce_and_retail
subfield: Product Search and Discovery
task: Product review and rating aggregation with sentiment analysis and quality scoring
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task is **hard** due to multiple complex subproblems: processing diverse review data formats, performing accurate sentiment analysis across different product categories, handling rating normalization from various sources, detecting fake/spam reviews, and aggregating quality scores with proper weighting. The task requires sophisticated NLP capabilities, statistical analysis, and coordination between multiple data processing pipelines with high accuracy requirements since review quality directly impacts business decisions.\n\n## STEP 2 — Set a tool budget\n\nGiven the hard difficulty assessment, I'm targeting **17 tools** within the 15–20 range. This accounts for the complexity of review processing, sentiment analysis, quality scoring, aggregation workflows, and validation requirements.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tool Dependencies Flow:**\n1. **Review Data Fetcher** → produces raw review data\n2. **Review Content Parser** → consumes raw data, produces structured reviews  \n3. **Review Language Detector** → consumes text, produces language codes\n4. **Review Text Preprocessor** → consumes raw text, produces cleaned text\n5. **Sentiment Analyzer** → consumes cleaned text, produces sentiment scores\n6. **Rating Normalizer** → consumes raw ratings, produces normalized ratings\n7. **Review Spam Detector** → consumes review features, produces spam probability\n8. **Review Quality Scorer** → consumes multiple inputs, produces quality scores\n9. **Review Categorizer** → consumes review text, produces categories\n10. **Temporal Review Analyzer** → consumes timestamped reviews, produces trends\n11. **Review Aggregator** → consumes processed reviews, produces aggregated metrics\n12. **Competitor Review Analyzer** → consumes competitor data, produces comparisons\n13. **Review Summary Generator** → consumes reviews, produces summaries\n14. **Quality Threshold Filter** → consumes scored reviews, produces filtered reviews\n15. **Review Analytics Dashboard Generator** → consumes aggregated data, produces visualizations\n16. **Review Export Manager** → consumes processed data, produces formatted exports\n17. **Review Processing Pipeline Orchestrator** → coordinates multiple tools, produces workflow status\n\n## STEP 4 — Multi-tool plans\n\n**Simple Plans:**\n1. **Basic Review Processing**: Review Data Fetcher → Review Content Parser → Sentiment Analyzer → Review Aggregator (4 tools)\n2. **Quality Filtering**: Review Quality Scorer → Quality Threshold Filter → Review Export Manager (3 tools)\n\n**Medium Plans:**\n1. **Enhanced Review Analysis**: Review Data Fetcher → Review Content Parser → Review Text Preprocessor → Sentiment Analyzer → Rating Normalizer → Review Aggregator → Review Summary Generator (7 tools)\n2. **Spam Detection Pipeline**: Review Content Parser → Review Spam Detector → Quality Threshold Filter → Review Analytics Dashboard Generator (4 tools)\n\n**Complex Plans:**\n1. **Complete Review Intelligence**: Review Data Fetcher → Review Content Parser → Review Language Detector → Review Text Preprocessor → Sentiment Analyzer → Rating Normalizer → Review Spam Detector → Review Quality Scorer → Review Categorizer → Temporal Review Analyzer → Review Aggregator → Review Summary Generator → Review Analytics Dashboard Generator (13 tools)\n2. **Competitive Analysis Workflow**: Review Data Fetcher → Review Content Parser → Sentiment Analyzer → Competitor Review Analyzer → Review Aggregator → Review Analytics Dashboard Generator → Review Export Manager (7 tools)\n\n## STEP 5 — Produce tools\n\n```json\n{\n  \"tool_name\": \"Review Data Fetcher\",\n  \"tool_description\": \"Fetches product review data from multiple sources including APIs, databases, and files, with filtering and pagination support.\",\n  \"parameters\": {\n    \"product_id\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique identifier for the product\"\n    },\n    \"data_sources\": {\n      \"type\": \"array\",\n      \"required\": true,\n \
  \     \"description\": \"List of data sources to fetch from\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"date_from\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Start date for review filtering\",\n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    },\n    \"date_to\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"End date for review filtering\",\n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    },\n    \"max_reviews\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum number of reviews to fetch (1-10000)\",\n      \"default\": 1000\n    }\n  },\n  \"error_messages\": [\n    \"Invalid product_id: Product ID must be a non-empty string. Ensure the product exists in the system.\",\n    \"Empty data_sources: At least one data source must be specified. Use valid source names like 'amazon', 'google', 'internal_db'.\",\n    \"Invalid date range: date_from must be earlier than date_to. Use ISO 8601 format.\",\n    \"Max reviews out of range: max_reviews must be between 1 and 10000. Adjust the limit to avoid memory issues.\",\n    \"Data source unavailable: One or more specified data sources are currently unavailable. Check source connectivity.\"\n  ],\n  \"usage\": \"Provide product_id and data_sources array. Optionally set date range and max_reviews limit. The tool will fetch and return raw review data from specified sources.\",\n  \"output_details\": {\n    \"total_reviews_found\": {\n      \"type\": \"integer\",\n      \"description\": \"Total number of reviews fetched\"\n    },\n    \"sources_processed\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of successfully processed data sources\"\n    },\n    \"raw_reviews\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of raw review data strings\"\n    },\n    \"fetch_timestamp\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when data was fetched\",\n      \"format\": \"date-time\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Review Content Parser\",\n  \"tool_description\": \"Parses raw review data into structured format, extracting key fields like ratings, text, dates, and reviewer information.\",\n  \"parameters\": {\n    \"raw_review_data\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of raw review data strings to parse\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 5000\n    },\n    \"source_format\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Format of the raw data: json, xml, csv, html, or auto-detect\"\n    },\n    \"extract_images\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to extract image URLs from reviews\",\n      \"default\": false\n    }\n  },\n  \"error_messages\": [\n    \"Invalid raw_review_data: Input must be a non-empty array of strings. Check that review data was properly fetched.\",\n    \"Unsupported source_format: Use one of [json, xml, csv, html, auto-detect]. Verify the data format matches the specified type.\",\n    \"Parsing failed: Unable to parse review data due to malformed structure. Check data integrity and format consistency.\",\n    \"Array size limit exceeded: Maximum 5000 reviews can be processed at once. Split large datasets into smaller batches.\"\n  ],\n  \"usage\": \"Provide raw_review_data array and specify source_format. Optionally enable image extraction. The tool will parse and structure the review data into standardized format.\",\n  \"output_details\": {\n    \"parsed_reviews_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of successfully parsed reviews\"\n    },\n    \"failed_parses\": {\n      \"\
  type\": \"integer\",\n      \"description\": \"Number of reviews that failed to parse\"\n    },\n    \"structured_reviews\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of structured review data in JSON format\"\n    },\n    \"parsing_errors\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"List of parsing error messages for failed reviews\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Review Language Detector\",\n  \"tool_description\": \"Detects the language of review text content using statistical analysis and machine learning models.\",\n  \"parameters\": {\n    \"review_texts\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of review text content to analyze\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 2000\n    },\n    \"confidence_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum confidence score for language detection (0.1-1.0)\",\n      \"default\": 0.7\n    }\n  },\n  \"error_messages\": [\n    \"Invalid review_texts: Input must be a non-empty array of text strings. Ensure review content is properly extracted.\",\n    \"Confidence threshold out of range: Value must be between 0.1 and 1.0. Lower values include less certain detections.\",\n    \"Text too short: Some reviews may be too short for reliable language detection. Minimum 10 characters recommended.\",\n    \"Processing limit exceeded: Maximum 2000 texts can be processed at once. Split large batches for better performance.\"\n  ],\n  \"usage\": \"Provide array of review_texts and optionally set confidence_threshold. The tool will detect languages and return language codes with confidence scores.\",\n  \"output_details\": {\n    \"detected_languages\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of detected language codes (ISO 639-1 format)\"\n    },\n    \"confidence_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Confidence scores for each language detection\"\n    },\n    \"language_distribution\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Summary of language distribution in the format 'language:count'\"\n    },\n    \"uncertain_detections\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of texts with confidence below threshold\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Review Text Preprocessor\",\n  \"tool_description\": \"Cleans and preprocesses review text by removing noise, normalizing formatting, and handling special characters for downstream analysis.\",\n  \"parameters\": {\n    \"review_texts\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of raw review text content\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 3000\n    },\n    \"remove_html\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to remove HTML tags and entities\",\n      \"default\": true\n    },\n    \"normalize_whitespace\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to normalize whitespace and line breaks\",\n      \"default\": true\n    },\n    \"remove_special_chars\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to remove special characters except punctuation\",\n      \"default\": false\n    },\n    \"convert_case\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Case conversion: none, lower, upper, title\",\n      \"default\": \"none\"\n    },\n    \"min_length\": {\n      \"type\": \"integer\",\n      \"required\": false,\n\
  \      \"description\": \"Minimum text length to keep (characters)\",\n      \"default\": 10\n    }\n  },\n  \"error_messages\": [\n    \"Invalid review_texts: Input must be a non-empty array of strings. Check that review content was properly parsed.\",\n    \"Invalid convert_case value: Use one of [none, lower, upper, title]. Case conversion helps normalize text for analysis.\",\n    \"Min length out of range: min_length must be between 1 and 1000 characters. Very short texts may not be meaningful for analysis.\",\n    \"Processing limit exceeded: Maximum 3000 texts can be processed at once. Split large datasets into smaller batches.\",\n    \"Empty result after preprocessing: All texts were filtered out. Check min_length setting and input text quality.\"\n  ],\n  \"usage\": \"Provide review_texts array and configure preprocessing options. The tool will clean and normalize the text according to specified parameters.\",\n  \"output_details\": {\n    \"processed_texts\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of cleaned and preprocessed review texts\"\n    },\n    \"filtered_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of texts filtered out due to length or quality\"\n    },\n    \"processing_stats\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of preprocessing operations performed\"\n    },\n    \"average_length_before\": {\n      \"type\": \"number\",\n      \"description\": \"Average text length before preprocessing\"\n    },\n    \"average_length_after\": {\n      \"type\": \"number\",\n      \"description\": \"Average text length after preprocessing\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Sentiment Analyzer\",\n  \"tool_description\": \"Performs sentiment analysis on review text using advanced NLP models to determine positive, negative, or neutral sentiment with confidence scores.\",\n  \"parameters\": {\n    \"review_texts\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of preprocessed review text content\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 2500\n    },\n    \"model_type\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Sentiment analysis model: transformer, lstm, naive_bayes, or ensemble\",\n      \"default\": \"transformer\"\n    },\n    \"language\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Primary language code for optimal model selection\",\n      \"default\": \"en\"\n    },\n    \"include_emotions\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to include detailed emotion classification\",\n      \"default\": false\n    },\n    \"confidence_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum confidence threshold for sentiment classification (0.1-1.0)\",\n      \"default\": 0.6\n    }\n  },\n  \"error_messages\": [\n    \"Invalid review_texts: Input must be a non-empty array of text strings. Ensure texts are properly preprocessed.\",\n    \"Unsupported model_type: Use one of [transformer, lstm, naive_bayes, ensemble]. Transformer models provide highest accuracy.\",\n    \"Invalid language code: Use ISO 639-1 language codes. Unsupported languages may default to English processing.\",\n    \"Confidence threshold out of range: Value must be between 0.1 and 1.0. Higher thresholds provide more certain classifications.\",\n    \"Processing capacity exceeded: Maximum 2500 texts per batch. Large datasets should be processed in multiple batches.\"\n  ],\n  \"usage\": \"Provide review_texts array and configure analysis parameters. The tool will analyze sentiment and return classifications with confidence scores and optional emotion details.\",\n  \"output_details\": {\n    \"sentiment_labels\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n    \
  \  },\n      \"description\": \"Array of sentiment labels: positive, negative, or neutral\"\n    },\n    \"confidence_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Confidence scores for each sentiment classification\"\n    },\n    \"sentiment_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Numerical sentiment scores ranging from -1 (negative) to +1 (positive)\"\n    },\n    \"emotion_labels\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Detailed emotion classifications when include_emotions is enabled\"\n    },\n    \"overall_sentiment\": {\n      \"type\": \"string\",\n      \"description\": \"Overall sentiment across all analyzed texts\"\n    },\n    \"sentiment_distribution\": {\n      \"type\": \"string\",\n      \"description\": \"Distribution summary in format 'positive:X, negative:Y, neutral:Z'\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Rating Normalizer\",\n  \"tool_description\": \"Normalizes rating scores from different sources and scales to a unified rating system with statistical adjustments.\",\n  \"parameters\": {\n    \"raw_ratings\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of numerical rating values to normalize\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 5000\n    },\n    \"source_scales\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of source scale definitions (e.g., '1-5', '0-10', '1-100')\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"target_scale\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Target scale format (e.g., '1-5', '0-10')\",\n      \"default\": \"1-5\"\n    },\n    \"handle_outliers\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to detect and adjust for rating outliers\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Invalid raw_ratings: Input must be a non-empty array of numerical values. Check that ratings were properly extracted from review data.\",\n    \"Mismatched array lengths: raw_ratings and source_scales arrays must have compatible lengths or source_scales must define mapping rules.\",\n    \"Invalid scale format: Use format 'min-max' (e.g., '1-5', '0-10'). Ensure minimum is less than maximum value.\",\n    \"Unsupported target_scale: Target scale must be in format 'min-max' with valid numerical range.\",\n    \"Rating out of source range: Some ratings fall outside their declared source scale ranges. Verify data integrity.\"\n  ],\n  \"usage\": \"Provide raw_ratings array and corresponding source_scales, specify target_scale format. The tool will normalize all ratings to the unified scale.\",\n  \"output_details\": {\n    \"normalized_ratings\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Array of ratings normalized to target scale\"\n    },\n    \"original_average\": {\n      \"type\": \"number\",\n      \"description\": \"Average rating before normalization\"\n    },\n    \"normalized_average\": {\n      \"type\": \"number\",\n      \"description\": \"Average rating after normalization\"\n    },\n    \"outliers_detected\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of outlier ratings detected and adjusted\"\n    },\n    \"scale_mapping\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of scale conversion applied\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Review Spam Detector\",\n  \"tool_description\": \"Detects potentially fake, spam, or low-quality reviews using machine learning models and heuristic analysis of review patterns.\",\n  \"parameters\": {\n    \"review_texts\"\
  : {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of review text content for spam detection\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 2000\n    },\n    \"review_ratings\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of review ratings corresponding to texts\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 2000\n    },\n    \"reviewer_ids\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Array of reviewer identifiers for pattern analysis\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    },\n    \"review_dates\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Array of review timestamps for temporal analysis\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"format\": \"date-time\",\n      \"default\": \"None\"\n    },\n    \"spam_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Spam probability threshold for classification (0.1-1.0)\",\n      \"default\": 0.7\n    },\n    \"check_duplicates\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to check for duplicate or near-duplicate reviews\",\n      \"default\": true\n    },\n    \"analyze_patterns\": {\n      \"type\": \"boolean\",\n      \"required\": false,\n      \"description\": \"Whether to analyze reviewer behavior patterns\",\n      \"default\": true\n    }\n  },\n  \"error_messages\": [\n    \"Array length mismatch: review_texts and review_ratings must have the same length. Ensure data alignment is maintained.\",\n    \"Invalid spam_threshold: Value must be between 0.1 and 1.0. Higher thresholds are more conservative in spam detection.\",\n    \"Insufficient data for pattern analysis: Pattern analysis requires at least reviewer_ids or review_dates. Disable analyze_patterns if unavailable.\",\n    \"Invalid date format: review_dates must be in ISO 8601 format. Check timestamp formatting from data source.\",\n    \"Processing limit exceeded: Maximum 2000 reviews per batch. Large datasets should be split for optimal performance.\"\n  ],\n  \"usage\": \"Provide review_texts and review_ratings arrays. Optionally include reviewer_ids and review_dates for enhanced detection. Configure thresholds and analysis options as needed.\",\n  \"output_details\": {\n    \"spam_probabilities\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Spam probability scores for each review (0-1 scale)\"\n    },\n    \"spam_classifications\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"boolean\"\n      },\n      \"description\": \"Boolean spam classification for each review\"\n    },\n    \"spam_reasons\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Reason codes for reviews classified as spam\"\n    },\n    \"duplicate_groups\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Groups of duplicate or near-duplicate review indices\"\n    },\n    \"spam_summary\": {\n      \"type\": \"string\",\n      \"description\": \"Overall spam detection summary with counts and percentages\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Review Quality Scorer\",\n  \"tool_description\": \"Calculates comprehensive quality scores for reviews based on multiple factors including helpfulness, detail, authenticity, and readability.\",\n  \"parameters\": {\n    \"review_texts\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of review text content for quality assessment\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1500\n    },\n    \"sentiment_scores\"\
  : {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of sentiment scores from sentiment analysis\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1500\n    },\n    \"spam_probabilities\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Array of spam probability scores\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"default\": \"None\"\n    },\n    \"review_lengths\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Array of review text lengths in characters\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"default\": \"None\"\n    },\n    \"helpfulness_votes\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Array of helpfulness vote counts from users\",\n      \"items\": {\n        \"type\": \"integer\"\n      },\n      \"default\": \"None\"\n    },\n    \"scoring_weights\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Weights for quality factors: [detail, authenticity, sentiment, helpfulness, readability]\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 5,\n      \"maxItems\": 5,\n      \"default\": \"[0.2, 0.25, 0.2, 0.2, 0.15]\"\n    },\n    \"quality_threshold\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum quality score threshold (0.1-1.0)\",\n      \"default\": 0.5\n    }\n  },\n  \"error_messages\": [\n    \"Array length mismatch: review_texts and sentiment_scores must have the same length. Verify data alignment from previous processing steps.\",\n    \"Invalid scoring_weights: Must provide exactly 5 weights that sum to 1.0. Weights represent [detail, authenticity, sentiment, helpfulness, readability].\",\n    \"Quality threshold out of range: Value must be between 0.1 and 1.0. Higher thresholds filter for higher quality reviews.\",\n    \"Optional array length mismatch: If provided, spam_probabilities, review_lengths, and helpfulness_votes must match main arrays length.\",\n    \"Processing limit exceeded: Maximum 1500 reviews per batch. Split large datasets for better memory management.\"\n  ],\n  \"usage\": \"Provide review_texts and sentiment_scores arrays. Optionally include additional quality factors and configure scoring weights. The tool calculates comprehensive quality scores.\",\n  \"output_details\": {\n    \"quality_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Overall quality scores for each review (0-1 scale)\"\n    },\n    \"quality_categories\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Quality categories: excellent, good, fair, poor\"\n    },\n    \"detail_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Detail and informativeness scores for each review\"\n    },\n    \"readability_scores\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Readability and clarity scores for each review\"\n    },\n    \"high_quality_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of reviews exceeding quality threshold\"\n    },\n    \"average_quality_score\": {\n      \"type\": \"number\",\n      \"description\": \"Average quality score across all reviewed items\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Review Categorizer\",\n  \"tool_description\": \"Automatically categorizes reviews into product aspects, topics, or themes using natural language processing and classification models.\",\n  \"parameters\": {\n    \"review_texts\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of review text content for categorization\",\n      \"items\": {\n        \"type\": \"string\"\n    \
  \  },\n      \"minItems\": 1,\n      \"maxItems\": 2000\n    },\n    \"category_system\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Categorization approach: aspects, topics, themes, or custom\",\n      \"default\": \"aspects\"\n    },\n    \"custom_categories\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Custom category labels when using custom category system\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": \"None\"\n    },\n    \"min_confidence\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Minimum confidence threshold for categorization (0.1-1.0)\",\n      \"default\": 0.6\n    },\n    \"max_categories_per_review\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Maximum number of categories per review (1-10)\",\n      \"default\": 3\n    }\n  },\n  \"error_messages\": [\n    \"Invalid review_texts: Input must be a non-empty array of text strings. Ensure review content is available for categorization.\",\n    \"Unsupported category_system: Use one of [aspects, topics, themes, custom]. Each system uses different classification approaches.\",\n    \"Missing custom_categories: When using 'custom' category_system, must provide custom_categories array with at least 2 categories.\",\n    \"Confidence threshold out of range: min_confidence must be between 0.1 and 1.0. Lower values include more uncertain classifications.\",\n    \"Invalid max_categories limit: Value must be between 1 and 10. Higher values may produce too many overlapping categories.\"\n  ],\n  \"usage\": \"Provide review_texts array and select category_system. For custom categorization, provide custom_categories array. Configure confidence and limit parameters as needed.\",\n  \"output_details\": {\n    \"review_categories\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Primary categories assigned to each review\"\n    },\n    \"category_confidence\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"description\": \"Confidence scores for primary category assignments\"\n    },\n    \"all_categories\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"All categories found across all reviews\"\n    },\n    \"category_distribution\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Distribution summary in format 'category:count'\"\n    },\n    \"uncategorized_count\": {\n      \"type\": \"integer\",\n      \"description\": \"Number of reviews that couldn't be categorized with sufficient confidence\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Temporal Review Analyzer\",\n  \"tool_description\": \"Analyzes temporal patterns in review data including trends, seasonality, and sentiment changes over time periods.\",\n  \"parameters\": {\n    \"review_dates\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Array of review timestamps in ISO 8601 format\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"format\": \"date-time\",\n      \"minItems\": 5,\n      \"maxItems\": 5000\n    },\n    \"sentiment_scores\":"
