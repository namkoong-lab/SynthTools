field_name: dictionaries_and_reference
subfield: Dictionary Compilation and Editing
task: Pronunciation guide generation and audio recording coordination
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **medium** difficulty. It involves coordinating multiple specialized workflows (phonetic transcription, audio production, quality assurance) with dependencies between steps, requires handling diverse linguistic data, and demands both technical accuracy and standardization across different languages and dialects.

  ## STEP 2 — Set a tool budget

  Given the medium complexity, I'll target **12 tools** to cover the workflow from phonetic analysis through audio coordination and quality control.

  ## STEP 3 — List all tool names and dependencies

  **Tools and their data flow:**
  1. **Phoneme Analyzer** → produces phonetic transcriptions
  2. **IPA Transcriber** → consumes word lists, produces IPA notation
  3. **Stress Pattern Detector** → consumes phonetic data, produces stress annotations
  4. **Dialect Variant Mapper** → consumes base transcriptions, produces regional variants
  5. **Audio Script Generator** → consumes transcriptions, produces recording scripts
  6. **Voice Talent Matcher** → consumes requirements, produces talent recommendations
  7. **Recording Session Scheduler** → consumes talent/script data, produces schedules
  8. **Audio Quality Validator** → consumes audio files, produces quality assessments
  9. **Pronunciation Consistency Checker** → consumes multiple transcriptions, produces consistency reports
  10. **Cross-Reference Linker** → consumes dictionary entries, produces internal links
  11. **Format Standardizer** → consumes various inputs, produces standardized output
  12. **Publication Coordinator** → consumes all assets, produces publication-ready package

  ## STEP 4 — Multi-tool plans

  **Simple plans:**
  - Basic transcription: IPA Transcriber → Format Standardizer
  - Quality check: Audio Quality Validator → Pronunciation Consistency Checker

  **Medium plans:**
  - Standard pronunciation guide: Phoneme Analyzer → IPA Transcriber → Stress Pattern Detector → Format Standardizer
  - Audio production setup: Audio Script Generator → Voice Talent Matcher → Recording Session Scheduler

  **Complex plans:**
  - Full pronunciation guide with variants: Phoneme Analyzer → IPA Transcriber → Stress Pattern Detector → Dialect Variant Mapper → Cross-Reference Linker → Format Standardizer → Publication Coordinator
  - Complete audio workflow: Audio Script Generator → Voice Talent Matcher → Recording Session Scheduler → Audio Quality Validator → Pronunciation Consistency Checker → Publication Coordinator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Phoneme Analyzer",
    "tool_description": "Analyzes words to identify constituent phonemes and their positions within syllable structures for pronunciation guide creation.",
    "parameters": {
      "word_list": {
        "type": "array",
        "required": true,
        "description": "List of words to analyze for phoneme structure",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "language_code": {
        "type": "string",
        "required": true,
        "description": "ISO 639-1 language code (e.g., 'en', 'fr', 'es')"
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "description": "Level of phonemic analysis: basic, detailed, or comprehensive",
        "default": "detailed"
      }
    },
    "error_messages": [
      "Invalid language code: Provide a valid ISO 639-1 two-letter language code.",
      "Empty word list: Provide at least one word to analyze.",
      "Unsupported analysis depth: Use 'basic', 'detailed', or 'comprehensive'.",
      "Word contains invalid characters: Remove non-alphabetic characters except hyphens and apostrophes."
    ],
    "usage": "Provide a list of words and language code. Optionally specify analysis depth. Returns phoneme breakdown for each word with syllable boundaries.",
    "output_details": {
      "analyzed_words": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of successfully analyzed words"
      },
      "phoneme_sequences": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Phoneme sequences corresponding to each word"
      },
      "syllable_counts": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Number of syllables in each word"
      },
      "analysis_confidence": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for each analysis (0-1)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "IPA Transcriber",
    "tool_description": "Converts phonetic analyses into standardized International Phonetic Alphabet notation with customizable symbol sets and formatting options.",
    "parameters": {
      "phoneme_data": {
        "type": "array",
        "required": true,
        "description": "Phoneme sequences to convert to IPA",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "target_language": {
        "type": "string",
        "required": true,
        "description": "Target language for IPA conventions"
      },
      "symbol_set": {
        "type": "string",
        "required": false,
        "description": "IPA symbol set: standard, simplified, or broad",
        "default": "standard"
      },
      "include_allophones": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include allophonic variations",
        "default": false
      },
      "bracket_style": {
        "type": "string",
        "required": false,
        "description": "Bracket notation style: phonemic, phonetic, or both",
        "default": "phonemic"
      }
    },
    "error_messages": [
      "Invalid phoneme sequence: Ensure phoneme data contains valid phonemic representations.",
      "Unsupported language: The target language is not supported for IPA transcription.",
      "Invalid symbol set: Use 'standard', 'simplified', or 'broad'.",
      "Invalid bracket style: Use 'phonemic', 'phonetic', or 'both'."
    ],
    "usage": "Input phoneme sequences and target language. Configure symbol set, allophone inclusion, and bracket style as needed. Returns standardized IPA transcriptions.",
    "output_details": {
      "ipa_transcriptions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "IPA transcriptions for each input sequence"
      },
      "transcription_notes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Special notes or alternative transcriptions"
      },
      "symbol_inventory": {
        "type": "array",
        "items": {"type": "string"},
        "description": "List of IPA symbols used in transcriptions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Stress Pattern Detector",
    "tool_description": "Identifies and marks primary and secondary stress patterns in multi-syllabic words for pronunciation guides.",
    "parameters": {
      "word_transcriptions": {
        "type": "array",
        "required": true,
        "description": "IPA transcriptions to analyze for stress patterns",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "language": {
        "type": "string",
        "required": true,
        "description": "Language code for stress pattern rules"
      },
      "stress_notation": {
        "type": "string",
        "required": false,
        "description": "Stress marking system: ipa, numeric, or symbols",
        "default": "ipa"
      },
      "mark_secondary": {
        "type": "boolean",
        "required": false,
        "description": "Whether to mark secondary stress",
        "default": true
      }
    },
    "error_messages": [
      "Invalid transcription format: Provide valid IPA transcriptions with syllable boundaries.",
      "Unsupported language: Language not supported for stress pattern analysis.",
      "Invalid stress notation: Use 'ipa', 'numeric', or 'symbols'.",
      "Monosyllabic word: Stress patterns cannot be determined for single-syllable words."
    ],
    "usage": "Provide IPA transcriptions and language code. Configure stress notation system and secondary stress marking. Returns transcriptions with stress markings.",
    "output_details": {
      "stressed_transcriptions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Transcriptions with stress markings applied"
      },
      "stress_patterns": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Abstract stress patterns (e.g., 'SW' for strong-weak)"
      },
      "primary_stress_positions": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Syllable positions of primary stress (1-indexed)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Dialect Variant Mapper",
    "tool_description": "Maps pronunciation variations across different dialects and regional varieties of a language for comprehensive pronunciation coverage.",
    "parameters": {
      "base_transcriptions": {
        "type": "array",
        "required": true,
        "description": "Standard transcriptions to generate variants for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "source_words": {
        "type": "array",
        "required": true,
        "description": "Original words corresponding to transcriptions",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 500
      },
      "target_dialects": {
        "type": "array",
        "required": true,
        "description": "Dialect codes to generate variants for",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 20
      },
      "base_language": {
        "type": "string",
        "required": true,
        "description": "Base language code"
      },
      "variation_level": {
        "type": "string",
        "required": false,
        "description": "Level of variation to include: conservative, moderate, or comprehensive",
        "default": "moderate"
      },
      "include_obsolete": {
        "type": "boolean",
        "required": false,
        "description": "Whether to include obsolete or archaic variants",
        "default": false
      },
      "geographical_scope": {
        "type": "string",
        "required": false,
        "description": "Geographical scope: local, national, or international",
        "default": "national"
      }
    },
    "error_messages": [
      "Mismatched array lengths: base_transcriptions and source_words must have the same length.",
      "Invalid dialect code: One or more dialect codes are not recognized.",
      "Unsupported base language: Base language is not supported for dialect mapping.",
      "Invalid variation level: Use 'conservative', 'moderate', or 'comprehensive'.",
      "Invalid geographical scope: Use 'local', 'national', or 'international'.",
      "No variants available: No dialect variants found for the specified parameters."
    ],
    "usage": "Provide base transcriptions, source words, target dialects, and base language. Configure variation level and scope as needed. Returns mapped variants for each dialect.",
    "output_details": {
      "dialect_variants": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Pronunciation variants organized by dialect"
      },
      "variant_labels": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Labels identifying each dialect variant"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for variant accuracy (0-1)"
      },
      "geographical_notes": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Geographical usage notes for variants"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audio Script Generator",
    "tool_description": "Creates structured recording scripts for voice talent with pronunciation guides, timing cues, and quality control instructions.",
    "parameters": {
      "transcription_data": {
        "type": "array",
        "required": true,
        "description": "IPA transcriptions and words for script generation",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 2000
      },
      "word_entries": {
        "type": "array",
        "required": true,
        "description": "Dictionary words corresponding to transcriptions",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 2000
      },
      "recording_format": {
        "type": "string",
        "required": true,
        "description": "Audio format specification: single_word, phrase_context, or both"
      },
      "voice_instructions": {
        "type": "array",
        "required": false,
        "description": "Special instructions for voice talent",
        "items": {"type": "string"},
        "maxItems": 50,
        "default": []
      },
      "pace_guidelines": {
        "type": "string",
        "required": false,
        "description": "Speaking pace: slow, normal, or fast",
        "default": "normal"
      },
      "repetition_count": {
        "type": "integer",
        "required": false,
        "description": "Number of repetitions per entry (1-5)",
        "default": 2
      },
      "include_phonetic_guide": {
        "type": "boolean",
        "required": false,
        "description": "Include IPA guide in script for talent reference",
        "default": true
      },
      "session_duration_limit": {
        "type": "integer",
        "required": false,
        "description": "Maximum session duration in minutes",
        "default": 60
      },
      "break_intervals": {
        "type": "integer",
        "required": false,
        "description": "Suggested break intervals in minutes",
        "default": 15
      }
    },
    "error_messages": [
      "Mismatched data lengths: transcription_data and word_entries must have equal length.",
      "Invalid recording format: Use 'single_word', 'phrase_context', or 'both'.",
      "Invalid pace guidelines: Use 'slow', 'normal', or 'fast'.",
      "Invalid repetition count: Must be between 1 and 5.",
      "Session too long: Estimated session time exceeds duration limit.",
      "Empty transcription data: Provide at least one transcription entry."
    ],
    "usage": "Provide transcription data, word entries, and recording format. Configure voice instructions, pace, repetitions, and timing parameters. Returns structured recording script with cues and instructions.",
    "output_details": {
      "script_sections": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Organized script sections for recording"
      },
      "timing_estimates": {
        "type": "array",
        "items": {"type": "integer"},
        "description": "Estimated recording time for each section in seconds"
      },
      "break_markers": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Positions and types of suggested breaks"
      },
      "total_estimated_time": {
        "type": "integer",
        "description": "Total estimated session time in minutes"
      },
      "quality_checkpoints": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Quality control checkpoints throughout script"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Voice Talent Matcher",
    "tool_description": "Matches pronunciation recording requirements with suitable voice talent based on linguistic expertise, dialect proficiency, and availability.",
    "parameters": {
      "language_requirements": {
        "type": "array",
        "required": true,
        "description": "Required languages and dialects",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "recording_volume": {
        "type": "integer",
        "required": true,
        "description": "Estimated number of words to record"
      },
      "expertise_level": {
        "type": "string",
        "required": false,
        "description": "Required expertise: native, professional, or academic",
        "default": "professional"
      },
      "quality_tier": {
        "type": "string",
        "required": false,
        "description": "Audio quality requirement: standard, premium, or broadcast",
        "default": "premium"
      }
    },
    "error_messages": [
      "No matching talent: No voice talent available for specified language requirements.",
      "Invalid expertise level: Use 'native', 'professional', or 'academic'.",
      "Invalid quality tier: Use 'standard', 'premium', or 'broadcast'.",
      "Volume too large: Recording volume exceeds available talent capacity."
    ],
    "usage": "Specify language requirements and recording volume. Optionally set expertise level and quality tier. Returns ranked list of suitable voice talent with availability and rates.",
    "output_details": {
      "recommended_talent": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Names of recommended voice talent"
      },
      "talent_ratings": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Quality ratings for each talent (1-10)"
      },
      "availability_windows": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Available time windows for each talent"
      },
      "estimated_costs": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Estimated costs per talent option"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Recording Session Scheduler",
    "tool_description": "Schedules and coordinates pronunciation recording sessions with voice talent, managing scripts, equipment, and timeline requirements.",
    "parameters": {
      "talent_selection": {
        "type": "string",
        "required": true,
        "description": "Selected voice talent identifier"
      },
      "script_data": {
        "type": "array",
        "required": true,
        "description": "Recording script sections and timing",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 100
      },
      "preferred_dates": {
        "type": "array",
        "required": true,
        "description": "Preferred recording dates in ISO format",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 10
      },
      "session_duration": {
        "type": "integer",
        "required": true,
        "description": "Planned session duration in minutes"
      },
      "location_preference": {
        "type": "string",
        "required": false,
        "description": "Recording location: studio, remote, or hybrid",
        "default": "studio"
      },
      "technical_requirements": {
        "type": "array",
        "required": false,
        "description": "Special technical or equipment requirements",
        "items": {"type": "string"},
        "maxItems": 20,
        "default": []
      },
      "deadline": {
        "type": "string",
        "required": false,
        "description": "Project deadline in ISO date format",
        "format": "date-time",
        "default": "None"
      },
      "backup_talent": {
        "type": "string",
        "required": false,
        "description": "Backup talent identifier",
        "default": "None"
      }
    },
    "error_messages": [
      "Talent unavailable: Selected talent not available for preferred dates.",
      "Invalid session duration: Duration must be between 30 and 480 minutes.",
      "Invalid location preference: Use 'studio', 'remote', or 'hybrid'.",
      "Scheduling conflict: Preferred dates conflict with existing bookings.",
      "Deadline too soon: Insufficient time between earliest available date and deadline.",
      "Equipment unavailable: Required technical equipment not available for selected dates."
    ],
    "usage": "Select talent and provide script data, preferred dates, and session duration. Configure location, technical requirements, and deadline as needed. Returns scheduled session details and confirmations.",
    "output_details": {
      "confirmed_sessions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Confirmed recording session timestamps"
      },
      "session_details": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Detailed session information and logistics"
      },
      "booking_confirmations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Booking confirmation numbers"
      },
      "preparation_checklist": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Pre-session preparation items"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audio Quality Validator",
    "tool_description": "Validates recorded pronunciation audio files against quality standards including clarity, consistency, noise levels, and pronunciation accuracy.",
    "parameters": {
      "audio_file_paths": {
        "type": "array",
        "required": true,
        "description": "Paths to audio files for validation",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "reference_transcriptions": {
        "type": "array",
        "required": true,
        "description": "Expected pronunciations for validation",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 1000
      },
      "quality_standard": {
        "type": "string",
        "required": false,
        "description": "Quality standard: basic, professional, or broadcast",
        "default": "professional"
      },
      "noise_threshold": {
        "type": "number",
        "required": false,
        "description": "Maximum acceptable background noise level in dB",
        "default": -40.0
      },
      "consistency_check": {
        "type": "boolean",
        "required": false,
        "description": "Perform cross-file consistency validation",
        "default": true
      },
      "auto_normalize": {
        "type": "boolean",
        "required": false,
        "description": "Automatically normalize audio levels",
        "default": false
      }
    },
    "error_messages": [
      "File not found: One or more audio files could not be located at specified paths.",
      "Unsupported format: Audio files must be in WAV, MP3, or FLAC format.",
      "Corrupted file: Audio file appears to be corrupted or unreadable.",
      "Invalid quality standard: Use 'basic', 'professional', or 'broadcast'.",
      "Mismatched arrays: audio_file_paths and reference_transcriptions must have equal length.",
      "Invalid noise threshold: Noise threshold must be between -60.0 and 0.0 dB."
    ],
    "usage": "Provide audio file paths and reference transcriptions. Set quality standard, noise threshold, and validation options. Returns detailed quality assessment for each file.",
    "output_details": {
      "validation_results": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Overall validation result for each file (pass/fail/warning)"
      },
      "quality_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Quality scores for each file (0-100)"
      },
      "noise_levels": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Measured noise levels in dB"
      },
      "pronunciation_accuracy": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Pronunciation accuracy scores (0-100)"
      },
      "flagged_issues": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific issues identified in audio files"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Pronunciation Consistency Checker",
    "tool_description": "Analyzes pronunciation transcriptions and audio recordings for consistency across entries, variants, and editorial standards.",
    "parameters": {
      "transcription_sets": {
        "type": "array",
        "required": true,
        "description": "Multiple transcription sets to compare for consistency",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 500
      },
      "word_list": {
        "type": "array",
        "required": true,
        "description": "Corresponding words for transcription analysis",
        "items": {"type": "string"},
        "minItems": 2,
        "maxItems": 500
      },
      "consistency_rules": {
        "type": "array",
        "required": false,
        "description": "Editorial consistency rules to apply",
        "items": {"type": "string"},
        "maxItems": 50,
        "default": []
      },
      "tolerance_level": {
        "type": "string",
        "required": false,
        "description": "Consistency tolerance: strict, moderate, or lenient",
        "default": "moderate"
      },
      "cross_reference_check": {
        "type": "boolean",
        "required": false,
        "description": "Check consistency against existing dictionary entries",
        "default": true
      }
    },
    "error_messages": [
      "Insufficient data: Provide at least 2 transcription sets for comparison.",
      "Mismatched lengths: transcription_sets and word_list must have equal length.",
      "Invalid tolerance level: Use 'strict', 'moderate', or 'lenient'.",
      "Invalid consistency rules: One or more rules contain invalid syntax."
    ],
    "usage": "Provide multiple transcription sets and corresponding words. Configure consistency rules and tolerance level as needed. Returns detailed consistency analysis and recommendations.",
    "output_details": {
      "consistency_score": {
        "type": "number",
        "description": "Overall consistency score (0-100)"
      },
      "inconsistent_entries": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Entries flagged for inconsistencies"
      },
      "rule_violations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Specific rule violations found"
      },
      "recommendations": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Recommendations for improving consistency"
      },
      "standardization_suggestions": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Suggestions for standardizing inconsistent entries"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Cross Reference Linker",
    "tool_description": "Creates internal cross-references and links between pronunciation entries, related words, and variant forms within dictionary systems.",
    "parameters": {
      "primary_entries": {
        "type": "array",
        "required": true,
        "description": "Main dictionary entries to process for linking",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 2000
      },
      "entry_metadata": {
        "type": "array",
        "required": true,
        "description": "Metadata for each entry (word forms, definitions, etc.)",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 2000
      },
      "link_types": {
        "type": "array",
        "required": false,
        "description": "Types of links to create: variant, related, homophone, compound",
        "items": {"type": "string"},
        "maxItems": 10,
        "default": ["variant", "related"]
      },
      "similarity_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum similarity score for automatic linking (0-1)",
        "default": 0.8
      },
      "include_morphological": {
        "type": "boolean",
        "required": false,
        "description": "Include morphologically related forms",
        "default": true
      }
    },
    "error_messages": [
      "Mismatched data: primary_entries and entry_metadata must have equal length.",
      "Invalid link type: Supported link types are variant, related, homophone, compound.",
      "Invalid similarity threshold: Must be between 0.0 and 1.0.",
      "Insufficient entries: Need at least 2 entries to create cross-references."
    ],
    "usage": "Provide primary entries and metadata. Configure link types, similarity threshold, and morphological options. Returns structured cross-reference links and relationship mappings.",
    "output_details": {
      "generated_links": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Generated cross-reference links"
      },
      "link_categories": {
        "type": "array",
        "items": {"type": "string"},
        "description": "Categories of each generated link"
      },
      "confidence_scores": {
        "type": "array",
        "items": {"type": "number"},
        "description": "Confidence scores for link accuracy (0-1)"
      },
      "bidirectional_links": {
        "type": "array",
        "items": {"type": "boolean"},
        "description": "Whether each link should be bidirectional"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Format Standardizer",
    "tool_description": "Standardizes pronunciation guide formats, notation systems, and presentation styles according to specified editorial guidelines and publication requirements.",
    "parameters": {
      "input_transcriptions": {
        "type": "array",
        "required": true,
        "description": "Raw transcriptions to standardize",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5000
      },
      "source_words": {
        "type": "array",
        "required": true,
        "description": "Source words corresponding to transcriptions",
        "items": {"type": "string"},
        "minItems": 1,
        "maxItems": 5000
      },
      "target_format": {
        "type": "string",
        "required": true,
        "description": "Target format: ipa_standard, simplified_respelling, hybrid, or custom"
      },
      "publication_style": {
        "type": "string",
        "required": false,
        "description": "Publication style guide: academic, commercial, educational, or web",
        "default": "commercial"
      },
      "bracket_convention": {
        "type": "string",
        "required": false,
        "description": "Bracket style: slashes, brackets, parentheses
