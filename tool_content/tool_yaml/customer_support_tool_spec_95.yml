field_name: customer_support
subfield: customer_feedback_analysis
task: Identify and extract trending issues, complaints, and recurring problems from feedback data
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task involves processing unstructured customer feedback data, applying natural language processing techniques, categorizing issues, detecting trends over time, and prioritizing problems by frequency and impact. The complexity stems from handling diverse feedback formats, subjective language interpretation, temporal trend analysis, and the need for accurate classification systems. This represents a **medium** difficulty task.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty assessment, I'll target 12 tools within the 10-15 range to cover data preprocessing, text analysis, trend detection, categorization, and reporting capabilities.

  ## STEP 3 — List all tool names and dependencies

  1. **Feedback Data Loader** - Consumes: file paths, formats → Produces: structured feedback records
  2. **Text Preprocessor** - Consumes: raw text → Produces: cleaned, normalized text
  3. **Issue Classifier** - Consumes: preprocessed text → Produces: categorized issues
  4. **Sentiment Analyzer** - Consumes: feedback text → Produces: sentiment scores
  5. **Keyword Extractor** - Consumes: text data → Produces: relevant keywords/phrases
  6. **Trend Detector** - Consumes: timestamped categorized data → Produces: trend metrics
  7. **Frequency Analyzer** - Consumes: categorized issues → Produces: frequency distributions
  8. **Complaint Severity Scorer** - Consumes: feedback text, sentiment → Produces: severity ratings
  9. **Topic Modeler** - Consumes: text corpus → Produces: identified topics/themes
  10. **Temporal Pattern Analyzer** - Consumes: timestamped data → Produces: time-based patterns
  11. **Issue Prioritizer** - Consumes: frequency, severity, trends → Produces: prioritized issue list
  12. **Report Generator** - Consumes: all analysis outputs → Produces: comprehensive reports

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. Feedback Data Loader → Text Preprocessor → Sentiment Analyzer (Basic sentiment analysis of feedback)
  2. Feedback Data Loader → Issue Classifier → Frequency Analyzer (Simple issue frequency counting)

  **Medium Plans:**
  1. Feedback Data Loader → Text Preprocessor → Issue Classifier → Frequency Analyzer → Report Generator (Complete issue frequency analysis with reporting)
  2. Feedback Data Loader → Text Preprocessor → Sentiment Analyzer → Complaint Severity Scorer → Issue Prioritizer (Severity-based issue prioritization)

  **Complex Plans:**
  1. Feedback Data Loader → Text Preprocessor → Issue Classifier + Topic Modeler + Keyword Extractor → Trend Detector → Temporal Pattern Analyzer → Issue Prioritizer → Report Generator (Comprehensive trending analysis)
  2. Feedback Data Loader → Text Preprocessor → Issue Classifier + Sentiment Analyzer → Complaint Severity Scorer + Frequency Analyzer → Trend Detector + Temporal Pattern Analyzer → Issue Prioritizer → Report Generator (Full pipeline analysis)

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Feedback Data Loader",
    "tool_description": "Loads and parses customer feedback data from various file formats and sources, standardizing the output format for downstream analysis.",
    "parameters": {
      "file_path": {
        "type": "string",
        "required": true,
        "description": "Path to the feedback data file"
      },
      "file_format": {
        "type": "string",
        "required": true,
        "description": "Format of the input file: csv, json, xlsx, txt"
      },
      "text_column": {
        "type": "string",
        "required": true,
        "description": "Name of the column containing feedback text"
      },
      "timestamp_column": {
        "type": "string",
        "required": false,
        "description": "Name of the column containing timestamps",
        "default": "None"
      },
      "customer_id_column": {
        "type": "string",
        "required": false,
        "description": "Name of the column containing customer IDs",
        "default": "None"
      }
    },
    "error_messages": [
      "File not found: Verify the file_path exists and is accessible.",
      "Unsupported file format: Use one of [csv, json, xlsx, txt].",
      "Column not found: Ensure specified column names exist in the data file.",
      "Invalid file structure: File must contain at least the specified text column.",
      "Empty dataset: The file contains no valid feedback records."
    ],
    "usage": "Provide the file path, format, and text column name. Optionally specify timestamp and customer ID columns for enhanced analysis capabilities.",
    "output_details": {
      "record_count": {
        "type": "integer",
        "description": "Number of feedback records loaded"
      },
      "feedback_data": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of feedback text entries"
      },
      "timestamps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of timestamp strings in ISO 8601 format"
      },
      "customer_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of customer identifiers"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Text Preprocessor",
    "tool_description": "Cleans and normalizes feedback text data by removing noise, standardizing format, and preparing text for analysis.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of raw feedback text to preprocess"
      },
      "remove_stopwords": {
        "type": "boolean",
        "required": false,
        "description": "Whether to remove common stopwords",
        "default": true
      },
      "lowercase": {
        "type": "boolean",
        "required": false,
        "description": "Whether to convert text to lowercase",
        "default": true
      },
      "remove_punctuation": {
        "type": "boolean",
        "required": false,
        "description": "Whether to remove punctuation marks",
        "default": false
      }
    },
    "error_messages": [
      "Empty input: Provide at least one feedback text entry.",
      "Invalid text format: All entries must be valid strings.",
      "Processing failed: Text preprocessing encountered an error with malformed input."
    ],
    "usage": "Input an array of feedback text and configure preprocessing options. The tool returns cleaned text ready for analysis.",
    "output_details": {
      "processed_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of cleaned and normalized feedback text"
      },
      "processing_summary": {
        "type": "string",
        "description": "Summary of preprocessing operations performed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Issue Classifier",
    "tool_description": "Classifies customer feedback into predefined issue categories using natural language processing techniques.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of preprocessed feedback text to classify"
      },
      "classification_scheme": {
        "type": "string",
        "required": false,
        "description": "Classification approach: predefined, custom, auto_detect",
        "default": "predefined"
      },
      "custom_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Custom issue categories when using custom scheme",
        "default": "None"
      },
      "confidence_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum confidence score for classification (0.0-1.0)",
        "default": 0.7
      },
      "multi_label": {
        "type": "boolean",
        "required": false,
        "description": "Allow multiple categories per feedback",
        "default": false
      }
    },
    "error_messages": [
      "Empty feedback array: Provide at least one feedback text entry.",
      "Invalid classification scheme: Use one of [predefined, custom, auto_detect].",
      "Missing custom categories: Provide custom_categories when using custom scheme.",
      "Invalid confidence threshold: Value must be between 0.0 and 1.0.",
      "Classification failed: Unable to classify feedback due to insufficient text quality."
    ],
    "usage": "Provide preprocessed feedback text and select a classification scheme. Optionally customize categories and adjust confidence thresholds.",
    "output_details": {
      "classifications": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of issue categories assigned to each feedback"
      },
      "confidence_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Confidence scores for each classification"
      },
      "category_distribution": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Summary of category frequency"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Sentiment Analyzer",
    "tool_description": "Analyzes the emotional tone and sentiment of customer feedback to identify positive, negative, and neutral opinions.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of feedback text to analyze for sentiment"
      },
      "analysis_depth": {
        "type": "string",
        "required": false,
        "description": "Depth of analysis: basic, detailed, emotional",
        "default": "basic"
      }
    },
    "error_messages": [
      "Empty input: Provide at least one feedback text entry for sentiment analysis.",
      "Invalid analysis depth: Use one of [basic, detailed, emotional].",
      "Text too short: Feedback entries must contain sufficient text for reliable sentiment analysis."
    ],
    "usage": "Input feedback text array and choose analysis depth. The tool returns sentiment scores and classifications for each entry.",
    "output_details": {
      "sentiment_labels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Sentiment classification for each feedback (positive, negative, neutral)"
      },
      "sentiment_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Numerical sentiment scores ranging from -1.0 to 1.0"
      },
      "overall_sentiment": {
        "type": "string",
        "description": "Overall sentiment summary across all feedback"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Keyword Extractor",
    "tool_description": "Extracts significant keywords and phrases from customer feedback to identify common themes and topics.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of feedback text from which to extract keywords"
      },
      "max_keywords": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of keywords to extract per feedback",
        "default": 10
      },
      "min_word_length": {
        "type": "integer",
        "required": false,
        "description": "Minimum length of words to consider as keywords",
        "default": 3
      },
      "extraction_method": {
        "type": "string",
        "required": false,
        "description": "Method for keyword extraction: frequency, tfidf, rake",
        "default": "tfidf"
      },
      "include_phrases": {
        "type": "boolean",
        "required": false,
        "description": "Whether to extract multi-word phrases in addition to single words",
        "default": true
      }
    },
    "error_messages": [
      "Empty feedback array: Provide at least one feedback text entry.",
      "Invalid max_keywords: Value must be a positive integer between 1 and 100.",
      "Invalid min_word_length: Value must be between 2 and 10.",
      "Invalid extraction method: Use one of [frequency, tfidf, rake].",
      "Insufficient text: Feedback contains too little text for meaningful keyword extraction."
    ],
    "usage": "Provide feedback text and configure extraction parameters. The tool identifies and ranks important keywords and phrases.",
    "output_details": {
      "extracted_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Array of extracted keywords and phrases"
      },
      "keyword_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Importance scores for each extracted keyword"
      },
      "top_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most frequently occurring keywords across all feedback"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Trend Detector",
    "tool_description": "Identifies emerging trends and patterns in customer issues over time by analyzing temporal changes in feedback data.",
    "parameters": {
      "issue_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of categorized issues corresponding to feedback entries"
      },
      "timestamps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of timestamps in ISO 8601 format corresponding to feedback entries"
      },
      "time_window": {
        "type": "string",
        "required": false,
        "description": "Time aggregation window: daily, weekly, monthly",
        "default": "weekly"
      },
      "trend_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum percentage change to consider as a trend (1.0-100.0)",
        "default": 20.0
      },
      "lookback_period": {
        "type": "integer",
        "required": false,
        "description": "Number of time windows to analyze for trend detection",
        "default": 8
      },
      "min_occurrences": {
        "type": "integer",
        "required": false,
        "description": "Minimum issue occurrences required for trend analysis",
        "default": 5
      }
    },
    "error_messages": [
      "Mismatched arrays: issue_categories and timestamps arrays must have the same length.",
      "Empty data: Provide at least one issue category and timestamp pair.",
      "Invalid time window: Use one of [daily, weekly, monthly].",
      "Invalid trend threshold: Value must be between 1.0 and 100.0.",
      "Invalid lookback period: Value must be a positive integer between 2 and 52.",
      "Insufficient data: Not enough historical data for reliable trend detection."
    ],
    "usage": "Input categorized issues with corresponding timestamps, configure time windows and trend sensitivity. The tool identifies increasing, decreasing, and emerging trends.",
    "output_details": {
      "trending_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Issues showing significant upward trends"
      },
      "declining_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Issues showing significant downward trends"
      },
      "trend_magnitudes": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Percentage change values for detected trends"
      },
      "trend_summary": {
        "type": "string",
        "description": "Overall summary of trend analysis results"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Frequency Analyzer",
    "tool_description": "Analyzes the frequency distribution of customer issues to identify the most common complaints and problems.",
    "parameters": {
      "issue_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of categorized customer issues to analyze"
      },
      "top_n": {
        "type": "integer",
        "required": false,
        "description": "Number of top issues to return in ranking",
        "default": 10
      },
      "minimum_frequency": {
        "type": "integer",
        "required": false,
        "description": "Minimum occurrence count for an issue to be included",
        "default": 1
      }
    },
    "error_messages": [
      "Empty issue array: Provide at least one issue category for analysis.",
      "Invalid top_n value: Must be a positive integer between 1 and 100.",
      "Invalid minimum_frequency: Must be a positive integer.",
      "No qualifying issues: No issues meet the minimum frequency threshold."
    ],
    "usage": "Provide categorized issues and configure ranking parameters. The tool returns frequency counts and rankings of customer problems.",
    "output_details": {
      "issue_frequencies": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Frequency counts for each unique issue category"
      },
      "issue_names": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Names of unique issue categories corresponding to frequencies"
      },
      "top_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most frequently occurring issues in ranked order"
      },
      "total_issues": {
        "type": "integer",
        "description": "Total number of issue instances analyzed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Complaint Severity Scorer",
    "tool_description": "Assigns severity scores to customer complaints based on sentiment, urgency indicators, and impact keywords to prioritize resolution efforts.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of customer feedback text to score for severity"
      },
      "sentiment_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": true,
        "description": "Array of sentiment scores corresponding to feedback text (-1.0 to 1.0)"
      },
      "issue_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of issue categories corresponding to feedback entries"
      },
      "urgency_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Custom urgency keywords to boost severity scores",
        "default": "None"
      },
      "severity_scale": {
        "type": "string",
        "required": false,
        "description": "Severity scoring scale: 1-5, 1-10, low-med-high",
        "default": "1-5"
      },
      "category_weights": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": false,
        "description": "Weight multipliers for different issue categories",
        "default": "None"
      },
      "impact_threshold": {
        "type": "number",
        "required": false,
        "description": "Minimum sentiment impact required for high severity (0.0-1.0)",
        "default": 0.6
      },
      "urgency_boost": {
        "type": "number",
        "required": false,
        "description": "Score multiplier when urgency keywords are detected (1.0-3.0)",
        "default": 1.5
      },
      "length_factor": {
        "type": "boolean",
        "required": false,
        "description": "Whether to consider feedback length in severity calculation",
        "default": true
      },
      "customer_history_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for repeat customer complaint patterns (0.0-2.0)",
        "default": 1.0
      },
      "business_impact_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Keywords indicating high business impact",
        "default": "None"
      },
      "escalation_indicators": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Phrases that suggest complaint escalation needs",
        "default": "None"
      },
      "resolution_complexity": {
        "type": "string",
        "required": false,
        "description": "Expected resolution complexity factor: simple, moderate, complex",
        "default": "moderate"
      },
      "time_sensitivity": {
        "type": "boolean",
        "required": false,
        "description": "Whether to factor in time-sensitive language",
        "default": true
      }
    },
    "error_messages": [
      "Mismatched array lengths: feedback_text, sentiment_scores, and issue_categories must have equal lengths.",
      "Empty input arrays: Provide at least one feedback entry with corresponding sentiment and category.",
      "Invalid sentiment scores: Values must be between -1.0 and 1.0.",
      "Invalid severity scale: Use one of [1-5, 1-10, low-med-high].",
      "Invalid impact threshold: Value must be between 0.0 and 1.0.",
      "Invalid urgency boost: Value must be between 1.0 and 3.0.",
      "Invalid customer history weight: Value must be between 0.0 and 2.0.",
      "Invalid resolution complexity: Use one of [simple, moderate, complex].",
      "Mismatched category weights: If provided, must match number of unique issue categories."
    ],
    "usage": "Input feedback text with sentiment scores and issue categories. Configure severity parameters and keyword lists to generate prioritized severity scores for complaint resolution.",
    "output_details": {
      "severity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "description": "Calculated severity scores for each feedback entry"
      },
      "severity_labels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Human-readable severity levels corresponding to scores"
      },
      "priority_ranking": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Ranked indices of feedback entries by severity (highest first)"
      },
      "high_severity_count": {
        "type": "integer",
        "description": "Number of complaints classified as high severity"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Topic Modeler",
    "tool_description": "Discovers hidden topics and themes within customer feedback using advanced topic modeling algorithms.",
    "parameters": {
      "feedback_text": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of preprocessed feedback text for topic discovery"
      },
      "num_topics": {
        "type": "integer",
        "required": false,
        "description": "Number of topics to discover (2-50)",
        "default": 10
      },
      "algorithm": {
        "type": "string",
        "required": false,
        "description": "Topic modeling algorithm: lda, nmf, bertopic",
        "default": "lda"
      },
      "min_doc_frequency": {
        "type": "integer",
        "required": false,
        "description": "Minimum document frequency for word inclusion",
        "default": 2
      },
      "max_features": {
        "type": "integer",
        "required": false,
        "description": "Maximum number of features to use for modeling",
        "default": 1000
      }
    },
    "error_messages": [
      "Empty feedback array: Provide at least 10 feedback entries for reliable topic modeling.",
      "Invalid num_topics: Value must be between 2 and 50.",
      "Invalid algorithm: Use one of [lda, nmf, bertopic].",
      "Insufficient unique words: Feedback corpus lacks vocabulary diversity for topic modeling.",
      "Invalid min_doc_frequency: Must be positive integer less than half of document count."
    ],
    "usage": "Provide preprocessed feedback text and configure topic modeling parameters. The tool discovers latent topics and assigns topic probabilities to each feedback entry.",
    "output_details": {
      "topic_keywords": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Representative keywords for each discovered topic"
      },
      "topic_assignments": {
        "type": "array",
        "items": {
          "type": "integer"
        },
        "description": "Primary topic assignment for each feedback entry"
      },
      "topic_distributions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Topic probability distributions as formatted strings"
      },
      "topic_coherence": {
        "type": "number",
        "description": "Overall coherence score of the topic model"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Temporal Pattern Analyzer",
    "tool_description": "Analyzes time-based patterns in customer feedback to identify seasonal trends, cyclical behaviors, and temporal anomalies.",
    "parameters": {
      "timestamps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of timestamps in ISO 8601 format for feedback entries"
      },
      "issue_categories": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of issue categories corresponding to timestamps"
      },
      "analysis_granularity": {
        "type": "string",
        "required": false,
        "description": "Time granularity for pattern analysis: hourly, daily, weekly, monthly",
        "default": "daily"
      },
      "pattern_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Types of patterns to detect: seasonal, cyclical, anomaly, peak",
        "default": "None"
      },
      "seasonality_period": {
        "type": "integer",
        "required": false,
        "description": "Expected seasonality period in days for seasonal analysis",
        "default": 30
      }
    },
    "error_messages": [
      "Mismatched arrays: timestamps and issue_categories must have equal lengths.",
      "Empty input: Provide at least 14 timestamp-category pairs for pattern analysis.",
      "Invalid analysis granularity: Use one of [hourly, daily, weekly, monthly].",
      "Invalid pattern types: Use combinations of [seasonal, cyclical, anomaly, peak].",
      "Invalid seasonality period: Must be between 7 and 365 days.",
      "Insufficient time range: Data must span at least two complete periods for reliable pattern detection."
    ],
    "usage": "Input timestamped issue categories and configure pattern analysis parameters. The tool identifies temporal patterns and seasonal behaviors in customer feedback.",
    "output_details": {
      "detected_patterns": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Types of temporal patterns detected in the data"
      },
      "peak_periods": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Time periods with highest issue frequency"
      },
      "seasonal_trends": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Identified seasonal patterns and their characteristics"
      },
      "anomaly_dates": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Dates with anomalous feedback patterns"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Issue Prioritizer",
    "tool_description": "Combines frequency, severity, and trend data to create a comprehensive priority ranking of customer issues for resolution planning.",
    "parameters": {
      "issue_names": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Array of unique issue category names"
      },
      "frequency_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": true,
        "description": "Frequency scores for each issue category"
      },
      "severity_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": true,
        "description": "Average severity scores for each issue category"
      },
      "trend_scores": {
        "type": "array",
        "items": {
          "type": "number"
        },
        "required": true,
        "description": "Trend momentum scores for each issue category"
      },
      "frequency_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for frequency component in priority calculation (0.0-1.0)",
        "default": 0.4
      },
      "severity_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for severity component in priority calculation (0.0-1.0)",
        "default": 0.4
      },
      "trend_weight": {
        "type": "number",
        "required": false,
        "description": "Weight for trend component in priority calculation (0.0-1.0)",
        "default": 0.2
      }
    },
    "error_messages": [
      "Mismatched arrays: All input arrays must have equal lengths.",
      "Empty arrays: Provide at least one issue with corresponding scores.",
      "Invalid weights: All weight values must be between 0.0 and 1.0 and sum to 1.0.",
      "Invalid score ranges: Frequency, severity, and trend scores must be non-negative numbers.",
      "Missing data: All issues must have corresponding frequency, severity, and trend scores."
    ],
    "usage": "Input issue names with their frequency, severity, and trend scores. Configure weights to balance different priority factors. The tool
