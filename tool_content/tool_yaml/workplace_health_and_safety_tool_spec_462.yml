field_name: workplace_health_and_safety
subfield: hazard_identification_and_assessment
task: Conduct workplace safety inspections and audits
tool_description: |-
  ## STEP 1 — Rate task difficulty

  This task is **medium** difficulty. It requires systematic evaluation of multiple workplace hazards across different areas, coordination between inspection teams, and compliance with various safety regulations. The task involves moderate ambiguity in hazard identification, dependencies between different inspection phases, and significant risk impact if errors occur in identifying critical safety issues.

  ## STEP 2 — Set a tool budget

  Given the medium difficulty, I'll target **12 tools** within the 10-15 range. This allows for comprehensive coverage of inspection workflows while maintaining tool modularity and composability.

  ## STEP 3 — List all tool names with dependencies and affordances

  1. **Inspection Plan Generator** - Consumes: facility info, inspection type → Produces: structured inspection plan
  2. **Hazard Risk Assessor** - Consumes: hazard descriptions, severity data → Produces: risk ratings and priorities
  3. **Safety Checklist Creator** - Consumes: inspection areas, regulations → Produces: customized checklists
  4. **Equipment Safety Validator** - Consumes: equipment IDs, safety standards → Produces: compliance status
  5. **Incident History Analyzer** - Consumes: incident records, date ranges → Produces: trend analysis
  6. **Regulatory Compliance Checker** - Consumes: inspection findings, regulation codes → Produces: compliance gaps
  7. **Photo Documentation Manager** - Consumes: images, locations, descriptions → Produces: organized evidence
  8. **Safety Training Verifier** - Consumes: employee IDs, training requirements → Produces: training status
  9. **Corrective Action Planner** - Consumes: identified hazards, priorities → Produces: action plans
  10. **Audit Report Generator** - Consumes: inspection data, findings → Produces: formatted reports
  11. **Follow-up Scheduler** - Consumes: action items, deadlines → Produces: follow-up schedules
  12. **Safety Metrics Calculator** - Consumes: inspection results, historical data → Produces: performance metrics

  ## STEP 4 — Multi-tool plans

  **Simple Plans:**
  1. **Basic Equipment Check**: Safety Checklist Creator → Equipment Safety Validator → Photo Documentation Manager
  2. **Quick Hazard Assessment**: Hazard Risk Assessor → Corrective Action Planner → Follow-up Scheduler

  **Medium Plans:**
  1. **Departmental Inspection**: Inspection Plan Generator → Safety Checklist Creator → Equipment Safety Validator → Hazard Risk Assessor → Photo Documentation Manager → Audit Report Generator
  2. **Compliance Review**: Regulatory Compliance Checker → Safety Training Verifier → Corrective Action Planner → Follow-up Scheduler

  **Complex Plans:**
  1. **Comprehensive Facility Audit**: Inspection Plan Generator → Safety Checklist Creator → Equipment Safety Validator → Incident History Analyzer → Hazard Risk Assessor → Safety Training Verifier → Regulatory Compliance Checker → Photo Documentation Manager → Corrective Action Planner → Audit Report Generator → Follow-up Scheduler → Safety Metrics Calculator
  2. **Post-Incident Investigation**: Incident History Analyzer → Hazard Risk Assessor → Regulatory Compliance Checker → Safety Training Verifier → Corrective Action Planner → Audit Report Generator → Safety Metrics Calculator

  ## STEP 5 — Produce tools

  ```json
  {
    "tool_name": "Inspection Plan Generator",
    "tool_description": "Creates structured inspection plans based on facility characteristics, inspection type, and regulatory requirements.",
    "parameters": {
      "facility_name": {
        "type": "string",
        "required": true,
        "description": "Name of the facility to be inspected"
      },
      "inspection_type": {
        "type": "string",
        "required": true,
        "description": "Type of inspection: routine, compliance, incident-based, or comprehensive"
      },
      "facility_areas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of facility areas to inspect",
        "minItems": 1,
        "maxItems": 50
      },
      "inspection_date": {
        "type": "string",
        "required": true,
        "description": "Planned inspection date",
        "format": "date-time"
      }
    },
    "error_messages": [
      "Invalid inspection type: Must be one of [routine, compliance, incident-based, comprehensive]",
      "Empty facility areas: At least one facility area must be specified",
      "Invalid date format: Use ISO 8601 date-time format",
      "Past inspection date: Inspection date cannot be in the past"
    ],
    "usage": "Provide facility details and inspection parameters to generate a comprehensive inspection plan with prioritized areas and timelines.",
    "output_details": {
      "plan_id": {
        "type": "string",
        "description": "Unique identifier for the inspection plan"
      },
      "priority_areas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Areas prioritized for inspection based on risk"
      },
      "estimated_duration": {
        "type": "integer",
        "description": "Estimated inspection duration in hours"
      },
      "required_personnel": {
        "type": "integer",
        "description": "Number of inspectors needed"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Hazard Risk Assessor",
    "tool_description": "Evaluates identified hazards and assigns risk ratings based on severity, likelihood, and exposure factors.",
    "parameters": {
      "hazard_type": {
        "type": "string",
        "required": true,
        "description": "Category of hazard: physical, chemical, biological, ergonomic, or psychosocial"
      },
      "hazard_description": {
        "type": "string",
        "required": true,
        "description": "Detailed description of the identified hazard"
      },
      "severity_level": {
        "type": "integer",
        "required": true,
        "description": "Potential severity of harm (1-5 scale where 5 is most severe)"
      },
      "likelihood_score": {
        "type": "integer",
        "required": true,
        "description": "Probability of occurrence (1-5 scale where 5 is most likely)"
      },
      "exposure_frequency": {
        "type": "string",
        "required": true,
        "description": "Frequency of exposure: rare, occasional, frequent, or continuous"
      },
      "affected_personnel_count": {
        "type": "integer",
        "required": true,
        "description": "Number of personnel potentially affected"
      },
      "existing_controls": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of existing safety controls",
        "default": "None"
      }
    },
    "error_messages": [
      "Invalid hazard type: Must be one of [physical, chemical, biological, ergonomic, psychosocial]",
      "Invalid severity level: Must be integer between 1 and 5",
      "Invalid likelihood score: Must be integer between 1 and 5",
      "Invalid exposure frequency: Must be one of [rare, occasional, frequent, continuous]",
      "Invalid personnel count: Must be positive integer",
      "Empty hazard description: Description cannot be empty"
    ],
    "usage": "Input hazard details and assessment parameters to calculate comprehensive risk ratings and priority levels for remediation planning.",
    "output_details": {
      "risk_score": {
        "type": "integer",
        "description": "Calculated overall risk score (1-25)"
      },
      "risk_level": {
        "type": "string",
        "description": "Risk classification: low, medium, high, or critical"
      },
      "priority_ranking": {
        "type": "integer",
        "description": "Priority for remediation (1 being highest priority)"
      },
      "recommended_actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of recommended risk mitigation actions"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Safety Checklist Creator",
    "tool_description": "Generates customized safety inspection checklists based on facility areas, equipment types, and applicable regulations.",
    "parameters": {
      "inspection_areas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of areas to include in checklist",
        "minItems": 1,
        "maxItems": 20
      },
      "equipment_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Types of equipment to check",
        "default": "None"
      },
      "regulatory_standards": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Applicable safety standards (OSHA, ISO, etc.)",
        "default": "None"
      }
    },
    "error_messages": [
      "Empty inspection areas: At least one inspection area must be specified",
      "Invalid area specification: Areas must be non-empty strings",
      "Unsupported regulatory standard: Standard not recognized in database"
    ],
    "usage": "Specify inspection areas and relevant parameters to generate comprehensive, customized safety checklists for systematic facility inspections.",
    "output_details": {
      "checklist_id": {
        "type": "string",
        "description": "Unique identifier for the generated checklist"
      },
      "total_items": {
        "type": "integer",
        "description": "Total number of checklist items"
      },
      "checklist_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of inspection checklist items"
      },
      "compliance_requirements": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Regulatory requirements covered by checklist"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Equipment Safety Validator",
    "tool_description": "Validates equipment safety compliance by checking maintenance records, certifications, and operational status against safety standards.",
    "parameters": {
      "equipment_id": {
        "type": "string",
        "required": true,
        "description": "Unique identifier for the equipment"
      },
      "equipment_type": {
        "type": "string",
        "required": true,
        "description": "Type of equipment being validated"
      },
      "last_maintenance_date": {
        "type": "string",
        "required": true,
        "description": "Date of last maintenance",
        "format": "date-time"
      },
      "certification_expiry": {
        "type": "string",
        "required": false,
        "description": "Equipment certification expiry date",
        "format": "date-time",
        "default": "None"
      },
      "operational_status": {
        "type": "string",
        "required": true,
        "description": "Current operational status: operational, maintenance, defective, or decommissioned"
      },
      "safety_features": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "List of safety features to validate",
        "default": "None"
      },
      "maintenance_interval_days": {
        "type": "integer",
        "required": true,
        "description": "Required maintenance interval in days"
      },
      "inspection_findings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Physical inspection observations",
        "default": "None"
      },
      "operator_training_verified": {
        "type": "boolean",
        "required": false,
        "description": "Whether operator training has been verified",
        "default": false
      },
      "lock_out_tag_out_compliant": {
        "type": "boolean",
        "required": false,
        "description": "LOTO procedures compliance status",
        "default": false
      }
    },
    "error_messages": [
      "Invalid equipment ID: Equipment identifier cannot be empty",
      "Invalid operational status: Must be one of [operational, maintenance, defective, decommissioned]",
      "Invalid date format: Use ISO 8601 date-time format for dates",
      "Invalid maintenance interval: Must be positive integer greater than 0",
      "Future maintenance date: Last maintenance date cannot be in the future"
    ],
    "usage": "Input equipment details, maintenance history, and safety parameters to validate compliance with safety standards and identify potential issues.",
    "output_details": {
      "compliance_status": {
        "type": "string",
        "description": "Overall compliance status: compliant, non-compliant, or needs-review"
      },
      "validation_score": {
        "type": "integer",
        "description": "Compliance score from 0-100"
      },
      "critical_issues": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of critical safety issues identified"
      },
      "maintenance_due": {
        "type": "boolean",
        "description": "Whether maintenance is overdue"
      },
      "days_until_maintenance": {
        "type": "integer",
        "description": "Days remaining until next maintenance (negative if overdue)"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Incident History Analyzer",
    "tool_description": "Analyzes historical incident data to identify patterns, trends, and recurring safety issues for targeted inspection focus.",
    "parameters": {
      "start_date": {
        "type": "string",
        "required": true,
        "description": "Start date for incident analysis",
        "format": "date-time"
      },
      "end_date": {
        "type": "string",
        "required": true,
        "description": "End date for incident analysis",
        "format": "date-time"
      },
      "facility_areas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Specific areas to analyze",
        "default": "None"
      },
      "incident_types": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Types of incidents to include",
        "default": "None"
      },
      "severity_threshold": {
        "type": "string",
        "required": false,
        "description": "Minimum severity level: minor, moderate, major, or critical",
        "default": "minor"
      }
    },
    "error_messages": [
      "Invalid date range: End date must be after start date",
      "Invalid date format: Use ISO 8601 date-time format",
      "Invalid severity threshold: Must be one of [minor, moderate, major, critical]",
      "Date range too large: Analysis period cannot exceed 5 years"
    ],
    "usage": "Specify date range and filtering criteria to analyze incident patterns and identify high-risk areas requiring focused inspection attention.",
    "output_details": {
      "total_incidents": {
        "type": "integer",
        "description": "Total number of incidents in the period"
      },
      "trend_direction": {
        "type": "string",
        "description": "Overall trend: increasing, decreasing, or stable"
      },
      "high_risk_areas": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Areas with highest incident frequency"
      },
      "common_causes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Most frequent incident causes"
      },
      "seasonal_patterns": {
        "type": "string",
        "description": "Identified seasonal or temporal patterns"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Regulatory Compliance Checker",
    "tool_description": "Verifies inspection findings against applicable safety regulations and identifies compliance gaps requiring immediate attention.",
    "parameters": {
      "regulation_codes": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of applicable regulation codes",
        "minItems": 1,
        "maxItems": 20
      },
      "inspection_findings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Findings from the inspection",
        "minItems": 1
      },
      "facility_type": {
        "type": "string",
        "required": true,
        "description": "Type of facility: manufacturing, office, warehouse, laboratory, or construction"
      },
      "jurisdiction": {
        "type": "string",
        "required": true,
        "description": "Regulatory jurisdiction: federal, state, or local"
      }
    },
    "error_messages": [
      "Invalid facility type: Must be one of [manufacturing, office, warehouse, laboratory, construction]",
      "Invalid jurisdiction: Must be one of [federal, state, local]",
      "Empty regulation codes: At least one regulation code must be specified",
      "Empty inspection findings: At least one finding must be provided",
      "Unrecognized regulation code: One or more regulation codes are not in the database"
    ],
    "usage": "Input inspection findings and applicable regulations to identify compliance gaps and generate corrective action requirements.",
    "output_details": {
      "overall_compliance_status": {
        "type": "string",
        "description": "Overall status: compliant, minor-violations, major-violations, or critical-violations"
      },
      "compliance_percentage": {
        "type": "number",
        "description": "Percentage of regulations in compliance"
      },
      "violations_found": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of regulatory violations identified"
      },
      "critical_gaps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Critical compliance gaps requiring immediate action"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Photo Documentation Manager",
    "tool_description": "Organizes and manages photographic evidence from safety inspections with location tagging and categorization.",
    "parameters": {
      "image_paths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "File paths to inspection photos",
        "minItems": 1,
        "maxItems": 100
      },
      "location_tags": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Location identifiers for each photo",
        "minItems": 1,
        "maxItems": 100
      },
      "descriptions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Description of each photo's content",
        "minItems": 1,
        "maxItems": 100
      },
      "inspection_id": {
        "type": "string",
        "required": true,
        "description": "Unique inspection identifier"
      }
    },
    "error_messages": [
      "Mismatched array lengths: image_paths, location_tags, and descriptions must have equal length",
      "Invalid file path: One or more image paths are invalid",
      "Empty arrays: At least one photo must be provided",
      "Missing inspection ID: Inspection identifier cannot be empty",
      "File access error: Cannot access one or more image files"
    ],
    "usage": "Provide photo file paths with corresponding location tags and descriptions to organize inspection evidence systematically.",
    "output_details": {
      "documentation_id": {
        "type": "string",
        "description": "Unique identifier for the photo documentation set"
      },
      "total_photos": {
        "type": "integer",
        "description": "Total number of photos processed"
      },
      "organized_locations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of unique locations documented"
      },
      "storage_path": {
        "type": "string",
        "description": "Path where organized photos are stored"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Safety Training Verifier",
    "tool_description": "Verifies employee safety training completion and certification status against job requirements and regulatory mandates.",
    "parameters": {
      "employee_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of employee identifiers to verify",
        "minItems": 1,
        "maxItems": 500
      },
      "required_training": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of required training courses",
        "minItems": 1
      }
    },
    "error_messages": [
      "Empty employee list: At least one employee ID must be provided",
      "Empty training requirements: At least one required training must be specified",
      "Invalid employee ID: One or more employee IDs are not found in the system",
      "Training record not found: Training records are incomplete for some employees"
    ],
    "usage": "Input employee IDs and required training courses to verify compliance with safety training requirements and identify training gaps.",
    "output_details": {
      "compliant_employees": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of employees with complete training"
      },
      "non_compliant_employees": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of employees missing required training"
      },
      "compliance_rate": {
        "type": "number",
        "description": "Percentage of employees in compliance"
      },
      "training_gaps": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "List of missing training courses across all employees"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Corrective Action Planner",
    "tool_description": "Creates detailed corrective action plans for identified safety hazards with timelines, responsibilities, and resource requirements.",
    "parameters": {
      "hazard_ids": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of hazard identifiers requiring correction",
        "minItems": 1,
        "maxItems": 50
      },
      "risk_levels": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Risk level for each hazard: low, medium, high, or critical",
        "minItems": 1,
        "maxItems": 50
      },
      "available_budget": {
        "type": "number",
        "required": false,
        "description": "Available budget for corrective actions",
        "default": "None"
      },
      "target_completion_date": {
        "type": "string",
        "required": false,
        "description": "Target date for plan completion",
        "format": "date-time",
        "default": "None"
      },
      "responsible_department": {
        "type": "string",
        "required": false,
        "description": "Primary department responsible for implementation",
        "default": "None"
      },
      "regulatory_deadline": {
        "type": "string",
        "required": false,
        "description": "Regulatory compliance deadline if applicable",
        "format": "date-time",
        "default": "None"
      },
      "resource_constraints": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Known resource limitations",
        "default": "None"
      },
      "stakeholders": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": false,
        "description": "Key stakeholders to involve",
        "default": "None"
      },
      "interim_measures": {
        "type": "boolean",
        "required": false,
        "description": "Whether interim protective measures are needed",
        "default": false
      },
      "training_required": {
        "type": "boolean",
        "required": false,
        "description": "Whether additional training is required",
        "default": false
      },
      "equipment_procurement": {
        "type": "boolean",
        "required": false,
        "description": "Whether new equipment procurement is needed",
        "default": false
      },
      "external_contractor": {
        "type": "boolean",
        "required": false,
        "description": "Whether external contractors are required",
        "default": false
      }
    },
    "error_messages": [
      "Mismatched array lengths: hazard_ids and risk_levels must have equal length",
      "Invalid risk level: Must be one of [low, medium, high, critical]",
      "Invalid budget: Budget must be positive number",
      "Invalid date format: Use ISO 8601 date-time format",
      "Past target date: Target completion date cannot be in the past"
    ],
    "usage": "Input hazard details and planning constraints to generate comprehensive corrective action plans with prioritized timelines and resource allocation.",
    "output_details": {
      "action_plan_id": {
        "type": "string",
        "description": "Unique identifier for the action plan"
      },
      "total_actions": {
        "type": "integer",
        "description": "Total number of corrective actions planned"
      },
      "critical_actions": {
        "type": "integer",
        "description": "Number of critical priority actions"
      },
      "estimated_cost": {
        "type": "number",
        "description": "Total estimated cost for all actions"
      },
      "projected_completion": {
        "type": "string",
        "description": "Projected completion date for all actions"
      },
      "immediate_actions": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "Actions requiring immediate attention"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Audit Report Generator",
    "tool_description": "Generates comprehensive safety audit reports with findings, recommendations, and compliance status for management and regulatory review.",
    "parameters": {
      "inspection_id": {
        "type": "string",
        "required": true,
        "description": "Unique inspection identifier"
      },
      "facility_name": {
        "type": "string",
        "required": true,
        "description": "Name of the inspected facility"
      },
      "inspector_name": {
        "type": "string",
        "required": true,
        "description": "Name of the lead inspector"
      },
      "inspection_date": {
        "type": "string",
        "required": true,
        "description": "Date of inspection",
        "format": "date-time"
      },
      "findings": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of inspection findings",
        "minItems": 1
      },
      "recommendations": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of recommendations",
        "minItems": 1
      },
      "compliance_status": {
        "type": "string",
        "required": true,
        "description": "Overall compliance status"
      },
      "report_type": {
        "type": "string",
        "required": false,
        "description": "Report format: summary, detailed, or regulatory",
        "default": "detailed"
      }
    },
    "error_messages": [
      "Missing required fields: inspection_id, facility_name, inspector_name, and inspection_date are required",
      "Empty findings: At least one finding must be provided",
      "Empty recommendations: At least one recommendation must be provided",
      "Invalid date format: Use ISO 8601 date-time format",
      "Invalid report type: Must be one of [summary, detailed, regulatory]"
    ],
    "usage": "Input inspection data and parameters to generate professionally formatted audit reports suitable for management review and regulatory submission.",
    "output_details": {
      "report_id": {
        "type": "string",
        "description": "Unique identifier for the generated report"
      },
      "report_path": {
        "type": "string",
        "description": "File path to the generated report"
      },
      "page_count": {
        "type": "integer",
        "description": "Total number of pages in the report"
      },
      "executive_summary": {
        "type": "string",
        "description": "Brief executive summary of key findings"
      }
    }
  }
  ```

  ```json
  {
    "tool_name": "Follow-up Scheduler",
    "tool_description": "Creates follow-up schedules for corrective actions with automated reminders and progress tracking milestones.",
    "parameters": {
      "action_items": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "List of action items requiring follow-up",
        "minItems": 1,
        "maxItems": 100
      },
      "due_dates": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Due dates for each action item",
        "minItems": 1,
        "maxItems": 100
      },
      "responsible_parties": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "required": true,
        "description": "Responsible person for each action item",
        "minItems": 1,
        "maxItems": 100
      }
    },
    "error_messages": [
      "Mismatched array lengths: action_items, due_dates, and responsible_parties must have equal length",
      "Invalid date format: Use ISO 8601 date-time format for due dates",
      "Past due date: Due dates cannot be in the past",
      "Empty arrays: At least one action item must be provided"
    ],
    "usage": "Input action items with corresponding due dates and responsible parties to create systematic follow-up schedules with automated tracking.",
    "output_details": {
      "schedule_id": {
        "type": "string",
        "description": "Unique identifier for the follow-up schedule"
      },
      "total_items": {
