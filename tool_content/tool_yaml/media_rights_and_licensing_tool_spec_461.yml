field_name: media_rights_and_licensing
subfield: Music Publishing and Royalty Collection
task: Calculate and distribute royalty payments to songwriters, composers, and publishers
tool_description: "## STEP 1 — Rate task difficulty\n\nThis task is **hard**. It involves complex multi-party calculations with intricate legal frameworks, requires handling diverse royalty types (mechanical, performance, sync, etc.), must maintain precise audit trails for compliance, and errors can result in significant financial and legal consequences. The coordination between multiple stakeholders and data sources adds substantial complexity.\n\n## STEP 2 — Set a tool budget\n\nGiven the hard difficulty rating, I'm targeting **17 tools** within the 15-20 range to handle the comprehensive workflow of royalty calculation and distribution.\n\n## STEP 3 — List all tool names and dependencies\n\n**Tools and their flow:**\n1. **Song Metadata Validator** - Consumes: song data → Produces: validated metadata\n2. **Rights Ownership Parser** - Consumes: ownership documents → Produces: ownership percentages\n3. **Revenue Data Aggregator** - Consumes: multiple revenue streams → Produces: consolidated revenue\n4. **Mechanical Royalty Calculator** - Consumes: sales data, rates → Produces: mechanical payments\n5. **Performance Royalty Calculator** - Consumes: airplay data, rates → Produces: performance payments  \n6. **Sync Royalty Calculator** - Consumes: licensing deals → Produces: sync payments\n7. **Territory Rate Fetcher** - Consumes: territory codes → Produces: applicable rates\n8. **Deduction Calculator** - Consumes: gross amounts → Produces: net amounts after fees\n9. **Multi-Currency Converter** - Consumes: amounts in various currencies → Produces: standardized amounts\n10. **Royalty Statement Generator** - Consumes: calculated royalties → Produces: formatted statements\n11. **Payment Batch Creator** - Consumes: payment details → Produces: payment batches\n12. **Audit Trail Logger** - Consumes: transaction data → Produces: audit records\n13. **Minimum Payment Checker** - Consumes: payment amounts → Produces: qualifying payments\n14. **Split Agreement Validator** - Consumes: split percentages → Produces: validated splits\n15. **Black Box Resolver** - Consumes: unmatched revenue → Produces: resolved allocations\n16. **Compliance Report Generator** - Consumes: all transaction data → Produces: compliance reports\n17. **Payment Distribution Executor** - Consumes: approved payments → Produces: distribution confirmations\n\n## STEP 4 — Multi-tool plans\n\n**Simple plans:**\n- Basic mechanical royalty: Song Metadata Validator → Mechanical Royalty Calculator → Payment Distribution Executor\n- Single territory sync: Rights Ownership Parser → Sync Royalty Calculator → Royalty Statement Generator\n\n**Medium plans:**\n- Multi-territory performance: Territory Rate Fetcher → Performance Royalty Calculator → Multi-Currency Converter → Deduction Calculator → Payment Batch Creator\n- Comprehensive single song: Song Metadata Validator → Rights Ownership Parser → Revenue Data Aggregator → Multiple royalty calculators → Royalty Statement Generator\n\n**Complex plans:**\n- Full catalog distribution: All validation tools → All calculators → Currency conversion → Deduction calculation → Audit logging → Compliance reporting → Payment distribution\n- Disputed revenue resolution: Black Box Resolver → Split Agreement Validator → Rights Ownership Parser → Recalculation through multiple calculators → Audit Trail Logger\n\n## STEP 5 — Tools\n\n```json\n{\n  \"tool_name\": \"Song Metadata Validator\",\n  \"tool_description\": \"Validates and standardizes song metadata including titles, writers, publishers, and catalog numbers for royalty processing.\",\n  \"parameters\": {\n    \"song_title\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Primary title of the song\"\n    },\n    \"catalog_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique catalog identifier for the song\"\n    },\n    \"writers\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of songwriter names\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n   \
  \   \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"publishers\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of publisher names\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"alternate_titles\": {\n      \"type\": \"array\",\n      \"required\": false,\n      \"description\": \"Alternative titles or versions\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Missing required song metadata: song_title, catalog_number, writers, and publishers are mandatory.\",\n    \"Invalid catalog number format: Catalog number must follow standard format (letters and numbers only).\",\n    \"Duplicate writer names: Each writer should be listed only once in the writers array.\",\n    \"Empty writer or publisher arrays: At least one writer and one publisher must be specified.\"\n  ],\n  \"usage\": \"Provide song_title, catalog_number, writers array, and publishers array. Optionally include alternate_titles. Returns validated and standardized metadata.\",\n  \"output_details\": {\n    \"validation_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status indicating if validation passed or failed\"\n    },\n    \"standardized_title\": {\n      \"type\": \"string\",\n      \"description\": \"Standardized version of the song title\"\n    },\n    \"validated_writers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of validated writer names\"\n    },\n    \"validated_publishers\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of validated publisher names\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Rights Ownership Parser\",\n  \"tool_description\": \"Parses and validates ownership splits and rights percentages for songs among writers and publishers.\",\n  \"parameters\": {\n    \"catalog_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique catalog identifier for the song\"\n    },\n    \"writer_splits\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Writer ownership percentages as numbers (must sum to 100)\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"publisher_splits\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Publisher ownership percentages as numbers (must sum to 100)\",\n      \"items\": {\n        \"type\": \"number\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"writer_names\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Writer names corresponding to splits\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 20\n    },\n    \"publisher_names\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Publisher names corresponding to splits\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"effective_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Date when ownership splits became effective\",\n      \"format\": \"date-time\"\n    },\n    \"territory\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Territory code (ISO 3166-1 alpha-2) where splits apply\",\n      \"default\": \"WW\"\n    }\n  },\n  \"error_messages\": [\n    \"Split percentages do not sum to 100: Writer splits and publisher splits must each total exactly 100%.\",\n    \"Mismatched arrays: writer_names and writer_splits arrays must have the same length; same for publishers.\",\n    \"Invalid percentage values: All split percentages must be between 0.01 and 100.0.\",\n    \"Invalid effective\
  \ date: Date must be in ISO 8601 format and not in the future.\",\n    \"Invalid territory code: Use valid ISO 3166-1 alpha-2 codes or 'WW' for worldwide.\"\n  ],\n  \"usage\": \"Provide catalog_number, matching arrays of names and splits for writers and publishers, effective_date, and optionally territory. Validates that splits sum to 100%.\",\n  \"output_details\": {\n    \"parsing_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status of ownership parsing validation\"\n    },\n    \"total_writer_percentage\": {\n      \"type\": \"number\",\n      \"description\": \"Sum of all writer split percentages\"\n    },\n    \"total_publisher_percentage\": {\n      \"type\": \"number\",\n      \"description\": \"Sum of all publisher split percentages\"\n    },\n    \"parsed_ownership\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of formatted ownership records\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Revenue Data Aggregator\",\n  \"tool_description\": \"Aggregates revenue data from multiple sources and revenue types for royalty calculation.\",\n  \"parameters\": {\n    \"catalog_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique catalog identifier for the song\"\n    },\n    \"revenue_period_start\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Start date of revenue period\",\n      \"format\": \"date-time\"\n    },\n    \"revenue_period_end\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"End date of revenue period\",\n      \"format\": \"date-time\"\n    },\n    \"mechanical_revenue\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Total mechanical revenue for the period\",\n      \"default\": 0\n    },\n    \"performance_revenue\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Total performance revenue for the period\",\n      \"default\": 0\n    },\n    \"sync_revenue\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Total synchronization revenue for the period\",\n      \"default\": 0\n    },\n    \"digital_revenue\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Total digital platform revenue for the period\",\n      \"default\": 0\n    }\n  },\n  \"error_messages\": [\n    \"Invalid revenue period: End date must be after start date and both must be valid ISO 8601 dates.\",\n    \"Negative revenue values: All revenue amounts must be zero or positive numbers.\",\n    \"Missing catalog number: Valid catalog number is required for revenue aggregation.\",\n    \"Zero total revenue: At least one revenue type must have a value greater than zero.\"\n  ],\n  \"usage\": \"Provide catalog_number and revenue period dates. Include revenue amounts for different types (mechanical, performance, sync, digital). Returns aggregated revenue summary.\",\n  \"output_details\": {\n    \"total_revenue\": {\n      \"type\": \"number\",\n      \"description\": \"Sum of all revenue types for the period\"\n    },\n    \"revenue_breakdown\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Array of revenue type descriptions with amounts\"\n    },\n    \"aggregation_date\": {\n      \"type\": \"string\",\n      \"description\": \"Timestamp when aggregation was performed\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Mechanical Royalty Calculator\",\n  \"tool_description\": \"Calculates mechanical royalties based on sales data, statutory rates, and licensing agreements.\",\n  \"parameters\": {\n    \"catalog_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique catalog identifier for the song\"\n    },\n    \"units_sold\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Number of units sold (physical and digital)\"\
  \n    },\n    \"streams\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Number of streams reported\"\n    },\n    \"statutory_rate\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Applicable statutory rate per unit/stream\"\n    },\n    \"territory\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Territory code where sales occurred\"\n    },\n    \"calculation_period_start\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Start date of calculation period\",\n      \"format\": \"date-time\"\n    },\n    \"calculation_period_end\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"End date of calculation period\",\n      \"format\": \"date-time\"\n    },\n    \"license_type\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Type of mechanical license (compulsory, negotiated, blanket)\",\n      \"default\": \"compulsory\"\n    },\n    \"negotiated_rate\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Negotiated rate if different from statutory\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid sales data: units_sold and streams must be non-negative integers.\",\n    \"Invalid statutory rate: Rate must be a positive number greater than zero.\",\n    \"Invalid calculation period: End date must be after start date with valid ISO 8601 format.\",\n    \"Unknown territory: Territory code must be valid ISO 3166-1 alpha-2 format.\",\n    \"Invalid license type: Must be one of 'compulsory', 'negotiated', or 'blanket'.\",\n    \"Conflicting rates: When license_type is 'negotiated', negotiated_rate must be provided.\"\n  ],\n  \"usage\": \"Provide catalog_number, sales data (units_sold, streams), statutory_rate, territory, and calculation period. Optionally specify license_type and negotiated_rate for custom agreements.\",\n  \"output_details\": {\n    \"total_mechanical_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Total calculated mechanical royalty amount\"\n    },\n    \"units_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Royalty amount from unit sales\"\n    },\n    \"streams_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Royalty amount from streams\"\n    },\n    \"effective_rate_used\": {\n      \"type\": \"number\",\n      \"description\": \"The actual rate used in calculations\"\n    },\n    \"calculation_details\": {\n      \"type\": \"string\",\n      \"description\": \"Summary of calculation methodology and inputs\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Performance Royalty Calculator\",\n  \"tool_description\": \"Calculates performance royalties from radio airplay, streaming, and live performances using PRO rates and play data.\",\n  \"parameters\": {\n    \"catalog_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique catalog identifier for the song\"\n    },\n    \"radio_plays\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of radio plays reported\",\n      \"default\": 0\n    },\n    \"streaming_plays\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of streaming service plays\",\n      \"default\": 0\n    },\n    \"live_performances\": {\n      \"type\": \"integer\",\n      \"required\": false,\n      \"description\": \"Number of live performances reported\",\n      \"default\": 0\n    },\n    \"pro_organization\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Performing Rights Organization (ASCAP, BMI, SESAC, PRS, etc.)\"\n    },\n    \"territory\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Territory code where performances occurred\"\n    },\n    \"reporting_period_start\": {\n      \"type\": \"string\",\n      \"required\": true,\n\
  \      \"description\": \"Start date of reporting period\",\n      \"format\": \"date-time\"\n    },\n    \"reporting_period_end\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"End date of reporting period\",\n      \"format\": \"date-time\"\n    },\n    \"radio_rate\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Rate per radio play\",\n      \"default\": null\n    },\n    \"streaming_rate\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Rate per streaming play\",\n      \"default\": null\n    }\n  },\n  \"error_messages\": [\n    \"Invalid play counts: All play counts (radio_plays, streaming_plays, live_performances) must be non-negative integers.\",\n    \"Unknown PRO organization: pro_organization must be a recognized performing rights organization code.\",\n    \"Invalid reporting period: End date must be after start date with proper ISO 8601 format.\",\n    \"Invalid territory: Territory must be valid ISO 3166-1 alpha-2 code.\",\n    \"Zero performance activity: At least one type of performance activity must be greater than zero.\",\n    \"Invalid rates: If provided, radio_rate and streaming_rate must be positive numbers.\"\n  ],\n  \"usage\": \"Provide catalog_number, performance data (radio_plays, streaming_plays, live_performances), pro_organization, territory, and reporting period. Optionally specify custom rates.\",\n  \"output_details\": {\n    \"total_performance_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Total calculated performance royalty amount\"\n    },\n    \"radio_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Royalty amount from radio plays\"\n    },\n    \"streaming_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Royalty amount from streaming plays\"\n    },\n    \"live_royalty\": {\n      \"type\": \"number\",\n      \"description\": \"Royalty amount from live performances\"\n    },\n    \"pro_processing_fee\": {\n      \"type\": \"number\",\n      \"description\": \"PRO processing fee deducted\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Sync Royalty Calculator\",\n  \"tool_description\": \"Calculates synchronization royalties from TV, film, advertising, and other media licensing deals.\",\n  \"parameters\": {\n    \"catalog_number\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Unique catalog identifier for the song\"\n    },\n    \"license_fee\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Total licensing fee for the sync deal\"\n    },\n    \"usage_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of synchronization usage (TV, film, advertising, video_game, online_video)\"\n    },\n    \"territory_scope\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Territorial scope of the license (US, UK, WW, etc.)\"\n    },\n    \"license_start_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Start date of license period\",\n      \"format\": \"date-time\"\n    },\n    \"license_end_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"End date of license period\",\n      \"format\": \"date-time\"\n    },\n    \"media_duration\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Duration of media usage in seconds\"\n    },\n    \"song_usage_duration\": {\n      \"type\": \"integer\",\n      \"required\": true,\n      \"description\": \"Duration of song usage within media in seconds\"\n    },\n    \"advance_payment\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Advance payment made against future royalties\",\n      \"default\": 0\n    }\n  },\n  \"error_messages\": [\n    \"Invalid license fee: License fee must be a positive number greater than zero.\",\n    \"Invalid usage type: Must be one of 'TV',\
  \ 'film', 'advertising', 'video_game', or 'online_video'.\",\n    \"Invalid license period: End date must be after start date with valid ISO 8601 format.\",\n    \"Invalid duration values: media_duration and song_usage_duration must be positive integers, with song usage not exceeding media duration.\",\n    \"Invalid territory scope: Must be valid territory code or 'WW' for worldwide.\",\n    \"Advance exceeds fee: advance_payment cannot exceed license_fee.\"\n  ],\n  \"usage\": \"Provide catalog_number, license_fee, usage_type, territory_scope, license dates, and duration information. Optionally include advance_payment. Calculates sync royalties based on usage terms.\",\n  \"output_details\": {\n    \"sync_royalty_amount\": {\n      \"type\": \"number\",\n      \"description\": \"Total synchronization royalty calculated\"\n    },\n    \"usage_percentage\": {\n      \"type\": \"number\",\n      \"description\": \"Percentage of total media duration used\"\n    },\n    \"remaining_balance\": {\n      \"type\": \"number\",\n      \"description\": \"Balance after deducting advance payment\"\n    },\n    \"payment_status\": {\n      \"type\": \"string\",\n      \"description\": \"Status indicating if payment is due or advance covers amount\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Territory Rate Fetcher\",\n  \"tool_description\": \"Fetches current statutory rates, PRO rates, and mechanical rates for specific territories and royalty types.\",\n  \"parameters\": {\n    \"territory\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Territory code (ISO 3166-1 alpha-2) to fetch rates for\"\n    },\n    \"royalty_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of royalty rate needed (mechanical, performance, sync_minimum)\"\n    },\n    \"rate_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Date for which rates are needed (rates change over time)\",\n      \"format\": \"date-time\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid territory code: Territory must be valid ISO 3166-1 alpha-2 format.\",\n    \"Unknown royalty type: royalty_type must be one of 'mechanical', 'performance', or 'sync_minimum'.\",\n    \"Invalid rate date: Date must be in valid ISO 8601 format and not in the future.\",\n    \"Rate not available: No rate data available for the specified territory, type, and date combination.\"\n  ],\n  \"usage\": \"Provide territory code, royalty_type, and rate_date to retrieve applicable statutory or standard rates for royalty calculations.\",\n  \"output_details\": {\n    \"applicable_rate\": {\n      \"type\": \"number\",\n      \"description\": \"The rate applicable for the specified parameters\"\n    },\n    \"rate_currency\": {\n      \"type\": \"string\",\n      \"description\": \"Currency code for the rate\"\n    },\n    \"rate_effective_date\": {\n      \"type\": \"string\",\n      \"description\": \"Date when this rate became effective\"\n    },\n    \"rate_source\": {\n      \"type\": \"string\",\n      \"description\": \"Authority or organization that set this rate\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Deduction Calculator\",\n  \"tool_description\": \"Calculates net royalty amounts after applying administrative fees, collection costs, and other deductions.\",\n  \"parameters\": {\n    \"gross_royalty_amount\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Gross royalty amount before deductions\"\n    },\n    \"admin_fee_percentage\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Administrative fee percentage (0-50)\"\n    },\n    \"collection_fee_percentage\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Collection fee percentage (0-25)\",\n      \"default\": 0\n    },\n    \"processing_fee_fixed\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Fixed processing fee amount\",\n      \"default\": 0\n\
  \    },\n    \"currency_conversion_fee\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Currency conversion fee amount\",\n      \"default\": 0\n    },\n    \"withholding_tax_percentage\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Withholding tax percentage (0-30)\",\n      \"default\": 0\n    },\n    \"other_deductions\": {\n      \"type\": \"number\",\n      \"required\": false,\n      \"description\": \"Other miscellaneous deductions\",\n      \"default\": 0\n    }\n  },\n  \"error_messages\": [\n    \"Invalid gross amount: gross_royalty_amount must be a positive number.\",\n    \"Invalid fee percentages: admin_fee_percentage (0-50), collection_fee_percentage (0-25), and withholding_tax_percentage (0-30) must be within valid ranges.\",\n    \"Invalid fixed fees: processing_fee_fixed, currency_conversion_fee, and other_deductions must be non-negative numbers.\",\n    \"Excessive deductions: Total deductions cannot exceed gross royalty amount.\",\n    \"Missing admin fee: admin_fee_percentage is required and must be greater than 0.\"\n  ],\n  \"usage\": \"Provide gross_royalty_amount and admin_fee_percentage as minimum requirements. Add optional fees and deductions as needed. Returns net amount and deduction breakdown.\",\n  \"output_details\": {\n    \"net_royalty_amount\": {\n      \"type\": \"number\",\n      \"description\": \"Final amount after all deductions\"\n    },\n    \"total_deductions\": {\n      \"type\": \"number\",\n      \"description\": \"Sum of all deductions applied\"\n    },\n    \"deduction_breakdown\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"description\": \"Itemized list of each deduction with amounts\"\n    },\n    \"effective_deduction_rate\": {\n      \"type\": \"number\",\n      \"description\": \"Total deduction as percentage of gross amount\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Multi Currency Converter\",\n  \"tool_description\": \"Converts royalty amounts between different currencies using current or historical exchange rates.\",\n  \"parameters\": {\n    \"amount\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Amount to be converted\"\n    },\n    \"from_currency\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Source currency code (ISO 4217)\"\n    },\n    \"to_currency\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Target currency code (ISO 4217)\"\n    },\n    \"conversion_date\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Date for exchange rate lookup\",\n      \"format\": \"date-time\"\n    },\n    \"rate_source\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Exchange rate source (ECB, FED, BOE, custom)\",\n      \"default\": \"ECB\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid amount: Amount must be a positive number greater than zero.\",\n    \"Invalid currency codes: Both from_currency and to_currency must be valid ISO 4217 currency codes.\",\n    \"Same currency conversion: from_currency and to_currency cannot be the same.\",\n    \"Invalid conversion date: Date must be in valid ISO 8601 format and not in the future.\",\n    \"Exchange rate unavailable: No exchange rate available for the specified currency pair and date.\",\n    \"Invalid rate source: rate_source must be one of 'ECB', 'FED', 'BOE', or 'custom'.\"\n  ],\n  \"usage\": \"Provide amount, from_currency, to_currency, and conversion_date. Optionally specify rate_source. Returns converted amount with exchange rate details.\",\n  \"output_details\": {\n    \"converted_amount\": {\n      \"type\": \"number\",\n      \"description\": \"Amount converted to target currency\"\n    },\n    \"exchange_rate\": {\n      \"type\": \"number\",\n      \"description\": \"Exchange rate used for conversion\"\n    },\n    \"rate_date\": {\n      \"type\": \"string\",\n      \"description\"\
  : \"Date of the exchange rate used\"\n    },\n    \"conversion_fee\": {\n      \"type\": \"number\",\n      \"description\": \"Fee charged for currency conversion\"\n    }\n  }\n}\n```\n\n```json\n{\n  \"tool_name\": \"Royalty Statement Generator\",\n  \"tool_description\": \"Generates formatted royalty statements for recipients showing earnings breakdown, deductions, and payment details.\",\n  \"parameters\": {\n    \"recipient_name\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Name of the royalty recipient (writer, publisher, etc.)\"\n    },\n    \"recipient_type\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Type of recipient (writer, publisher, administrator)\"\n    },\n    \"statement_period_start\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Start date of statement period\",\n      \"format\": \"date-time\"\n    },\n    \"statement_period_end\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"End date of statement period\",\n      \"format\": \"date-time\"\n    },\n    \"total_gross_earnings\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Total gross earnings for the period\"\n    },\n    \"total_deductions\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Total deductions applied\"\n    },\n    \"net_payment\": {\n      \"type\": \"number\",\n      \"required\": true,\n      \"description\": \"Net payment amount due\"\n    },\n    \"catalog_numbers\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"List of catalog numbers included in statement\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 1000\n    },\n    \"royalty_types\": {\n      \"type\": \"array\",\n      \"required\": true,\n      \"description\": \"Types of royalties included (mechanical, performance, sync)\",\n      \"items\": {\n        \"type\": \"string\"\n      },\n      \"minItems\": 1,\n      \"maxItems\": 10\n    },\n    \"currency\": {\n      \"type\": \"string\",\n      \"required\": true,\n      \"description\": \"Currency code for all amounts in statement\"\n    },\n    \"payment_method\": {\n      \"type\": \"string\",\n      \"required\": false,\n      \"description\": \"Method of payment (wire, check, ach, paypal)\",\n      \"default\": \"wire\"\n    }\n  },\n  \"error_messages\": [\n    \"Invalid recipient information: recipient_name cannot be empty and recipient_type must be one of 'writer', 'publisher', or 'administrator'.\",\n    \"Invalid statement period: End date must be after start date with valid ISO 8601 format.\",\n    \"Invalid monetary amounts: All amounts must be non-negative numbers with net_payment not exceeding total_"
