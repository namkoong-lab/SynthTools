{
  "tool_name": "Certificate Parser",
  "tool_description": "Parses X.509 certificates from various encodings and extracts key fields including subject, issuer, validity dates, extensions, and public key information.",
  "parameters": {
    "certificate_data": {
      "type": "string",
      "required": true,
      "description": "Base64-encoded certificate data in PEM or DER format"
    },
    "encoding_format": {
      "type": "string",
      "required": false,
      "default": "PEM",
      "description": "Certificate encoding format: PEM or DER"
    }
  },
  "error_messages": [
    "Invalid certificate format: Ensure certificate data is valid Base64-encoded PEM or DER format.",
    "Malformed certificate structure: Certificate does not conform to X.509 standard.",
    "Unsupported encoding: Use PEM or DER encoding format only."
  ],
  "usage": "Provide certificate_data as Base64-encoded string and optionally specify encoding_format. Returns parsed certificate fields for further validation processing.",
  "output_details": {
    "subject_dn": {
      "type": "string",
      "description": "Distinguished name of the certificate subject"
    },
    "issuer_dn": {
      "type": "string",
      "description": "Distinguished name of the certificate issuer"
    },
    "serial_number": {
      "type": "string",
      "description": "Certificate serial number in hexadecimal format"
    },
    "not_before": {
      "type": "string",
      "description": "Certificate validity start date"
    },
    "not_after": {
      "type": "string",
      "description": "Certificate validity end date"
    },
    "public_key_algorithm": {
      "type": "string",
      "description": "Public key algorithm identifier"
    },
    "extensions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of certificate extension OIDs"
    }
  }
}