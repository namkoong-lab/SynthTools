{
  "tool_name": "Database Object Scanner",
  "tool_description": "Scans and catalogs database objects including tables, views, procedures, functions, and schemas to maintain an inventory for access control purposes.",
  "parameters": {
    "database_name": {
      "type": "string",
      "required": true,
      "description": "Name of the database to scan"
    },
    "object_types": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "description": "Types of objects to scan: table, view, procedure, function, schema, trigger",
      "default": [
        "table",
        "view",
        "procedure",
        "function"
      ]
    },
    "schema_filter": {
      "type": "string",
      "required": false,
      "description": "Filter to scan only specific schemas (supports wildcards)",
      "default": "None"
    },
    "include_system_objects": {
      "type": "boolean",
      "required": false,
      "description": "Whether to include system/internal database objects",
      "default": false
    }
  },
  "error_messages": [
    "Database not found: The specified database does not exist or is not accessible.",
    "Invalid object type: Use valid object types [table, view, procedure, function, schema, trigger].",
    "Access denied: Insufficient privileges to scan the database objects.",
    "Connection failed: Unable to connect to the database for scanning."
  ],
  "usage": "Provide database_name to scan all objects, or specify object_types and schema_filter to limit the scan scope. Set include_system_objects to true to include system objects.",
  "output_details": {
    "scan_id": {
      "type": "string",
      "description": "Unique identifier for the scan operation"
    },
    "total_objects_found": {
      "type": "integer",
      "description": "Total number of database objects discovered"
    },
    "object_names": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of discovered object names"
    },
    "scan_timestamp": {
      "type": "string",
      "description": "When the scan was completed"
    }
  }
}