{
  "tool_name": "Relationship_Mapper",
  "tool_description": "Creates relationships between entities and defines relationship types and participation constraints.",
  "parameters": {
    "relationship_name": {
      "type": "string",
      "required": true,
      "description": "Name of the relationship to create"
    },
    "entity_ids": {
      "type": "array",
      "required": true,
      "description": "Array of entity IDs participating in the relationship",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "maxItems": 10
    },
    "relationship_type": {
      "type": "string",
      "required": true,
      "description": "Type of relationship: identifying, non-identifying, or aggregation"
    },
    "participation_constraints": {
      "type": "array",
      "required": false,
      "description": "Participation for each entity: total or partial",
      "items": {
        "type": "string"
      },
      "default": []
    }
  },
  "error_messages": [
    "Invalid relationship name: Relationship name must be non-empty and unique.",
    "Invalid entity IDs: One or more entity IDs do not exist in the current schema.",
    "Invalid relationship type: Type must be one of [identifying, non-identifying, aggregation].",
    "Invalid participation constraints: Each constraint must be 'total' or 'partial'.",
    "Constraint mismatch: participation_constraints array length must match entity_ids length if provided."
  ],
  "usage": "Provide relationship_name, entity_ids array, and relationship_type. Optionally specify participation_constraints for each participating entity.",
  "output_details": {
    "relationship_id": {
      "type": "string",
      "description": "Unique identifier for the created relationship"
    },
    "relationship_name": {
      "type": "string",
      "description": "Name of the created relationship"
    },
    "participating_entities": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of entity names participating in the relationship"
    },
    "relationship_type": {
      "type": "string",
      "description": "Type of the created relationship"
    }
  }
}