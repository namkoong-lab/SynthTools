{
  "tool_name": "Index Candidate Generator",
  "tool_description": "Generates optimal index candidates based on schema analysis and query patterns, considering column selectivity, query frequency, and access patterns.",
  "parameters": {
    "schema_info": {
      "type": "string",
      "required": true,
      "description": "JSON string containing schema analysis results"
    },
    "query_patterns": {
      "type": "string",
      "required": true,
      "description": "JSON string containing query pattern analysis results"
    },
    "max_candidates": {
      "type": "integer",
      "required": false,
      "description": "Maximum number of index candidates to generate",
      "default": 20
    },
    "min_selectivity": {
      "type": "number",
      "required": false,
      "description": "Minimum column selectivity threshold (0.0 to 1.0)",
      "default": 0.1
    },
    "consider_composite": {
      "type": "boolean",
      "required": false,
      "description": "Whether to generate composite index candidates",
      "default": true
    }
  },
  "error_messages": [
    "Invalid schema info: Schema information is malformed or incomplete JSON.",
    "Invalid query patterns: Query pattern data is malformed or incomplete JSON.",
    "Parameter out of range: max_candidates must be between 1 and 50, min_selectivity must be between 0.0 and 1.0.",
    "No viable candidates: No suitable index candidates found based on provided criteria.",
    "Data inconsistency: Schema and query pattern data appear to be from different databases."
  ],
  "usage": "Provide schema_info and query_patterns as JSON strings from previous analysis tools. Adjust max_candidates and min_selectivity to control recommendation scope. Enable consider_composite for advanced multi-column indexes.",
  "output_details": {
    "candidate_count": {
      "type": "integer",
      "description": "Number of index candidates generated"
    },
    "index_definitions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "SQL CREATE INDEX statements for each candidate"
    },
    "target_tables": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Table names for each index candidate"
    },
    "priority_scores": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "description": "Priority scores for each candidate (0.0 to 1.0)"
    },
    "expected_queries_improved": {
      "type": "array",
      "items": {
        "type": "integer"
      },
      "description": "Number of queries each index is expected to improve"
    }
  }
}