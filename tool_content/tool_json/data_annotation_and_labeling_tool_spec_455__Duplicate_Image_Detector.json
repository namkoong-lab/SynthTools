{
  "tool_name": "Duplicate Image Detector",
  "tool_description": "Detects duplicate and near-duplicate images in a dataset using perceptual hashing and similarity matching to identify redundant content for removal.",
  "parameters": {
    "image_directory": {
      "type": "string",
      "required": true,
      "description": "Directory path containing images to check for duplicates"
    },
    "similarity_threshold": {
      "type": "number",
      "required": false,
      "default": 0.95,
      "description": "Similarity threshold for duplicate detection (0.7-1.0)"
    },
    "hash_algorithm": {
      "type": "string",
      "required": false,
      "default": "phash",
      "description": "Hashing algorithm: phash, ahash, dhash, whash"
    },
    "include_subfolders": {
      "type": "boolean",
      "required": false,
      "default": true,
      "description": "Whether to include images from subdirectories"
    },
    "max_images": {
      "type": "integer",
      "required": false,
      "default": 10000,
      "description": "Maximum number of images to process (1-50000)"
    }
  },
  "error_messages": [
    "Invalid directory path: image_directory does not exist or is not accessible.",
    "Invalid similarity threshold: similarity_threshold must be a number between 0.7 and 1.0.",
    "Invalid hash algorithm: Must be one of [phash, ahash, dhash, whash].",
    "Invalid max_images value: max_images must be an integer between 1 and 50000.",
    "No images found: No valid image files found in the specified directory.",
    "Processing failed: Duplicate detection failed due to memory constraints or file access errors."
  ],
  "usage": "Provide image_directory path. Optionally configure similarity_threshold, hash_algorithm, include_subfolders, and max_images. Tool scans for duplicate images and returns similarity groups.",
  "output_details": {
    "duplicate_groups": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of JSON-formatted duplicate groups, each containing similar image paths"
    },
    "total_duplicates": {
      "type": "integer",
      "description": "Total number of duplicate images found"
    },
    "unique_images": {
      "type": "integer",
      "description": "Number of unique images in the dataset"
    },
    "space_savings": {
      "type": "string",
      "description": "Potential storage space savings from removing duplicates"
    },
    "processing_time": {
      "type": "number",
      "description": "Time taken to complete duplicate detection in seconds"
    }
  }
}