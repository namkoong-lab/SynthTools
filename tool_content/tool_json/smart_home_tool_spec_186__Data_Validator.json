{
  "tool_name": "Data Validator",
  "tool_description": "Validates sensor data for accuracy, removes outliers, and flags potentially erroneous readings based on physical constraints.",
  "parameters": {
    "raw_readings": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "required": true,
      "description": "Array of raw sensor readings to validate"
    },
    "metric_type": {
      "type": "string",
      "required": true,
      "description": "Type of metric being validated: temperature, humidity, co2, pm25, pm10, voc, formaldehyde"
    },
    "outlier_threshold": {
      "type": "number",
      "required": false,
      "description": "Standard deviation threshold for outlier detection (1.0-5.0)",
      "default": 2.5
    }
  },
  "error_messages": [
    "Empty data array: raw_readings cannot be empty.",
    "Invalid metric type: Use one of [temperature, humidity, co2, pm25, pm10, voc, formaldehyde].",
    "Invalid threshold: outlier_threshold must be between 1.0 and 5.0.",
    "Insufficient data: Need at least 3 readings for validation analysis."
  ],
  "usage": "Provide raw_readings array and specify metric_type for proper validation rules. Adjust outlier_threshold to control sensitivity to anomalous values.",
  "output_details": {
    "validated_readings": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "description": "Cleaned sensor readings with outliers removed"
    },
    "outliers_removed": {
      "type": "integer",
      "description": "Number of outlier readings removed"
    },
    "validation_status": {
      "type": "string",
      "description": "Overall validation result: passed, warning, failed"
    },
    "quality_score": {
      "type": "number",
      "description": "Data quality score from 0-100"
    }
  }
}