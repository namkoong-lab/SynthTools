{
  "tool_name": "ML Fraud Classifier",
  "tool_description": "Uses machine learning models to classify account activity and transactions as fraudulent or legitimate based on feature vectors.",
  "parameters": {
    "account_id": {
      "type": "string",
      "required": true,
      "description": "Account identifier for fraud classification"
    },
    "feature_vector": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "required": true,
      "description": "Numerical feature vector for ML model input"
    },
    "model_type": {
      "type": "string",
      "required": false,
      "default": "ensemble",
      "description": "ML model to use (ensemble, neural_network, gradient_boosting, random_forest)"
    },
    "confidence_threshold": {
      "type": "number",
      "required": false,
      "default": 0.8,
      "description": "Minimum confidence threshold for predictions (0.5-1.0)"
    }
  },
  "error_messages": [
    "Invalid account_id: Account must exist in the system.",
    "Invalid feature_vector: Must be non-empty array of numerical values matching model requirements.",
    "Invalid model_type: Must be one of [ensemble, neural_network, gradient_boosting, random_forest].",
    "Invalid confidence_threshold: Must be between 0.5 and 1.0.",
    "Model prediction failed: Unable to generate fraud prediction from feature vector.",
    "Model not available: Specified model type is not currently available."
  ],
  "usage": "Provide account_id and properly formatted feature_vector. Select appropriate model_type and set confidence_threshold for fraud classification.",
  "output_details": {
    "fraud_probability": {
      "type": "number",
      "description": "Probability that the activity is fraudulent (0-1)"
    },
    "is_fraud": {
      "type": "boolean",
      "description": "Binary classification result based on threshold"
    },
    "prediction_confidence": {
      "type": "number",
      "description": "Model confidence in the prediction (0-1)"
    },
    "model_used": {
      "type": "string",
      "description": "Name of the ML model that generated the prediction"
    },
    "feature_importance": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "description": "Importance scores for input features"
    }
  }
}