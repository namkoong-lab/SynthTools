{
  "tool_name": "Atmospheric Data Validator",
  "tool_description": "Validates and cleans atmospheric measurement data by detecting outliers, filling gaps, and ensuring data quality for reliable wind forecasting.",
  "parameters": {
    "raw_data": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true,
      "description": "Raw atmospheric measurement data as comma-separated value strings",
      "minItems": 1
    },
    "timestamps": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true,
      "description": "Corresponding timestamps for each measurement in ISO 8601 format",
      "minItems": 1
    },
    "validation_method": {
      "type": "string",
      "required": false,
      "description": "Validation approach: strict, moderate, or lenient",
      "default": "moderate"
    }
  },
  "error_messages": [
    "Data array length mismatch: Raw data and timestamps arrays must have equal length.",
    "Invalid validation method: Use one of [strict, moderate, lenient].",
    "Insufficient data: At least 10 data points required for meaningful validation.",
    "Timestamp format error: All timestamps must be valid ISO 8601 format.",
    "Data format error: Raw data must contain numeric atmospheric measurements in expected format."
  ],
  "usage": "Input raw measurement data with corresponding timestamps. Choose validation method based on data quality requirements - strict for critical applications, lenient for exploratory analysis.",
  "output_details": {
    "cleaned_data": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Validated and cleaned atmospheric measurement data"
    },
    "valid_timestamps": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Timestamps corresponding to cleaned data points"
    },
    "outliers_detected": {
      "type": "integer",
      "description": "Number of outliers identified and removed"
    },
    "gaps_filled": {
      "type": "integer",
      "description": "Number of data gaps that were interpolated"
    },
    "data_quality_score": {
      "type": "number",
      "description": "Overall data quality score from 0 to 100"
    }
  }
}