{
  "tool_name": "Clause Dependency Mapper",
  "tool_description": "Maps relationships and dependencies between clauses to ensure consistent and compatible clause combinations.",
  "parameters": {
    "primary_clause_id": {
      "type": "string",
      "required": true,
      "description": "Main clause to analyze dependencies for"
    },
    "target_clause_ids": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "description": "Specific clauses to check relationships with",
      "default": null
    },
    "contract_type": {
      "type": "string",
      "required": true,
      "description": "Type of contract for context"
    },
    "mapping_scope": {
      "type": "string",
      "required": false,
      "description": "Scope of dependency mapping: 'direct', 'extended', 'full'",
      "default": "extended"
    }
  },
  "error_messages": [
    "Clause not found: The primary_clause_id does not exist in the library",
    "Invalid mapping scope: Must be 'direct', 'extended', or 'full'",
    "Target clause not found: One or more target_clause_ids do not exist",
    "Circular dependency detected: The clause relationships form a circular reference",
    "Insufficient context: Contract type is required for dependency analysis"
  ],
  "usage": "Provide primary_clause_id and contract_type. Optionally specify target_clause_ids for focused analysis and adjust mapping_scope for depth.",
  "output_details": {
    "dependencies": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of clause IDs that the primary clause depends on"
    },
    "dependents": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of clause IDs that depend on the primary clause"
    },
    "compatibility_scores": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Compatibility ratings with related clauses"
    },
    "relationship_types": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Types of relationships identified"
    }
  }
}