{
  "tool_name": "Cryptographic Signature Verifier",
  "tool_description": "Verifies cryptographic signatures on certificates using the appropriate algorithm and public key, supporting RSA, ECDSA, and DSA signature schemes with various hash functions.",
  "parameters": {
    "certificate": {
      "type": "string",
      "required": true,
      "description": "Certificate whose signature needs verification"
    },
    "issuer_public_key": {
      "type": "string",
      "required": true,
      "description": "Public key of the certificate issuer in PEM format"
    },
    "signature_algorithm": {
      "type": "string",
      "required": false,
      "description": "Signature algorithm to use if not auto-detected from certificate",
      "default": "None"
    }
  },
  "error_messages": [
    "Invalid certificate: Certificate data is malformed or cannot be parsed.",
    "Invalid public key: Issuer public key is malformed or unsupported format.",
    "Signature verification failed: Cryptographic signature does not match certificate data.",
    "Unsupported algorithm: Signature algorithm is not supported.",
    "Key algorithm mismatch: Public key algorithm does not match signature algorithm."
  ],
  "usage": "Provide certificate and issuer_public_key. Optionally specify signature_algorithm to override auto-detection. Returns signature verification result and details.",
  "output_details": {
    "signature_valid": {
      "type": "boolean",
      "description": "Whether the cryptographic signature is valid"
    },
    "algorithm_used": {
      "type": "string",
      "description": "Signature algorithm that was used for verification"
    },
    "hash_algorithm": {
      "type": "string",
      "description": "Hash algorithm used in the signature"
    },
    "key_size": {
      "type": "integer",
      "description": "Size of the public key in bits"
    }
  }
}