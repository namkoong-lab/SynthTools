{
  "tool_name": "Trust Anchor Manager",
  "tool_description": "Manages trusted root certificate stores by loading, validating, and organizing root certificates with support for multiple trust store formats and trust policy configuration.",
  "parameters": {
    "root_certificates": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true,
      "description": "Array of root certificates to add to trust store"
    },
    "store_format": {
      "type": "string",
      "required": false,
      "description": "Trust store format: PEM, PKCS12, or JKS",
      "default": "PEM"
    },
    "validate_roots": {
      "type": "boolean",
      "required": false,
      "description": "Whether to validate root certificate self-signatures",
      "default": true
    },
    "allow_duplicates": {
      "type": "boolean",
      "required": false,
      "description": "Whether to allow duplicate certificates in trust store",
      "default": false
    },
    "trust_policy": {
      "type": "string",
      "required": false,
      "description": "Trust policy: strict, standard, or permissive",
      "default": "standard"
    }
  },
  "error_messages": [
    "Empty root certificate list: Must provide at least one root certificate.",
    "Invalid root certificate: One or more root certificates are malformed or invalid.",
    "Unsupported store format: Format must be one of [PEM, PKCS12, JKS].",
    "Root validation failed: One or more root certificates failed self-signature validation.",
    "Invalid trust policy: Policy must be one of [strict, standard, permissive].",
    "Duplicate certificate detected: Duplicate root certificate found when allow_duplicates is false."
  ],
  "usage": "Provide array of root_certificates to establish trust store. Configure store_format, validation options, and trust_policy as needed. Returns organized trust store information.",
  "output_details": {
    "trust_store_id": {
      "type": "string",
      "description": "Unique identifier for the created trust store"
    },
    "root_count": {
      "type": "integer",
      "description": "Number of root certificates in trust store"
    },
    "valid_roots": {
      "type": "integer",
      "description": "Number of roots that passed validation"
    },
    "invalid_roots": {
      "type": "integer",
      "description": "Number of roots that failed validation"
    },
    "root_subjects": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Subject names of all root certificates"
    },
    "trust_policy_applied": {
      "type": "string",
      "description": "The trust policy that was applied"
    },
    "creation_time": {
      "type": "string",
      "description": "Trust store creation timestamp",
      "format": "date-time"
    }
  }
}