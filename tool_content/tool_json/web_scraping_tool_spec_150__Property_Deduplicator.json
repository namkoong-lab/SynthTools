{
  "tool_name": "Property Deduplicator",
  "tool_description": "Identifies and removes duplicate property listings from aggregated data using address matching, price comparison, and feature analysis.",
  "parameters": {
    "property_data": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true,
      "description": "Array of JSON strings containing property data",
      "minItems": 1
    },
    "match_threshold": {
      "type": "number",
      "required": false,
      "default": 0.85,
      "description": "Similarity threshold for duplicate detection (0-1)"
    },
    "address_weight": {
      "type": "number",
      "required": false,
      "default": 0.4,
      "description": "Weight given to address matching in similarity score"
    },
    "price_weight": {
      "type": "number",
      "required": false,
      "default": 0.3,
      "description": "Weight given to price matching in similarity score"
    },
    "features_weight": {
      "type": "number",
      "required": false,
      "default": 0.3,
      "description": "Weight given to property features in similarity score"
    },
    "keep_newest": {
      "type": "boolean",
      "required": false,
      "default": true,
      "description": "Whether to keep newest listing when duplicates found"
    },
    "price_tolerance": {
      "type": "number",
      "required": false,
      "default": 0.05,
      "description": "Price difference tolerance as percentage (e.g., 0.05 = 5%)"
    }
  },
  "error_messages": [
    "Empty property data: Provide at least one property record to process.",
    "Invalid JSON format: Property data must be valid JSON strings.",
    "Invalid threshold: match_threshold must be between 0 and 1.",
    "Invalid weights: All weight parameters must be between 0 and 1 and should sum to 1.",
    "Invalid price tolerance: price_tolerance must be between 0 and 1."
  ],
  "usage": "Provide an array of property data as JSON strings. Configure matching weights and threshold based on your deduplication requirements.",
  "output_details": {
    "unique_properties": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of unique property records after deduplication"
    },
    "duplicates_removed": {
      "type": "integer",
      "description": "Number of duplicate properties that were removed"
    },
    "duplicate_groups": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Groups of properties that were identified as duplicates"
    },
    "final_count": {
      "type": "integer",
      "description": "Final number of unique properties"
    }
  }
}