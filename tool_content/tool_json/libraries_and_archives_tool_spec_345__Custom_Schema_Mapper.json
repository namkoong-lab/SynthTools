{
  "tool_name": "Custom Schema Mapper",
  "tool_description": "Maps metadata between different schema formats using configurable transformation rules and field mapping definitions.",
  "parameters": {
    "source_metadata": {
      "type": "string",
      "required": true,
      "description": "JSON string of source metadata to transform"
    },
    "target_schema": {
      "type": "string",
      "required": true,
      "description": "Target schema name or identifier"
    },
    "mapping_rules": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true,
      "description": "Array of mapping rules in format 'source_field->target_field'"
    },
    "transformation_functions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "default": null,
      "description": "Array of transformation functions to apply: uppercase, lowercase, date_format, split, merge"
    },
    "default_values": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "default": null,
      "description": "Default values for target fields in format 'field:value'"
    },
    "conditional_mapping": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "default": null,
      "description": "Conditional mapping rules in format 'if:condition:then:mapping'"
    },
    "preserve_unmapped": {
      "type": "boolean",
      "required": false,
      "default": false,
      "description": "Include unmapped source fields in output"
    },
    "validate_output": {
      "type": "boolean",
      "required": false,
      "default": true,
      "description": "Validate the mapped output against target schema"
    },
    "error_handling": {
      "type": "string",
      "required": false,
      "default": "skip",
      "description": "Error handling strategy: skip, default, fail"
    }
  },
  "error_messages": [
    "Invalid source metadata: The source_metadata is not valid JSON",
    "Invalid mapping rule: One or more mapping_rules has incorrect format (use 'source->target')",
    "Unknown transformation function: Use uppercase, lowercase, date_format, split, or merge",
    "Invalid default value format: Use 'field:value' format for default_values",
    "Invalid conditional rule: Conditional mapping rules must follow 'if:condition:then:mapping' format",
    "Invalid error handling strategy: Use skip, default, or fail"
  ],
  "usage": "Provide source_metadata, target_schema, and mapping_rules. Optionally specify transformation_functions, default_values, and conditional_mapping for complex transformations.",
  "output_details": {
    "mapped_metadata": {
      "type": "string",
      "description": "JSON string of transformed metadata in target schema"
    },
    "mapping_success": {
      "type": "boolean",
      "description": "Whether the mapping completed successfully"
    },
    "applied_rules": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of mapping rules that were successfully applied"
    },
    "failed_mappings": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of mapping rules that failed"
    },
    "transformation_log": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Log of transformations applied during mapping"
    }
  }
}