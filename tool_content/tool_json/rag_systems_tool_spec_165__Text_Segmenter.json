{
  "tool_name": "Text Segmenter",
  "tool_description": "Segments long text into logical chunks based on paragraphs, sentences, or custom delimiters with size and overlap controls for downstream processing.",
  "parameters": {
    "text_content": {
      "type": "string",
      "required": true,
      "description": "Long text content to be segmented"
    },
    "segmentation_method": {
      "type": "string",
      "required": true,
      "description": "Segmentation approach: paragraph, sentence, fixed_size, semantic"
    },
    "max_segment_size": {
      "type": "integer",
      "required": false,
      "description": "Maximum characters per segment (100-10000)",
      "default": 1000
    },
    "overlap_size": {
      "type": "integer",
      "required": false,
      "description": "Character overlap between consecutive segments",
      "default": 100
    },
    "preserve_structure": {
      "type": "boolean",
      "required": false,
      "description": "Maintain document structure markers in segments",
      "default": true
    },
    "min_segment_size": {
      "type": "integer",
      "required": false,
      "description": "Minimum characters per segment (50-1000)",
      "default": 100
    }
  },
  "error_messages": [
    "Empty text content: Provide non-empty text for segmentation.",
    "Invalid segmentation method: Use one of [paragraph, sentence, fixed_size, semantic].",
    "Invalid segment size: max_segment_size must be between 100 and 10000 characters.",
    "Invalid overlap size: overlap_size must be less than max_segment_size and non-negative.",
    "Invalid minimum size: min_segment_size must be between 50 and 1000, and less than max_segment_size.",
    "Text too short: Input text is shorter than minimum segment requirements."
  ],
  "usage": "Provide text_content and segmentation_method. Adjust max_segment_size and overlap_size for optimal chunk sizes, set min_segment_size to filter small segments.",
  "output_details": {
    "segments": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of text segments created from the input"
    },
    "segment_count": {
      "type": "integer",
      "description": "Total number of segments created"
    },
    "average_segment_length": {
      "type": "number",
      "description": "Average character length of segments"
    },
    "total_characters": {
      "type": "integer",
      "description": "Total characters across all segments"
    }
  }
}