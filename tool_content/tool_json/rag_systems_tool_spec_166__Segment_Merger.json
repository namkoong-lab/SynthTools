{
  "tool_name": "Segment Merger",
  "tool_description": "Merges adjacent text segments based on similarity criteria and coherence thresholds to create optimal semantic units.",
  "parameters": {
    "segments": {
      "type": "array",
      "required": true,
      "description": "Array of text segments to potentially merge",
      "items": {
        "type": "string"
      }
    },
    "coherence_scores": {
      "type": "array",
      "required": true,
      "description": "Coherence scores for each segment",
      "items": {
        "type": "number"
      }
    },
    "merge_threshold": {
      "type": "number",
      "required": false,
      "description": "Minimum similarity for merging adjacent segments (0.0 to 1.0)",
      "default": 0.7
    },
    "max_merged_length": {
      "type": "integer",
      "required": false,
      "description": "Maximum character length for merged segments",
      "default": 2000
    },
    "preserve_boundaries": {
      "type": "array",
      "required": false,
      "description": "Positions where merging should be avoided",
      "items": {
        "type": "integer"
      },
      "default": []
    },
    "merge_strategy": {
      "type": "string",
      "required": false,
      "description": "Merging approach: greedy, optimal, or conservative",
      "default": "greedy"
    }
  },
  "error_messages": [
    "Mismatched arrays: segments and coherence_scores must have the same length.",
    "Invalid merge_threshold: Must be between 0.0 and 1.0.",
    "Invalid max_merged_length: Must be positive integer greater than 100.",
    "Invalid preserve_boundaries: Positions must be valid segment indices.",
    "Invalid merge_strategy: Use greedy, optimal, or conservative.",
    "Insufficient segments: Need at least 2 segments for merging operation."
  ],
  "usage": "Provide segments, coherence_scores, and merging criteria. Returns merged segments with merge operations log.",
  "output_details": {
    "merged_segments": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Text segments after merging operation"
    },
    "merge_operations": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Log of merge operations performed"
    },
    "segments_before": {
      "type": "integer",
      "description": "Number of segments before merging"
    },
    "segments_after": {
      "type": "integer",
      "description": "Number of segments after merging"
    }
  }
}