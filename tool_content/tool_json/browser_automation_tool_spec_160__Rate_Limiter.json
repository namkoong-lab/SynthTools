{
  "tool_name": "Rate Limiter",
  "tool_description": "Controls request timing and frequency to avoid overwhelming target servers and reduce the risk of being blocked during scraping operations.",
  "parameters": {
    "requests_per_minute": {
      "type": "integer",
      "required": true,
      "description": "Maximum number of requests per minute (1-60)"
    },
    "delay_between_requests": {
      "type": "number",
      "required": false,
      "description": "Fixed delay in seconds between requests",
      "default": 1.0
    },
    "random_delay": {
      "type": "boolean",
      "required": false,
      "description": "Whether to add random variation to delays",
      "default": true
    },
    "burst_requests": {
      "type": "integer",
      "required": false,
      "description": "Number of requests allowed in initial burst",
      "default": 3
    }
  },
  "error_messages": [
    "Invalid rate limit: Requests per minute must be between 1 and 60",
    "Invalid delay: Delay between requests must be non-negative",
    "Invalid burst size: Burst requests must be positive integer not exceeding rate limit"
  ],
  "usage": "Configure rate limiting parameters before starting scraping operations. The tool enforces delays and tracks request timing to maintain specified limits.",
  "output_details": {
    "current_rate": {
      "type": "number",
      "description": "Current requests per minute rate"
    },
    "next_request_allowed": {
      "type": "string",
      "description": "Timestamp when next request is allowed"
    },
    "requests_remaining": {
      "type": "integer",
      "description": "Requests remaining in current time window"
    }
  }
}