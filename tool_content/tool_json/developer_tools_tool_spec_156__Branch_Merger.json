{
  "tool_name": "Branch Merger",
  "tool_description": "Merges a source branch into a target branch with configurable merge strategies, conflict detection, and rollback options.",
  "parameters": {
    "repository_path": {
      "type": "string",
      "required": true,
      "description": "Path to the Git repository"
    },
    "source_branch": {
      "type": "string",
      "required": true,
      "description": "Branch to merge from"
    },
    "target_branch": {
      "type": "string",
      "required": true,
      "description": "Branch to merge into"
    },
    "merge_strategy": {
      "type": "string",
      "required": false,
      "description": "Merge strategy: merge, squash, or rebase",
      "default": "merge"
    },
    "delete_source_after": {
      "type": "boolean",
      "required": false,
      "description": "Whether to delete the source branch after successful merge",
      "default": false
    },
    "commit_message": {
      "type": "string",
      "required": false,
      "description": "Custom merge commit message",
      "default": "None"
    },
    "fast_forward_only": {
      "type": "boolean",
      "required": false,
      "description": "Only allow fast-forward merges",
      "default": false
    }
  },
  "error_messages": [
    "Repository not found: No Git repository exists at the specified path.",
    "Branch not found: One or both specified branches do not exist in the repository.",
    "Merge conflicts detected: Automatic merge failed due to conflicts. Resolve conflicts manually and commit.",
    "Invalid merge strategy: Strategy must be 'merge', 'squash', or 'rebase'.",
    "Fast-forward not possible: Cannot fast-forward merge with the current branch states. Disable fast_forward_only.",
    "Uncommitted changes: Cannot merge with uncommitted changes in the working directory.",
    "Cannot merge into current branch: Switch to the target branch before merging, or specify a different target."
  ],
  "usage": "Specify repository_path, source_branch, and target_branch. Choose merge_strategy and set other options as needed. The tool will attempt the merge and report results or conflicts.",
  "output_details": {
    "merge_successful": {
      "type": "boolean",
      "description": "Whether the merge completed successfully"
    },
    "merge_commit_hash": {
      "type": "string",
      "description": "SHA hash of the merge commit if created"
    },
    "conflicts_detected": {
      "type": "boolean",
      "description": "Whether merge conflicts were detected"
    },
    "conflicted_files": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of files with merge conflicts"
    },
    "source_branch_deleted": {
      "type": "boolean",
      "description": "Whether the source branch was deleted after merge"
    },
    "strategy_used": {
      "type": "string",
      "description": "The merge strategy that was applied"
    }
  }
}