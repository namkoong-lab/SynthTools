{
  "tool_name": "Metadata Schema Validator",
  "tool_description": "Validates metadata records against predefined or custom schemas, ensuring compliance with standards like Dublin Core, MODS, or institutional requirements.",
  "parameters": {
    "metadata_record": {
      "type": "string",
      "required": true,
      "description": "JSON string representation of the metadata record to validate"
    },
    "schema_type": {
      "type": "string",
      "required": true,
      "description": "Schema standard: dublin_core, mods, ead, custom"
    },
    "custom_schema": {
      "type": "string",
      "required": false,
      "default": null,
      "description": "Custom schema definition (required if schema_type is 'custom')"
    },
    "strict_mode": {
      "type": "boolean",
      "required": false,
      "default": false,
      "description": "Enable strict validation with no tolerance for minor deviations"
    },
    "required_fields": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "default": null,
      "description": "Array of field names that must be present"
    },
    "field_constraints": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": false,
      "default": null,
      "description": "Array of field constraint rules in format 'field:constraint'"
    },
    "vocabulary_checking": {
      "type": "boolean",
      "required": false,
      "default": false,
      "description": "Validate controlled vocabulary terms"
    }
  },
  "error_messages": [
    "Invalid metadata format: The metadata_record is not valid JSON",
    "Unknown schema type: Use dublin_core, mods, ead, or custom",
    "Missing custom schema: custom_schema is required when schema_type is 'custom'",
    "Invalid schema definition: The custom schema contains syntax errors",
    "Constraint syntax error: One or more field_constraints has invalid syntax (use 'field:constraint' format)"
  ],
  "usage": "Provide metadata_record as JSON string and specify schema_type. For custom schemas, include custom_schema definition. Configure validation strictness and field requirements as needed.",
  "output_details": {
    "is_valid": {
      "type": "boolean",
      "description": "Whether the metadata record passes validation"
    },
    "validation_errors": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of validation error messages"
    },
    "validation_warnings": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of validation warnings for best practices"
    },
    "missing_required": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of missing required field names"
    },
    "compliance_score": {
      "type": "number",
      "description": "Compliance score from 0 to 1"
    }
  }
}