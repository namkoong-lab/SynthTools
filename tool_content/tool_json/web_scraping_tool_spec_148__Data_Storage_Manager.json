{
  "tool_name": "Data Storage Manager",
  "tool_description": "Manages structured data storage operations including insertion, querying, and data organization for price monitoring systems.",
  "parameters": {
    "operation": {
      "type": "string",
      "required": true,
      "description": "Storage operation type (insert, query, update, delete)"
    },
    "table_name": {
      "type": "string",
      "required": true,
      "description": "Database table or collection name"
    },
    "data_records": {
      "type": "array",
      "required": false,
      "description": "Data records for insert/update operations",
      "items": {
        "type": "string"
      },
      "default": null
    },
    "query_conditions": {
      "type": "array",
      "required": false,
      "description": "Query filter conditions",
      "items": {
        "type": "string"
      },
      "default": null
    },
    "sort_by": {
      "type": "string",
      "required": false,
      "description": "Field name to sort results by",
      "default": null
    },
    "limit": {
      "type": "integer",
      "required": false,
      "description": "Maximum number of records to return (1-1000)",
      "default": 100
    },
    "backup_enabled": {
      "type": "boolean",
      "required": false,
      "description": "Whether to create backup before operations",
      "default": false
    }
  },
  "error_messages": [
    "Invalid operation: Use one of [insert, query, update, delete].",
    "Table not found: The specified table_name does not exist.",
    "Missing data records: data_records required for insert and update operations.",
    "Invalid query conditions: query_conditions must be valid filter expressions.",
    "Limit out of range: limit must be between 1 and 1000.",
    "Database connection error: Unable to connect to the storage backend.",
    "Insufficient permissions: Operation not permitted on the specified table.",
    "Data validation failed: One or more records failed schema validation."
  ],
  "usage": "Specify operation type and table_name. For insert/update, provide data_records. For queries, use query_conditions and optional sorting/limiting.",
  "output_details": {
    "operation_success": {
      "type": "boolean",
      "description": "Whether the operation completed successfully"
    },
    "affected_records": {
      "type": "integer",
      "description": "Number of records affected by the operation"
    },
    "result_data": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Query results or operation details"
    },
    "execution_time": {
      "type": "number",
      "description": "Operation execution time in milliseconds"
    }
  }
}