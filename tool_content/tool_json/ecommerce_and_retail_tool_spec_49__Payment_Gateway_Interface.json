{
  "tool_name": "Payment Gateway Interface",
  "tool_description": "Interfaces with payment gateway APIs to submit dispute responses, process refunds, and manage transaction states.",
  "parameters": {
    "gateway_provider": {
      "type": "string",
      "required": true,
      "description": "Payment gateway: stripe, square, paypal, authorize_net, braintree, or adyen"
    },
    "api_key": {
      "type": "string",
      "required": true,
      "description": "Gateway API authentication key"
    },
    "operation_type": {
      "type": "string",
      "required": true,
      "description": "Operation: submit_dispute_response, process_refund, update_transaction, or query_status"
    },
    "transaction_id": {
      "type": "string",
      "required": true,
      "description": "Transaction identifier for the operation"
    },
    "payload_data": {
      "type": "string",
      "required": false,
      "default": "None",
      "description": "JSON string containing operation-specific data"
    },
    "environment": {
      "type": "string",
      "required": false,
      "default": "production",
      "description": "Gateway environment: production, sandbox, or test"
    }
  },
  "error_messages": [
    "Gateway authentication failed: Invalid API key or insufficient permissions. Verify the api_key is correct and has required scope for the operation.",
    "Unsupported gateway: Use one of [stripe, square, paypal, authorize_net, braintree, adyen]. Ensure gateway_provider is spelled correctly.",
    "Invalid operation: Use one of [submit_dispute_response, process_refund, update_transaction, query_status]. Check operation_type parameter.",
    "Gateway API error: The payment gateway returned an error response. Review payload_data format and ensure all required fields are provided.",
    "Rate limit exceeded: Too many requests to the gateway API. Implement exponential backoff and retry the operation after the specified delay."
  ],
  "usage": "Provide gateway_provider, api_key, operation_type, and transaction_id to interact with payment gateways. Include payload_data for operations requiring additional parameters.",
  "output_details": {
    "operation_success": {
      "type": "boolean",
      "description": "Whether the gateway operation completed successfully"
    },
    "gateway_response": {
      "type": "string",
      "description": "Raw response from payment gateway API"
    },
    "operation_id": {
      "type": "string",
      "description": "Gateway-specific operation identifier for tracking"
    },
    "status_code": {
      "type": "integer",
      "description": "HTTP status code from gateway response"
    }
  }
}