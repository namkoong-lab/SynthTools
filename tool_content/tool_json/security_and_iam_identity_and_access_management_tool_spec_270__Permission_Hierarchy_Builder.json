{
  "tool_name": "Permission Hierarchy Builder",
  "tool_description": "Creates hierarchical permission structures with inheritance relationships and dependency management for complex RBAC scenarios.",
  "parameters": {
    "hierarchy_name": {
      "type": "string",
      "required": true,
      "description": "Name for the permission hierarchy"
    },
    "parent_permissions": {
      "type": "array",
      "required": true,
      "description": "List of parent-level permissions",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "child_permissions": {
      "type": "array",
      "required": true,
      "description": "List of child permissions that inherit from parents",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 20
    },
    "inheritance_rules": {
      "type": "array",
      "required": true,
      "description": "Rules defining how permissions are inherited",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 15
    },
    "exclude_permissions": {
      "type": "array",
      "required": false,
      "description": "Permissions to exclude from inheritance",
      "items": {
        "type": "string"
      },
      "default": "None"
    },
    "allow_circular_inheritance": {
      "type": "boolean",
      "required": false,
      "description": "Whether to allow circular inheritance patterns",
      "default": false
    }
  },
  "error_messages": [
    "Hierarchy name already exists: Choose a unique name for the permission hierarchy.",
    "Invalid inheritance rule: One or more inheritance rules are malformed or conflicting.",
    "Circular dependency detected: Circular inheritance is not allowed unless explicitly enabled.",
    "Permission not found: One or more specified permissions don't exist in the system.",
    "Empty permission lists: Both parent and child permission lists cannot be empty."
  ],
  "usage": "Define hierarchy_name, parent_permissions, child_permissions, and inheritance_rules to create a permission hierarchy. Use exclude_permissions to prevent certain inheritances.",
  "output_details": {
    "hierarchy_id": {
      "type": "string",
      "description": "Unique identifier for the created hierarchy"
    },
    "total_permissions": {
      "type": "integer",
      "description": "Total number of permissions in the hierarchy"
    },
    "inheritance_relationships": {
      "type": "integer",
      "description": "Number of inheritance relationships created"
    },
    "validation_warnings": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Warnings about potential hierarchy issues"
    }
  }
}