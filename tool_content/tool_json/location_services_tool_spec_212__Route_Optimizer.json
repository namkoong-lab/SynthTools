{
  "tool_name": "Route Optimizer",
  "tool_description": "Solves multi-waypoint routing optimization problems using algorithms like genetic optimization, simulated annealing, or nearest neighbor with custom constraints.",
  "parameters": {
    "waypoint_coordinates": {
      "type": "array",
      "required": true,
      "description": "Array of waypoint coordinates in 'latitude,longitude' format",
      "items": {
        "type": "string"
      },
      "minItems": 3,
      "maxItems": 50
    },
    "distance_matrix": {
      "type": "array",
      "required": true,
      "description": "Flattened distance matrix as 'i:j:distance' strings",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 2500
    },
    "optimization_goal": {
      "type": "string",
      "required": false,
      "description": "Optimization objective: shortest_distance, shortest_time, or balanced",
      "default": "shortest_distance"
    },
    "algorithm": {
      "type": "string",
      "required": false,
      "description": "Optimization algorithm: genetic, simulated_annealing, or nearest_neighbor",
      "default": "genetic"
    },
    "start_waypoint_index": {
      "type": "integer",
      "required": false,
      "description": "Index of mandatory starting waypoint (0-based)",
      "default": 0
    },
    "end_waypoint_index": {
      "type": "integer",
      "required": false,
      "description": "Index of mandatory ending waypoint (0-based), -1 for return to start",
      "default": -1
    },
    "max_computation_time": {
      "type": "integer",
      "required": false,
      "description": "Maximum optimization time in seconds",
      "default": 30
    },
    "fixed_waypoints": {
      "type": "array",
      "required": false,
      "description": "Array of waypoint indices that must maintain their relative order",
      "items": {
        "type": "integer"
      },
      "default": "None"
    },
    "time_windows": {
      "type": "array",
      "required": false,
      "description": "Time windows as 'waypoint_index:start_time:end_time' strings",
      "items": {
        "type": "string"
      },
      "default": "None"
    },
    "vehicle_capacity": {
      "type": "number",
      "required": false,
      "description": "Vehicle capacity constraint for delivery scenarios",
      "default": "None"
    },
    "waypoint_demands": {
      "type": "array",
      "required": false,
      "description": "Demand/load at each waypoint for capacity planning",
      "items": {
        "type": "number"
      },
      "default": "None"
    }
  },
  "error_messages": [
    "Insufficient waypoints: Minimum 3 waypoints required for optimization.",
    "Waypoint limit exceeded: Maximum 50 waypoints supported.",
    "Invalid distance matrix: Matrix must contain distances for all waypoint pairs.",
    "Invalid optimization goal: Use shortest_distance, shortest_time, or balanced.",
    "Invalid algorithm: Use genetic, simulated_annealing, or nearest_neighbor.",
    "Invalid waypoint indices: Start and end waypoint indices must be within valid range.",
    "Capacity constraint violation: Total demand exceeds vehicle capacity.",
    "Time window conflict: Waypoint time windows create unsolvable constraints.",
    "Matrix dimension mismatch: Distance matrix size doesn't match number of waypoints."
  ],
  "usage": "Provide waypoint coordinates and distance matrix with optimization parameters. Returns optimal waypoint order and route metrics.",
  "output_details": {
    "optimized_order": {
      "type": "array",
      "items": {
        "type": "integer"
      },
      "description": "Array of waypoint indices in optimal visit order"
    },
    "total_distance": {
      "type": "number",
      "description": "Total distance of optimized route"
    },
    "total_time": {
      "type": "number",
      "description": "Total estimated travel time in minutes"
    },
    "optimization_quality": {
      "type": "string",
      "description": "Quality assessment of optimization result"
    },
    "algorithm_used": {
      "type": "string",
      "description": "Optimization algorithm that was applied"
    },
    "computation_time": {
      "type": "number",
      "description": "Time spent on optimization in seconds"
    }
  }
}