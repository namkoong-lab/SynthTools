{
  "tool_name": "Commit Author",
  "tool_description": "Creates a Git commit with staged changes, including commit message, author information, and optional signing and tagging.",
  "parameters": {
    "repository_path": {
      "type": "string",
      "required": true,
      "description": "Path to the Git repository"
    },
    "commit_message": {
      "type": "string",
      "required": true,
      "description": "Commit message describing the changes"
    },
    "author_name": {
      "type": "string",
      "required": false,
      "description": "Author name for this commit",
      "default": "None"
    },
    "author_email": {
      "type": "string",
      "required": false,
      "description": "Author email for this commit",
      "default": "None"
    },
    "allow_empty": {
      "type": "boolean",
      "required": false,
      "description": "Whether to allow commits with no staged changes",
      "default": false
    }
  },
  "error_messages": [
    "Repository not found: No Git repository exists at the specified path.",
    "No staged changes: No files are staged for commit. Stage files first or use allow_empty=true.",
    "Invalid commit message: Commit message cannot be empty or contain only whitespace.",
    "Invalid email format: Author email must be in valid email format if provided.",
    "Repository not configured: Git user name and email must be configured globally or provided as parameters."
  ],
  "usage": "Provide repository_path and commit_message. Optionally specify author_name, author_email, and allow_empty. Ensure files are staged before committing unless allow_empty is true.",
  "output_details": {
    "commit_hash": {
      "type": "string",
      "description": "SHA hash of the created commit"
    },
    "commit_message": {
      "type": "string",
      "description": "The commit message used"
    },
    "files_committed": {
      "type": "integer",
      "description": "Number of files included in the commit"
    },
    "author": {
      "type": "string",
      "description": "Author name and email used for the commit"
    },
    "timestamp": {
      "type": "string",
      "description": "Timestamp when the commit was created",
      "format": "date-time"
    }
  }
}