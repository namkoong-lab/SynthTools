{
  "tool_name": "Conflict Resolver",
  "tool_description": "Resolves Git merge conflicts by accepting changes from specific sources, applying custom resolutions, or marking conflicts as resolved.",
  "parameters": {
    "repository_path": {
      "type": "string",
      "required": true,
      "description": "Path to the Git repository with conflicts"
    },
    "file_path": {
      "type": "string",
      "required": true,
      "description": "Path to the conflicted file to resolve"
    },
    "resolution_strategy": {
      "type": "string",
      "required": true,
      "description": "How to resolve: ours, theirs, manual, or custom"
    },
    "custom_content": {
      "type": "string",
      "required": false,
      "description": "Custom file content for manual resolution",
      "default": "None"
    },
    "mark_resolved": {
      "type": "boolean",
      "required": false,
      "description": "Whether to mark the file as resolved after applying changes",
      "default": true
    }
  },
  "error_messages": [
    "Repository not found: No Git repository exists at the specified path.",
    "File not in conflict: The specified file is not currently in a conflicted state.",
    "File not found: The specified file does not exist in the repository.",
    "Invalid resolution strategy: Strategy must be 'ours', 'theirs', 'manual', or 'custom'.",
    "Custom content required: When using 'custom' strategy, custom_content parameter must be provided.",
    "Resolution failed: Unable to apply the specified resolution due to file system errors."
  ],
  "usage": "Specify repository_path, file_path, and resolution_strategy. For 'custom' strategy, provide custom_content. The tool resolves the conflict and optionally marks it as resolved.",
  "output_details": {
    "file_resolved": {
      "type": "boolean",
      "description": "Whether the conflict was successfully resolved"
    },
    "resolution_applied": {
      "type": "string",
      "description": "The resolution strategy that was applied"
    },
    "marked_as_resolved": {
      "type": "boolean",
      "description": "Whether the file was marked as resolved in Git"
    },
    "remaining_conflicts": {
      "type": "integer",
      "description": "Number of conflicts remaining in the repository"
    }
  }
}