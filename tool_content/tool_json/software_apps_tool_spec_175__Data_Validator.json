{
  "tool_name": "Data Validator",
  "tool_description": "Validates incoming data against predefined schemas with support for custom rules, type checking, and sanitization.",
  "parameters": {
    "data_fields": {
      "type": "array",
      "required": true,
      "description": "Field definitions in format 'name:type:required:constraints'",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 100
    },
    "validation_mode": {
      "type": "string",
      "required": false,
      "description": "Validation strictness: strict, lenient, custom",
      "default": "strict"
    },
    "sanitize_input": {
      "type": "boolean",
      "required": false,
      "description": "Enable input sanitization to prevent injection attacks",
      "default": true
    }
  },
  "error_messages": [
    "Invalid field format: Use 'name:type:required:constraints' format",
    "Invalid validation mode: Use one of [strict, lenient, custom]",
    "Empty field definitions: Provide at least one field definition",
    "Unsupported data type: Use supported types like string, integer, number, boolean, email, date"
  ],
  "usage": "Define data_fields with proper formatting including type and constraints. Set validation_mode and sanitize_input as needed.",
  "output_details": {
    "validation_schema": {
      "type": "string",
      "description": "Generated validation schema code"
    },
    "rules_summary": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Summary of all validation rules"
    },
    "sanitization_rules": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Applied sanitization rules"
    }
  }
}