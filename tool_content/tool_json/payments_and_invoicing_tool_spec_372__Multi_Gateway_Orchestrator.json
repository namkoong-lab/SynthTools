{
  "tool_name": "Multi Gateway Orchestrator",
  "tool_description": "Coordinates payment processing across multiple gateways with intelligent routing, load balancing, and real-time failover management for high-availability payment processing.",
  "parameters": {
    "primary_gateway": {
      "type": "string",
      "required": true,
      "description": "Primary gateway for transaction processing"
    },
    "fallback_gateways": {
      "type": "array",
      "required": true,
      "description": "Ordered list of fallback gateways",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 5
    },
    "transaction_payload": {
      "type": "string",
      "required": true,
      "description": "Standardized transaction data as JSON string"
    },
    "timeout_seconds": {
      "type": "integer",
      "required": false,
      "description": "Maximum timeout per gateway attempt",
      "default": 30
    },
    "max_retry_attempts": {
      "type": "integer",
      "required": false,
      "description": "Maximum retry attempts across all gateways",
      "default": 3
    },
    "enable_load_balancing": {
      "type": "boolean",
      "required": false,
      "description": "Enable intelligent load balancing",
      "default": false
    },
    "parallel_processing": {
      "type": "boolean",
      "required": false,
      "description": "Enable parallel processing for speed",
      "default": false
    }
  },
  "error_messages": [
    "No available gateways: All specified gateways are unavailable or failed validation.",
    "Invalid transaction payload: transaction_payload must be valid JSON format.",
    "Timeout too short: timeout_seconds must be at least 5 seconds.",
    "Retry limit exceeded: max_retry_attempts must be between 1 and 10.",
    "Primary gateway unavailable: Specified primary_gateway is not responding.",
    "All gateways failed: No gateway could successfully process the transaction."
  ],
  "usage": "Provide primary gateway, fallback options, and transaction data to orchestrate multi-gateway payment processing. Enable load_balancing for high-volume scenarios and parallel_processing for speed optimization. Set appropriate timeout and retry limits based on transaction requirements.",
  "output_details": {
    "final_result": {
      "type": "string",
      "description": "Final transaction result: success, failed, timeout"
    },
    "successful_gateway": {
      "type": "string",
      "description": "Gateway that successfully processed the transaction"
    },
    "attempts_made": {
      "type": "integer",
      "description": "Total number of gateway attempts made"
    },
    "total_processing_time": {
      "type": "integer",
      "description": "Total processing time in milliseconds"
    },
    "gateway_responses": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Responses from each gateway attempted"
    },
    "failover_triggered": {
      "type": "boolean",
      "description": "Whether failover to backup gateways was triggered"
    }
  }
}