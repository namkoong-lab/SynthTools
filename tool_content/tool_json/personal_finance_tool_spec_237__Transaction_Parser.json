{
  "tool_name": "Transaction Parser",
  "tool_description": "Parses raw transaction data from various sources (bank statements, receipts, manual entry) and converts them into standardized transaction records with consistent formatting.",
  "parameters": {
    "raw_data": {
      "type": "string",
      "required": true,
      "description": "Raw transaction data in text format from bank statements, CSV exports, or manual input"
    },
    "data_source": {
      "type": "string",
      "required": true,
      "description": "Source type of the data: bank_statement, csv_file, manual_entry, receipt_scan"
    },
    "date_format": {
      "type": "string",
      "required": false,
      "description": "Expected date format in the raw data (e.g., MM/DD/YYYY, DD-MM-YYYY)",
      "default": "MM/DD/YYYY"
    }
  },
  "error_messages": [
    "Invalid data source: Use one of [bank_statement, csv_file, manual_entry, receipt_scan].",
    "Unparseable transaction data: Ensure the raw data contains recognizable transaction information including dates, amounts, and descriptions.",
    "Invalid date format: Provide a valid date format string or use the default MM/DD/YYYY format."
  ],
  "usage": "Provide raw transaction data as a string along with the source type. Optionally specify the date format if different from the default. The tool will return structured transaction records.",
  "output_details": {
    "parsed_transactions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of parsed transaction records in standardized format"
    },
    "parse_count": {
      "type": "integer",
      "description": "Number of transactions successfully parsed"
    },
    "failed_entries": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of raw data entries that could not be parsed"
    }
  }
}