{
  "tool_name": "Product Data Validator",
  "tool_description": "Validates product data against predefined schemas and business rules, ensuring data quality and completeness before processing.",
  "parameters": {
    "product_data": {
      "type": "array",
      "required": true,
      "description": "Array of product attribute values to validate",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 50
    },
    "validation_schema": {
      "type": "string",
      "required": true,
      "description": "Schema type to validate against: basic, detailed, or premium"
    },
    "strict_mode": {
      "type": "boolean",
      "required": false,
      "description": "Enable strict validation with no tolerance for missing optional fields",
      "default": false
    }
  },
  "error_messages": [
    "Invalid schema type: Use one of [basic, detailed, premium]",
    "Missing required fields: Ensure all mandatory product attributes are provided",
    "Data format violation: Check that all values match expected data types and constraints"
  ],
  "usage": "Provide product_data array with all product attributes, specify validation_schema level, and optionally enable strict_mode for comprehensive validation.",
  "output_details": {
    "validation_status": {
      "type": "string",
      "description": "Overall validation result: passed, failed, or warning"
    },
    "error_count": {
      "type": "integer",
      "description": "Number of validation errors found"
    },
    "validated_fields": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of successfully validated field names"
    },
    "error_details": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Detailed error messages for failed validations"
    }
  }
}