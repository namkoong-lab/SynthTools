{
  "tool_name": "Dependency Resolver",
  "tool_description": "Analyzes task dependencies and determines optimal execution order to ensure cleaning tasks are performed in logical sequence for maximum efficiency.",
  "parameters": {
    "task_list": {
      "type": "array",
      "required": true,
      "description": "List of task IDs to analyze for dependencies",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "maxItems": 50
    },
    "room_locations": {
      "type": "array",
      "required": true,
      "description": "Room locations corresponding to each task",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "maxItems": 50
    },
    "task_types": {
      "type": "array",
      "required": true,
      "description": "Task types for dependency analysis",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "maxItems": 50
    },
    "include_room_grouping": {
      "type": "boolean",
      "required": false,
      "description": "Whether to group tasks by room for efficiency",
      "default": true
    },
    "respect_prerequisites": {
      "type": "boolean",
      "required": false,
      "description": "Whether to enforce prerequisite task ordering",
      "default": true
    }
  },
  "error_messages": [
    "Insufficient tasks: Provide at least 2 tasks for dependency analysis.",
    "Array length mismatch: task_list, room_locations, and task_types must have equal lengths.",
    "Invalid task references: All task IDs must exist in the system.",
    "Circular dependencies detected: Cannot resolve dependencies due to circular references.",
    "Too many tasks: Maximum 50 tasks can be analyzed at once."
  ],
  "usage": "Provide task_list, room_locations, and task_types arrays of equal length. Optionally set include_room_grouping and respect_prerequisites. Returns optimized execution order.",
  "output_details": {
    "execution_order": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Task IDs in recommended execution order"
    },
    "dependency_groups": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Groups of tasks that can be done together"
    },
    "efficiency_score": {
      "type": "integer",
      "description": "Efficiency score from 0 to 100 for the ordering"
    },
    "ordering_rationale": {
      "type": "string",
      "description": "Explanation of the dependency resolution logic used"
    }
  }
}