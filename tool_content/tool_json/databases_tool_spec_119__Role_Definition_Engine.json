{
  "tool_name": "Role Definition Engine",
  "tool_description": "Defines database roles, establishes role hierarchies, and manages role inheritance relationships for access control.",
  "parameters": {
    "role_name": {
      "type": "string",
      "required": true,
      "description": "Unique name for the database role"
    },
    "description": {
      "type": "string",
      "required": true,
      "description": "Description of the role's purpose and scope"
    },
    "parent_roles": {
      "type": "array",
      "required": false,
      "description": "List of parent roles this role inherits from",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "privilege_level": {
      "type": "string",
      "required": true,
      "description": "Base privilege level: read_only, read_write, admin, super_admin"
    },
    "database_scope": {
      "type": "array",
      "required": false,
      "description": "Databases this role applies to",
      "items": {
        "type": "string"
      },
      "default": [
        "all"
      ]
    },
    "is_system_role": {
      "type": "boolean",
      "required": false,
      "description": "Whether this is a system-defined role",
      "default": false
    }
  },
  "error_messages": [
    "Role name already exists: Choose a unique role name",
    "Invalid privilege level: Use one of [read_only, read_write, admin, super_admin]",
    "Circular inheritance detected: Parent roles create a circular dependency",
    "Parent role not found: One or more specified parent roles do not exist",
    "Cannot modify system role: System roles cannot be altered",
    "Invalid database scope: Specified databases do not exist"
  ],
  "usage": "Provide role_name, description, and privilege_level. Optionally specify parent_roles for inheritance, database_scope for limited scope, and is_system_role for system roles.",
  "output_details": {
    "role_id": {
      "type": "string",
      "description": "Unique identifier for the created role"
    },
    "effective_permissions": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of all effective permissions including inherited ones"
    },
    "hierarchy_level": {
      "type": "integer",
      "description": "Role's level in the hierarchy tree"
    },
    "status": {
      "type": "string",
      "description": "Role creation status"
    }
  }
}