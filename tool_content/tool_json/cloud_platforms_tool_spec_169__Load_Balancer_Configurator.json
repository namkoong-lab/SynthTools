{
  "tool_name": "Load Balancer Configurator",
  "tool_description": "Configures load balancers and ingress controllers for distributing traffic across containerized services with SSL/TLS termination.",
  "parameters": {
    "cluster_endpoint": {
      "type": "string",
      "required": true,
      "description": "Kubernetes cluster API endpoint"
    },
    "kubeconfig": {
      "type": "string",
      "required": true,
      "description": "Base64 encoded kubeconfig for cluster authentication"
    },
    "service_name": {
      "type": "string",
      "required": true,
      "description": "Target service name for load balancing"
    },
    "namespace": {
      "type": "string",
      "required": false,
      "description": "Kubernetes namespace of the service",
      "default": "default"
    },
    "load_balancer_type": {
      "type": "string",
      "required": true,
      "description": "Type of load balancer: nginx, traefik, or cloud_lb"
    },
    "domain_name": {
      "type": "string",
      "required": false,
      "description": "Domain name for ingress routing",
      "default": null
    },
    "enable_ssl": {
      "type": "boolean",
      "required": false,
      "description": "Enable SSL/TLS termination",
      "default": true
    },
    "ssl_cert_path": {
      "type": "string",
      "required": false,
      "description": "Path to SSL certificate file",
      "default": null
    }
  },
  "error_messages": [
    "Cluster connection failed: Verify cluster_endpoint and kubeconfig are valid",
    "Service not found: Ensure service_name exists in the specified namespace",
    "Invalid load balancer type: Use one of [nginx, traefik, cloud_lb]",
    "SSL certificate not found: Verify ssl_cert_path exists and is readable",
    "Invalid domain name: Provide valid DNS domain name format",
    "Load balancer deployment failed: Check cluster permissions and resources",
    "Ingress creation failed: Verify ingress controller is installed"
  ],
  "usage": "Provide cluster_endpoint, kubeconfig, service_name, and load_balancer_type. Configure SSL and domain settings as needed. Tool sets up load balancing and ingress routing.",
  "output_details": {
    "load_balancer_ip": {
      "type": "string",
      "description": "External IP address of the load balancer"
    },
    "ingress_name": {
      "type": "string",
      "description": "Name of the created ingress resource"
    },
    "ssl_enabled": {
      "type": "boolean",
      "description": "Whether SSL/TLS is configured"
    },
    "external_url": {
      "type": "string",
      "description": "External URL to access the service"
    }
  }
}