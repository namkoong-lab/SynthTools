{
  "tool_name": "Data Type Compatibility Checker",
  "tool_description": "Analyzes column data types for compatibility issues, migration concerns, and standardization opportunities across database platforms.",
  "parameters": {
    "column_metadata": {
      "type": "array",
      "required": true,
      "items": {
        "type": "string"
      },
      "description": "Column metadata including data types and constraints"
    },
    "target_database_type": {
      "type": "string",
      "required": false,
      "default": "generic",
      "description": "Target database platform for compatibility checking: mysql, postgresql, sqlserver, oracle, generic"
    }
  },
  "error_messages": [
    "Invalid column metadata: Unable to parse column information. Ensure proper formatting.",
    "Unsupported database type: Use one of [mysql, postgresql, sqlserver, oracle, generic].",
    "Empty metadata: Column metadata array cannot be empty.",
    "Data type parsing error: Unable to extract data type information from column metadata."
  ],
  "usage": "Provide column metadata and optionally specify target database type for compatibility analysis. Returns data type analysis and compatibility recommendations.",
  "output_details": {
    "compatible_types": {
      "type": "integer",
      "description": "Number of data types that are fully compatible"
    },
    "incompatible_types": {
      "type": "integer",
      "description": "Number of data types with compatibility issues"
    },
    "type_recommendations": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Recommendations for resolving data type compatibility issues"
    },
    "migration_warnings": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Warnings about potential data loss or conversion issues"
    }
  }
}