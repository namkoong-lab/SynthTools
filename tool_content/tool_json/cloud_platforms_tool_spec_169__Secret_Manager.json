{
  "tool_name": "Secret Manager",
  "tool_description": "Creates and manages Kubernetes secrets for storing sensitive data like passwords, API keys, and certificates with encryption at rest.",
  "parameters": {
    "cluster_endpoint": {
      "type": "string",
      "required": true,
      "description": "Kubernetes cluster API endpoint"
    },
    "kubeconfig": {
      "type": "string",
      "required": true,
      "description": "Base64 encoded kubeconfig for cluster authentication"
    },
    "secret_name": {
      "type": "string",
      "required": true,
      "description": "Name for the secret resource"
    },
    "namespace": {
      "type": "string",
      "required": false,
      "description": "Kubernetes namespace for the secret",
      "default": "default"
    },
    "secret_type": {
      "type": "string",
      "required": false,
      "description": "Type of secret: generic, tls, docker-registry",
      "default": "generic"
    },
    "data_pairs": {
      "type": "array",
      "required": true,
      "description": "Key-value pairs for secret data as 'key=value'",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 50
    }
  },
  "error_messages": [
    "Cluster connection failed: Verify cluster_endpoint and kubeconfig are valid",
    "Invalid secret name: Use valid Kubernetes resource naming conventions",
    "Invalid secret type: Use one of [generic, tls, docker-registry]",
    "Invalid data format: Use 'key=value' format for data_pairs",
    "Secret already exists: Choose a different secret_name or update existing",
    "Namespace not found: Ensure target namespace exists",
    "Data too large: Secret data size exceeds Kubernetes limits (1MB)"
  ],
  "usage": "Provide cluster_endpoint, kubeconfig, secret_name, and data_pairs. Specify secret_type for special types. Tool creates encrypted Kubernetes secret resource.",
  "output_details": {
    "secret_name": {
      "type": "string",
      "description": "Name of the created secret"
    },
    "namespace": {
      "type": "string",
      "description": "Namespace containing the secret"
    },
    "secret_type": {
      "type": "string",
      "description": "Type of the created secret"
    },
    "data_keys": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of data keys stored in the secret"
    }
  }
}