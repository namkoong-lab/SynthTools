{
  "tool_name": "Constraint_Validator",
  "tool_description": "Validates integrity constraints including primary keys, foreign keys, check constraints, and business rules.",
  "parameters": {
    "entity_id": {
      "type": "string",
      "required": true,
      "description": "Entity identifier to validate constraints for"
    },
    "constraint_types": {
      "type": "array",
      "required": true,
      "description": "Types of constraints to validate",
      "items": {
        "type": "string"
      },
      "minItems": 1,
      "maxItems": 10
    },
    "check_constraints": {
      "type": "array",
      "required": false,
      "description": "Custom check constraints to validate",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "business_rules": {
      "type": "array",
      "required": false,
      "description": "Business rules to validate against the entity",
      "items": {
        "type": "string"
      },
      "default": []
    },
    "strict_mode": {
      "type": "boolean",
      "required": false,
      "description": "Whether to use strict validation rules",
      "default": false
    }
  },
  "error_messages": [
    "Entity not found: The specified entity_id does not exist in the schema.",
    "Invalid constraint type: Constraint types must be from [primary_key, foreign_key, unique, not_null, check, business_rule].",
    "Malformed check constraint: One or more check constraints have invalid syntax.",
    "Constraint conflict: Multiple constraints conflict with each other.",
    "Missing required constraint: Entity is missing required primary key constraint."
  ],
  "usage": "Provide entity_id and constraint_types to validate. Optionally include check_constraints, business_rules, and set strict_mode for comprehensive validation.",
  "output_details": {
    "entity_id": {
      "type": "string",
      "description": "Entity identifier that was validated"
    },
    "validation_passed": {
      "type": "boolean",
      "description": "Whether all constraint validations passed"
    },
    "constraint_results": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Detailed results for each constraint type validated"
    },
    "violations": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "List of constraint violations found"
    },
    "recommendations": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Recommendations to fix constraint violations"
    }
  }
}