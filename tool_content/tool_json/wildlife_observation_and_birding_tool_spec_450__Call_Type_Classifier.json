{
  "tool_name": "Call Type Classifier",
  "tool_description": "Classifies bird vocalizations into types such as song, alarm, contact, or territorial calls using acoustic features and machine learning models.",
  "parameters": {
    "feature_vector": {
      "type": "array",
      "required": true,
      "description": "Combined acoustic feature vector",
      "items": {
        "type": "number"
      },
      "minItems": 5,
      "maxItems": 100
    },
    "temporal_features": {
      "type": "array",
      "required": false,
      "description": "Temporal pattern features",
      "items": {
        "type": "number"
      },
      "default": null
    },
    "model_type": {
      "type": "string",
      "required": false,
      "description": "Classification model: neural_network, random_forest, svm",
      "default": "neural_network"
    },
    "confidence_threshold": {
      "type": "number",
      "required": false,
      "description": "Minimum confidence for classification (0-1)",
      "default": 0.7
    }
  },
  "error_messages": [
    "Classification failed: Unable to classify the call type. Check that feature_vector contains valid numeric data.",
    "Invalid feature vector: feature_vector must contain between 5 and 100 numeric values.",
    "Unknown model type: model_type must be 'neural_network', 'random_forest', or 'svm'.",
    "Confidence threshold error: confidence_threshold must be between 0 and 1."
  ],
  "usage": "Provide feature_vector from spectral analysis and optionally include temporal_features. Configure model_type and confidence_threshold as needed.",
  "output_details": {
    "call_type": {
      "type": "string",
      "description": "Classified call type (song, alarm, contact, territorial, other)"
    },
    "confidence": {
      "type": "number",
      "description": "Classification confidence score (0-1)"
    },
    "type_probabilities": {
      "type": "array",
      "items": {
        "type": "number"
      },
      "description": "Probability scores for each call type"
    },
    "model_used": {
      "type": "string",
      "description": "Classification model that was used"
    }
  }
}