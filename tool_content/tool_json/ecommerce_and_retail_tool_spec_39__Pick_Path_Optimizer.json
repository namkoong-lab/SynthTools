{
  "tool_name": "Pick Path Optimizer",
  "tool_description": "Optimizes picking routes through warehouse locations to minimize travel time and distance while respecting operational constraints.",
  "parameters": {
    "location_list": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "required": true,
      "description": "List of warehouse locations to visit",
      "minItems": 2,
      "maxItems": 200
    },
    "start_location": {
      "type": "string",
      "required": true,
      "description": "Starting location for the pick route"
    },
    "end_location": {
      "type": "string",
      "required": false,
      "description": "Ending location for the pick route",
      "default": null
    },
    "optimization_method": {
      "type": "string",
      "required": false,
      "description": "Route optimization algorithm: nearest_neighbor, genetic, simulated_annealing",
      "default": "nearest_neighbor"
    },
    "max_route_time": {
      "type": "integer",
      "required": false,
      "description": "Maximum route time in minutes",
      "default": 120
    },
    "avoid_congestion": {
      "type": "boolean",
      "required": false,
      "description": "Avoid high-traffic warehouse areas",
      "default": true
    },
    "vehicle_type": {
      "type": "string",
      "required": false,
      "description": "Picker vehicle type: cart, forklift, walker",
      "default": "cart"
    }
  },
  "error_messages": [
    "Invalid location: One or more locations do not exist in warehouse layout.",
    "Route too long: Optimized route exceeds max_route_time constraint.",
    "Invalid optimization method: Use one of [nearest_neighbor, genetic, simulated_annealing].",
    "Start location required: Must specify a valid starting location.",
    "Invalid vehicle type: Use one of [cart, forklift, walker].",
    "Insufficient locations: Need at least 2 locations to optimize a route."
  ],
  "usage": "Provide location_list and start_location for basic optimization. Set optimization_method, max_route_time, avoid_congestion, and vehicle_type to customize the route planning algorithm.",
  "output_details": {
    "optimized_route": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Ordered list of locations in optimized sequence"
    },
    "estimated_time": {
      "type": "integer",
      "description": "Estimated total route time in minutes"
    },
    "total_distance": {
      "type": "number",
      "description": "Total route distance in meters"
    },
    "optimization_score": {
      "type": "number",
      "description": "Route efficiency score (0-100)"
    }
  }
}