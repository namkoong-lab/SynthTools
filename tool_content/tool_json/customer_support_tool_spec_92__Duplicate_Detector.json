{
  "tool_name": "Duplicate Detector",
  "tool_description": "Identifies and removes duplicate or near-duplicate feedback entries from combined datasets using text similarity algorithms.",
  "parameters": {
    "feedback_records": {
      "type": "array",
      "required": true,
      "description": "Array of feedback text records to check for duplicates",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "maxItems": 1000
    },
    "similarity_threshold": {
      "type": "number",
      "required": false,
      "description": "Similarity threshold for duplicate detection (0.1-1.0)",
      "default": 0.85
    },
    "record_ids": {
      "type": "array",
      "required": false,
      "description": "Array of unique identifiers for each feedback record",
      "items": {
        "type": "string"
      },
      "default": "None"
    },
    "detection_method": {
      "type": "string",
      "required": false,
      "description": "Method for similarity calculation (exact, fuzzy, semantic)",
      "default": "fuzzy"
    },
    "preserve_original": {
      "type": "boolean",
      "required": false,
      "description": "Whether to keep the first occurrence of duplicates",
      "default": true
    }
  },
  "error_messages": [
    "Insufficient records: Need at least 2 feedback records for duplicate detection",
    "Invalid similarity threshold: Value must be between 0.1 and 1.0",
    "Invalid detection method: Must be one of [exact, fuzzy, semantic]",
    "Mismatched array lengths: record_ids array must match feedback_records length if provided",
    "Detection failed: Unable to process records due to format or encoding issues"
  ],
  "usage": "Provide feedback records array and optionally adjust similarity threshold and detection method. The tool returns deduplicated records with duplicate information.",
  "output_details": {
    "unique_records": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array of unique feedback records after duplicate removal"
    },
    "duplicate_count": {
      "type": "integer",
      "description": "Number of duplicate records identified and removed"
    },
    "duplicate_groups": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Array indicating which records were duplicates of each other"
    },
    "deduplication_summary": {
      "type": "string",
      "description": "Summary of the deduplication process and results"
    }
  }
}