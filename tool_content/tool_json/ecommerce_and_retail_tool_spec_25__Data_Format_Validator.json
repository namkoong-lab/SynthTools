{
  "tool_name": "Data Format Validator",
  "tool_description": "Validates incoming supplier data against predefined schemas and data quality rules to ensure compatibility with the catalog system.",
  "parameters": {
    "data_source": {
      "type": "string",
      "required": true,
      "description": "Source identifier for the data to validate"
    },
    "expected_format": {
      "type": "string",
      "required": true,
      "description": "Expected data format: json, xml, csv, tsv"
    },
    "validation_level": {
      "type": "string",
      "required": false,
      "description": "Validation strictness: strict, moderate, lenient",
      "default": "moderate"
    }
  },
  "error_messages": [
    "Invalid data_source: Data source identifier must be provided and exist in the system.",
    "Unsupported expected_format: Use one of [json, xml, csv, tsv].",
    "Schema validation failed: Data structure does not match expected format requirements.",
    "Invalid validation_level: Use one of [strict, moderate, lenient].",
    "Data corruption detected: Input data contains unreadable or corrupted sections."
  ],
  "usage": "Provide data_source and expected_format. Optionally set validation_level for different strictness levels. Returns detailed validation results with specific error locations.",
  "output_details": {
    "validation_status": {
      "type": "string",
      "description": "Overall validation result: passed, failed, warning"
    },
    "error_count": {
      "type": "integer",
      "description": "Total number of validation errors found"
    },
    "warning_count": {
      "type": "integer",
      "description": "Total number of validation warnings found"
    },
    "validated_records": {
      "type": "integer",
      "description": "Number of records that passed validation"
    },
    "validation_report": {
      "type": "string",
      "description": "Detailed validation report with specific issues"
    }
  }
}