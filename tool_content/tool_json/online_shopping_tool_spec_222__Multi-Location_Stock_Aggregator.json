{
  "tool_name": "Multi-Location Stock Aggregator",
  "tool_description": "Aggregates and consolidates stock information across multiple warehouses and locations, providing unified inventory visibility and cross-location analytics.",
  "parameters": {
    "location_ids": {
      "type": "array",
      "required": true,
      "description": "List of warehouse/location IDs to aggregate",
      "items": {
        "type": "string"
      },
      "minItems": 2,
      "maxItems": 50
    },
    "aggregation_level": {
      "type": "string",
      "required": false,
      "description": "Level of aggregation: product, category, warehouse, total",
      "default": "product"
    },
    "include_in_transit": {
      "type": "boolean",
      "required": false,
      "description": "Include inventory in transit between locations",
      "default": false
    }
  },
  "error_messages": [
    "Invalid location ID: One or more location IDs do not exist.",
    "Minimum locations required: At least 2 locations must be specified for aggregation.",
    "Location limit exceeded: Maximum 50 locations can be aggregated at once.",
    "Invalid aggregation level: Use one of [product, category, warehouse, total].",
    "Data inconsistency: Stock data timestamps vary significantly across locations."
  ],
  "usage": "Provide location_ids array with at least 2 warehouse identifiers. Choose aggregation_level for desired summary detail. Enable include_in_transit to account for goods in movement.",
  "output_details": {
    "total_locations": {
      "type": "integer",
      "description": "Number of locations aggregated"
    },
    "aggregated_stock": {
      "type": "integer",
      "description": "Total stock across all locations"
    },
    "location_breakdown": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Stock summary by location"
    },
    "cross_dock_opportunities": {
      "type": "integer",
      "description": "Number of potential cross-dock transfers identified"
    },
    "data_freshness": {
      "type": "string",
      "description": "Oldest data timestamp in aggregation"
    }
  }
}