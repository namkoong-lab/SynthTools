{
    "tool_name": "cancel_reservation",
    "tool_description": "Cancel a flight reservation based on reservation ID and reason for cancellation.",
    "parameters": {
        "user_id": {
            "type": "string",
            "description": "The ID of the user who made the reservation.",
            "required": true
        },
        "reservation_id": {
            "type": "string",
            "description": "The ID of the reservation to cancel.",
            "required": true
        },
        "reason": {
            "type": "string",
            "description": "Reason for cancellation (e.g., 'schedule change', 'airline canceled', 'other').",
            "required": true
        }
    },
    "error_messages": [],
    "usage": "Cancel a flight reservation based on reservation ID and reason for cancellation.",
    "meta_data": "```yaml\nsystem_state:\n  current_datetime: \"2024-07-14 06:00:00\"  # Global system time used for cancellation policy calculations\n  next_reservation_id: 5  # Global counter for generating new reservation IDs (res_5, res_6, etc.)\n\nentities:\n  users:\n    user1:\n      user_name: \"Eve\"\n      password: \"password123\"\n      cash_balance: 2000.0\n      bank_balance: 50000.0\n      membership_level: \"regular\"\n    user2:\n      user_name: \"Frank\"\n      password: \"password456\"\n      cash_balance: 8000.0\n      bank_balance: 8000.0\n      membership_level: \"silver\"\n    user3:\n      user_name: \"Grace\"\n      password: \"password789\"\n      cash_balance: 1000.0\n      bank_balance: 5000.0\n      membership_level: \"gold\"\n\ninitial_data:\n  flights:\n    CA1234:\n      flight_no: \"CA1234\"\n      origin: \"Beijing\"\n      destination: \"Shanghai\"\n      depart_time: \"2024-07-15 08:00:00\"\n      arrival_time: \"2024-07-15 10:30:00\"\n      status: \"available\"\n      seats_available: 5\n      economy_price: 1200\n      business_price: 3000\n    MU5678:\n      flight_no: \"MU5678\"\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n      depart_time: \"2024-07-16 09:00:00\"\n      arrival_time: \"2024-07-16 11:30:00\"\n      status: \"available\"\n      seats_available: 3\n      economy_price: 1900\n      business_price: 3000\n    CZ4321:\n      flight_no: \"CZ4321\"\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n      depart_time: \"2024-07-16 20:00:00\"\n      arrival_time: \"2024-07-16 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 2500\n      business_price: 4000\n    CZ4352:\n      flight_no: \"CZ4352\"\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n      depart_time: \"2024-07-17 20:00:00\"\n      arrival_time: \"2024-07-17 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1600\n      business_price: 2500\n    MU3561:\n      flight_no: \"MU3561\"\n      origin: \"Beijing\"\n      destination: \"Nanjing\"\n      depart_time: \"2024-07-18 08:00:00\"\n      arrival_time: \"2024-07-18 10:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 4000\n    MU1566:\n      flight_no: \"MU1566\"\n      origin: \"Beijing\"\n      destination: \"Nanjing\"\n      depart_time: \"2024-07-18 20:00:00\"\n      arrival_time: \"2024-07-18 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 4000\n    CZ1765_1:\n      flight_no: \"CZ1765\"\n      origin: \"Nanjing\"\n      destination: \"Shenzhen\"\n      depart_time: \"2024-07-17 20:30:00\"\n      arrival_time: \"2024-07-17 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    CZ1765_2:\n      flight_no: \"CZ1765\"\n      origin: \"Nanjing\"\n      destination: \"Shenzhen\"\n      depart_time: \"2024-07-18 12:30:00\"\n      arrival_time: \"2024-07-18 15:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    MH1765:\n      flight_no: \"MH1765\"\n      origin: \"Xiamen\"\n      destination: \"Chengdu\"\n      depart_time: \"2024-07-17 12:30:00\"\n      arrival_time: \"2024-07-17 15:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    MH2616_1:\n      flight_no: \"MH2616\"\n      origin: \"Chengdu\"\n      destination: \"Xiamen\"\n      depart_time: \"2024-07-18 18:30:00\"\n      arrival_time: \"2024-07-18 21:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    MH2616_2:\n      flight_no: \"MH2616\"\n      origin: \"Chengdu\"\n      destination: \"Fuzhou\"\n      depart_time: \"2024-07-16 18:30:00\"\n      arrival_time: \"2024-07-16 21:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n  \n  reservations:\n    res_1:\n      reservation_id: \"res_1\"\n      user_id: \"user1\"\n      flight_no: \"CA1234\"\n      payment_method: \"bank\"\n      cabin: \"Economy Class\"\n      baggage: 1\n      origin: \"Beijing\"\n      destination: \"Shanghai\"\n    res_2:\n      reservation_id: \"res_2\"\n      user_id: \"user1\"\n      flight_no: \"MU5678\"\n      payment_method: \"bank\"\n      cabin: \"Business Class\"\n      baggage: 1\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n    res_3:\n      reservation_id: \"res_3\"\n      user_id: \"user2\"\n      flight_no: \"MH1765\"\n      payment_method: \"bank\"\n      cabin: \"Business Class\"\n      baggage: 1\n      origin: \"Xiamen\"\n      destination: \"Chengdu\"\n    res_4:\n      reservation_id: \"res_4\"\n      user_id: \"user2\"\n      flight_no: \"MU2616\"\n      payment_method: \"bank\"\n      cabin: \"Business Class\"\n      baggage: 1\n      origin: \"Chengdu\"\n      destination: \"Xiamen\"\n\ntool_mapping:\n  get_flight_details:\n    api_method: \"get_flight_details\"\n    parameter_mapping:\n      origin: \"origin\"\n      destination: \"destination\"\n    validation_chain:\n      - \"Step 1: Check if origin parameter provided (optional)\"\n      - \"Step 2: Check if destination parameter provided (optional)\"\n      - \"Step 3: Filter flights by origin if provided\"\n      - \"Step 4: Filter flights by destination if provided\"\n      - \"Step 5: Return filtered flight list or no-match message\"\n    supported_parameter_ranges:\n      origin:\n        valid_values: [\"Beijing\", \"Shanghai\", \"Nanjing\", \"Shenzhen\", \"Xiamen\", \"Chengdu\", \"Fuzhou\"]\n        constraints: \"Case-sensitive exact string match\"\n        edge_cases: \"Invalid cities return empty results, null/missing treated as no filter\"\n      destination:\n        valid_values: [\"Beijing\", \"Shanghai\", \"Nanjing\", \"Shenzhen\", \"Xiamen\", \"Chengdu\", \"Fuzhou\"]\n        constraints: \"Case-sensitive exact string match\"\n        edge_cases: \"Invalid cities return empty results, null/missing treated as no filter\"\n\n  get_user_details:\n    api_method: \"get_user_details\"\n    parameter_mapping:\n      user_id: \"user_id\"\n      password: \"password\"\n    validation_chain:\n      - \"Step 1: Check if user_id exists in users dictionary\"\n      - \"Step 2: Validate password matches stored password\"\n      - \"Step 3: Return user details (excluding password) or error\"\n    supported_parameter_ranges:\n      user_id:\n        valid_values: [\"user1\", \"user2\", \"user3\"]\n        constraints: \"Must exist in users dictionary\"\n        edge_cases: \"Invalid user_id returns authentication error\"\n      password:\n        valid_values: [\"password123\", \"password456\", \"password789\"]\n        constraints: \"Must match exact password for corresponding user\"\n        edge_cases: \"Wrong password returns authentication error\"\n\n  get_reservation_details:\n    api_method: \"get_reservation_details\"\n    parameter_mapping:\n      reservation_id: \"reservation_id\"\n      user_id: \"user_id\"\n    validation_chain:\n      - \"Step 1: Check if reservation_id OR user_id provided (mutually exclusive)\"\n      - \"Step 2: Filter reservations by provided parameter\"\n      - \"Step 3: Enrich with flight information for each reservation\"\n      - \"Step 4: Return detailed reservation list\"\n    supported_parameter_ranges:\n      reservation_id:\n        valid_values: [\"res_1\", \"res_2\", \"res_3\", \"res_4\", \"res_5+\"]\n        constraints: \"Must exist in reservations list\"\n        edge_cases: \"Invalid reservation_id returns empty list\"\n      user_id:\n        valid_values: [\"user1\", \"user2\", \"user3\"]\n        constraints: \"Must exist in users dictionary\"\n        edge_cases: \"Invalid user_id returns empty list\"\n\nfunction_behaviors:\n  get_flight_details:\n    prerequisites:\n      - \"No authentication required\"\n      - \"System must be initialized with flights data\"\n    validation_rules:\n      - \"Origin and destination parameters are optional\"\n      - \"Parameters are case-sensitive string matches\"\n      - \"Both parameters can be provided simultaneously\"\n    success_conditions:\n      - \"Returns list of flight dictionaries matching criteria\"\n      - \"Each flight contains all fields: flight_no, origin, destination, depart_time, arrival_time, status, seats_available, economy_price, business_price\"\n    error_conditions:\n      - condition: \"No flights match the criteria\"\n        message: \"There are no direct flights that meet the criteria.\"\n        tool_impact: \"Returns string message instead of list\"\n    state_changes:\n      - \"No state changes - read-only operation\"\n    parameter_handling:\n      - \"Missing origin: No filtering by origin applied\"\n      - \"Missing destination: No filtering by destination applied\"\n      - \"Both missing: Returns all available flights\"\n\n  get_user_details:\n    prerequisites:\n      - \"User must exist in users dictionary\"\n      - \"Correct password must be provided\"\n    validation_rules:\n      - \"user_id must match existing user key\"\n      - \"password must match stored password exactly\"\n    success_conditions:\n      - \"Returns user dictionary excluding password field\"\n      - \"Contains: user_name, cash_balance, bank_balance, membership_level\"\n    error_conditions:\n      - condition: \"Invalid user_id or wrong password\"\n        message: \"Incorrect username or password.\"\n        tool_impact: \"Returns error dictionary with status and message\"\n    state_changes:\n      - \"No state changes - read-only operation\"\n    parameter_handling:\n      - \"Missing user_id: Treated as non-existent user\"\n      - \"Missing password: Treated as wrong password\"\n\n  get_reservation_details:\n    prerequisites:\n      - \"Either reservation_id OR user_id must be provided\"\n      - \"System must have reservations and flights data initialized\"\n    validation_rules:\n      - \"Exactly one of reservation_id or user_id should be provided\"\n      - \"If both provided, reservation_id takes precedence\"\n    success_conditions:\n      - \"Returns list of reservation dictionaries with embedded flight_info\"\n      - \"Each reservation includes all original fields plus flight_info object\"\n    error_conditions:\n      - condition: \"Neither reservation_id nor user_id provided\"\n        message: \"Please provide a valid reservation ID or user ID\"\n        tool_impact: \"Returns error dictionary with status and message\"\n    state_changes:\n      - \"No state changes - read-only operation\"\n    parameter_handling:\n      - \"Invalid reservation_id: Returns empty list\"\n      - \"Invalid user_id: Returns empty list\"\n      - \"Missing flight data for reservation: flight_info set to null\"\n\n  reserve_flight:\n    prerequisites:\n      - \"Valid user authentication required\"\n      - \"Flight must exist and be available\"\n      - \"Sufficient seats available (seats_available > 0)\"\n    validation_rules:\n      - \"User credentials must be valid\"\n      - \"Flight must have status 'available'\"\n      - \"Payment method must be 'cash' or 'bank'\"\n      - \"Cabin must be 'Economy Class' or 'Business Class'\"\n      - \"Sufficient balance for total cost (flight + baggage fees)\"\n    success_conditions:\n      - \"User balance updated (decreased by total cost)\"\n      - \"Flight seats_available decremented by 1\"\n      - \"New reservation created and added to reservations\"\n      - \"Reservation ID generated (res_X format)\"\n    error_conditions:\n      - condition: \"Authentication failure\"\n        message: \"Authentication failed. Please check your user ID and password.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Insufficient cash balance\"\n        message: \"Your cash balance is insufficient. Please consider using another payment method.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Insufficient bank balance\"\n        message: \"Your bank balance is insufficient. Please consider using another payment method.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Invalid payment method\"\n        message: \"Invalid payment method\"\n        tool_impact: \"Returns error string\"\n    state_changes:\n      - \"User cash_balance or bank_balance decreased by total cost\"\n      - \"Flight seats_available decreased by 1\"\n      - \"New reservation added to reservations list\"\n      - \"next_reservation_id incremented\"\n    parameter_handling:\n      - \"baggage_count defaults to 0 if not provided\"\n      - \"Baggage fees calculated based on membership level and cabin class\"\n\n  cancel_reservation:\n    prerequisites:\n      - \"Valid user_id and reservation must exist\"\n      - \"Reservation must belong to the specified user\"\n      - \"Flight must not have already departed\"\n    validation_rules:\n      - \"user_id must exist in users\"\n      - \"reservation_id must exist and belong to user\"\n      - \"Flight departure time must be after current system time\"\n    success_conditions:\n      - \"Reservation cancelled and removed from reservations\"\n      - \"Appropriate refund processed based on cancellation policy\"\n      - \"User cash_balance increased by refund amount\"\n    error_conditions:\n      - condition: \"Invalid user ID\"\n        message: \"Invalid user ID.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Invalid reservation or not owned by user\"\n        message: \"Invalid reservation ID or it does not belong to the user.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Flight already departed\"\n        message: \"The flight segment has been used and cannot be canceled.\"\n        tool_impact: \"Returns error string\"\n    state_changes:\n      - \"User cash_balance increased by refund amount\"\n      - \"Flight seats_available increased by 1\"\n      - \"Reservation removed from reservations list\"\n    parameter_handling:\n      - \"Cancellation policy based on reason and time until departure\"\n      - \"Airline cancellation: Full refund\"\n      - \">24 hours: Full refund\"\n      - \"<24 hours: 90% refund (10% cancellation fee)\"\n\nconstraints:\n  data_formats:\n    - \"Datetime format: 'YYYY-MM-DD HH:MM:SS'\"\n    - \"Currency amounts: Float values representing yuan\"\n    - \"Flight numbers: String format (e.g., 'CA1234')\"\n    - \"Reservation IDs: Format 'res_X' where X is sequential number\"\n    - \"User IDs: Format 'userX' where X is sequential number\"\n  \n  capacity_limits:\n    - \"Flight seats_available: Non-negative integer\"\n    - \"User balances: Non-negative float values\"\n    - \"Baggage count: Non-negative integer\"\n    - \"Maximum 50 yuan per additional baggage piece\"\n  \n  business_rules:\n    - \"Free baggage allowances: regular(Economy:1,Business:2), silver(Economy:2,Business:3), gold(Economy:3,Business:3)\"\n    - \"Cancellation policy: Airline cancellation=full refund, >24h=full refund, <24h=10% fee\"\n    - \"Payment methods: Only 'cash' and 'bank' accepted\"\n    - \"Cabin classes: Only 'Economy Class' and 'Business Class'\"\n    - \"System time fixed at 2024-07-14 06:00:00 for cancellation calculations\"\n  \n  validation_patterns:\n    - \"City names: Exact case-sensitive string matching\"\n    - \"Password authentication: Exact string matching required\"\n    - \"Flight availability: status must equal 'available'\"\n    - \"Balance validation: Must have sufficient funds before transaction\"\n  \n  state_scope_clarifications:\n    - \"User balances: Per-user persistent state\"\n    - \"Flight availability: Global shared state\"\n    - \"Reservations: Global list with user ownership\"\n    - \"System time: Global fixed timestamp\"\n    - \"Reservation ID counter: Global incrementing sequence\"\n\ncomprehensive_coverage:\n  edge_cases:\n    - scenario: \"Tool called with non-existent user_id\"\n      api_response: \"Authentication error or empty results depending on function\"\n    - scenario: \"Tool called with non-existent flight_no\"\n      api_response: \"Flight not found or empty results\"\n    - scenario: \"Tool called with insufficient balance\"\n      api_response: \"Insufficient balance error with specific payment method mentioned\"\n    - scenario: \"Tool called with invalid city names\"\n      api_response: \"Empty flight list or 'no direct flights' message\"\n    - scenario: \"Tool called with mixed case city names\"\n      api_response: \"Empty results due to case-sensitive matching\"\n    - scenario: \"Tool called with null/empty parameters\"\n      api_response: \"Treated as missing parameters, applies default behavior\"\n    - scenario: \"Reserve flight with 0 seats available\"\n      api_response: \"Flight not found in available flights filter\"\n    - scenario: \"Cancel reservation for departed flight\"\n      api_response: \"Flight segment has been used and cannot be canceled\"\n    - scenario: \"Multiple reservations with same flight number\"\n      api_response: \"Each handled independently based on reservation_id\"\n\n  parameter_exhaustiveness:\n    entity_reference_coverage:\n      - \"Valid user IDs: user1, user2, user3\"\n      - \"Valid flight numbers: All flight_no values in flights data\"\n      - \"Valid reservation IDs: res_1, res_2, res_3, res_4, plus future res_X\"\n      - \"Valid cities: Beijing, Shanghai, Nanjing, Shenzhen, Xiamen, Chengdu, Fuzhou\"\n      - \"Invalid references return appropriate errors or empty results\"\n      - \"Case sensitivity strictly enforced for all string matching\"\n    \n    parameter_interactions:\n      - \"origin + destination filters applied cumulatively\"\n      - \"user_id + password must both be valid for authentication\"\n      - \"reservation_id takes precedence over user_id in get_reservation_details\"\n      - \"payment_method + balance must align for successful transactions\"\n      - \"membership_level + cabin_class determine baggage allowance\"\n      - \"current_time + flight_time determine cancellation policy\"\n\n  state_dependencies:\n    - \"Flight reservation depends on seats_available > 0\"\n    - \"User authentication depends on exact password match\"\n    - \"Cancellation policy depends on system_time vs flight departure_time\"\n    - \"Baggage fees depend on membership_level and cabin class\"\n    - \"Balance updates depend on payment_method selection\"\n    - \"Reservation creation depends on successful payment processing\"\n    - \"Flight availability filtering depends on status='available'\"\n    - \"Transfer flight finding depends on arrival_time < departure_time constraint\"\n```\nSYSTEM STATE\n{\n  \"datetime_format\": \"%Y-%m-%d %H:%M:%S\",\n  \"currency\": \"yuan\",\n  \"baggage_fee_per_extra_bag\": 50,\n  \"cancel_current_time_default\": \"2024-07-14 06:00:00\",\n  \"payment_methods_allowed\": [\"cash\", \"bank\"],\n  \"cabin_classes_allowed\": [\"Economy Class\", \"Business Class\"],\n  \"membership_levels_allowed\": [\"regular\", \"silver\", \"gold\"],\n  \"flight_status_values\": [\"available\"],\n  \"free_baggage_allowance\": {\n    \"regular\": {\"Economy Class\": 1, \"Business Class\": 2},\n    \"silver\": {\"Economy Class\": 2, \"Business Class\": 3},\n    \"gold\":   {\"Economy Class\": 3, \"Business Class\": 3}\n  }\n}\n\n\nUSERS/ENTITIES\n// User entity\nUser := {\n  \"user_name\": str,\n  \"password\": str,\n  \"cash_balance\": float,\n  \"bank_balance\": float,\n  \"membership_level\": \"regular\" | \"silver\" | \"gold\"\n}\n\n// Flight entity\nFlight := {\n  \"flight_no\": str,                // not unique across dates\n  \"origin\": str,\n  \"destination\": str,\n  \"depart_time\": str (%datetime_format),\n  \"arrival_time\": str (%datetime_format),\n  \"status\": \"available\",\n  \"seats_available\": int,\n  \"economy_price\": int,\n  \"business_price\": int\n}\n\n// Reservation entity\nReservation := {\n  \"reservation_id\": str,           // format: \"res_<n>\"\n  \"user_id\": str,                  // key in users\n  \"flight_no\": str,                // first matching flight by flight_no is used in lookups\n  \"payment_method\": \"cash\" | \"bank\",\n  \"cabin\": \"Economy Class\" | \"Business Class\",\n  \"baggage\": int,\n  // optional in initial data only:\n  \"origin\"?: str,\n  \"destination\"?: str\n}\n\n\nINITIAL DATA\n{\n  \"users\": {\n    \"user1\": {\"user_name\": \"Eve\",   \"password\": \"password123\", \"cash_balance\": 2000.0, \"bank_balance\": 50000.0, \"membership_level\": \"regular\"},\n    \"user2\": {\"user_name\": \"Frank\", \"password\": \"password456\", \"cash_balance\": 8000.0, \"bank_balance\": 8000.0,  \"membership_level\": \"silver\"},\n    \"user3\": {\"user_name\": \"Grace\", \"password\": \"password789\", \"cash_balance\": 1000.0, \"bank_balance\": 5000.0,  \"membership_level\": \"gold\"}\n  },\n\n  \"flights\": [\n    {\"flight_no\":\"CA1234\",\"origin\":\"Beijing\",\"destination\":\"Shanghai\",\"depart_time\":\"2024-07-15 08:00:00\",\"arrival_time\":\"2024-07-15 10:30:00\",\"status\":\"available\",\"seats_available\":5,\"economy_price\":1200,\"business_price\":3000},\n    {\"flight_no\":\"MU5678\",\"origin\":\"Shanghai\",\"destination\":\"Beijing\",\"depart_time\":\"2024-07-16 09:00:00\",\"arrival_time\":\"2024-07-16 11:30:00\",\"status\":\"available\",\"seats_available\":3,\"economy_price\":1900,\"business_price\":3000},\n    {\"flight_no\":\"CZ4321\",\"origin\":\"Shanghai\",\"destination\":\"Beijing\",\"depart_time\":\"2024-07-16 20:00:00\",\"arrival_time\":\"2024-07-16 22:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":2500,\"business_price\":4000},\n    {\"flight_no\":\"CZ4352\",\"origin\":\"Shanghai\",\"destination\":\"Beijing\",\"depart_time\":\"2024-07-17 20:00:00\",\"arrival_time\":\"2024-07-17 22:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1600,\"business_price\":2500},\n    {\"flight_no\":\"MU3561\",\"origin\":\"Beijing\",\"destination\":\"Nanjing\",\"depart_time\":\"2024-07-18 08:00:00\",\"arrival_time\":\"2024-07-18 10:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":4000},\n    {\"flight_no\":\"MU1566\",\"origin\":\"Beijing\",\"destination\":\"Nanjing\",\"depart_time\":\"2024-07-18 20:00:00\",\"arrival_time\":\"2024-07-18 22:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":4000},\n    {\"flight_no\":\"CZ1765\",\"origin\":\"Nanjing\",\"destination\":\"Shenzhen\",\"depart_time\":\"2024-07-17 20:30:00\",\"arrival_time\":\"2024-07-17 22:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":2500},\n    {\"flight_no\":\"CZ1765\",\"origin\":\"Nanjing\",\"destination\":\"Shenzhen\",\"depart_time\":\"2024-07-18 12:30:00\",\"arrival_time\":\"2024-07-18 15:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":2500},\n    {\"flight_no\":\"MH1765\",\"origin\":\"Xiamen\",\"destination\":\"Chengdu\",\"depart_time\":\"2024-07-17 12:30:00\",\"arrival_time\":\"2024-07-17 15:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":2500},\n    {\"flight_no\":\"MH2616\",\"origin\":\"Chengdu\",\"destination\":\"Xiamen\",\"depart_time\":\"2024-07-18 18:30:00\",\"arrival_time\":\"2024-07-18 21:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":2500},\n    {\"flight_no\":\"MH2616\",\"origin\":\"Chengdu\",\"destination\":\"Fuzhou\",\"depart_time\":\"2024-07-16 18:30:00\",\"arrival_time\":\"2024-07-16 21:00:00\",\"status\":\"available\",\"seats_available\":8,\"economy_price\":1500,\"business_price\":2500}\n  ],\n\n  \"reservations\": [\n    {\"reservation_id\":\"res_1\",\"user_id\":\"user1\",\"flight_no\":\"CA1234\",\"payment_method\":\"bank\",\"cabin\":\"Economy Class\",\"baggage\":1,\"origin\":\"Beijing\",\"destination\":\"Shanghai\"},\n    {\"reservation_id\":\"res_2\",\"user_id\":\"user1\",\"flight_no\":\"MU5678\",\"payment_method\":\"bank\",\"cabin\":\"Business Class\",\"baggage\":1,\"origin\":\"Shanghai\",\"destination\":\"Beijing\"},\n    {\"reservation_id\":\"res_3\",\"user_id\":\"user2\",\"flight_no\":\"MH1765\",\"payment_method\":\"bank\",\"cabin\":\"Business Class\",\"baggage\":1,\"origin\":\"Xiamen\",\"destination\":\"Chengdu\"},\n    {\"reservation_id\":\"res_4\",\"user_id\":\"user2\",\"flight_no\":\"MU2616\",\"payment_method\":\"bank\",\"cabin\":\"Business Class\",\"baggage\":1,\"origin\":\"Chengdu\",\"destination\":\"Xiamen\"} // note: \"MU2616\" does not exist in flights (only \"MH2616\")\n  ]\n}\n\n\nCONSTRAINTS\n- String matching:\n  - City names and IDs are exact match, case-sensitive.\n  - Reason for free cancellation must equal \"The airline has canceled the flight.\" exactly.\n\n- Time rules:\n  - Transfers: first_leg.arrival_time < second_leg.depart_time (strict).\n  - Cancellation: if cancel_current_time_default > flight.depart_time \u2192 \"The flight segment has been used and cannot be canceled.\"\n  - Cancellation windows:\n    - >24h before departure \u2192 full refund.\n    - \u226424h before departure \u2192 10% cancel fee deducted.\n\n- Pricing:\n  - Total reservation cost = cabin_price + baggage_fee.\n  - Cabin price: if cabin == \"Economy Class\" \u2192 economy_price else \u2192 business_price.\n  - Baggage fee = max(baggage_count - free_allowance, 0) * 50.\n\n- Balances and payment:\n  - Payment methods accepted: \"cash\" or \"bank\".\n  - Reservation payment debits selected balance; insufficient funds \u2192 error message and no booking.\n  - Refunds always credit user.cash_balance (not bank), regardless of original payment method.\n  - update_balance(user, method, amount):\n    - method == \"cash\": user.cash_balance += amount if result \u2265 0 else fail.\n    - method == \"bank\": user.bank_balance += amount if result \u2265 0 else fail.\n    - other methods: no-op, returns True (implicit).\n\n- Seats:\n  - reserve_flight decrements flight.seats_available by 1; does not validate >0 beforehand; can go negative.\n  - modify_flight does not adjust seats.\n  - cancel_reservation does not restore seats or remove reservation.\n\n- Flight identity and lookup:\n  - flight_no is not unique across dates; selection uses the first match in self.flights.\n  - Reservations store only flight_no (no date), causing ambiguity when flight_no repeats.\n  - get_reservation_details attaches flight_info via first matching flight_no.\n  - Any reservation with non-existent flight_no (e.g., \"MU2616\") will yield flight_info: null and cancellation will fail with \"Invalid flight information.\"\n\n- Reservations:\n  - New reservations omit origin/destination fields.\n  - reservation_id generation: \"res_{len(reservations)+1}\" \u2192 monotonic only by current list length; cancellations do not remove entries, preventing reuse.\n\n- Authentication:\n  - authenticate_user(user_id, password):\n    - success \u2192 full user object (includes password field).\n    - failure \u2192 {\"status\":\"error\",\"message\":\"Incorrect username or password.\"}.\n  - reserve_flight does not correctly stop on authentication failure; invalid credentials lead to undefined behavior (KeyError risk). Caller must ensure valid credentials.\n\n- Data formats:\n  - Datetimes are strings formatted per datetime_format.\n  - Currency values are numeric (int/float) in yuan.\n\n- Messages (exact strings):\n  - get_flight_details when none: \"There are no direct flights that meet the criteria.\"\n  - find_transfer_flights when none: \"No connecting flights that meet the criteria were found.\"\n  - get_user_details failure: {\"status\":\"error\",\"message\":\"Incorrect username or password.\"}\n  - get_reservation_details with no filter: {\"status\":\"error\",\"message\":\"Please provide a valid reservation ID or user ID\"}\n  - reserve_flight payment invalid: \"Invalid payment method\"\n  - reserve_flight insufficient balances:\n    - cash: \"Your cash balance is insufficient. Please consider using another payment method.\"\n    - bank: \"Your bank balance is insufficient. Please consider using another payment method.\"\n  - reserve_flight success: \"Booking successful. Reservation ID: res_<n>. Total cost: <amount> yuan (including baggage fees).\"\n  - modify_flight:\n    - reservation not found: \"Reservation not found or user ID does not match.\"\n    - flight not found: \"Flight information not found.\"\n    - user not found: \"User information not found.\"\n    - invalid new flight_no/origin-destination mismatch: \"Flight change failed: Invalid new flight number or destination does not match.\"\n    - cabin change with payment: \"Cabin change successful. Price difference paid: <amount>.\"\n    - cabin change with refund: \"Cabin change successful. Price difference refunded: <amount>.\"\n    - insufficient balance for cabin difference: \"Insufficient balance to pay the cabin price difference.\"\n    - baggage added with fee: \"Baggage has been added. Additional fee to be paid: <amount>.\"\n    - insufficient balance for baggage: \"Insufficient balance to pay the additional baggage fees.\"\n    - no changes applied: \"Modification completed with no additional fees.\"\n  - cancel_reservation:\n    - invalid user: \"Invalid user ID.\"\n    - invalid reservation: \"Invalid reservation ID or it does not belong to the user.\"\n    - invalid flight: \"Invalid flight information.\"\n    - used segment: \"The flight segment has been used and cannot be canceled.\"\n    - airline canceled: \"The flight has been canceled. Your reservation will be canceled free of charge, and <amount> yuan has been refunded.\"\n    - >24h: \"More than 24 hours before departure. Free cancellation successful, <amount> yuan has been refunded.\"\n    - \u226424h: \"Less than 24 hours before departure. A cancellation fee of <fee> yuan has been deducted, and <amount> yuan has been refunded.\"\n\n- Method specs (inputs \u2192 returns):\n  - get_flight_details(origin?: str, destination?: str) \u2192 list<FlightSubset> | str\n    - FlightSubset = {\"flight_no\",\"origin\",\"destination\",\"depart_time\",\"arrival_time\",\"status\",\"seats_available\",\"economy_price\",\"business_price\"}\n\n  - get_user_details(user_id: str, password: str) \u2192 UserSansPassword | {\"status\":\"error\",...}\n    - UserSansPassword = User without \"password\"\n\n  - get_reservation_details(reservation_id?: str, user_id?: str) \u2192 list<Reservation & {\"flight_info\": Flight|null}> | {\"status\":\"error\",...}\n\n  - authenticate_user(user_id: str, password: str) \u2192 User | {\"status\":\"error\",...}\n\n  - get_baggage_allowance(membership_level: str, cabin_class: str) \u2192 int\n\n  - find_transfer_flights(origin_city: str, transfer_city: str, destination_city: str) \u2192 list<{\"first_leg\": Flight, \"second_leg\": Flight}> | str\n\n  - calculate_baggage_fee(membership_level: str, cabin_class: str, baggage_count: int) \u2192 int\n\n  - update_balance(user: User, payment_method: \"cash\" | \"bank\" | other, amount: float) \u2192 bool\n    - side effects: mutates user balances\n\n  - reserve_flight(user_id: str, password: str, flight_no: str, cabin: str, payment_method: \"cash\"|\"bank\", baggage_count: int) \u2192 str\n    - side effects: debits balance, decrements seats_available, appends Reservation\n\n  - modify_flight(user_id: str, reservation_id: str, new_flight_no?: str, new_cabin?: str, add_baggage: int=0, new_payment_method?: str) \u2192 str\n    - side effects: updates reservation fields; debits/credits balance as needed\n    - note: price difference computed against original flight's prices even if flight_no changed\n\n  - cancel_reservation(user_id: str, reservation_id: str, reason: str) \u2192 str\n    - side effects: credits cash_balance via process_refund; reservation unchanged\n\n  - process_refund(user: User, amount: float) \u2192 None\n    - side effects: user.cash_balance += amount; prints message\n\n  - calculate_price_difference(flight: Flight, old_cabin: str, new_cabin: str) \u2192 int\n    - returns: flight[new_cabin_price] - flight[old_cabin_price]",
    "initial_config": {},
    "involved_classes": [
        "Travel"
    ]
}