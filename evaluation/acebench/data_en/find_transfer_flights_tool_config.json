{
    "tool_name": "find_transfer_flights",
    "tool_description": "Find transfer flights from an origin city to a destination city with a stopover in a transfer city, ensuring the first flight arrives before the second flight departs.",
    "parameters": {
        "origin_city": {
            "type": "string",
            "description": "The starting city for the flight.",
            "required": true
        },
        "transfer_city": {
            "type": "string",
            "description": "The city where the transfer takes place.",
            "required": true
        },
        "destination_city": {
            "type": "string",
            "description": "The final destination city for the flight.",
            "required": true
        }
    },
    "error_messages": [],
    "usage": "Find transfer flights from an origin city to a destination city with a stopover in a transfer city, ensuring the first flight arrives before the second flight departs.",
    "meta_data": "```yaml\nsystem_state:\n  current_datetime: \"2024-07-14 06:00:00\"  # Global system time used for cancellation policy calculations\n  next_reservation_id: 5  # Global counter for generating new reservation IDs (res_5, res_6, etc.)\n\nentities:\n  users:\n    user1:\n      user_name: \"Eve\"\n      password: \"password123\"\n      cash_balance: 2000.0\n      bank_balance: 50000.0\n      membership_level: \"regular\"\n    user2:\n      user_name: \"Frank\"\n      password: \"password456\"\n      cash_balance: 8000.0\n      bank_balance: 8000.0\n      membership_level: \"silver\"\n    user3:\n      user_name: \"Grace\"\n      password: \"password789\"\n      cash_balance: 1000.0\n      bank_balance: 5000.0\n      membership_level: \"gold\"\n\ninitial_data:\n  flights:\n    CA1234:\n      flight_no: \"CA1234\"\n      origin: \"Beijing\"\n      destination: \"Shanghai\"\n      depart_time: \"2024-07-15 08:00:00\"\n      arrival_time: \"2024-07-15 10:30:00\"\n      status: \"available\"\n      seats_available: 5\n      economy_price: 1200\n      business_price: 3000\n    MU5678:\n      flight_no: \"MU5678\"\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n      depart_time: \"2024-07-16 09:00:00\"\n      arrival_time: \"2024-07-16 11:30:00\"\n      status: \"available\"\n      seats_available: 3\n      economy_price: 1900\n      business_price: 3000\n    CZ4321:\n      flight_no: \"CZ4321\"\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n      depart_time: \"2024-07-16 20:00:00\"\n      arrival_time: \"2024-07-16 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 2500\n      business_price: 4000\n    CZ4352:\n      flight_no: \"CZ4352\"\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n      depart_time: \"2024-07-17 20:00:00\"\n      arrival_time: \"2024-07-17 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1600\n      business_price: 2500\n    MU3561:\n      flight_no: \"MU3561\"\n      origin: \"Beijing\"\n      destination: \"Nanjing\"\n      depart_time: \"2024-07-18 08:00:00\"\n      arrival_time: \"2024-07-18 10:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 4000\n    MU1566:\n      flight_no: \"MU1566\"\n      origin: \"Beijing\"\n      destination: \"Nanjing\"\n      depart_time: \"2024-07-18 20:00:00\"\n      arrival_time: \"2024-07-18 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 4000\n    CZ1765_1:\n      flight_no: \"CZ1765\"\n      origin: \"Nanjing\"\n      destination: \"Shenzhen\"\n      depart_time: \"2024-07-17 20:30:00\"\n      arrival_time: \"2024-07-17 22:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    CZ1765_2:\n      flight_no: \"CZ1765\"\n      origin: \"Nanjing\"\n      destination: \"Shenzhen\"\n      depart_time: \"2024-07-18 12:30:00\"\n      arrival_time: \"2024-07-18 15:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    MH1765:\n      flight_no: \"MH1765\"\n      origin: \"Xiamen\"\n      destination: \"Chengdu\"\n      depart_time: \"2024-07-17 12:30:00\"\n      arrival_time: \"2024-07-17 15:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    MH2616_1:\n      flight_no: \"MH2616\"\n      origin: \"Chengdu\"\n      destination: \"Xiamen\"\n      depart_time: \"2024-07-18 18:30:00\"\n      arrival_time: \"2024-07-18 21:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n    MH2616_2:\n      flight_no: \"MH2616\"\n      origin: \"Chengdu\"\n      destination: \"Fuzhou\"\n      depart_time: \"2024-07-16 18:30:00\"\n      arrival_time: \"2024-07-16 21:00:00\"\n      status: \"available\"\n      seats_available: 8\n      economy_price: 1500\n      business_price: 2500\n  \n  reservations:\n    res_1:\n      reservation_id: \"res_1\"\n      user_id: \"user1\"\n      flight_no: \"CA1234\"\n      payment_method: \"bank\"\n      cabin: \"Economy Class\"\n      baggage: 1\n      origin: \"Beijing\"\n      destination: \"Shanghai\"\n    res_2:\n      reservation_id: \"res_2\"\n      user_id: \"user1\"\n      flight_no: \"MU5678\"\n      payment_method: \"bank\"\n      cabin: \"Business Class\"\n      baggage: 1\n      origin: \"Shanghai\"\n      destination: \"Beijing\"\n    res_3:\n      reservation_id: \"res_3\"\n      user_id: \"user2\"\n      flight_no: \"MH1765\"\n      payment_method: \"bank\"\n      cabin: \"Business Class\"\n      baggage: 1\n      origin: \"Xiamen\"\n      destination: \"Chengdu\"\n    res_4:\n      reservation_id: \"res_4\"\n      user_id: \"user2\"\n      flight_no: \"MU2616\"\n      payment_method: \"bank\"\n      cabin: \"Business Class\"\n      baggage: 1\n      origin: \"Chengdu\"\n      destination: \"Xiamen\"\n\ntool_mapping:\n  get_flight_details:\n    api_method: \"get_flight_details\"\n    parameter_mapping:\n      origin: \"origin\"\n      destination: \"destination\"\n    validation_chain:\n      - \"Step 1: Check if origin parameter provided (optional)\"\n      - \"Step 2: Check if destination parameter provided (optional)\"\n      - \"Step 3: Filter flights by origin if provided\"\n      - \"Step 4: Filter flights by destination if provided\"\n      - \"Step 5: Return filtered flight list or no-match message\"\n    supported_parameter_ranges:\n      origin:\n        valid_values: [\"Beijing\", \"Shanghai\", \"Nanjing\", \"Shenzhen\", \"Xiamen\", \"Chengdu\", \"Fuzhou\"]\n        constraints: \"Case-sensitive exact string match\"\n        edge_cases: \"Invalid cities return empty results, null/missing treated as no filter\"\n      destination:\n        valid_values: [\"Beijing\", \"Shanghai\", \"Nanjing\", \"Shenzhen\", \"Xiamen\", \"Chengdu\", \"Fuzhou\"]\n        constraints: \"Case-sensitive exact string match\"\n        edge_cases: \"Invalid cities return empty results, null/missing treated as no filter\"\n\n  get_user_details:\n    api_method: \"get_user_details\"\n    parameter_mapping:\n      user_id: \"user_id\"\n      password: \"password\"\n    validation_chain:\n      - \"Step 1: Check if user_id exists in users dictionary\"\n      - \"Step 2: Validate password matches stored password\"\n      - \"Step 3: Return user details (excluding password) or error\"\n    supported_parameter_ranges:\n      user_id:\n        valid_values: [\"user1\", \"user2\", \"user3\"]\n        constraints: \"Must exist in users dictionary\"\n        edge_cases: \"Invalid user_id returns authentication error\"\n      password:\n        valid_values: [\"password123\", \"password456\", \"password789\"]\n        constraints: \"Must match exact password for corresponding user\"\n        edge_cases: \"Wrong password returns authentication error\"\n\n  get_reservation_details:\n    api_method: \"get_reservation_details\"\n    parameter_mapping:\n      reservation_id: \"reservation_id\"\n      user_id: \"user_id\"\n    validation_chain:\n      - \"Step 1: Check if reservation_id OR user_id provided (mutually exclusive)\"\n      - \"Step 2: Filter reservations by provided parameter\"\n      - \"Step 3: Enrich with flight information for each reservation\"\n      - \"Step 4: Return detailed reservation list\"\n    supported_parameter_ranges:\n      reservation_id:\n        valid_values: [\"res_1\", \"res_2\", \"res_3\", \"res_4\", \"res_5+\"]\n        constraints: \"Must exist in reservations list\"\n        edge_cases: \"Invalid reservation_id returns empty list\"\n      user_id:\n        valid_values: [\"user1\", \"user2\", \"user3\"]\n        constraints: \"Must exist in users dictionary\"\n        edge_cases: \"Invalid user_id returns empty list\"\n\nfunction_behaviors:\n  get_flight_details:\n    prerequisites:\n      - \"No authentication required\"\n      - \"System must be initialized with flights data\"\n    validation_rules:\n      - \"Origin and destination parameters are optional\"\n      - \"Parameters are case-sensitive string matches\"\n      - \"Both parameters can be provided simultaneously\"\n    success_conditions:\n      - \"Returns list of flight dictionaries matching criteria\"\n      - \"Each flight contains all fields: flight_no, origin, destination, depart_time, arrival_time, status, seats_available, economy_price, business_price\"\n    error_conditions:\n      - condition: \"No flights match the criteria\"\n        message: \"There are no direct flights that meet the criteria.\"\n        tool_impact: \"Returns string message instead of list\"\n    state_changes:\n      - \"No state changes - read-only operation\"\n    parameter_handling:\n      - \"Missing origin: No filtering by origin applied\"\n      - \"Missing destination: No filtering by destination applied\"\n      - \"Both missing: Returns all available flights\"\n\n  get_user_details:\n    prerequisites:\n      - \"User must exist in users dictionary\"\n      - \"Correct password must be provided\"\n    validation_rules:\n      - \"user_id must match existing user key\"\n      - \"password must match stored password exactly\"\n    success_conditions:\n      - \"Returns user dictionary excluding password field\"\n      - \"Contains: user_name, cash_balance, bank_balance, membership_level\"\n    error_conditions:\n      - condition: \"Invalid user_id or wrong password\"\n        message: \"Incorrect username or password.\"\n        tool_impact: \"Returns error dictionary with status and message\"\n    state_changes:\n      - \"No state changes - read-only operation\"\n    parameter_handling:\n      - \"Missing user_id: Treated as non-existent user\"\n      - \"Missing password: Treated as wrong password\"\n\n  get_reservation_details:\n    prerequisites:\n      - \"Either reservation_id OR user_id must be provided\"\n      - \"System must have reservations and flights data initialized\"\n    validation_rules:\n      - \"Exactly one of reservation_id or user_id should be provided\"\n      - \"If both provided, reservation_id takes precedence\"\n    success_conditions:\n      - \"Returns list of reservation dictionaries with embedded flight_info\"\n      - \"Each reservation includes all original fields plus flight_info object\"\n    error_conditions:\n      - condition: \"Neither reservation_id nor user_id provided\"\n        message: \"Please provide a valid reservation ID or user ID\"\n        tool_impact: \"Returns error dictionary with status and message\"\n    state_changes:\n      - \"No state changes - read-only operation\"\n    parameter_handling:\n      - \"Invalid reservation_id: Returns empty list\"\n      - \"Invalid user_id: Returns empty list\"\n      - \"Missing flight data for reservation: flight_info set to null\"\n\n  reserve_flight:\n    prerequisites:\n      - \"Valid user authentication required\"\n      - \"Flight must exist and be available\"\n      - \"Sufficient seats available (seats_available > 0)\"\n    validation_rules:\n      - \"User credentials must be valid\"\n      - \"Flight must have status 'available'\"\n      - \"Payment method must be 'cash' or 'bank'\"\n      - \"Cabin must be 'Economy Class' or 'Business Class'\"\n      - \"Sufficient balance for total cost (flight + baggage fees)\"\n    success_conditions:\n      - \"User balance updated (decreased by total cost)\"\n      - \"Flight seats_available decremented by 1\"\n      - \"New reservation created and added to reservations\"\n      - \"Reservation ID generated (res_X format)\"\n    error_conditions:\n      - condition: \"Authentication failure\"\n        message: \"Authentication failed. Please check your user ID and password.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Insufficient cash balance\"\n        message: \"Your cash balance is insufficient. Please consider using another payment method.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Insufficient bank balance\"\n        message: \"Your bank balance is insufficient. Please consider using another payment method.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Invalid payment method\"\n        message: \"Invalid payment method\"\n        tool_impact: \"Returns error string\"\n    state_changes:\n      - \"User cash_balance or bank_balance decreased by total cost\"\n      - \"Flight seats_available decreased by 1\"\n      - \"New reservation added to reservations list\"\n      - \"next_reservation_id incremented\"\n    parameter_handling:\n      - \"baggage_count defaults to 0 if not provided\"\n      - \"Baggage fees calculated based on membership level and cabin class\"\n\n  cancel_reservation:\n    prerequisites:\n      - \"Valid user_id and reservation must exist\"\n      - \"Reservation must belong to the specified user\"\n      - \"Flight must not have already departed\"\n    validation_rules:\n      - \"user_id must exist in users\"\n      - \"reservation_id must exist and belong to user\"\n      - \"Flight departure time must be after current system time\"\n    success_conditions:\n      - \"Reservation cancelled and removed from reservations\"\n      - \"Appropriate refund processed based on cancellation policy\"\n      - \"User cash_balance increased by refund amount\"\n    error_conditions:\n      - condition: \"Invalid user ID\"\n        message: \"Invalid user ID.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Invalid reservation or not owned by user\"\n        message: \"Invalid reservation ID or it does not belong to the user.\"\n        tool_impact: \"Returns error string\"\n      - condition: \"Flight already departed\"\n        message: \"The flight segment has been used and cannot be canceled.\"\n        tool_impact: \"Returns error string\"\n    state_changes:\n      - \"User cash_balance increased by refund amount\"\n      - \"Flight seats_available increased by 1\"\n      - \"Reservation removed from reservations list\"\n    parameter_handling:\n      - \"Cancellation policy based on reason and time until departure\"\n      - \"Airline cancellation: Full refund\"\n      - \">24 hours: Full refund\"\n      - \"<24 hours: 90% refund (10% cancellation fee)\"\n\nconstraints:\n  data_formats:\n    - \"Datetime format: 'YYYY-MM-DD HH:MM:SS'\"\n    - \"Currency amounts: Float values representing yuan\"\n    - \"Flight numbers: String format (e.g., 'CA1234')\"\n    - \"Reservation IDs: Format 'res_X' where X is sequential number\"\n    - \"User IDs: Format 'userX' where X is sequential number\"\n  \n  capacity_limits:\n    - \"Flight seats_available: Non-negative integer\"\n    - \"User balances: Non-negative float values\"\n    - \"Baggage count: Non-negative integer\"\n    - \"Maximum 50 yuan per additional baggage piece\"\n  \n  business_rules:\n    - \"Free baggage allowances: regular(Economy:1,Business:2), silver(Economy:2,Business:3), gold(Economy:3,Business:3)\"\n    - \"Cancellation policy: Airline cancellation=full refund, >24h=full refund, <24h=10% fee\"\n    - \"Payment methods: Only 'cash' and 'bank' accepted\"\n    - \"Cabin classes: Only 'Economy Class' and 'Business Class'\"\n    - \"System time fixed at 2024-07-14 06:00:00 for cancellation calculations\"\n  \n  validation_patterns:\n    - \"City names: Exact case-sensitive string matching\"\n    - \"Password authentication: Exact string matching required\"\n    - \"Flight availability: status must equal 'available'\"\n    - \"Balance validation: Must have sufficient funds before transaction\"\n  \n  state_scope_clarifications:\n    - \"User balances: Per-user persistent state\"\n    - \"Flight availability: Global shared state\"\n    - \"Reservations: Global list with user ownership\"\n    - \"System time: Global fixed timestamp\"\n    - \"Reservation ID counter: Global incrementing sequence\"\n\ncomprehensive_coverage:\n  edge_cases:\n    - scenario: \"Tool called with non-existent user_id\"\n      api_response: \"Authentication error or empty results depending on function\"\n    - scenario: \"Tool called with non-existent flight_no\"\n      api_response: \"Flight not found or empty results\"\n    - scenario: \"Tool called with insufficient balance\"\n      api_response: \"Insufficient balance error with specific payment method mentioned\"\n    - scenario: \"Tool called with invalid city names\"\n      api_response: \"Empty flight list or 'no direct flights' message\"\n    - scenario: \"Tool called with mixed case city names\"\n      api_response: \"Empty results due to case-sensitive matching\"\n    - scenario: \"Tool called with null/empty parameters\"\n      api_response: \"Treated as missing parameters, applies default behavior\"\n    - scenario: \"Reserve flight with 0 seats available\"\n      api_response: \"Flight not found in available flights filter\"\n    - scenario: \"Cancel reservation for departed flight\"\n      api_response: \"Flight segment has been used and cannot be canceled\"\n    - scenario: \"Multiple reservations with same flight number\"\n      api_response: \"Each handled independently based on reservation_id\"\n\n  parameter_exhaustiveness:\n    entity_reference_coverage:\n      - \"Valid user IDs: user1, user2, user3\"\n      - \"Valid flight numbers: All flight_no values in flights data\"\n      - \"Valid reservation IDs: res_1, res_2, res_3, res_4, plus future res_X\"\n      - \"Valid cities: Beijing, Shanghai, Nanjing, Shenzhen, Xiamen, Chengdu, Fuzhou\"\n      - \"Invalid references return appropriate errors or empty results\"\n      - \"Case sensitivity strictly enforced for all string matching\"\n    \n    parameter_interactions:\n      - \"origin + destination filters applied cumulatively\"\n      - \"user_id + password must both be valid for authentication\"\n      - \"reservation_id takes precedence over user_id in get_reservation_details\"\n      - \"payment_method + balance must align for successful transactions\"\n      - \"membership_level + cabin_class determine baggage allowance\"\n      - \"current_time + flight_time determine cancellation policy\"\n\n  state_dependencies:\n    - \"Flight reservation depends on seats_available > 0\"\n    - \"User authentication depends on exact password match\"\n    - \"Cancellation policy depends on system_time vs flight departure_time\"\n    - \"Baggage fees depend on membership_level and cabin class\"\n    - \"Balance updates depend on payment_method selection\"\n    - \"Reservation creation depends on successful payment processing\"\n    - \"Flight availability filtering depends on status='available'\"\n    - \"Transfer flight finding depends on arrival_time < departure_time constraint\"\n```\nSYSTEM STATE\n{\n  \"date_format\": \"%Y-%m-%d %H:%M:%S\",\n  \"currency\": \"yuan\",\n  \"allowed_payment_methods\": [\"cash\", \"bank\"],\n  \"cabin_classes\": [\"Economy Class\", \"Business Class\"],\n  \"membership_levels\": [\"regular\", \"silver\", \"gold\"],\n  \"flight_status_values\": [\"available\"],\n  \"baggage_fee_per_extra_piece\": 50,\n  \"cancellation_fee_rate\": 0.1,\n  \"cancellation_current_time\": \"2024-07-14 06:00:00\",\n  \"reservation_id_format\": \"res_{n}\",\n  \"next_reservation_index\": 5\n}\n\nUSERS/ENTITIES\n{\n  \"users\": {\n    \"user1\": {\n      \"user_name\": \"Eve\",\n      \"password\": \"password123\",\n      \"cash_balance\": 2000.0,\n      \"bank_balance\": 50000.0,\n      \"membership_level\": \"regular\"\n    },\n    \"user2\": {\n      \"user_name\": \"Frank\",\n      \"password\": \"password456\",\n      \"cash_balance\": 8000.0,\n      \"bank_balance\": 8000.0,\n      \"membership_level\": \"silver\"\n    },\n    \"user3\": {\n      \"user_name\": \"Grace\",\n      \"password\": \"password789\",\n      \"cash_balance\": 1000.0,\n      \"bank_balance\": 5000.0,\n      \"membership_level\": \"gold\"\n    }\n  },\n  \"flights\": [\n    {\n      \"flight_no\": \"CA1234\",\n      \"origin\": \"Beijing\",\n      \"destination\": \"Shanghai\",\n      \"depart_time\": \"2024-07-15 08:00:00\",\n      \"arrival_time\": \"2024-07-15 10:30:00\",\n      \"status\": \"available\",\n      \"seats_available\": 5,\n      \"economy_price\": 1200,\n      \"business_price\": 3000\n    },\n    {\n      \"flight_no\": \"MU5678\",\n      \"origin\": \"Shanghai\",\n      \"destination\": \"Beijing\",\n      \"depart_time\": \"2024-07-16 09:00:00\",\n      \"arrival_time\": \"2024-07-16 11:30:00\",\n      \"status\": \"available\",\n      \"seats_available\": 3,\n      \"economy_price\": 1900,\n      \"business_price\": 3000\n    },\n    {\n      \"flight_no\": \"CZ4321\",\n      \"origin\": \"Shanghai\",\n      \"destination\": \"Beijing\",\n      \"depart_time\": \"2024-07-16 20:00:00\",\n      \"arrival_time\": \"2024-07-16 22:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 2500,\n      \"business_price\": 4000\n    },\n    {\n      \"flight_no\": \"CZ4352\",\n      \"origin\": \"Shanghai\",\n      \"destination\": \"Beijing\",\n      \"depart_time\": \"2024-07-17 20:00:00\",\n      \"arrival_time\": \"2024-07-17 22:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1600,\n      \"business_price\": 2500\n    },\n    {\n      \"flight_no\": \"MU3561\",\n      \"origin\": \"Beijing\",\n      \"destination\": \"Nanjing\",\n      \"depart_time\": \"2024-07-18 08:00:00\",\n      \"arrival_time\": \"2024-07-18 10:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 4000\n    },\n    {\n      \"flight_no\": \"MU1566\",\n      \"origin\": \"Beijing\",\n      \"destination\": \"Nanjing\",\n      \"depart_time\": \"2024-07-18 20:00:00\",\n      \"arrival_time\": \"2024-07-18 22:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 4000\n    },\n    {\n      \"flight_no\": \"CZ1765\",\n      \"origin\": \"Nanjing\",\n      \"destination\": \"Shenzhen\",\n      \"depart_time\": \"2024-07-17 20:30:00\",\n      \"arrival_time\": \"2024-07-17 22:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 2500\n    },\n    {\n      \"flight_no\": \"CZ1765\",\n      \"origin\": \"Nanjing\",\n      \"destination\": \"Shenzhen\",\n      \"depart_time\": \"2024-07-18 12:30:00\",\n      \"arrival_time\": \"2024-07-18 15:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 2500\n    },\n    {\n      \"flight_no\": \"MH1765\",\n      \"origin\": \"Xiamen\",\n      \"destination\": \"Chengdu\",\n      \"depart_time\": \"2024-07-17 12:30:00\",\n      \"arrival_time\": \"2024-07-17 15:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 2500\n    },\n    {\n      \"flight_no\": \"MH2616\",\n      \"origin\": \"Chengdu\",\n      \"destination\": \"Xiamen\",\n      \"depart_time\": \"2024-07-18 18:30:00\",\n      \"arrival_time\": \"2024-07-18 21:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 2500\n    },\n    {\n      \"flight_no\": \"MH2616\",\n      \"origin\": \"Chengdu\",\n      \"destination\": \"Fuzhou\",\n      \"depart_time\": \"2024-07-16 18:30:00\",\n      \"arrival_time\": \"2024-07-16 21:00:00\",\n      \"status\": \"available\",\n      \"seats_available\": 8,\n      \"economy_price\": 1500,\n      \"business_price\": 2500\n    }\n  ]\n}\n\nINITIAL DATA\n{\n  \"reservations\": [\n    {\n      \"reservation_id\": \"res_1\",\n      \"user_id\": \"user1\",\n      \"flight_no\": \"CA1234\",\n      \"payment_method\": \"bank\",\n      \"cabin\": \"Economy Class\",\n      \"baggage\": 1,\n      \"origin\": \"Beijing\",\n      \"destination\": \"Shanghai\"\n    },\n    {\n      \"reservation_id\": \"res_2\",\n      \"user_id\": \"user1\",\n      \"flight_no\": \"MU5678\",\n      \"payment_method\": \"bank\",\n      \"cabin\": \"Business Class\",\n      \"baggage\": 1,\n      \"origin\": \"Shanghai\",\n      \"destination\": \"Beijing\"\n    },\n    {\n      \"reservation_id\": \"res_3\",\n      \"user_id\": \"user2\",\n      \"flight_no\": \"MH1765\",\n      \"payment_method\": \"bank\",\n      \"cabin\": \"Business Class\",\n      \"baggage\": 1,\n      \"origin\": \"Xiamen\",\n      \"destination\": \"Chengdu\"\n    },\n    {\n      \"reservation_id\": \"res_4\",\n      \"user_id\": \"user2\",\n      \"flight_no\": \"MU2616\",  // note: no matching flight in flights\n      \"payment_method\": \"bank\",\n      \"cabin\": \"Business Class\",\n      \"baggage\": 1,\n      \"origin\": \"Chengdu\",\n      \"destination\": \"Xiamen\"\n    }\n  ]\n}\n\nCONSTRAINTS\n- Data formats\n  - datetime \u2192 \"%Y-%m-%d %H:%M:%S\"\n  - currency \u2192 \"yuan\"\n  - reservation_id \u2192 \"res_{n}\" (n = len(reservations) + 1 at creation)\n\n- Membership baggage allowance\n{\n  \"regular\": {\"Economy Class\": 1, \"Business Class\": 2},\n  \"silver\": {\"Economy Class\": 2, \"Business Class\": 3},\n  \"gold\":   {\"Economy Class\": 3, \"Business Class\": 3}\n}\n\n- Fees/Prices\n  - baggage_fee \u2192 (max(baggage_count - free_allowance, 0)) * 50\n  - cancellation_fee_rate \u2192 0.1 (applied if < 24h before departure and not airline-canceled)\n  - price_difference(cabin) \u2192 new_price - old_price (per flight\u2019s economy_price/business_price)\n\n- Business rules (methods I/O and behaviors)\n  - get_flight_details(origin?, destination?) \u2192 list<flight>|\"There are no direct flights that meet the criteria.\"\n    - filter: origin (exact) then destination (exact) on status-agnostic list\n    - returns full flight fields (subset copy)\n  - get_user_details(user_id, password) \u2192 {user_name, cash_balance, bank_balance, membership_level}|{\"status\":\"error\",\"message\":\"Incorrect username or password.\"}\n  - get_reservation_details(reservation_id? | user_id?) \u2192 list<{reservation + flight_info}>\n    - requires: reservation_id XOR user_id\n    - flight_info \u2192 matching flights[flight_no] or None\n    - error \u2192 {\"status\":\"error\",\"message\":\"Please provide a valid reservation ID or user ID\"}\n  - authenticate_user(user_id, password) \u2192 user|{\"status\":\"error\",\"message\":\"Incorrect username or password.\"}\n  - get_baggage_allowance(membership_level, cabin_class) \u2192 int (default 0 if not mapped)\n  - find_transfer_flights(origin_city, transfer_city, destination_city) \u2192 list<{\"first_leg\": flight, \"second_leg\": flight}>|\"No connecting flights that meet the criteria were found.\"\n    - constraints: first_leg.status == \"available\" AND second_leg.status == \"available\"\n    - time constraint: first_leg.arrival_time < second_leg.depart_time (strict)\n  - calculate_baggage_fee(membership_level, cabin_class, baggage_count) \u2192 int\n  - update_balance(user, payment_method, amount) \u2192 bool\n    - cash: user.cash_balance += amount (must remain >= 0)\n    - bank: user.bank_balance += amount (must remain >= 0)\n  - reserve_flight(user_id, password, flight_no, cabin, payment_method, baggage_count) \u2192 str\n    - requires: payment_method \u2208 {\"cash\",\"bank\"}, flight.status == \"available\", seats_available > 0\n    - total_cost = (economy_price|business_price) + baggage_fee\n    - debit: chosen payment_method balance -= total_cost\n    - side effects: flight.seats_available -= 1; append reservation {reservation_id, user_id, flight_no, payment_method, cabin, baggage}\n    - return: \"Booking successful. Reservation ID: {reservation_id}. Total cost: {total_cost} yuan (including baggage fees).\"\n  - modify_flight(user_id, reservation_id, new_flight_no?, new_cabin?, add_baggage=0, new_payment_method?) \u2192 str\n    - lookup: reservation by id+user; current_flight by reservation.flight_no\n    - new_flight_no: must match current_flight.origin/destination; updates reservation.flight_no; no seat count changes\n    - new_cabin: price_difference computed using current_flight\u2019s prices; balance updated via payment_method\n    - add_baggage: new total vs allowance \u2192 extra * 50 charged; updates reservation.baggage\n    - returns concatenated status messages; default \"Modification completed with no additional fees.\"\n  - cancel_reservation(user_id, reservation_id, reason) \u2192 str\n    - current_time fixed: \"2024-07-14 06:00:00\"\n    - if flight.depart_time <= current_time \u2192 \"The flight segment has been used and cannot be canceled.\"\n    - reason == \"The airline has canceled the flight.\" \u2192 full refund (flight price)\n    - elif time_until_departure > 24h \u2192 full refund\n    - else \u2192 10% cancellation fee; 90% refund\n    - refund destination: user.cash_balance (always), via process_refund; reservations/seats unchanged\n  - process_refund(user, amount) \u2192 None (side effect: user.cash_balance += amount; prints confirmation)\n  - calculate_price_difference(flight, old_cabin, new_cabin) \u2192 int\n\n- Operational limitations / known data conditions\n  - duplicate flight_no values exist:\n    - \"CZ1765\" appears twice (different times, same route)\n    - \"MH2616\" appears twice (different destinations)\n  - reservation \"res_4\" references \"MU2616\" (no matching flight in flights)\n  - reserve_flight does not include origin/destination fields in new reservations\n  - reserve_flight assumes valid flight; if flight_no invalid, dereference may error\n  - reserve_flight authentication check treats error dict as truthy; downstream access may fail if credentials invalid\n  - seat counts are only decremented on booking; no increments on cancel/modify; modify does not adjust seat counts when changing flight_no\n  - refunds are always credited to cash_balance regardless of original payment method\n  - time comparisons use naive datetimes; timezone unspecified",
    "initial_config": {},
    "involved_classes": [
        "Travel"
    ]
}