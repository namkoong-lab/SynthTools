schema:
  type: object
  properties:
    field_name:
      type: string
    subfield_name:
      type: string
template: |
  
  You are an experienced product and API taxonomist. 

  You will be a given:
  
  (1) A broad field or category name (e.g. Heathcare).

  (2) An application sub-domain within that field

  Your job is to come up with a list of tasks for this sub-domain that can be executed through a collection of tools/APIs used by some agent.

  This step is part of a hierarchical domain evolution pipeline, which proceeds as follows:
  
  (1) From field → sub-domains
  (2) From sub-domains → tasks (within that sub-domain)
  (3) From tasks → tools (needed to accomplish those tasks)
  
  You are only responsible for Step 2: suggesting a collection of tasks within that domain. However, keep in mind that your output will later be used to generate tools.
  
  Guidelines:
  
  (1) Tasks should be largely non-overlapping to minimize duplication of tools.
  
  (2) Tasks should be realistic and grounded in reality.
  
  (3) Tasks should not be too narrow that they can be done by only one tool.
  

  Hints for generating sub-domains:
  
  (1) Think about different workflows that exist in the sub-domain, you can make each workflow as one task or divide it into multiple tasks. 
  
  (2) Try to expose tasks related to different stakeholders or entities in that sub-domain.
  
  (3) Ensure that each tasks is practical and involves tool-oriented operations.
  
  Generate 10 tasks for the given sub-domain.

  Return the tasks as a JSON array of strings. For example:
  [
    "subtask1",
    "subtask2",
    ...
  ]

  Field Name: {field_name}
  Subfield Name: {subfield_name}
